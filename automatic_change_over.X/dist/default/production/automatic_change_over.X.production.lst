

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Jan 03 03:15:22 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.10
    48                           ; Generated 31/07/2019 GMT
    49                           ; 
    50                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F877A Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  018C                     	;# 
   200  018D                     	;# 
   201                           
   202                           	psect	strings
   203  1000                     __pstrings:	
   204  1000                     stringtab:	
   205  1000                     __stringtab:	
   206                           
   207                           ;	String table - string pointers are 1 byte each
   208  1000  1BFF               	btfsc	btemp+1,7
   209  1001  280A               	ljmp	stringcode
   210  1002  1383               	bcf	3,7
   211  1003  187F               	btfsc	btemp+1,0
   212  1004  1783               	bsf	3,7
   213  1005  0800               	movf	0,w
   214  1006  0A84               	incf	4,f
   215  1007  1903               	skipnz
   216  1008  0AFF               	incf	btemp+1,f
   217  1009  0008               	return
   218  100A                     stringcode:	
   219  100A                     stringdir:	
   220  100A  3010               	movlw	high stringdir
   221  100B  008A               	movwf	10
   222  100C  0804               	movf	4,w
   223  100D  0A84               	incf	4,f
   224  100E  0782               	addwf	2,f
   225  100F                     __stringbase:	
   226  100F  3400               	retlw	0
   227  1010                     __end_of__stringtab:	
   228  1010                     _dpowers:	
   229  1010  3401               	retlw	1
   230  1011  3400               	retlw	0
   231  1012  340A               	retlw	10
   232  1013  3400               	retlw	0
   233  1014  3464               	retlw	100
   234  1015  3400               	retlw	0
   235  1016  34E8               	retlw	232
   236  1017  3403               	retlw	3
   237  1018  3410               	retlw	16
   238  1019  3427               	retlw	39
   239  101A                     __end_of_dpowers:	
   240  001E                     _ADRESH	set	30
   241  0008                     _PORTD	set	8
   242  0006                     _PORTB	set	6
   243  001F                     _ADCON0bits	set	31
   244  0035                     _RB5	set	53
   245  0034                     _RB4	set	52
   246  0033                     _RB3	set	51
   247  0036                     _RB6	set	54
   248  0037                     _RB7	set	55
   249  0032                     _RB2	set	50
   250  0048                     _RE0	set	72
   251  0043                     _RD3	set	67
   252  0041                     _RD1	set	65
   253  0047                     _RD7	set	71
   254  0046                     _RD6	set	70
   255  0045                     _RD5	set	69
   256  0044                     _RD4	set	68
   257  009E                     _ADRESL	set	158
   258  0088                     _TRISD	set	136
   259  0086                     _TRISB	set	134
   260  0085                     _TRISA	set	133
   261  009F                     _ADCON1bits	set	159
   262  0448                     _TRISE0	set	1096
   263  101A                     STR_3:	
   264  101A  3461               	retlw	97	;'a'
   265  101B  3475               	retlw	117	;'u'
   266  101C  3474               	retlw	116	;'t'
   267  101D  346F               	retlw	111	;'o'
   268  101E  3420               	retlw	32	;' '
   269  101F  3470               	retlw	112	;'p'
   270  1020  3468               	retlw	104	;'h'
   271  1021  3461               	retlw	97	;'a'
   272  1022  3473               	retlw	115	;'s'
   273  1023  3465               	retlw	101	;'e'
   274  1024  3420               	retlw	32	;' '
   275  1025  3473               	retlw	115	;'s'
   276  1026  3479               	retlw	121	;'y'
   277  1027  3473               	retlw	115	;'s'
   278  1028  346D               	retlw	109	;'m'
   279  1029  3400               	retlw	0
   280  102A                     STR_2:	
   281  102A  3441               	retlw	65	;'A'
   282  102B  3465               	retlw	101	;'e'
   283  102C  346F               	retlw	111	;'o'
   284  102D  346E               	retlw	110	;'n'
   285  102E  342D               	retlw	45	;'-'
   286  102F  3441               	retlw	65	;'A'
   287  1030  3474               	retlw	116	;'t'
   288  1031  346B               	retlw	107	;'k'
   289  1032  3400               	retlw	0
   290  1033                     STR_4:	
   291  1033  346C               	retlw	108	;'l'
   292  1034  346F               	retlw	111	;'o'
   293  1035  3461               	retlw	97	;'a'
   294  1036  3464               	retlw	100	;'d'
   295  1037  3469               	retlw	105	;'i'
   296  1038  346E               	retlw	110	;'n'
   297  1039  3467               	retlw	103	;'g'
   298  103A  3400               	retlw	0
   299  103B                     STR_7:	
   300  103B  3470               	retlw	112	;'p'
   301  103C  3420               	retlw	32	;' '
   302  103D  3400               	retlw	0
   303  103E                     STR_6:	
   304  103E  346D               	retlw	109	;'m'
   305  103F  3450               	retlw	80	;'P'
   306  1040  3400               	retlw	0
   307  1041                     STR_5:	
   308  1041  3470               	retlw	112	;'p'
   309  1042  3453               	retlw	83	;'S'
   310  1043  3400               	retlw	0
   311  1044                     STR_1:	
   312  1044  3425               	retlw	37	;'%'
   313  1045  3464               	retlw	100	;'d'
   314  1046  3400               	retlw	0
   315  1047                     STR_9:	
   316  1047  3441               	retlw	65	;'A'
   317  1048  3400               	retlw	0
   318  1049                     STR_8:	
   319  1049  3456               	retlw	86	;'V'
   320  104A  3400               	retlw	0
   321  104B                     STR_10:	
   322  104B  3457               	retlw	87	;'W'
   323  104C  3400               	retlw	0
   324                           
   325                           ; #config settings
   326  0000                     
   327                           	psect	cinit
   328  07F3                     start_initialization:	
   329  07F3                     __initialization:	
   330                           
   331                           ; Clear objects allocated to BANK1
   332  07F3  1383               	bcf	3,7	;select IRP bank0
   333  07F4  30BA               	movlw	low __pbssBANK1
   334  07F5  0084               	movwf	4
   335  07F6  30D1               	movlw	low (__pbssBANK1+23)
   336  07F7  160A  118A  2347  120A  118A  	fcall	clear_ram0
   337  07FC                     end_of_initialization:	
   338                           ;End of C runtime variable initialization code
   339                           
   340  07FC                     __end_of__initialization:	
   341  07FC  0183               	clrf	3
   342  07FD  120A  158A  2C81   	ljmp	_main	;jump to C main() function
   343                           
   344                           	psect	bssBANK1
   345  00BA                     __pbssBANK1:	
   346  00BA                     _cLoop:	
   347  00BA                     	ds	2
   348  00BC                     _power:	
   349  00BC                     	ds	2
   350  00BE                     _voltage:	
   351  00BE                     	ds	2
   352  00C0                     _danger:	
   353  00C0                     	ds	2
   354  00C2                     _cDANGER:	
   355  00C2                     	ds	2
   356  00C4                     _bDANGER:	
   357  00C4                     	ds	2
   358  00C6                     _aDANGER:	
   359  00C6                     	ds	2
   360  00C8                     _cVOLTAGE:	
   361  00C8                     	ds	2
   362  00CA                     _bVOLTAGE:	
   363  00CA                     	ds	2
   364  00CC                     _aVOLTAGE:	
   365  00CC                     	ds	2
   366  00CE                     _nextState:	
   367  00CE                     	ds	1
   368  00CF                     _current:	
   369  00CF                     	ds	2
   370                           
   371                           	psect	clrtext
   372  1347                     clear_ram0:	
   373                           ;	Called with FSR containing the base address, and
   374                           ;	W with the last address+1
   375                           
   376  1347  0064               	clrwdt	;clear the watchdog before getting into this loop
   377  1348                     clrloop0:	
   378  1348  0180               	clrf	0	;clear RAM location pointed to by FSR
   379  1349  0A84               	incf	4,f	;increment pointer
   380  134A  0604               	xorwf	4,w	;XOR with final address
   381  134B  1903               	btfsc	3,2	;have we reached the end yet?
   382  134C  3400               	retlw	0	;all done for this memory range, return
   383  134D  0604               	xorwf	4,w	;XOR again to restore value
   384  134E  2B48               	goto	clrloop0	;do the next byte
   385                           
   386                           	psect	cstackBANK1
   387  00A0                     __pcstackBANK1:	
   388  00A0                     ?___fltol:	
   389  00A0                     ___fltol@f1:	
   390                           ; 4 bytes @ 0x0
   391                           
   392                           
   393                           ; 4 bytes @ 0x0
   394  00A0                     	ds	4
   395  00A4                     ??___fltol:	
   396                           
   397                           ; 1 bytes @ 0x4
   398  00A4                     	ds	5
   399  00A9                     ___fltol@sign1:	
   400                           
   401                           ; 1 bytes @ 0x9
   402  00A9                     	ds	1
   403  00AA                     ___fltol@exp1:	
   404                           
   405                           ; 1 bytes @ 0xA
   406  00AA                     	ds	1
   407  00AB                     ??_currentMeasurement:	
   408  00AB                     ?_Lcd_Write_Int:	
   409                           ; 1 bytes @ 0xB
   410                           
   411  00AB                     Lcd_Write_Int@num:	
   412                           ; 1 bytes @ 0xB
   413                           
   414                           
   415                           ; 2 bytes @ 0xB
   416  00AB                     	ds	2
   417  00AD                     ??_Lcd_Write_Int:	
   418                           
   419                           ; 1 bytes @ 0xD
   420  00AD                     	ds	1
   421  00AE                     Lcd_Write_Int@number:	
   422                           
   423                           ; 8 bytes @ 0xE
   424  00AE                     	ds	8
   425  00B6                     ??_LCD:	
   426                           
   427                           ; 1 bytes @ 0x16
   428  00B6                     	ds	1
   429  00B7                     ??_main:	
   430                           
   431                           ; 1 bytes @ 0x17
   432  00B7                     	ds	3
   433                           
   434                           	psect	cstackCOMMON
   435  0070                     __pcstackCOMMON:	
   436  0070                     ?_hotList:	
   437  0070                     ?_powerSaving3:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_powerSaving2:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ?_powerSaving1:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_maximumPower3:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ?_maximumPower2:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ?_maximumPower1:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?_aON:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ??_aON:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ?_bON:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ??_bON:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     ?_cON:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ??_cON:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ?_OFF:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ?_currentMeasurement:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ?_LCD:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ?_ble:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ??_ble:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ?_Lcd_Port:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ??_Lcd_Port:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ?_Lcd_Cmd:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0070                     ?_Lcd_Init:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_Lcd_Write_Char:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?_main:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?__Umul8_16:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_Lcd_Clear:	
   510                           ; 2 bytes @ 0x0
   511                           
   512  0070                     ?___wmul:	
   513                           ; 2 bytes @ 0x0
   514                           
   515  0070                     ?___lwdiv:	
   516                           ; 2 bytes @ 0x0
   517                           
   518  0070                     ?___xxtofl:	
   519                           ; 2 bytes @ 0x0
   520                           
   521  0070                     Lcd_Port@a:	
   522                           ; 4 bytes @ 0x0
   523                           
   524  0070                     __Umul8_16@multiplicand:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ___wmul@multiplier:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ___lwdiv@divisor:	
   531                           ; 2 bytes @ 0x0
   532                           
   533  0070                     ___xxtofl@val:	
   534                           ; 2 bytes @ 0x0
   535                           
   536                           
   537                           ; 4 bytes @ 0x0
   538  0070                     	ds	1
   539  0071                     ??_powerSaving3:	
   540  0071                     ??_powerSaving2:	
   541                           ; 1 bytes @ 0x1
   542                           
   543  0071                     ??_powerSaving1:	
   544                           ; 1 bytes @ 0x1
   545                           
   546  0071                     ??_maximumPower3:	
   547                           ; 1 bytes @ 0x1
   548                           
   549  0071                     ??_maximumPower2:	
   550                           ; 1 bytes @ 0x1
   551                           
   552  0071                     ??_maximumPower1:	
   553                           ; 1 bytes @ 0x1
   554                           
   555  0071                     ??_Lcd_Cmd:	
   556                           ; 1 bytes @ 0x1
   557                           
   558  0071                     ??_Lcd_Write_Char:	
   559                           ; 1 bytes @ 0x1
   560                           
   561                           
   562                           ; 1 bytes @ 0x1
   563  0071                     	ds	1
   564  0072                     ??__Umul8_16:	
   565  0072                     Lcd_Write_Char@temp:	
   566                           ; 1 bytes @ 0x2
   567                           
   568  0072                     ___wmul@multiplicand:	
   569                           ; 1 bytes @ 0x2
   570                           
   571  0072                     ___lwdiv@dividend:	
   572                           ; 2 bytes @ 0x2
   573                           
   574                           
   575                           ; 2 bytes @ 0x2
   576  0072                     	ds	1
   577  0073                     Lcd_Cmd@a:	
   578  0073                     Lcd_Write_Char@y:	
   579                           ; 1 bytes @ 0x3
   580                           
   581                           
   582                           ; 1 bytes @ 0x3
   583  0073                     	ds	1
   584  0074                     ??_Lcd_Clear:	
   585  0074                     ?_Lcd_Set_Cursor:	
   586                           ; 1 bytes @ 0x4
   587                           
   588  0074                     ??_Lcd_Init:	
   589                           ; 1 bytes @ 0x4
   590                           
   591  0074                     ??___wmul:	
   592                           ; 1 bytes @ 0x4
   593                           
   594  0074                     ??___lwdiv:	
   595                           ; 1 bytes @ 0x4
   596                           
   597  0074                     ??___xxtofl:	
   598                           ; 1 bytes @ 0x4
   599                           
   600  0074                     Lcd_Set_Cursor@b:	
   601                           ; 1 bytes @ 0x4
   602                           
   603  0074                     Lcd_Write_Char@a:	
   604                           ; 1 bytes @ 0x4
   605                           
   606  0074                     ___wmul@product:	
   607                           ; 1 bytes @ 0x4
   608                           
   609  0074                     __Umul8_16@product:	
   610                           ; 2 bytes @ 0x4
   611                           
   612                           
   613                           ; 2 bytes @ 0x4
   614  0074                     	ds	1
   615  0075                     ??_Lcd_Set_Cursor:	
   616  0075                     ?_Lcd_Write_String:	
   617                           ; 1 bytes @ 0x5
   618                           
   619  0075                     Lcd_Write_String@a:	
   620                           ; 1 bytes @ 0x5
   621                           
   622  0075                     ___lwdiv@quotient:	
   623                           ; 2 bytes @ 0x5
   624                           
   625                           
   626                           ; 2 bytes @ 0x5
   627  0075                     	ds	1
   628  0076                     __Umul8_16@word_mpld:	
   629                           
   630                           ; 2 bytes @ 0x6
   631  0076                     	ds	1
   632  0077                     ??_Lcd_Write_String:	
   633  0077                     Lcd_Set_Cursor@a:	
   634                           ; 1 bytes @ 0x7
   635                           
   636  0077                     ___lwdiv@counter:	
   637                           ; 1 bytes @ 0x7
   638                           
   639                           
   640                           ; 1 bytes @ 0x7
   641  0077                     	ds	1
   642  0078                     ?___lwmod:	
   643  0078                     Lcd_Set_Cursor@z:	
   644                           ; 2 bytes @ 0x8
   645                           
   646  0078                     ___xxtofl@sign:	
   647                           ; 1 bytes @ 0x8
   648                           
   649  0078                     __Umul8_16@multiplier:	
   650                           ; 1 bytes @ 0x8
   651                           
   652  0078                     ___lwmod@divisor:	
   653                           ; 1 bytes @ 0x8
   654                           
   655                           
   656                           ; 2 bytes @ 0x8
   657  0078                     	ds	1
   658  0079                     Lcd_Set_Cursor@y:	
   659  0079                     ___xxtofl@exp:	
   660                           ; 1 bytes @ 0x9
   661                           
   662                           
   663                           ; 1 bytes @ 0x9
   664  0079                     	ds	1
   665  007A                     Lcd_Set_Cursor@temp:	
   666  007A                     Lcd_Write_String@i:	
   667                           ; 1 bytes @ 0xA
   668                           
   669  007A                     ___lwmod@dividend:	
   670                           ; 2 bytes @ 0xA
   671                           
   672  007A                     ___xxtofl@arg:	
   673                           ; 2 bytes @ 0xA
   674                           
   675                           
   676                           ; 4 bytes @ 0xA
   677  007A                     	ds	1
   678  007B                     ??_OFF:	
   679                           
   680                           ; 1 bytes @ 0xB
   681  007B                     	ds	1
   682  007C                     ??___lwmod:	
   683                           
   684                           ; 1 bytes @ 0xC
   685  007C                     	ds	1
   686  007D                     ___lwmod@counter:	
   687                           
   688                           ; 1 bytes @ 0xD
   689  007D                     	ds	1
   690  007E                     ??___flsub:	
   691                           
   692                           	psect	cstackBANK0
   693  0020                     __pcstackBANK0:	
   694                           ; 1 bytes @ 0xE
   695                           
   696  0020                     ??_hotList:	
   697  0020                     ?_sprintf:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0020                     ?___flmul:	
   701                           ; 2 bytes @ 0x0
   702                           
   703  0020                     sprintf@f:	
   704                           ; 4 bytes @ 0x0
   705                           
   706  0020                     ___flmul@b:	
   707                           ; 1 bytes @ 0x0
   708                           
   709                           
   710                           ; 4 bytes @ 0x0
   711  0020                     	ds	3
   712  0023                     ??_sprintf:	
   713                           
   714                           ; 1 bytes @ 0x3
   715  0023                     	ds	1
   716  0024                     ___flmul@a:	
   717                           
   718                           ; 4 bytes @ 0x4
   719  0024                     	ds	2
   720  0026                     sprintf@ap:	
   721                           
   722                           ; 1 bytes @ 0x6
   723  0026                     	ds	1
   724  0027                     sprintf@flag:	
   725                           
   726                           ; 1 bytes @ 0x7
   727  0027                     	ds	1
   728  0028                     ??___flmul:	
   729  0028                     sprintf@prec:	
   730                           ; 1 bytes @ 0x8
   731                           
   732                           
   733                           ; 1 bytes @ 0x8
   734  0028                     	ds	1
   735  0029                     sprintf@val:	
   736                           
   737                           ; 2 bytes @ 0x9
   738  0029                     	ds	2
   739  002B                     sprintf@sp:	
   740                           
   741                           ; 1 bytes @ 0xB
   742  002B                     	ds	1
   743  002C                     sprintf@c:	
   744                           
   745                           ; 1 bytes @ 0xC
   746  002C                     	ds	1
   747  002D                     ___flmul@sign:	
   748                           
   749                           ; 1 bytes @ 0xD
   750  002D                     	ds	1
   751  002E                     ___flmul@grs:	
   752                           
   753                           ; 4 bytes @ 0xE
   754  002E                     	ds	4
   755  0032                     ___flmul@aexp:	
   756                           
   757                           ; 1 bytes @ 0x12
   758  0032                     	ds	1
   759  0033                     ___flmul@bexp:	
   760                           
   761                           ; 1 bytes @ 0x13
   762  0033                     	ds	1
   763  0034                     ___flmul@prod:	
   764                           
   765                           ; 4 bytes @ 0x14
   766  0034                     	ds	4
   767  0038                     ___flmul@temp:	
   768                           
   769                           ; 2 bytes @ 0x18
   770  0038                     	ds	2
   771  003A                     ?___fladd:	
   772  003A                     ___fladd@b:	
   773                           ; 4 bytes @ 0x1A
   774                           
   775                           
   776                           ; 4 bytes @ 0x1A
   777  003A                     	ds	4
   778  003E                     ___fladd@a:	
   779                           
   780                           ; 4 bytes @ 0x1E
   781  003E                     	ds	4
   782  0042                     ??___fladd:	
   783                           
   784                           ; 1 bytes @ 0x22
   785  0042                     	ds	8
   786  004A                     ___fladd@signs:	
   787                           
   788                           ; 1 bytes @ 0x2A
   789  004A                     	ds	1
   790  004B                     ___fladd@aexp:	
   791                           
   792                           ; 1 bytes @ 0x2B
   793  004B                     	ds	1
   794  004C                     ___fladd@bexp:	
   795                           
   796                           ; 1 bytes @ 0x2C
   797  004C                     	ds	1
   798  004D                     ___fladd@grs:	
   799                           
   800                           ; 1 bytes @ 0x2D
   801  004D                     	ds	1
   802  004E                     ?___flsub:	
   803  004E                     ___flsub@a:	
   804                           ; 4 bytes @ 0x2E
   805                           
   806                           
   807                           ; 4 bytes @ 0x2E
   808  004E                     	ds	4
   809  0052                     ___flsub@b:	
   810                           
   811                           ; 4 bytes @ 0x32
   812  0052                     	ds	4
   813  0056                     ?___fldiv:	
   814  0056                     ___fldiv@a:	
   815                           ; 4 bytes @ 0x36
   816                           
   817                           
   818                           ; 4 bytes @ 0x36
   819  0056                     	ds	4
   820  005A                     ___fldiv@b:	
   821                           
   822                           ; 4 bytes @ 0x3A
   823  005A                     	ds	4
   824  005E                     ??___fldiv:	
   825                           
   826                           ; 1 bytes @ 0x3E
   827  005E                     	ds	5
   828  0063                     ___fldiv@rem:	
   829                           
   830                           ; 4 bytes @ 0x43
   831  0063                     	ds	4
   832  0067                     ___fldiv@sign:	
   833                           
   834                           ; 1 bytes @ 0x47
   835  0067                     	ds	1
   836  0068                     ___fldiv@new_exp:	
   837                           
   838                           ; 2 bytes @ 0x48
   839  0068                     	ds	2
   840  006A                     ___fldiv@grs:	
   841                           
   842                           ; 4 bytes @ 0x4A
   843  006A                     	ds	4
   844  006E                     ___fldiv@bexp:	
   845                           
   846                           ; 1 bytes @ 0x4E
   847  006E                     	ds	1
   848  006F                     ___fldiv@aexp:	
   849                           
   850                           ; 1 bytes @ 0x4F
   851  006F                     	ds	1
   852                           
   853                           	psect	maintext
   854  0C81                     __pmaintext:	
   855 ;;
   856 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   857 ;;
   858 ;; *************** function _main *****************
   859 ;; Defined at:
   860 ;;		line 83 in file "main.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;		None
   863 ;; Auto vars:     Size  Location     Type
   864 ;;		None
   865 ;; Return value:  Size  Location     Type
   866 ;;                  1    wreg      void 
   867 ;; Registers used:
   868 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : B00/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   874 ;;      Params:         0       0       0       0       0
   875 ;;      Locals:         0       0       0       0       0
   876 ;;      Temps:          0       0       3       0       0
   877 ;;      Totals:         0       0       3       0       0
   878 ;;Total ram usage:        3 bytes
   879 ;; Hardware stack levels required when called:    5
   880 ;; This function calls:
   881 ;;		_LCD
   882 ;;		_Lcd_Clear
   883 ;;		_Lcd_Init
   884 ;;		_Lcd_Set_Cursor
   885 ;;		_Lcd_Write_String
   886 ;;		_OFF
   887 ;;		_aON
   888 ;;		_bON
   889 ;;		_ble
   890 ;;		_cON
   891 ;;		_currentMeasurement
   892 ;;		_hotList
   893 ;;		_maximumPower1
   894 ;;		_maximumPower2
   895 ;;		_maximumPower3
   896 ;;		_powerSaving1
   897 ;;		_powerSaving2
   898 ;;		_powerSaving3
   899 ;; This function is called by:
   900 ;;		Startup code after reset
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           
   905                           ;psect for function _main
   906  0C81                     _main:	
   907  0C81                     l3485:	
   908                           ;incstack = 0
   909                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   910                           
   911                           
   912                           ;main.c: 84:     ADCON1bits.ADFM=1;
   913  0C81  1683               	bsf	3,5	;RP0=1, select bank1
   914  0C82  1303               	bcf	3,6	;RP1=0, select bank1
   915  0C83  179F               	bsf	31,7	;volatile
   916                           
   917                           ;main.c: 85:     ADCON1bits.ADCS2=0;
   918  0C84  131F               	bcf	31,6	;volatile
   919                           
   920                           ;main.c: 86:     ADCON0bits.ADCS1=1;
   921  0C85  1283               	bcf	3,5	;RP0=0, select bank0
   922  0C86  1303               	bcf	3,6	;RP1=0, select bank0
   923  0C87  179F               	bsf	31,7	;volatile
   924                           
   925                           ;main.c: 87:     ADCON0bits.ADCS0=0;
   926  0C88  131F               	bcf	31,6	;volatile
   927                           
   928                           ;main.c: 88:     ADCON1bits.PCFG3=0;
   929  0C89  1683               	bsf	3,5	;RP0=1, select bank1
   930  0C8A  1303               	bcf	3,6	;RP1=0, select bank1
   931  0C8B  119F               	bcf	31,3	;volatile
   932                           
   933                           ;main.c: 89:     ADCON1bits.PCFG2=0;
   934  0C8C  111F               	bcf	31,2	;volatile
   935                           
   936                           ;main.c: 90:     ADCON1bits.PCFG1=1;
   937  0C8D  149F               	bsf	31,1	;volatile
   938                           
   939                           ;main.c: 91:     ADCON1bits.PCFG0=0;
   940  0C8E  101F               	bcf	31,0	;volatile
   941  0C8F                     l3487:	
   942                           
   943                           ;main.c: 92:     TRISA=0x0F;
   944  0C8F  300F               	movlw	15
   945  0C90  0085               	movwf	5	;volatile
   946  0C91                     l3489:	
   947                           
   948                           ;main.c: 93:     ADCON0bits.ADON=1;
   949  0C91  1283               	bcf	3,5	;RP0=0, select bank0
   950  0C92  1303               	bcf	3,6	;RP1=0, select bank0
   951  0C93  141F               	bsf	31,0	;volatile
   952                           
   953                           ;main.c: 94:     TRISB=0xC0;
   954  0C94  30C0               	movlw	192
   955  0C95  1683               	bsf	3,5	;RP0=1, select bank1
   956  0C96  1303               	bcf	3,6	;RP1=0, select bank1
   957  0C97  0086               	movwf	6	;volatile
   958  0C98                     l3491:	
   959                           
   960                           ;main.c: 95:     PORTB=0x00;
   961  0C98  1283               	bcf	3,5	;RP0=0, select bank0
   962  0C99  1303               	bcf	3,6	;RP1=0, select bank0
   963  0C9A  0186               	clrf	6	;volatile
   964  0C9B                     l3493:	
   965                           
   966                           ;main.c: 96:     TRISE0=0;
   967  0C9B  1683               	bsf	3,5	;RP0=1, select bank1
   968  0C9C  1303               	bcf	3,6	;RP1=0, select bank1
   969  0C9D  1009               	bcf	9,0	;volatile
   970  0C9E                     l3495:	
   971                           
   972                           ;main.c: 97:     RE0=0;
   973  0C9E  1283               	bcf	3,5	;RP0=0, select bank0
   974  0C9F  1303               	bcf	3,6	;RP1=0, select bank0
   975  0CA0  1009               	bcf	9,0	;volatile
   976  0CA1                     l3497:	
   977                           
   978                           ;main.c: 98:     TRISD=0x00;
   979  0CA1  1683               	bsf	3,5	;RP0=1, select bank1
   980  0CA2  1303               	bcf	3,6	;RP1=0, select bank1
   981  0CA3  0188               	clrf	8	;volatile
   982  0CA4                     l3499:	
   983                           
   984                           ;main.c: 99:     PORTD=0x00;
   985  0CA4  1283               	bcf	3,5	;RP0=0, select bank0
   986  0CA5  1303               	bcf	3,6	;RP1=0, select bank0
   987  0CA6  0188               	clrf	8	;volatile
   988  0CA7                     l3501:	
   989                           
   990                           ;main.c: 100:     Lcd_Init();
   991  0CA7  160A  118A  266E  120A  158A  	fcall	_Lcd_Init
   992  0CAC                     l3503:	
   993                           
   994                           ;main.c: 101:     Lcd_Set_Cursor(1,5);
   995  0CAC  3005               	movlw	5
   996  0CAD  1683               	bsf	3,5	;RP0=1, select bank1
   997  0CAE  1303               	bcf	3,6	;RP1=0, select bank1
   998  0CAF  00B7               	movwf	??_main^(0+128)
   999  0CB0  0837               	movf	??_main^(0+128),w
  1000  0CB1  00F4               	movwf	Lcd_Set_Cursor@b
  1001  0CB2  3001               	movlw	1
  1002  0CB3  160A  118A  256C  120A  158A  	fcall	_Lcd_Set_Cursor
  1003  0CB8                     l3505:	
  1004                           
  1005                           ;main.c: 102:     Lcd_Write_String("Aeon-Atk");
  1006  0CB8  301B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1007  0CB9  00F5               	movwf	Lcd_Write_String@a
  1008  0CBA  3080               	movlw	128
  1009  0CBB  00F6               	movwf	Lcd_Write_String@a+1
  1010  0CBC  160A  118A  24E6  120A  158A  	fcall	_Lcd_Write_String
  1011  0CC1                     l3507:	
  1012                           
  1013                           ;main.c: 103:     Lcd_Set_Cursor(2,1);
  1014  0CC1  01F4               	clrf	Lcd_Set_Cursor@b
  1015  0CC2  0AF4               	incf	Lcd_Set_Cursor@b,f
  1016  0CC3  3002               	movlw	2
  1017  0CC4  160A  118A  256C  120A  158A  	fcall	_Lcd_Set_Cursor
  1018  0CC9                     l3509:	
  1019                           
  1020                           ;main.c: 104:     Lcd_Write_String("auto phase sysm");
  1021  0CC9  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1022  0CCA  00F5               	movwf	Lcd_Write_String@a
  1023  0CCB  3080               	movlw	128
  1024  0CCC  00F6               	movwf	Lcd_Write_String@a+1
  1025  0CCD  160A  118A  24E6  120A  158A  	fcall	_Lcd_Write_String
  1026  0CD2                     l3511:	
  1027                           
  1028                           ;main.c: 105:     _delay((unsigned long)((100)*(20000000/4000.0)));
  1029  0CD2  3003               	movlw	3
  1030  0CD3  1683               	bsf	3,5	;RP0=1, select bank1
  1031  0CD4  1303               	bcf	3,6	;RP1=0, select bank1
  1032  0CD5  00B9               	movwf	(??_main^(0+128)+2)
  1033  0CD6  308A               	movlw	138
  1034  0CD7  00B8               	movwf	(??_main^(0+128)+1)
  1035  0CD8  3055               	movlw	85
  1036  0CD9  00B7               	movwf	??_main^(0+128)
  1037  0CDA                     u5037:	
  1038  0CDA  0BB7               	decfsz	??_main^(0+128),f
  1039  0CDB  2CDA               	goto	u5037
  1040  0CDC  0BB8               	decfsz	(??_main^(0+128)+1),f
  1041  0CDD  2CDA               	goto	u5037
  1042  0CDE  0BB9               	decfsz	(??_main^(0+128)+2),f
  1043  0CDF  2CDA               	goto	u5037
  1044  0CE0                     l3513:	
  1045                           
  1046                           ;main.c: 106:     Lcd_Clear();
  1047  0CE0  160A  118A  234F  120A  158A  	fcall	_Lcd_Clear
  1048  0CE5                     l3515:	
  1049                           
  1050                           ;main.c: 107:     Lcd_Set_Cursor(1,5);
  1051  0CE5  3005               	movlw	5
  1052  0CE6  1683               	bsf	3,5	;RP0=1, select bank1
  1053  0CE7  1303               	bcf	3,6	;RP1=0, select bank1
  1054  0CE8  00B7               	movwf	??_main^(0+128)
  1055  0CE9  0837               	movf	??_main^(0+128),w
  1056  0CEA  00F4               	movwf	Lcd_Set_Cursor@b
  1057  0CEB  3001               	movlw	1
  1058  0CEC  160A  118A  256C  120A  158A  	fcall	_Lcd_Set_Cursor
  1059  0CF1                     l3517:	
  1060                           
  1061                           ;main.c: 108:     Lcd_Write_String("loading");
  1062  0CF1  3024               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1063  0CF2  00F5               	movwf	Lcd_Write_String@a
  1064  0CF3  3080               	movlw	128
  1065  0CF4  00F6               	movwf	Lcd_Write_String@a+1
  1066  0CF5  160A  118A  24E6  120A  158A  	fcall	_Lcd_Write_String
  1067  0CFA                     l3519:	
  1068                           
  1069                           ;main.c: 109:     _delay((unsigned long)((100)*(20000000/4000.0)));
  1070  0CFA  3003               	movlw	3
  1071  0CFB  1683               	bsf	3,5	;RP0=1, select bank1
  1072  0CFC  1303               	bcf	3,6	;RP1=0, select bank1
  1073  0CFD  00B9               	movwf	(??_main^(0+128)+2)
  1074  0CFE  308A               	movlw	138
  1075  0CFF  00B8               	movwf	(??_main^(0+128)+1)
  1076  0D00  3055               	movlw	85
  1077  0D01  00B7               	movwf	??_main^(0+128)
  1078  0D02                     u5047:	
  1079  0D02  0BB7               	decfsz	??_main^(0+128),f
  1080  0D03  2D02               	goto	u5047
  1081  0D04  0BB8               	decfsz	(??_main^(0+128)+1),f
  1082  0D05  2D02               	goto	u5047
  1083  0D06  0BB9               	decfsz	(??_main^(0+128)+2),f
  1084  0D07  2D02               	goto	u5047
  1085  0D08                     l3521:	
  1086                           
  1087                           ;main.c: 110:     Lcd_Clear();
  1088  0D08  160A  118A  234F  120A  158A  	fcall	_Lcd_Clear
  1089  0D0D                     l3523:	
  1090                           
  1091                           ;main.c: 111:     nextState=hL;
  1092  0D0D  1683               	bsf	3,5	;RP0=1, select bank1
  1093  0D0E  1303               	bcf	3,6	;RP1=0, select bank1
  1094  0D0F  01CE               	clrf	_nextState^(0+128)
  1095  0D10  0ACE               	incf	_nextState^(0+128),f
  1096  0D11                     l3525:	
  1097                           
  1098                           ;main.c: 114:         if(nextState==hL)hotList();
  1099  0D11  1683               	bsf	3,5	;RP0=1, select bank1
  1100  0D12  1303               	bcf	3,6	;RP1=0, select bank1
  1101  0D13  034E               	decf	_nextState^(0+128),w
  1102  0D14  1D03               	btfss	3,2
  1103  0D15  2D17               	goto	u4881
  1104  0D16  2D18               	goto	u4880
  1105  0D17                     u4881:	
  1106  0D17  2D1D               	goto	l3529
  1107  0D18                     u4880:	
  1108  0D18                     l3527:	
  1109  0D18  120A  158A  25E9  120A  158A  	fcall	_hotList
  1110  0D1D                     l3529:	
  1111                           
  1112                           ;main.c: 115:         if(nextState==pS3)powerSaving3();
  1113  0D1D  3002               	movlw	2
  1114  0D1E  1683               	bsf	3,5	;RP0=1, select bank1
  1115  0D1F  1303               	bcf	3,6	;RP1=0, select bank1
  1116  0D20  064E               	xorwf	_nextState^(0+128),w
  1117  0D21  1D03               	btfss	3,2
  1118  0D22  2D24               	goto	u4891
  1119  0D23  2D25               	goto	u4890
  1120  0D24                     u4891:	
  1121  0D24  2D2B               	goto	l3533
  1122  0D25                     u4890:	
  1123  0D25                     l3531:	
  1124  0D25  120A  158A  21BB  120A  158A  	fcall	_powerSaving3
  1125  0D2A  2D97               	goto	l3569
  1126  0D2B                     l3533:	
  1127  0D2B  3003               	movlw	3
  1128  0D2C  064E               	xorwf	_nextState^(0+128),w
  1129  0D2D  1D03               	btfss	3,2
  1130  0D2E  2D30               	goto	u4901
  1131  0D2F  2D31               	goto	u4900
  1132  0D30                     u4901:	
  1133  0D30  2D37               	goto	l3537
  1134  0D31                     u4900:	
  1135  0D31                     l3535:	
  1136  0D31  160A  118A  2616  120A  158A  	fcall	_powerSaving2
  1137  0D36  2D97               	goto	l3569
  1138  0D37                     l3537:	
  1139  0D37  3004               	movlw	4
  1140  0D38  064E               	xorwf	_nextState^(0+128),w
  1141  0D39  1D03               	btfss	3,2
  1142  0D3A  2D3C               	goto	u4911
  1143  0D3B  2D3D               	goto	u4910
  1144  0D3C                     u4911:	
  1145  0D3C  2D43               	goto	l3541
  1146  0D3D                     u4910:	
  1147  0D3D                     l3539:	
  1148  0D3D  160A  118A  2481  120A  158A  	fcall	_powerSaving1
  1149  0D42  2D97               	goto	l3569
  1150  0D43                     l3541:	
  1151  0D43  3005               	movlw	5
  1152  0D44  064E               	xorwf	_nextState^(0+128),w
  1153  0D45  1D03               	btfss	3,2
  1154  0D46  2D48               	goto	u4921
  1155  0D47  2D49               	goto	u4920
  1156  0D48                     u4921:	
  1157  0D48  2D4F               	goto	l3545
  1158  0D49                     u4920:	
  1159  0D49                     l3543:	
  1160  0D49  120A  158A  20F5  120A  158A  	fcall	_maximumPower3
  1161  0D4E  2D97               	goto	l3569
  1162  0D4F                     l3545:	
  1163  0D4F  3006               	movlw	6
  1164  0D50  064E               	xorwf	_nextState^(0+128),w
  1165  0D51  1D03               	btfss	3,2
  1166  0D52  2D54               	goto	u4931
  1167  0D53  2D55               	goto	u4930
  1168  0D54                     u4931:	
  1169  0D54  2D5B               	goto	l3549
  1170  0D55                     u4930:	
  1171  0D55                     l3547:	
  1172  0D55  160A  118A  25BE  120A  158A  	fcall	_maximumPower2
  1173  0D5A  2D97               	goto	l3569
  1174  0D5B                     l3549:	
  1175  0D5B  3007               	movlw	7
  1176  0D5C  064E               	xorwf	_nextState^(0+128),w
  1177  0D5D  1D03               	btfss	3,2
  1178  0D5E  2D60               	goto	u4941
  1179  0D5F  2D61               	goto	u4940
  1180  0D60                     u4941:	
  1181  0D60  2D67               	goto	l3553
  1182  0D61                     u4940:	
  1183  0D61                     l3551:	
  1184  0D61  160A  118A  2455  120A  158A  	fcall	_maximumPower1
  1185  0D66  2D97               	goto	l3569
  1186  0D67                     l3553:	
  1187  0D67  3008               	movlw	8
  1188  0D68  064E               	xorwf	_nextState^(0+128),w
  1189  0D69  1D03               	btfss	3,2
  1190  0D6A  2D6C               	goto	u4951
  1191  0D6B  2D6D               	goto	u4950
  1192  0D6C                     u4951:	
  1193  0D6C  2D73               	goto	l3557
  1194  0D6D                     u4950:	
  1195  0D6D                     l3555:	
  1196  0D6D  160A  118A  235C  120A  158A  	fcall	_aON
  1197  0D72  2D97               	goto	l3569
  1198  0D73                     l3557:	
  1199  0D73  3009               	movlw	9
  1200  0D74  064E               	xorwf	_nextState^(0+128),w
  1201  0D75  1D03               	btfss	3,2
  1202  0D76  2D78               	goto	u4961
  1203  0D77  2D79               	goto	u4960
  1204  0D78                     u4961:	
  1205  0D78  2D7F               	goto	l3561
  1206  0D79                     u4960:	
  1207  0D79                     l3559:	
  1208  0D79  160A  118A  236C  120A  158A  	fcall	_bON
  1209  0D7E  2D97               	goto	l3569
  1210  0D7F                     l3561:	
  1211  0D7F  300A               	movlw	10
  1212  0D80  064E               	xorwf	_nextState^(0+128),w
  1213  0D81  1D03               	btfss	3,2
  1214  0D82  2D84               	goto	u4971
  1215  0D83  2D85               	goto	u4970
  1216  0D84                     u4971:	
  1217  0D84  2D8B               	goto	l3565
  1218  0D85                     u4970:	
  1219  0D85                     l3563:	
  1220  0D85  160A  118A  237C  120A  158A  	fcall	_cON
  1221  0D8A  2D97               	goto	l3569
  1222  0D8B                     l3565:	
  1223  0D8B  300B               	movlw	11
  1224  0D8C  064E               	xorwf	_nextState^(0+128),w
  1225  0D8D  1D03               	btfss	3,2
  1226  0D8E  2D90               	goto	u4981
  1227  0D8F  2D91               	goto	u4980
  1228  0D90                     u4981:	
  1229  0D90  2D97               	goto	l168
  1230  0D91                     u4980:	
  1231  0D91                     l3567:	
  1232  0D91  160A  118A  23A6  120A  158A  	fcall	_OFF
  1233  0D96  2D97               	goto	l3569
  1234  0D97                     l168:	
  1235  0D97                     l3569:	
  1236                           
  1237                           ;main.c: 125:         if(nextState==cM)currentMeasurement();
  1238  0D97  300C               	movlw	12
  1239  0D98  1683               	bsf	3,5	;RP0=1, select bank1
  1240  0D99  1303               	bcf	3,6	;RP1=0, select bank1
  1241  0D9A  064E               	xorwf	_nextState^(0+128),w
  1242  0D9B  1D03               	btfss	3,2
  1243  0D9C  2D9E               	goto	u4991
  1244  0D9D  2D9F               	goto	u4990
  1245  0D9E                     u4991:	
  1246  0D9E  2DA4               	goto	l3573
  1247  0D9F                     u4990:	
  1248  0D9F                     l3571:	
  1249  0D9F  120A  158A  2369  120A  158A  	fcall	_currentMeasurement
  1250  0DA4                     l3573:	
  1251                           
  1252                           ;main.c: 126:         if(nextState==pC)nextState=lcd;
  1253  0DA4  300D               	movlw	13
  1254  0DA5  1683               	bsf	3,5	;RP0=1, select bank1
  1255  0DA6  1303               	bcf	3,6	;RP1=0, select bank1
  1256  0DA7  064E               	xorwf	_nextState^(0+128),w
  1257  0DA8  1D03               	btfss	3,2
  1258  0DA9  2DAB               	goto	u5001
  1259  0DAA  2DAC               	goto	u5000
  1260  0DAB                     u5001:	
  1261  0DAB  2DB0               	goto	l3577
  1262  0DAC                     u5000:	
  1263  0DAC                     l3575:	
  1264  0DAC  300E               	movlw	14
  1265  0DAD  00B7               	movwf	??_main^(0+128)
  1266  0DAE  0837               	movf	??_main^(0+128),w
  1267  0DAF  00CE               	movwf	_nextState^(0+128)
  1268  0DB0                     l3577:	
  1269                           
  1270                           ;main.c: 127:         if(nextState==lcd)LCD();
  1271  0DB0  300E               	movlw	14
  1272  0DB1  064E               	xorwf	_nextState^(0+128),w
  1273  0DB2  1D03               	btfss	3,2
  1274  0DB3  2DB5               	goto	u5011
  1275  0DB4  2DB6               	goto	u5010
  1276  0DB5                     u5011:	
  1277  0DB5  2DBB               	goto	l3581
  1278  0DB6                     u5010:	
  1279  0DB6                     l3579:	
  1280  0DB6  160A  118A  2748  120A  158A  	fcall	_LCD
  1281  0DBB                     l3581:	
  1282                           
  1283                           ;main.c: 128:         if(nextState==BLE)ble();
  1284  0DBB  300F               	movlw	15
  1285  0DBC  1683               	bsf	3,5	;RP0=1, select bank1
  1286  0DBD  1303               	bcf	3,6	;RP1=0, select bank1
  1287  0DBE  064E               	xorwf	_nextState^(0+128),w
  1288  0DBF  1D03               	btfss	3,2
  1289  0DC0  2DC2               	goto	u5021
  1290  0DC1  2DC3               	goto	u5020
  1291  0DC2                     u5021:	
  1292  0DC2  2DC8               	goto	l3585
  1293  0DC3                     u5020:	
  1294  0DC3                     l3583:	
  1295  0DC3  160A  118A  2342  120A  158A  	fcall	_ble
  1296  0DC8                     l3585:	
  1297                           
  1298                           ;main.c: 129:         RB2=0;
  1299  0DC8  1283               	bcf	3,5	;RP0=0, select bank0
  1300  0DC9  1303               	bcf	3,6	;RP1=0, select bank0
  1301  0DCA  1106               	bcf	6,2	;volatile
  1302  0DCB                     l3587:	
  1303                           
  1304                           ;main.c: 130:         RE0=1;
  1305  0DCB  1409               	bsf	9,0	;volatile
  1306  0DCC                     l3589:	
  1307                           
  1308                           ;main.c: 131:         _delay((unsigned long)((10)*(20000000/4000.0)));
  1309  0DCC  3041               	movlw	65
  1310  0DCD  1683               	bsf	3,5	;RP0=1, select bank1
  1311  0DCE  1303               	bcf	3,6	;RP1=0, select bank1
  1312  0DCF  00B8               	movwf	(??_main^(0+128)+1)
  1313  0DD0  30ED               	movlw	237
  1314  0DD1  00B7               	movwf	??_main^(0+128)
  1315  0DD2                     u5057:	
  1316  0DD2  0BB7               	decfsz	??_main^(0+128),f
  1317  0DD3  2DD2               	goto	u5057
  1318  0DD4  0BB8               	decfsz	(??_main^(0+128)+1),f
  1319  0DD5  2DD2               	goto	u5057
  1320  0DD6  2DD7               	nop2
  1321  0DD7                     l3591:	
  1322                           
  1323                           ;main.c: 132:         RE0=0;
  1324  0DD7  1283               	bcf	3,5	;RP0=0, select bank0
  1325  0DD8  1303               	bcf	3,6	;RP1=0, select bank0
  1326  0DD9  1009               	bcf	9,0	;volatile
  1327  0DDA                     l3593:	
  1328                           
  1329                           ;main.c: 133:         _delay((unsigned long)((10)*(20000000/4000.0)));
  1330  0DDA  3041               	movlw	65
  1331  0DDB  1683               	bsf	3,5	;RP0=1, select bank1
  1332  0DDC  1303               	bcf	3,6	;RP1=0, select bank1
  1333  0DDD  00B8               	movwf	(??_main^(0+128)+1)
  1334  0DDE  30ED               	movlw	237
  1335  0DDF  00B7               	movwf	??_main^(0+128)
  1336  0DE0                     u5067:	
  1337  0DE0  0BB7               	decfsz	??_main^(0+128),f
  1338  0DE1  2DE0               	goto	u5067
  1339  0DE2  0BB8               	decfsz	(??_main^(0+128)+1),f
  1340  0DE3  2DE0               	goto	u5067
  1341  0DE4  2DE5               	nop2
  1342  0DE5  2D11               	goto	l3525
  1343  0DE6  120A  118A  2800   	ljmp	start
  1344  0DE9                     __end_of_main:	
  1345                           
  1346                           	psect	text1
  1347  09BB                     __ptext1:	
  1348 ;; *************** function _powerSaving3 *****************
  1349 ;; Defined at:
  1350 ;;		line 186 in file "main.c"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;		None
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;		None
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  1    wreg      void 
  1357 ;; Registers used:
  1358 ;;		wreg, status,2, status,0, pclath, cstack
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1364 ;;      Params:         0       0       0       0       0
  1365 ;;      Locals:         0       0       0       0       0
  1366 ;;      Temps:          1       0       0       0       0
  1367 ;;      Totals:         1       0       0       0       0
  1368 ;;Total ram usage:        1 bytes
  1369 ;; Hardware stack levels used:    1
  1370 ;; Hardware stack levels required when called:    1
  1371 ;; This function calls:
  1372 ;;		_aON
  1373 ;;		_bON
  1374 ;;		_cON
  1375 ;; This function is called by:
  1376 ;;		_main
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           
  1381                           ;psect for function _powerSaving3
  1382  09BB                     _powerSaving3:	
  1383  09BB                     l3243:	
  1384                           ;incstack = 0
  1385                           ; Regs used in _powerSaving3: [wreg+status,2+status,0+pclath+cstack]
  1386                           
  1387                           
  1388                           ;main.c: 187:     if(aVOLTAGE==bVOLTAGE){
  1389  09BB  1683               	bsf	3,5	;RP0=1, select bank1
  1390  09BC  1303               	bcf	3,6	;RP1=0, select bank1
  1391  09BD  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  1392  09BE  064D               	xorwf	(_aVOLTAGE+1)^(0+128),w
  1393  09BF  1D03               	skipz
  1394  09C0  29C3               	goto	u4565
  1395  09C1  084A               	movf	_bVOLTAGE^(0+128),w
  1396  09C2  064C               	xorwf	_aVOLTAGE^(0+128),w
  1397  09C3                     u4565:	
  1398  09C3  1D03               	skipz
  1399  09C4  29C6               	goto	u4561
  1400  09C5  29C7               	goto	u4560
  1401  09C6                     u4561:	
  1402  09C6  29E1               	goto	l3251
  1403  09C7                     u4560:	
  1404  09C7                     l3245:	
  1405                           
  1406                           ;main.c: 188:         if(cVOLTAGE<aVOLTAGE)cON();
  1407  09C7  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  1408  09C8  3A80               	xorlw	128
  1409  09C9  00F1               	movwf	??_powerSaving3
  1410  09CA  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  1411  09CB  3A80               	xorlw	128
  1412  09CC  0271               	subwf	??_powerSaving3,w
  1413  09CD  1D03               	skipz
  1414  09CE  29D1               	goto	u4575
  1415  09CF  084C               	movf	_aVOLTAGE^(0+128),w
  1416  09D0  0248               	subwf	_cVOLTAGE^(0+128),w
  1417  09D1                     u4575:	
  1418  09D1  1803               	skipnc
  1419  09D2  29D4               	goto	u4571
  1420  09D3  29D5               	goto	u4570
  1421  09D4                     u4571:	
  1422  09D4  29DB               	goto	l3249
  1423  09D5                     u4570:	
  1424  09D5                     l3247:	
  1425  09D5  160A  118A  237C  120A  158A  	fcall	_cON
  1426  09DA  2A7A               	goto	l3285
  1427  09DB                     l3249:	
  1428  09DB  160A  118A  235C  120A  158A  	fcall	_aON
  1429  09E0  2A7A               	goto	l3285
  1430  09E1                     l3251:	
  1431  09E1  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  1432  09E2  064B               	xorwf	(_bVOLTAGE+1)^(0+128),w
  1433  09E3  1D03               	skipz
  1434  09E4  29E7               	goto	u4585
  1435  09E5  0848               	movf	_cVOLTAGE^(0+128),w
  1436  09E6  064A               	xorwf	_bVOLTAGE^(0+128),w
  1437  09E7                     u4585:	
  1438  09E7  1D03               	skipz
  1439  09E8  29EA               	goto	u4581
  1440  09E9  29EB               	goto	u4580
  1441  09EA                     u4581:	
  1442  09EA  2A00               	goto	l3259
  1443  09EB                     u4580:	
  1444  09EB                     l3253:	
  1445                           
  1446                           ;main.c: 191:         if(aVOLTAGE<bVOLTAGE)aON();
  1447  09EB  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  1448  09EC  3A80               	xorlw	128
  1449  09ED  00F1               	movwf	??_powerSaving3
  1450  09EE  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  1451  09EF  3A80               	xorlw	128
  1452  09F0  0271               	subwf	??_powerSaving3,w
  1453  09F1  1D03               	skipz
  1454  09F2  29F5               	goto	u4595
  1455  09F3  084A               	movf	_bVOLTAGE^(0+128),w
  1456  09F4  024C               	subwf	_aVOLTAGE^(0+128),w
  1457  09F5                     u4595:	
  1458  09F5  1803               	skipnc
  1459  09F6  29F8               	goto	u4591
  1460  09F7  29F9               	goto	u4590
  1461  09F8                     u4591:	
  1462  09F8  29FA               	goto	l3257
  1463  09F9                     u4590:	
  1464  09F9  29DB               	goto	l3249
  1465  09FA                     l3257:	
  1466  09FA  160A  118A  236C  120A  158A  	fcall	_bON
  1467  09FF  2A7A               	goto	l3285
  1468  0A00                     l3259:	
  1469  0A00  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  1470  0A01  064D               	xorwf	(_aVOLTAGE+1)^(0+128),w
  1471  0A02  1D03               	skipz
  1472  0A03  2A06               	goto	u4605
  1473  0A04  0848               	movf	_cVOLTAGE^(0+128),w
  1474  0A05  064C               	xorwf	_aVOLTAGE^(0+128),w
  1475  0A06                     u4605:	
  1476  0A06  1D03               	skipz
  1477  0A07  2A09               	goto	u4601
  1478  0A08  2A0A               	goto	u4600
  1479  0A09                     u4601:	
  1480  0A09  2A19               	goto	l3267
  1481  0A0A                     u4600:	
  1482  0A0A                     l3261:	
  1483                           
  1484                           ;main.c: 194:         if(bVOLTAGE<aVOLTAGE)bON();
  1485  0A0A  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  1486  0A0B  3A80               	xorlw	128
  1487  0A0C  00F1               	movwf	??_powerSaving3
  1488  0A0D  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  1489  0A0E  3A80               	xorlw	128
  1490  0A0F  0271               	subwf	??_powerSaving3,w
  1491  0A10  1D03               	skipz
  1492  0A11  2A14               	goto	u4615
  1493  0A12  084C               	movf	_aVOLTAGE^(0+128),w
  1494  0A13  024A               	subwf	_bVOLTAGE^(0+128),w
  1495  0A14                     u4615:	
  1496  0A14  1803               	skipnc
  1497  0A15  2A17               	goto	u4611
  1498  0A16  2A18               	goto	u4610
  1499  0A17                     u4611:	
  1500  0A17  29DB               	goto	l3249
  1501  0A18                     u4610:	
  1502  0A18  29FA               	goto	l3257
  1503  0A19                     l3267:	
  1504                           
  1505                           ;main.c: 197:         if((aVOLTAGE<bVOLTAGE)&&(aVOLTAGE<cVOLTAGE))aON;
  1506  0A19  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  1507  0A1A  3A80               	xorlw	128
  1508  0A1B  00F1               	movwf	??_powerSaving3
  1509  0A1C  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  1510  0A1D  3A80               	xorlw	128
  1511  0A1E  0271               	subwf	??_powerSaving3,w
  1512  0A1F  1D03               	skipz
  1513  0A20  2A23               	goto	u4625
  1514  0A21  084A               	movf	_bVOLTAGE^(0+128),w
  1515  0A22  024C               	subwf	_aVOLTAGE^(0+128),w
  1516  0A23                     u4625:	
  1517  0A23  1803               	skipnc
  1518  0A24  2A26               	goto	u4621
  1519  0A25  2A27               	goto	u4620
  1520  0A26                     u4621:	
  1521  0A26  2A38               	goto	l3273
  1522  0A27                     u4620:	
  1523  0A27                     l3269:	
  1524  0A27  1683               	bsf	3,5	;RP0=1, select bank1
  1525  0A28  1303               	bcf	3,6	;RP1=0, select bank1
  1526  0A29  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  1527  0A2A  3A80               	xorlw	128
  1528  0A2B  00F1               	movwf	??_powerSaving3
  1529  0A2C  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  1530  0A2D  3A80               	xorlw	128
  1531  0A2E  0271               	subwf	??_powerSaving3,w
  1532  0A2F  1D03               	skipz
  1533  0A30  2A33               	goto	u4635
  1534  0A31  0848               	movf	_cVOLTAGE^(0+128),w
  1535  0A32  024C               	subwf	_aVOLTAGE^(0+128),w
  1536  0A33                     u4635:	
  1537  0A33  1803               	skipnc
  1538  0A34  2A36               	goto	u4631
  1539  0A35  2A37               	goto	u4630
  1540  0A36                     u4631:	
  1541  0A36  2A38               	goto	l3273
  1542  0A37                     u4630:	
  1543  0A37  2A7A               	goto	l3285
  1544  0A38                     l3273:	
  1545  0A38  1683               	bsf	3,5	;RP0=1, select bank1
  1546  0A39  1303               	bcf	3,6	;RP1=0, select bank1
  1547  0A3A  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  1548  0A3B  3A80               	xorlw	128
  1549  0A3C  00F1               	movwf	??_powerSaving3
  1550  0A3D  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  1551  0A3E  3A80               	xorlw	128
  1552  0A3F  0271               	subwf	??_powerSaving3,w
  1553  0A40  1D03               	skipz
  1554  0A41  2A44               	goto	u4645
  1555  0A42  0848               	movf	_cVOLTAGE^(0+128),w
  1556  0A43  024A               	subwf	_bVOLTAGE^(0+128),w
  1557  0A44                     u4645:	
  1558  0A44  1803               	skipnc
  1559  0A45  2A47               	goto	u4641
  1560  0A46  2A48               	goto	u4640
  1561  0A47                     u4641:	
  1562  0A47  2A59               	goto	l3279
  1563  0A48                     u4640:	
  1564  0A48                     l3275:	
  1565  0A48  1683               	bsf	3,5	;RP0=1, select bank1
  1566  0A49  1303               	bcf	3,6	;RP1=0, select bank1
  1567  0A4A  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  1568  0A4B  3A80               	xorlw	128
  1569  0A4C  00F1               	movwf	??_powerSaving3
  1570  0A4D  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  1571  0A4E  3A80               	xorlw	128
  1572  0A4F  0271               	subwf	??_powerSaving3,w
  1573  0A50  1D03               	skipz
  1574  0A51  2A54               	goto	u4655
  1575  0A52  084C               	movf	_aVOLTAGE^(0+128),w
  1576  0A53  024A               	subwf	_bVOLTAGE^(0+128),w
  1577  0A54                     u4655:	
  1578  0A54  1803               	skipnc
  1579  0A55  2A57               	goto	u4651
  1580  0A56  2A58               	goto	u4650
  1581  0A57                     u4651:	
  1582  0A57  2A59               	goto	l3279
  1583  0A58                     u4650:	
  1584  0A58  29FA               	goto	l3257
  1585  0A59                     l3279:	
  1586  0A59  1683               	bsf	3,5	;RP0=1, select bank1
  1587  0A5A  1303               	bcf	3,6	;RP1=0, select bank1
  1588  0A5B  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  1589  0A5C  3A80               	xorlw	128
  1590  0A5D  00F1               	movwf	??_powerSaving3
  1591  0A5E  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  1592  0A5F  3A80               	xorlw	128
  1593  0A60  0271               	subwf	??_powerSaving3,w
  1594  0A61  1D03               	skipz
  1595  0A62  2A65               	goto	u4665
  1596  0A63  084A               	movf	_bVOLTAGE^(0+128),w
  1597  0A64  0248               	subwf	_cVOLTAGE^(0+128),w
  1598  0A65                     u4665:	
  1599  0A65  1803               	skipnc
  1600  0A66  2A68               	goto	u4661
  1601  0A67  2A69               	goto	u4660
  1602  0A68                     u4661:	
  1603  0A68  2A7A               	goto	l3285
  1604  0A69                     u4660:	
  1605  0A69                     l3281:	
  1606  0A69  1683               	bsf	3,5	;RP0=1, select bank1
  1607  0A6A  1303               	bcf	3,6	;RP1=0, select bank1
  1608  0A6B  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  1609  0A6C  3A80               	xorlw	128
  1610  0A6D  00F1               	movwf	??_powerSaving3
  1611  0A6E  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  1612  0A6F  3A80               	xorlw	128
  1613  0A70  0271               	subwf	??_powerSaving3,w
  1614  0A71  1D03               	skipz
  1615  0A72  2A75               	goto	u4675
  1616  0A73  084C               	movf	_aVOLTAGE^(0+128),w
  1617  0A74  0248               	subwf	_cVOLTAGE^(0+128),w
  1618  0A75                     u4675:	
  1619  0A75  1803               	skipnc
  1620  0A76  2A78               	goto	u4671
  1621  0A77  2A79               	goto	u4670
  1622  0A78                     u4671:	
  1623  0A78  2A7A               	goto	l3285
  1624  0A79                     u4670:	
  1625  0A79  29D5               	goto	l3247
  1626  0A7A                     l3285:	
  1627                           
  1628                           ;main.c: 201:     nextState=cM;
  1629  0A7A  300C               	movlw	12
  1630  0A7B  00F1               	movwf	??_powerSaving3
  1631  0A7C  0871               	movf	??_powerSaving3,w
  1632  0A7D  1683               	bsf	3,5	;RP0=1, select bank1
  1633  0A7E  1303               	bcf	3,6	;RP1=0, select bank1
  1634  0A7F  00CE               	movwf	_nextState^(0+128)
  1635  0A80                     l253:	
  1636  0A80  0008               	return
  1637  0A81                     __end_of_powerSaving3:	
  1638                           
  1639                           	psect	text2
  1640  1616                     __ptext2:	
  1641 ;; *************** function _powerSaving2 *****************
  1642 ;; Defined at:
  1643 ;;		line 203 in file "main.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;		None
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;		None
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  1    wreg      void 
  1650 ;; Registers used:
  1651 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1657 ;;      Params:         0       0       0       0       0
  1658 ;;      Locals:         0       0       0       0       0
  1659 ;;      Temps:          1       0       0       0       0
  1660 ;;      Totals:         1       0       0       0       0
  1661 ;;Total ram usage:        1 bytes
  1662 ;; Hardware stack levels used:    1
  1663 ;; Hardware stack levels required when called:    1
  1664 ;; This function calls:
  1665 ;;		_aON
  1666 ;;		_bON
  1667 ;;		_cON
  1668 ;; This function is called by:
  1669 ;;		_main
  1670 ;; This function uses a non-reentrant model
  1671 ;;
  1672                           
  1673                           
  1674                           ;psect for function _powerSaving2
  1675  1616                     _powerSaving2:	
  1676  1616                     l3287:	
  1677                           ;incstack = 0
  1678                           ; Regs used in _powerSaving2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1679                           
  1680                           
  1681                           ;main.c: 204:     switch(danger){
  1682  1616  2E55               	goto	l3309
  1683  1617                     l3289:	
  1684                           
  1685                           ;main.c: 206:             if(aVOLTAGE<=bVOLTAGE)aON();
  1686  1617  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  1687  1618  3A80               	xorlw	128
  1688  1619  00F1               	movwf	??_powerSaving2
  1689  161A  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  1690  161B  3A80               	xorlw	128
  1691  161C  0271               	subwf	??_powerSaving2,w
  1692  161D  1D03               	skipz
  1693  161E  2E21               	goto	u4685
  1694  161F  084C               	movf	_aVOLTAGE^(0+128),w
  1695  1620  024A               	subwf	_bVOLTAGE^(0+128),w
  1696  1621                     u4685:	
  1697  1621  1C03               	skipc
  1698  1622  2E24               	goto	u4681
  1699  1623  2E25               	goto	u4680
  1700  1624                     u4681:	
  1701  1624  2E2B               	goto	l3293
  1702  1625                     u4680:	
  1703  1625                     l3291:	
  1704  1625  160A  118A  235C  160A  118A  	fcall	_aON
  1705  162A  2E67               	goto	l3311
  1706  162B                     l3293:	
  1707  162B  160A  118A  236C  160A  118A  	fcall	_bON
  1708  1630  2E67               	goto	l3311
  1709  1631                     l3295:	
  1710                           
  1711                           ;main.c: 210:             if(aVOLTAGE<=cVOLTAGE)aON();
  1712  1631  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  1713  1632  3A80               	xorlw	128
  1714  1633  00F1               	movwf	??_powerSaving2
  1715  1634  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  1716  1635  3A80               	xorlw	128
  1717  1636  0271               	subwf	??_powerSaving2,w
  1718  1637  1D03               	skipz
  1719  1638  2E3B               	goto	u4695
  1720  1639  084C               	movf	_aVOLTAGE^(0+128),w
  1721  163A  0248               	subwf	_cVOLTAGE^(0+128),w
  1722  163B                     u4695:	
  1723  163B  1C03               	skipc
  1724  163C  2E3E               	goto	u4691
  1725  163D  2E3F               	goto	u4690
  1726  163E                     u4691:	
  1727  163E  2E40               	goto	l3299
  1728  163F                     u4690:	
  1729  163F  2E25               	goto	l3291
  1730  1640                     l3299:	
  1731  1640  160A  118A  237C  160A  118A  	fcall	_cON
  1732  1645  2E67               	goto	l3311
  1733  1646                     l3301:	
  1734                           
  1735                           ;main.c: 214:             if(bVOLTAGE<=cVOLTAGE)bON();
  1736  1646  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  1737  1647  3A80               	xorlw	128
  1738  1648  00F1               	movwf	??_powerSaving2
  1739  1649  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  1740  164A  3A80               	xorlw	128
  1741  164B  0271               	subwf	??_powerSaving2,w
  1742  164C  1D03               	skipz
  1743  164D  2E50               	goto	u4705
  1744  164E  084A               	movf	_bVOLTAGE^(0+128),w
  1745  164F  0248               	subwf	_cVOLTAGE^(0+128),w
  1746  1650                     u4705:	
  1747  1650  1C03               	skipc
  1748  1651  2E53               	goto	u4701
  1749  1652  2E54               	goto	u4700
  1750  1653                     u4701:	
  1751  1653  2E40               	goto	l3299
  1752  1654                     u4700:	
  1753  1654  2E2B               	goto	l3293
  1754  1655                     l3309:	
  1755                           
  1756                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1757                           ; Switch size 1, requested type "simple"
  1758                           ; Number of cases is 1, Range of values is 0 to 0
  1759                           ; switch strategies available:
  1760                           ; Name         Instructions Cycles
  1761                           ; simple_byte            4     3 (average)
  1762                           ; direct_byte           11     8 (fixed)
  1763                           ; jumptable            260     6 (fixed)
  1764                           ;	Chosen strategy is simple_byte
  1765  1655  1683               	bsf	3,5	;RP0=1, select bank1
  1766  1656  1303               	bcf	3,6	;RP1=0, select bank1
  1767  1657  0841               	movf	(_danger+1)^(0+128),w
  1768  1658  3A00               	xorlw	0	; case 0
  1769  1659  1903               	skipnz
  1770  165A  2E5C               	goto	l3735
  1771  165B  2E67               	goto	l3311
  1772  165C                     l3735:	
  1773                           
  1774                           ; Switch size 1, requested type "simple"
  1775                           ; Number of cases is 3, Range of values is 1 to 4
  1776                           ; switch strategies available:
  1777                           ; Name         Instructions Cycles
  1778                           ; simple_byte           10     6 (average)
  1779                           ; direct_byte           23    11 (fixed)
  1780                           ; jumptable            263     9 (fixed)
  1781                           ;	Chosen strategy is simple_byte
  1782  165C  0840               	movf	_danger^(0+128),w
  1783  165D  3A01               	xorlw	1	; case 1
  1784  165E  1903               	skipnz
  1785  165F  2E17               	goto	l3289
  1786  1660  3A03               	xorlw	3	; case 2
  1787  1661  1903               	skipnz
  1788  1662  2E31               	goto	l3295
  1789  1663  3A06               	xorlw	6	; case 4
  1790  1664  1903               	skipnz
  1791  1665  2E46               	goto	l3301
  1792  1666  2E67               	goto	l3311
  1793  1667                     l3311:	
  1794                           
  1795                           ;main.c: 218:     nextState=cM;
  1796  1667  300C               	movlw	12
  1797  1668  00F1               	movwf	??_powerSaving2
  1798  1669  0871               	movf	??_powerSaving2,w
  1799  166A  1683               	bsf	3,5	;RP0=1, select bank1
  1800  166B  1303               	bcf	3,6	;RP1=0, select bank1
  1801  166C  00CE               	movwf	_nextState^(0+128)
  1802  166D                     l267:	
  1803  166D  0008               	return
  1804  166E                     __end_of_powerSaving2:	
  1805                           
  1806                           	psect	text3
  1807  1481                     __ptext3:	
  1808 ;; *************** function _powerSaving1 *****************
  1809 ;; Defined at:
  1810 ;;		line 220 in file "main.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;		None
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;		None
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      void 
  1817 ;; Registers used:
  1818 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1824 ;;      Params:         0       0       0       0       0
  1825 ;;      Locals:         0       0       0       0       0
  1826 ;;      Temps:          1       0       0       0       0
  1827 ;;      Totals:         1       0       0       0       0
  1828 ;;Total ram usage:        1 bytes
  1829 ;; Hardware stack levels used:    1
  1830 ;; Hardware stack levels required when called:    1
  1831 ;; This function calls:
  1832 ;;		_aON
  1833 ;;		_bON
  1834 ;;		_cON
  1835 ;; This function is called by:
  1836 ;;		_main
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           
  1841                           ;psect for function _powerSaving1
  1842  1481                     _powerSaving1:	
  1843  1481                     l3319:	
  1844                           ;incstack = 0
  1845                           ; Regs used in _powerSaving1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1846                           
  1847                           
  1848                           ;main.c: 221:     switch(danger){
  1849  1481  2C94               	goto	l3329
  1850  1482                     l3321:	
  1851                           
  1852                           ;main.c: 223:             aON();
  1853  1482  160A  118A  235C  160A  118A  	fcall	_aON
  1854                           
  1855                           ;main.c: 224:             break;
  1856  1487  2CA6               	goto	l3331
  1857  1488                     l3323:	
  1858                           
  1859                           ;main.c: 226:             cON();
  1860  1488  160A  118A  237C  160A  118A  	fcall	_cON
  1861                           
  1862                           ;main.c: 227:             break;
  1863  148D  2CA6               	goto	l3331
  1864  148E                     l3325:	
  1865                           
  1866                           ;main.c: 229:             bON();
  1867  148E  160A  118A  236C  160A  118A  	fcall	_bON
  1868                           
  1869                           ;main.c: 230:             break;
  1870  1493  2CA6               	goto	l3331
  1871  1494                     l3329:	
  1872                           
  1873                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1874                           ; Switch size 1, requested type "simple"
  1875                           ; Number of cases is 1, Range of values is 0 to 0
  1876                           ; switch strategies available:
  1877                           ; Name         Instructions Cycles
  1878                           ; simple_byte            4     3 (average)
  1879                           ; direct_byte           11     8 (fixed)
  1880                           ; jumptable            260     6 (fixed)
  1881                           ;	Chosen strategy is simple_byte
  1882  1494  1683               	bsf	3,5	;RP0=1, select bank1
  1883  1495  1303               	bcf	3,6	;RP1=0, select bank1
  1884  1496  0841               	movf	(_danger+1)^(0+128),w
  1885  1497  3A00               	xorlw	0	; case 0
  1886  1498  1903               	skipnz
  1887  1499  2C9B               	goto	l3737
  1888  149A  2CA6               	goto	l3331
  1889  149B                     l3737:	
  1890                           
  1891                           ; Switch size 1, requested type "simple"
  1892                           ; Number of cases is 3, Range of values is 3 to 6
  1893                           ; switch strategies available:
  1894                           ; Name         Instructions Cycles
  1895                           ; simple_byte           10     6 (average)
  1896                           ; direct_byte           23    11 (fixed)
  1897                           ; jumptable            263     9 (fixed)
  1898                           ;	Chosen strategy is simple_byte
  1899  149B  0840               	movf	_danger^(0+128),w
  1900  149C  3A03               	xorlw	3	; case 3
  1901  149D  1903               	skipnz
  1902  149E  2C82               	goto	l3321
  1903  149F  3A06               	xorlw	6	; case 5
  1904  14A0  1903               	skipnz
  1905  14A1  2C8E               	goto	l3325
  1906  14A2  3A03               	xorlw	3	; case 6
  1907  14A3  1903               	skipnz
  1908  14A4  2C88               	goto	l3323
  1909  14A5  2CA6               	goto	l3331
  1910  14A6                     l3331:	
  1911                           
  1912                           ;main.c: 232:     nextState=cM;
  1913  14A6  300C               	movlw	12
  1914  14A7  00F1               	movwf	??_powerSaving1
  1915  14A8  0871               	movf	??_powerSaving1,w
  1916  14A9  1683               	bsf	3,5	;RP0=1, select bank1
  1917  14AA  1303               	bcf	3,6	;RP1=0, select bank1
  1918  14AB  00CE               	movwf	_nextState^(0+128)
  1919  14AC                     l275:	
  1920  14AC  0008               	return
  1921  14AD                     __end_of_powerSaving1:	
  1922                           
  1923                           	psect	text4
  1924  08F5                     __ptext4:	
  1925 ;; *************** function _maximumPower3 *****************
  1926 ;; Defined at:
  1927 ;;		line 234 in file "main.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;		None
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;		None
  1932 ;; Return value:  Size  Location     Type
  1933 ;;                  1    wreg      void 
  1934 ;; Registers used:
  1935 ;;		wreg, status,2, status,0, pclath, cstack
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1941 ;;      Params:         0       0       0       0       0
  1942 ;;      Locals:         0       0       0       0       0
  1943 ;;      Temps:          1       0       0       0       0
  1944 ;;      Totals:         1       0       0       0       0
  1945 ;;Total ram usage:        1 bytes
  1946 ;; Hardware stack levels used:    1
  1947 ;; Hardware stack levels required when called:    1
  1948 ;; This function calls:
  1949 ;;		_aON
  1950 ;;		_bON
  1951 ;;		_cON
  1952 ;; This function is called by:
  1953 ;;		_main
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           
  1958                           ;psect for function _maximumPower3
  1959  08F5                     _maximumPower3:	
  1960  08F5                     l3339:	
  1961                           ;incstack = 0
  1962                           ; Regs used in _maximumPower3: [wreg+status,2+status,0+pclath+cstack]
  1963                           
  1964                           
  1965                           ;main.c: 235:     if(aVOLTAGE==bVOLTAGE){
  1966  08F5  1683               	bsf	3,5	;RP0=1, select bank1
  1967  08F6  1303               	bcf	3,6	;RP1=0, select bank1
  1968  08F7  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  1969  08F8  064D               	xorwf	(_aVOLTAGE+1)^(0+128),w
  1970  08F9  1D03               	skipz
  1971  08FA  28FD               	goto	u4715
  1972  08FB  084A               	movf	_bVOLTAGE^(0+128),w
  1973  08FC  064C               	xorwf	_aVOLTAGE^(0+128),w
  1974  08FD                     u4715:	
  1975  08FD  1D03               	skipz
  1976  08FE  2900               	goto	u4711
  1977  08FF  2901               	goto	u4710
  1978  0900                     u4711:	
  1979  0900  291B               	goto	l3347
  1980  0901                     u4710:	
  1981  0901                     l3341:	
  1982                           
  1983                           ;main.c: 236:         if(cVOLTAGE>aVOLTAGE)cON();
  1984  0901  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  1985  0902  3A80               	xorlw	128
  1986  0903  00F1               	movwf	??_maximumPower3
  1987  0904  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  1988  0905  3A80               	xorlw	128
  1989  0906  0271               	subwf	??_maximumPower3,w
  1990  0907  1D03               	skipz
  1991  0908  290B               	goto	u4725
  1992  0909  0848               	movf	_cVOLTAGE^(0+128),w
  1993  090A  024C               	subwf	_aVOLTAGE^(0+128),w
  1994  090B                     u4725:	
  1995  090B  1803               	skipnc
  1996  090C  290E               	goto	u4721
  1997  090D  290F               	goto	u4720
  1998  090E                     u4721:	
  1999  090E  2915               	goto	l3345
  2000  090F                     u4720:	
  2001  090F                     l3343:	
  2002  090F  160A  118A  237C  120A  158A  	fcall	_cON
  2003  0914  29B4               	goto	l3381
  2004  0915                     l3345:	
  2005  0915  160A  118A  235C  120A  158A  	fcall	_aON
  2006  091A  29B4               	goto	l3381
  2007  091B                     l3347:	
  2008  091B  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  2009  091C  064B               	xorwf	(_bVOLTAGE+1)^(0+128),w
  2010  091D  1D03               	skipz
  2011  091E  2921               	goto	u4735
  2012  091F  0848               	movf	_cVOLTAGE^(0+128),w
  2013  0920  064A               	xorwf	_bVOLTAGE^(0+128),w
  2014  0921                     u4735:	
  2015  0921  1D03               	skipz
  2016  0922  2924               	goto	u4731
  2017  0923  2925               	goto	u4730
  2018  0924                     u4731:	
  2019  0924  293A               	goto	l3355
  2020  0925                     u4730:	
  2021  0925                     l3349:	
  2022                           
  2023                           ;main.c: 239:         if(aVOLTAGE>bVOLTAGE)aON();
  2024  0925  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  2025  0926  3A80               	xorlw	128
  2026  0927  00F1               	movwf	??_maximumPower3
  2027  0928  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  2028  0929  3A80               	xorlw	128
  2029  092A  0271               	subwf	??_maximumPower3,w
  2030  092B  1D03               	skipz
  2031  092C  292F               	goto	u4745
  2032  092D  084C               	movf	_aVOLTAGE^(0+128),w
  2033  092E  024A               	subwf	_bVOLTAGE^(0+128),w
  2034  092F                     u4745:	
  2035  092F  1803               	skipnc
  2036  0930  2932               	goto	u4741
  2037  0931  2933               	goto	u4740
  2038  0932                     u4741:	
  2039  0932  2934               	goto	l3353
  2040  0933                     u4740:	
  2041  0933  2915               	goto	l3345
  2042  0934                     l3353:	
  2043  0934  160A  118A  236C  120A  158A  	fcall	_bON
  2044  0939  29B4               	goto	l3381
  2045  093A                     l3355:	
  2046  093A  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  2047  093B  064D               	xorwf	(_aVOLTAGE+1)^(0+128),w
  2048  093C  1D03               	skipz
  2049  093D  2940               	goto	u4755
  2050  093E  0848               	movf	_cVOLTAGE^(0+128),w
  2051  093F  064C               	xorwf	_aVOLTAGE^(0+128),w
  2052  0940                     u4755:	
  2053  0940  1D03               	skipz
  2054  0941  2943               	goto	u4751
  2055  0942  2944               	goto	u4750
  2056  0943                     u4751:	
  2057  0943  2953               	goto	l3363
  2058  0944                     u4750:	
  2059  0944                     l3357:	
  2060                           
  2061                           ;main.c: 242:         if(bVOLTAGE>aVOLTAGE)bON();
  2062  0944  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  2063  0945  3A80               	xorlw	128
  2064  0946  00F1               	movwf	??_maximumPower3
  2065  0947  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  2066  0948  3A80               	xorlw	128
  2067  0949  0271               	subwf	??_maximumPower3,w
  2068  094A  1D03               	skipz
  2069  094B  294E               	goto	u4765
  2070  094C  084A               	movf	_bVOLTAGE^(0+128),w
  2071  094D  024C               	subwf	_aVOLTAGE^(0+128),w
  2072  094E                     u4765:	
  2073  094E  1803               	skipnc
  2074  094F  2951               	goto	u4761
  2075  0950  2952               	goto	u4760
  2076  0951                     u4761:	
  2077  0951  2915               	goto	l3345
  2078  0952                     u4760:	
  2079  0952  2934               	goto	l3353
  2080  0953                     l3363:	
  2081                           
  2082                           ;main.c: 245:         if((aVOLTAGE>bVOLTAGE)&&(aVOLTAGE>cVOLTAGE))aON;
  2083  0953  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  2084  0954  3A80               	xorlw	128
  2085  0955  00F1               	movwf	??_maximumPower3
  2086  0956  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  2087  0957  3A80               	xorlw	128
  2088  0958  0271               	subwf	??_maximumPower3,w
  2089  0959  1D03               	skipz
  2090  095A  295D               	goto	u4775
  2091  095B  084C               	movf	_aVOLTAGE^(0+128),w
  2092  095C  024A               	subwf	_bVOLTAGE^(0+128),w
  2093  095D                     u4775:	
  2094  095D  1803               	skipnc
  2095  095E  2960               	goto	u4771
  2096  095F  2961               	goto	u4770
  2097  0960                     u4771:	
  2098  0960  2972               	goto	l3369
  2099  0961                     u4770:	
  2100  0961                     l3365:	
  2101  0961  1683               	bsf	3,5	;RP0=1, select bank1
  2102  0962  1303               	bcf	3,6	;RP1=0, select bank1
  2103  0963  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  2104  0964  3A80               	xorlw	128
  2105  0965  00F1               	movwf	??_maximumPower3
  2106  0966  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  2107  0967  3A80               	xorlw	128
  2108  0968  0271               	subwf	??_maximumPower3,w
  2109  0969  1D03               	skipz
  2110  096A  296D               	goto	u4785
  2111  096B  084C               	movf	_aVOLTAGE^(0+128),w
  2112  096C  0248               	subwf	_cVOLTAGE^(0+128),w
  2113  096D                     u4785:	
  2114  096D  1803               	skipnc
  2115  096E  2970               	goto	u4781
  2116  096F  2971               	goto	u4780
  2117  0970                     u4781:	
  2118  0970  2972               	goto	l3369
  2119  0971                     u4780:	
  2120  0971  29B4               	goto	l3381
  2121  0972                     l3369:	
  2122  0972  1683               	bsf	3,5	;RP0=1, select bank1
  2123  0973  1303               	bcf	3,6	;RP1=0, select bank1
  2124  0974  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  2125  0975  3A80               	xorlw	128
  2126  0976  00F1               	movwf	??_maximumPower3
  2127  0977  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  2128  0978  3A80               	xorlw	128
  2129  0979  0271               	subwf	??_maximumPower3,w
  2130  097A  1D03               	skipz
  2131  097B  297E               	goto	u4795
  2132  097C  084A               	movf	_bVOLTAGE^(0+128),w
  2133  097D  0248               	subwf	_cVOLTAGE^(0+128),w
  2134  097E                     u4795:	
  2135  097E  1803               	skipnc
  2136  097F  2981               	goto	u4791
  2137  0980  2982               	goto	u4790
  2138  0981                     u4791:	
  2139  0981  2993               	goto	l3375
  2140  0982                     u4790:	
  2141  0982                     l3371:	
  2142  0982  1683               	bsf	3,5	;RP0=1, select bank1
  2143  0983  1303               	bcf	3,6	;RP1=0, select bank1
  2144  0984  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  2145  0985  3A80               	xorlw	128
  2146  0986  00F1               	movwf	??_maximumPower3
  2147  0987  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  2148  0988  3A80               	xorlw	128
  2149  0989  0271               	subwf	??_maximumPower3,w
  2150  098A  1D03               	skipz
  2151  098B  298E               	goto	u4805
  2152  098C  084A               	movf	_bVOLTAGE^(0+128),w
  2153  098D  024C               	subwf	_aVOLTAGE^(0+128),w
  2154  098E                     u4805:	
  2155  098E  1803               	skipnc
  2156  098F  2991               	goto	u4801
  2157  0990  2992               	goto	u4800
  2158  0991                     u4801:	
  2159  0991  2993               	goto	l3375
  2160  0992                     u4800:	
  2161  0992  2934               	goto	l3353
  2162  0993                     l3375:	
  2163  0993  1683               	bsf	3,5	;RP0=1, select bank1
  2164  0994  1303               	bcf	3,6	;RP1=0, select bank1
  2165  0995  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  2166  0996  3A80               	xorlw	128
  2167  0997  00F1               	movwf	??_maximumPower3
  2168  0998  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  2169  0999  3A80               	xorlw	128
  2170  099A  0271               	subwf	??_maximumPower3,w
  2171  099B  1D03               	skipz
  2172  099C  299F               	goto	u4815
  2173  099D  0848               	movf	_cVOLTAGE^(0+128),w
  2174  099E  024A               	subwf	_bVOLTAGE^(0+128),w
  2175  099F                     u4815:	
  2176  099F  1803               	skipnc
  2177  09A0  29A2               	goto	u4811
  2178  09A1  29A3               	goto	u4810
  2179  09A2                     u4811:	
  2180  09A2  29B4               	goto	l3381
  2181  09A3                     u4810:	
  2182  09A3                     l3377:	
  2183  09A3  1683               	bsf	3,5	;RP0=1, select bank1
  2184  09A4  1303               	bcf	3,6	;RP1=0, select bank1
  2185  09A5  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  2186  09A6  3A80               	xorlw	128
  2187  09A7  00F1               	movwf	??_maximumPower3
  2188  09A8  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  2189  09A9  3A80               	xorlw	128
  2190  09AA  0271               	subwf	??_maximumPower3,w
  2191  09AB  1D03               	skipz
  2192  09AC  29AF               	goto	u4825
  2193  09AD  0848               	movf	_cVOLTAGE^(0+128),w
  2194  09AE  024C               	subwf	_aVOLTAGE^(0+128),w
  2195  09AF                     u4825:	
  2196  09AF  1803               	skipnc
  2197  09B0  29B2               	goto	u4821
  2198  09B1  29B3               	goto	u4820
  2199  09B2                     u4821:	
  2200  09B2  29B4               	goto	l3381
  2201  09B3                     u4820:	
  2202  09B3  290F               	goto	l3343
  2203  09B4                     l3381:	
  2204                           
  2205                           ;main.c: 249:     nextState=cM;
  2206  09B4  300C               	movlw	12
  2207  09B5  00F1               	movwf	??_maximumPower3
  2208  09B6  0871               	movf	??_maximumPower3,w
  2209  09B7  1683               	bsf	3,5	;RP0=1, select bank1
  2210  09B8  1303               	bcf	3,6	;RP1=0, select bank1
  2211  09B9  00CE               	movwf	_nextState^(0+128)
  2212  09BA                     l295:	
  2213  09BA  0008               	return
  2214  09BB                     __end_of_maximumPower3:	
  2215                           
  2216                           	psect	text5
  2217  15BE                     __ptext5:	
  2218 ;; *************** function _maximumPower2 *****************
  2219 ;; Defined at:
  2220 ;;		line 251 in file "main.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;		None
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;		None
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  1    wreg      void 
  2227 ;; Registers used:
  2228 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2234 ;;      Params:         0       0       0       0       0
  2235 ;;      Locals:         0       0       0       0       0
  2236 ;;      Temps:          1       0       0       0       0
  2237 ;;      Totals:         1       0       0       0       0
  2238 ;;Total ram usage:        1 bytes
  2239 ;; Hardware stack levels used:    1
  2240 ;; Hardware stack levels required when called:    1
  2241 ;; This function calls:
  2242 ;;		_aON
  2243 ;;		_bON
  2244 ;;		_cON
  2245 ;; This function is called by:
  2246 ;;		_main
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           
  2251                           ;psect for function _maximumPower2
  2252  15BE                     _maximumPower2:	
  2253  15BE                     l3383:	
  2254                           ;incstack = 0
  2255                           ; Regs used in _maximumPower2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2256                           
  2257                           
  2258                           ;main.c: 252:     switch(danger){
  2259  15BE  2DFD               	goto	l3405
  2260  15BF                     l3385:	
  2261                           
  2262                           ;main.c: 254:             if(aVOLTAGE>=bVOLTAGE)aON();
  2263  15BF  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  2264  15C0  3A80               	xorlw	128
  2265  15C1  00F1               	movwf	??_maximumPower2
  2266  15C2  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  2267  15C3  3A80               	xorlw	128
  2268  15C4  0271               	subwf	??_maximumPower2,w
  2269  15C5  1D03               	skipz
  2270  15C6  2DC9               	goto	u4835
  2271  15C7  084A               	movf	_bVOLTAGE^(0+128),w
  2272  15C8  024C               	subwf	_aVOLTAGE^(0+128),w
  2273  15C9                     u4835:	
  2274  15C9  1C03               	skipc
  2275  15CA  2DCC               	goto	u4831
  2276  15CB  2DCD               	goto	u4830
  2277  15CC                     u4831:	
  2278  15CC  2DD3               	goto	l3389
  2279  15CD                     u4830:	
  2280  15CD                     l3387:	
  2281  15CD  160A  118A  235C  160A  118A  	fcall	_aON
  2282  15D2  2E0F               	goto	l3407
  2283  15D3                     l3389:	
  2284  15D3  160A  118A  236C  160A  118A  	fcall	_bON
  2285  15D8  2E0F               	goto	l3407
  2286  15D9                     l3391:	
  2287                           
  2288                           ;main.c: 258:             if(aVOLTAGE>=cVOLTAGE)aON();
  2289  15D9  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  2290  15DA  3A80               	xorlw	128
  2291  15DB  00F1               	movwf	??_maximumPower2
  2292  15DC  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  2293  15DD  3A80               	xorlw	128
  2294  15DE  0271               	subwf	??_maximumPower2,w
  2295  15DF  1D03               	skipz
  2296  15E0  2DE3               	goto	u4845
  2297  15E1  0848               	movf	_cVOLTAGE^(0+128),w
  2298  15E2  024C               	subwf	_aVOLTAGE^(0+128),w
  2299  15E3                     u4845:	
  2300  15E3  1C03               	skipc
  2301  15E4  2DE6               	goto	u4841
  2302  15E5  2DE7               	goto	u4840
  2303  15E6                     u4841:	
  2304  15E6  2DE8               	goto	l3395
  2305  15E7                     u4840:	
  2306  15E7  2DCD               	goto	l3387
  2307  15E8                     l3395:	
  2308  15E8  160A  118A  237C  160A  118A  	fcall	_cON
  2309  15ED  2E0F               	goto	l3407
  2310  15EE                     l3397:	
  2311                           
  2312                           ;main.c: 262:             if(bVOLTAGE>=cVOLTAGE)bON();
  2313  15EE  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  2314  15EF  3A80               	xorlw	128
  2315  15F0  00F1               	movwf	??_maximumPower2
  2316  15F1  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  2317  15F2  3A80               	xorlw	128
  2318  15F3  0271               	subwf	??_maximumPower2,w
  2319  15F4  1D03               	skipz
  2320  15F5  2DF8               	goto	u4855
  2321  15F6  0848               	movf	_cVOLTAGE^(0+128),w
  2322  15F7  024A               	subwf	_bVOLTAGE^(0+128),w
  2323  15F8                     u4855:	
  2324  15F8  1C03               	skipc
  2325  15F9  2DFB               	goto	u4851
  2326  15FA  2DFC               	goto	u4850
  2327  15FB                     u4851:	
  2328  15FB  2DE8               	goto	l3395
  2329  15FC                     u4850:	
  2330  15FC  2DD3               	goto	l3389
  2331  15FD                     l3405:	
  2332                           
  2333                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2334                           ; Switch size 1, requested type "simple"
  2335                           ; Number of cases is 1, Range of values is 0 to 0
  2336                           ; switch strategies available:
  2337                           ; Name         Instructions Cycles
  2338                           ; simple_byte            4     3 (average)
  2339                           ; direct_byte           11     8 (fixed)
  2340                           ; jumptable            260     6 (fixed)
  2341                           ;	Chosen strategy is simple_byte
  2342  15FD  1683               	bsf	3,5	;RP0=1, select bank1
  2343  15FE  1303               	bcf	3,6	;RP1=0, select bank1
  2344  15FF  0841               	movf	(_danger+1)^(0+128),w
  2345  1600  3A00               	xorlw	0	; case 0
  2346  1601  1903               	skipnz
  2347  1602  2E04               	goto	l3739
  2348  1603  2E0F               	goto	l3407
  2349  1604                     l3739:	
  2350                           
  2351                           ; Switch size 1, requested type "simple"
  2352                           ; Number of cases is 3, Range of values is 1 to 4
  2353                           ; switch strategies available:
  2354                           ; Name         Instructions Cycles
  2355                           ; simple_byte           10     6 (average)
  2356                           ; direct_byte           23    11 (fixed)
  2357                           ; jumptable            263     9 (fixed)
  2358                           ;	Chosen strategy is simple_byte
  2359  1604  0840               	movf	_danger^(0+128),w
  2360  1605  3A01               	xorlw	1	; case 1
  2361  1606  1903               	skipnz
  2362  1607  2DBF               	goto	l3385
  2363  1608  3A03               	xorlw	3	; case 2
  2364  1609  1903               	skipnz
  2365  160A  2DD9               	goto	l3391
  2366  160B  3A06               	xorlw	6	; case 4
  2367  160C  1903               	skipnz
  2368  160D  2DEE               	goto	l3397
  2369  160E  2E0F               	goto	l3407
  2370  160F                     l3407:	
  2371                           
  2372                           ;main.c: 266:     nextState=cM;
  2373  160F  300C               	movlw	12
  2374  1610  00F1               	movwf	??_maximumPower2
  2375  1611  0871               	movf	??_maximumPower2,w
  2376  1612  1683               	bsf	3,5	;RP0=1, select bank1
  2377  1613  1303               	bcf	3,6	;RP1=0, select bank1
  2378  1614  00CE               	movwf	_nextState^(0+128)
  2379  1615                     l309:	
  2380  1615  0008               	return
  2381  1616                     __end_of_maximumPower2:	
  2382                           
  2383                           	psect	text6
  2384  1455                     __ptext6:	
  2385 ;; *************** function _maximumPower1 *****************
  2386 ;; Defined at:
  2387 ;;		line 268 in file "main.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;		None
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;		None
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      void 
  2394 ;; Registers used:
  2395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2401 ;;      Params:         0       0       0       0       0
  2402 ;;      Locals:         0       0       0       0       0
  2403 ;;      Temps:          1       0       0       0       0
  2404 ;;      Totals:         1       0       0       0       0
  2405 ;;Total ram usage:        1 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; Hardware stack levels required when called:    1
  2408 ;; This function calls:
  2409 ;;		_aON
  2410 ;;		_bON
  2411 ;;		_cON
  2412 ;; This function is called by:
  2413 ;;		_main
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           
  2418                           ;psect for function _maximumPower1
  2419  1455                     _maximumPower1:	
  2420  1455                     l3415:	
  2421                           ;incstack = 0
  2422                           ; Regs used in _maximumPower1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2423                           
  2424                           
  2425                           ;main.c: 269:     switch(danger){
  2426  1455  2C68               	goto	l3425
  2427  1456                     l3417:	
  2428                           
  2429                           ;main.c: 271:             aON();
  2430  1456  160A  118A  235C  160A  118A  	fcall	_aON
  2431                           
  2432                           ;main.c: 272:             break;
  2433  145B  2C7A               	goto	l3427
  2434  145C                     l3419:	
  2435                           
  2436                           ;main.c: 274:             cON();
  2437  145C  160A  118A  237C  160A  118A  	fcall	_cON
  2438                           
  2439                           ;main.c: 275:             break;
  2440  1461  2C7A               	goto	l3427
  2441  1462                     l3421:	
  2442                           
  2443                           ;main.c: 277:             bON();
  2444  1462  160A  118A  236C  160A  118A  	fcall	_bON
  2445                           
  2446                           ;main.c: 278:             break;
  2447  1467  2C7A               	goto	l3427
  2448  1468                     l3425:	
  2449                           
  2450                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2451                           ; Switch size 1, requested type "simple"
  2452                           ; Number of cases is 1, Range of values is 0 to 0
  2453                           ; switch strategies available:
  2454                           ; Name         Instructions Cycles
  2455                           ; simple_byte            4     3 (average)
  2456                           ; direct_byte           11     8 (fixed)
  2457                           ; jumptable            260     6 (fixed)
  2458                           ;	Chosen strategy is simple_byte
  2459  1468  1683               	bsf	3,5	;RP0=1, select bank1
  2460  1469  1303               	bcf	3,6	;RP1=0, select bank1
  2461  146A  0841               	movf	(_danger+1)^(0+128),w
  2462  146B  3A00               	xorlw	0	; case 0
  2463  146C  1903               	skipnz
  2464  146D  2C6F               	goto	l3741
  2465  146E  2C7A               	goto	l3427
  2466  146F                     l3741:	
  2467                           
  2468                           ; Switch size 1, requested type "simple"
  2469                           ; Number of cases is 3, Range of values is 3 to 6
  2470                           ; switch strategies available:
  2471                           ; Name         Instructions Cycles
  2472                           ; simple_byte           10     6 (average)
  2473                           ; direct_byte           23    11 (fixed)
  2474                           ; jumptable            263     9 (fixed)
  2475                           ;	Chosen strategy is simple_byte
  2476  146F  0840               	movf	_danger^(0+128),w
  2477  1470  3A03               	xorlw	3	; case 3
  2478  1471  1903               	skipnz
  2479  1472  2C56               	goto	l3417
  2480  1473  3A06               	xorlw	6	; case 5
  2481  1474  1903               	skipnz
  2482  1475  2C62               	goto	l3421
  2483  1476  3A03               	xorlw	3	; case 6
  2484  1477  1903               	skipnz
  2485  1478  2C5C               	goto	l3419
  2486  1479  2C7A               	goto	l3427
  2487  147A                     l3427:	
  2488                           
  2489                           ;main.c: 280:     nextState=cM;
  2490  147A  300C               	movlw	12
  2491  147B  00F1               	movwf	??_maximumPower1
  2492  147C  0871               	movf	??_maximumPower1,w
  2493  147D  1683               	bsf	3,5	;RP0=1, select bank1
  2494  147E  1303               	bcf	3,6	;RP1=0, select bank1
  2495  147F  00CE               	movwf	_nextState^(0+128)
  2496  1480                     l317:	
  2497  1480  0008               	return
  2498  1481                     __end_of_maximumPower1:	
  2499                           
  2500                           	psect	text7
  2501  137C                     __ptext7:	
  2502 ;; *************** function _cON *****************
  2503 ;; Defined at:
  2504 ;;		line 296 in file "main.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;		None
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;		None
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  1    wreg      void 
  2511 ;; Registers used:
  2512 ;;		wreg
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2518 ;;      Params:         0       0       0       0       0
  2519 ;;      Locals:         0       0       0       0       0
  2520 ;;      Temps:          1       0       0       0       0
  2521 ;;      Totals:         1       0       0       0       0
  2522 ;;Total ram usage:        1 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; This function calls:
  2525 ;;		Nothing
  2526 ;; This function is called by:
  2527 ;;		_main
  2528 ;;		_powerSaving3
  2529 ;;		_powerSaving2
  2530 ;;		_powerSaving1
  2531 ;;		_maximumPower3
  2532 ;;		_maximumPower2
  2533 ;;		_maximumPower1
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           
  2538                           ;psect for function _cON
  2539  137C                     _cON:	
  2540  137C                     l2723:	
  2541                           ;incstack = 0
  2542                           ; Regs used in _cON: [wreg]
  2543                           
  2544                           
  2545                           ;main.c: 297:     RB3=0;
  2546  137C  1283               	bcf	3,5	;RP0=0, select bank0
  2547  137D  1303               	bcf	3,6	;RP1=0, select bank0
  2548  137E  1186               	bcf	6,3	;volatile
  2549                           
  2550                           ;main.c: 298:     RB4=0;
  2551  137F  1206               	bcf	6,4	;volatile
  2552                           
  2553                           ;main.c: 299:     RB5=1;
  2554  1380  1686               	bsf	6,5	;volatile
  2555  1381                     l2725:	
  2556                           
  2557                           ;main.c: 300:     voltage=cVOLTAGE;
  2558  1381  1683               	bsf	3,5	;RP0=1, select bank1
  2559  1382  1303               	bcf	3,6	;RP1=0, select bank1
  2560  1383  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  2561  1384  00BF               	movwf	(_voltage+1)^(0+128)
  2562  1385  0848               	movf	_cVOLTAGE^(0+128),w
  2563  1386  00BE               	movwf	_voltage^(0+128)
  2564                           
  2565                           ;main.c: 301:     nextState=cM;
  2566  1387  300C               	movlw	12
  2567  1388  00F0               	movwf	??_cON
  2568  1389  0870               	movf	??_cON,w
  2569  138A  00CE               	movwf	_nextState^(0+128)
  2570  138B                     l326:	
  2571  138B  0008               	return
  2572  138C                     __end_of_cON:	
  2573                           
  2574                           	psect	text8
  2575  136C                     __ptext8:	
  2576 ;; *************** function _bON *****************
  2577 ;; Defined at:
  2578 ;;		line 289 in file "main.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;		None
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;		None
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  1    wreg      void 
  2585 ;; Registers used:
  2586 ;;		wreg
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2592 ;;      Params:         0       0       0       0       0
  2593 ;;      Locals:         0       0       0       0       0
  2594 ;;      Temps:          1       0       0       0       0
  2595 ;;      Totals:         1       0       0       0       0
  2596 ;;Total ram usage:        1 bytes
  2597 ;; Hardware stack levels used:    1
  2598 ;; This function calls:
  2599 ;;		Nothing
  2600 ;; This function is called by:
  2601 ;;		_main
  2602 ;;		_powerSaving3
  2603 ;;		_powerSaving2
  2604 ;;		_powerSaving1
  2605 ;;		_maximumPower3
  2606 ;;		_maximumPower2
  2607 ;;		_maximumPower1
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           
  2612                           ;psect for function _bON
  2613  136C                     _bON:	
  2614  136C                     l2719:	
  2615                           ;incstack = 0
  2616                           ; Regs used in _bON: [wreg]
  2617                           
  2618                           
  2619                           ;main.c: 290:     RB3=0;
  2620  136C  1283               	bcf	3,5	;RP0=0, select bank0
  2621  136D  1303               	bcf	3,6	;RP1=0, select bank0
  2622  136E  1186               	bcf	6,3	;volatile
  2623                           
  2624                           ;main.c: 291:     RB4=1;
  2625  136F  1606               	bsf	6,4	;volatile
  2626                           
  2627                           ;main.c: 292:     RB5=0;
  2628  1370  1286               	bcf	6,5	;volatile
  2629  1371                     l2721:	
  2630                           
  2631                           ;main.c: 293:     voltage=bVOLTAGE;
  2632  1371  1683               	bsf	3,5	;RP0=1, select bank1
  2633  1372  1303               	bcf	3,6	;RP1=0, select bank1
  2634  1373  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  2635  1374  00BF               	movwf	(_voltage+1)^(0+128)
  2636  1375  084A               	movf	_bVOLTAGE^(0+128),w
  2637  1376  00BE               	movwf	_voltage^(0+128)
  2638                           
  2639                           ;main.c: 294:     nextState=cM;
  2640  1377  300C               	movlw	12
  2641  1378  00F0               	movwf	??_bON
  2642  1379  0870               	movf	??_bON,w
  2643  137A  00CE               	movwf	_nextState^(0+128)
  2644  137B                     l323:	
  2645  137B  0008               	return
  2646  137C                     __end_of_bON:	
  2647                           
  2648                           	psect	text9
  2649  135C                     __ptext9:	
  2650 ;; *************** function _aON *****************
  2651 ;; Defined at:
  2652 ;;		line 282 in file "main.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;		None
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;		None
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  1    wreg      void 
  2659 ;; Registers used:
  2660 ;;		wreg
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2666 ;;      Params:         0       0       0       0       0
  2667 ;;      Locals:         0       0       0       0       0
  2668 ;;      Temps:          1       0       0       0       0
  2669 ;;      Totals:         1       0       0       0       0
  2670 ;;Total ram usage:        1 bytes
  2671 ;; Hardware stack levels used:    1
  2672 ;; This function calls:
  2673 ;;		Nothing
  2674 ;; This function is called by:
  2675 ;;		_main
  2676 ;;		_powerSaving3
  2677 ;;		_powerSaving2
  2678 ;;		_powerSaving1
  2679 ;;		_maximumPower3
  2680 ;;		_maximumPower2
  2681 ;;		_maximumPower1
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           
  2686                           ;psect for function _aON
  2687  135C                     _aON:	
  2688  135C                     l2715:	
  2689                           ;incstack = 0
  2690                           ; Regs used in _aON: [wreg]
  2691                           
  2692                           
  2693                           ;main.c: 283:     RB3=1;
  2694  135C  1283               	bcf	3,5	;RP0=0, select bank0
  2695  135D  1303               	bcf	3,6	;RP1=0, select bank0
  2696  135E  1586               	bsf	6,3	;volatile
  2697                           
  2698                           ;main.c: 284:     RB4=0;
  2699  135F  1206               	bcf	6,4	;volatile
  2700                           
  2701                           ;main.c: 285:     RB5=0;
  2702  1360  1286               	bcf	6,5	;volatile
  2703  1361                     l2717:	
  2704                           
  2705                           ;main.c: 286:     voltage=aVOLTAGE;
  2706  1361  1683               	bsf	3,5	;RP0=1, select bank1
  2707  1362  1303               	bcf	3,6	;RP1=0, select bank1
  2708  1363  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  2709  1364  00BF               	movwf	(_voltage+1)^(0+128)
  2710  1365  084C               	movf	_aVOLTAGE^(0+128),w
  2711  1366  00BE               	movwf	_voltage^(0+128)
  2712                           
  2713                           ;main.c: 287:     nextState=cM;
  2714  1367  300C               	movlw	12
  2715  1368  00F0               	movwf	??_aON
  2716  1369  0870               	movf	??_aON,w
  2717  136A  00CE               	movwf	_nextState^(0+128)
  2718  136B                     l320:	
  2719  136B  0008               	return
  2720  136C                     __end_of_aON:	
  2721                           
  2722                           	psect	text10
  2723  0DE9                     __ptext10:	
  2724 ;; *************** function _hotList *****************
  2725 ;; Defined at:
  2726 ;;		line 137 in file "main.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;		None
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;		None
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  1    wreg      void 
  2733 ;; Registers used:
  2734 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2740 ;;      Params:         0       0       0       0       0
  2741 ;;      Locals:         0       0       0       0       0
  2742 ;;      Temps:          0       6       0       0       0
  2743 ;;      Totals:         0       6       0       0       0
  2744 ;;Total ram usage:        6 bytes
  2745 ;; Hardware stack levels used:    1
  2746 ;; Hardware stack levels required when called:    3
  2747 ;; This function calls:
  2748 ;;		_Lcd_Clear
  2749 ;;		_Lcd_Set_Cursor
  2750 ;;		_Lcd_Write_String
  2751 ;; This function is called by:
  2752 ;;		_main
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           
  2757                           ;psect for function _hotList
  2758  0DE9                     _hotList:	
  2759  0DE9                     l3119:	
  2760                           ;incstack = 0
  2761                           ; Regs used in _hotList: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2762                           
  2763                           
  2764                           ;main.c: 138:     _delay((unsigned long)((20)*(20000000/4000000.0)));
  2765  0DE9  3020               	movlw	32
  2766  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  2767  0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  2768  0DEC  00A0               	movwf	??_hotList
  2769  0DED                     u5077:	
  2770  0DED  0BA0               	decfsz	??_hotList,f
  2771  0DEE  2DED               	goto	u5077
  2772  0DEF  0000               	nop
  2773  0DF0                     l3121:	
  2774                           
  2775                           ;main.c: 139:     ADCON0bits.CHS=0;
  2776  0DF0  30C7               	movlw	-57
  2777  0DF1  1283               	bcf	3,5	;RP0=0, select bank0
  2778  0DF2  1303               	bcf	3,6	;RP1=0, select bank0
  2779  0DF3  059F               	andwf	31,f	;volatile
  2780  0DF4                     l3123:	
  2781                           
  2782                           ;main.c: 140:     ADCON0bits.GO_nDONE=1;
  2783  0DF4  151F               	bsf	31,2	;volatile
  2784  0DF5                     l183:	
  2785                           ;main.c: 141:     while(ADCON0bits.GO_nDONE);
  2786                           
  2787  0DF5  191F               	btfsc	31,2	;volatile
  2788  0DF6  2DF8               	goto	u4271
  2789  0DF7  2DF9               	goto	u4270
  2790  0DF8                     u4271:	
  2791  0DF8  2DF5               	goto	l183
  2792  0DF9                     u4270:	
  2793  0DF9                     l3125:	
  2794                           
  2795                           ;main.c: 142:     aVOLTAGE=(ADRESH<<8)+ADRESL;
  2796  0DF9  081E               	movf	30,w	;volatile
  2797  0DFA  1683               	bsf	3,5	;RP0=1, select bank1
  2798  0DFB  1303               	bcf	3,6	;RP1=0, select bank1
  2799  0DFC  00CD               	movwf	(_aVOLTAGE+1)^(0+128)
  2800  0DFD  081E               	movf	30,w	;volatile
  2801  0DFE  00CC               	movwf	_aVOLTAGE^(0+128)
  2802  0DFF                     l3127:	
  2803                           
  2804                           ;main.c: 143:     if((aVOLTAGE>=614)||(aVOLTAGE<=368))aDANGER=1;
  2805  0DFF  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  2806  0E00  3A80               	xorlw	128
  2807  0E01  00FF               	movwf	btemp+1
  2808  0E02  3082               	movlw	130
  2809  0E03  027F               	subwf	btemp+1,w
  2810  0E04  1D03               	skipz
  2811  0E05  2E08               	goto	u4285
  2812  0E06  3066               	movlw	102
  2813  0E07  024C               	subwf	_aVOLTAGE^(0+128),w
  2814  0E08                     u4285:	
  2815  0E08  1803               	skipnc
  2816  0E09  2E0B               	goto	u4281
  2817  0E0A  2E0C               	goto	u4280
  2818  0E0B                     u4281:	
  2819  0E0B  2E1B               	goto	l3131
  2820  0E0C                     u4280:	
  2821  0E0C                     l3129:	
  2822  0E0C  1683               	bsf	3,5	;RP0=1, select bank1
  2823  0E0D  1303               	bcf	3,6	;RP1=0, select bank1
  2824  0E0E  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  2825  0E0F  3A80               	xorlw	128
  2826  0E10  00FF               	movwf	btemp+1
  2827  0E11  3081               	movlw	129
  2828  0E12  027F               	subwf	btemp+1,w
  2829  0E13  1D03               	skipz
  2830  0E14  2E17               	goto	u4295
  2831  0E15  3071               	movlw	113
  2832  0E16  024C               	subwf	_aVOLTAGE^(0+128),w
  2833  0E17                     u4295:	
  2834  0E17  1803               	skipnc
  2835  0E18  2E1A               	goto	u4291
  2836  0E19  2E1B               	goto	u4290
  2837  0E1A                     u4291:	
  2838  0E1A  2E22               	goto	l3133
  2839  0E1B                     u4290:	
  2840  0E1B                     l3131:	
  2841  0E1B  3001               	movlw	1
  2842  0E1C  1683               	bsf	3,5	;RP0=1, select bank1
  2843  0E1D  1303               	bcf	3,6	;RP1=0, select bank1
  2844  0E1E  00C6               	movwf	_aDANGER^(0+128)
  2845  0E1F  3000               	movlw	0
  2846  0E20  00C7               	movwf	(_aDANGER^(0+128)+1)
  2847  0E21  2E26               	goto	l3135
  2848  0E22                     l3133:	
  2849  0E22  1683               	bsf	3,5	;RP0=1, select bank1
  2850  0E23  1303               	bcf	3,6	;RP1=0, select bank1
  2851  0E24  01C6               	clrf	_aDANGER^(0+128)
  2852  0E25  01C7               	clrf	(_aDANGER+1)^(0+128)
  2853  0E26                     l3135:	
  2854                           
  2855                           ;main.c: 145:     _delay((unsigned long)((20)*(20000000/4000000.0)));
  2856  0E26  3020               	movlw	32
  2857  0E27  1283               	bcf	3,5	;RP0=0, select bank0
  2858  0E28  1303               	bcf	3,6	;RP1=0, select bank0
  2859  0E29  00A0               	movwf	??_hotList
  2860  0E2A                     u5087:	
  2861  0E2A  0BA0               	decfsz	??_hotList,f
  2862  0E2B  2E2A               	goto	u5087
  2863  0E2C  0000               	nop
  2864  0E2D                     l3137:	
  2865                           
  2866                           ;main.c: 146:     ADCON0bits.CHS=1;
  2867  0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  2868  0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  2869  0E2F  081F               	movf	31,w	;volatile
  2870  0E30  39C7               	andlw	-57
  2871  0E31  3808               	iorlw	8
  2872  0E32  009F               	movwf	31	;volatile
  2873  0E33                     l3139:	
  2874                           
  2875                           ;main.c: 147:     ADCON0bits.GO_nDONE=1;
  2876  0E33  151F               	bsf	31,2	;volatile
  2877  0E34                     l190:	
  2878                           ;main.c: 148:     while(ADCON0bits.GO_nDONE);
  2879                           
  2880  0E34  191F               	btfsc	31,2	;volatile
  2881  0E35  2E37               	goto	u4301
  2882  0E36  2E38               	goto	u4300
  2883  0E37                     u4301:	
  2884  0E37  2E34               	goto	l190
  2885  0E38                     u4300:	
  2886  0E38                     l3141:	
  2887                           
  2888                           ;main.c: 149:     bVOLTAGE=(ADRESH<<8)+ADRESL;
  2889  0E38  081E               	movf	30,w	;volatile
  2890  0E39  1683               	bsf	3,5	;RP0=1, select bank1
  2891  0E3A  1303               	bcf	3,6	;RP1=0, select bank1
  2892  0E3B  00CB               	movwf	(_bVOLTAGE+1)^(0+128)
  2893  0E3C  081E               	movf	30,w	;volatile
  2894  0E3D  00CA               	movwf	_bVOLTAGE^(0+128)
  2895  0E3E                     l3143:	
  2896                           
  2897                           ;main.c: 150:     if((bVOLTAGE>=614)||(bVOLTAGE<=368))bDANGER=1;
  2898  0E3E  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  2899  0E3F  3A80               	xorlw	128
  2900  0E40  00FF               	movwf	btemp+1
  2901  0E41  3082               	movlw	130
  2902  0E42  027F               	subwf	btemp+1,w
  2903  0E43  1D03               	skipz
  2904  0E44  2E47               	goto	u4315
  2905  0E45  3066               	movlw	102
  2906  0E46  024A               	subwf	_bVOLTAGE^(0+128),w
  2907  0E47                     u4315:	
  2908  0E47  1803               	skipnc
  2909  0E48  2E4A               	goto	u4311
  2910  0E49  2E4B               	goto	u4310
  2911  0E4A                     u4311:	
  2912  0E4A  2E5A               	goto	l3147
  2913  0E4B                     u4310:	
  2914  0E4B                     l3145:	
  2915  0E4B  1683               	bsf	3,5	;RP0=1, select bank1
  2916  0E4C  1303               	bcf	3,6	;RP1=0, select bank1
  2917  0E4D  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  2918  0E4E  3A80               	xorlw	128
  2919  0E4F  00FF               	movwf	btemp+1
  2920  0E50  3081               	movlw	129
  2921  0E51  027F               	subwf	btemp+1,w
  2922  0E52  1D03               	skipz
  2923  0E53  2E56               	goto	u4325
  2924  0E54  3071               	movlw	113
  2925  0E55  024A               	subwf	_bVOLTAGE^(0+128),w
  2926  0E56                     u4325:	
  2927  0E56  1803               	skipnc
  2928  0E57  2E59               	goto	u4321
  2929  0E58  2E5A               	goto	u4320
  2930  0E59                     u4321:	
  2931  0E59  2E61               	goto	l3149
  2932  0E5A                     u4320:	
  2933  0E5A                     l3147:	
  2934  0E5A  3001               	movlw	1
  2935  0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  2936  0E5C  1303               	bcf	3,6	;RP1=0, select bank1
  2937  0E5D  00C4               	movwf	_bDANGER^(0+128)
  2938  0E5E  3000               	movlw	0
  2939  0E5F  00C5               	movwf	(_bDANGER^(0+128)+1)
  2940  0E60  2E65               	goto	l3151
  2941  0E61                     l3149:	
  2942  0E61  1683               	bsf	3,5	;RP0=1, select bank1
  2943  0E62  1303               	bcf	3,6	;RP1=0, select bank1
  2944  0E63  01C4               	clrf	_bDANGER^(0+128)
  2945  0E64  01C5               	clrf	(_bDANGER+1)^(0+128)
  2946  0E65                     l3151:	
  2947                           
  2948                           ;main.c: 152:     _delay((unsigned long)((20)*(20000000/4000000.0)));
  2949  0E65  3020               	movlw	32
  2950  0E66  1283               	bcf	3,5	;RP0=0, select bank0
  2951  0E67  1303               	bcf	3,6	;RP1=0, select bank0
  2952  0E68  00A0               	movwf	??_hotList
  2953  0E69                     u5097:	
  2954  0E69  0BA0               	decfsz	??_hotList,f
  2955  0E6A  2E69               	goto	u5097
  2956  0E6B  0000               	nop
  2957  0E6C                     l3153:	
  2958                           
  2959                           ;main.c: 153:     ADCON0bits.CHS=2;
  2960  0E6C  1283               	bcf	3,5	;RP0=0, select bank0
  2961  0E6D  1303               	bcf	3,6	;RP1=0, select bank0
  2962  0E6E  081F               	movf	31,w	;volatile
  2963  0E6F  39C7               	andlw	-57
  2964  0E70  3810               	iorlw	16
  2965  0E71  009F               	movwf	31	;volatile
  2966  0E72                     l3155:	
  2967                           
  2968                           ;main.c: 154:     ADCON0bits.GO_nDONE=1;
  2969  0E72  151F               	bsf	31,2	;volatile
  2970  0E73                     l197:	
  2971                           ;main.c: 155:     while(ADCON0bits.GO_nDONE);
  2972                           
  2973  0E73  191F               	btfsc	31,2	;volatile
  2974  0E74  2E76               	goto	u4331
  2975  0E75  2E77               	goto	u4330
  2976  0E76                     u4331:	
  2977  0E76  2E73               	goto	l197
  2978  0E77                     u4330:	
  2979  0E77                     l3157:	
  2980                           
  2981                           ;main.c: 156:     cVOLTAGE=(ADRESH<<8)+ADRESL;
  2982  0E77  081E               	movf	30,w	;volatile
  2983  0E78  1683               	bsf	3,5	;RP0=1, select bank1
  2984  0E79  1303               	bcf	3,6	;RP1=0, select bank1
  2985  0E7A  00C9               	movwf	(_cVOLTAGE+1)^(0+128)
  2986  0E7B  081E               	movf	30,w	;volatile
  2987  0E7C  00C8               	movwf	_cVOLTAGE^(0+128)
  2988  0E7D                     l3159:	
  2989                           
  2990                           ;main.c: 157:     if((cVOLTAGE>=614)||(cVOLTAGE<=368))cDANGER=1;
  2991  0E7D  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  2992  0E7E  3A80               	xorlw	128
  2993  0E7F  00FF               	movwf	btemp+1
  2994  0E80  3082               	movlw	130
  2995  0E81  027F               	subwf	btemp+1,w
  2996  0E82  1D03               	skipz
  2997  0E83  2E86               	goto	u4345
  2998  0E84  3066               	movlw	102
  2999  0E85  0248               	subwf	_cVOLTAGE^(0+128),w
  3000  0E86                     u4345:	
  3001  0E86  1803               	skipnc
  3002  0E87  2E89               	goto	u4341
  3003  0E88  2E8A               	goto	u4340
  3004  0E89                     u4341:	
  3005  0E89  2E99               	goto	l3163
  3006  0E8A                     u4340:	
  3007  0E8A                     l3161:	
  3008  0E8A  1683               	bsf	3,5	;RP0=1, select bank1
  3009  0E8B  1303               	bcf	3,6	;RP1=0, select bank1
  3010  0E8C  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  3011  0E8D  3A80               	xorlw	128
  3012  0E8E  00FF               	movwf	btemp+1
  3013  0E8F  3081               	movlw	129
  3014  0E90  027F               	subwf	btemp+1,w
  3015  0E91  1D03               	skipz
  3016  0E92  2E95               	goto	u4355
  3017  0E93  3071               	movlw	113
  3018  0E94  0248               	subwf	_cVOLTAGE^(0+128),w
  3019  0E95                     u4355:	
  3020  0E95  1803               	skipnc
  3021  0E96  2E98               	goto	u4351
  3022  0E97  2E99               	goto	u4350
  3023  0E98                     u4351:	
  3024  0E98  2EA0               	goto	l3165
  3025  0E99                     u4350:	
  3026  0E99                     l3163:	
  3027  0E99  3001               	movlw	1
  3028  0E9A  1683               	bsf	3,5	;RP0=1, select bank1
  3029  0E9B  1303               	bcf	3,6	;RP1=0, select bank1
  3030  0E9C  00C2               	movwf	_cDANGER^(0+128)
  3031  0E9D  3000               	movlw	0
  3032  0E9E  00C3               	movwf	(_cDANGER^(0+128)+1)
  3033  0E9F  2EA4               	goto	l3167
  3034  0EA0                     l3165:	
  3035  0EA0  1683               	bsf	3,5	;RP0=1, select bank1
  3036  0EA1  1303               	bcf	3,6	;RP1=0, select bank1
  3037  0EA2  01C2               	clrf	_cDANGER^(0+128)
  3038  0EA3  01C3               	clrf	(_cDANGER+1)^(0+128)
  3039  0EA4                     l3167:	
  3040                           
  3041                           ;main.c: 159:     _delay((unsigned long)((20)*(20000000/4000000.0)));
  3042  0EA4  3020               	movlw	32
  3043  0EA5  1283               	bcf	3,5	;RP0=0, select bank0
  3044  0EA6  1303               	bcf	3,6	;RP1=0, select bank0
  3045  0EA7  00A0               	movwf	??_hotList
  3046  0EA8                     u5107:	
  3047  0EA8  0BA0               	decfsz	??_hotList,f
  3048  0EA9  2EA8               	goto	u5107
  3049  0EAA  0000               	nop
  3050  0EAB                     l3169:	
  3051                           
  3052                           ;main.c: 160:     danger=0;
  3053  0EAB  1683               	bsf	3,5	;RP0=1, select bank1
  3054  0EAC  1303               	bcf	3,6	;RP1=0, select bank1
  3055  0EAD  01C0               	clrf	_danger^(0+128)
  3056  0EAE  01C1               	clrf	(_danger+1)^(0+128)
  3057  0EAF                     l3171:	
  3058                           
  3059                           ;main.c: 161:     danger=(aDANGER<<2)|(bDANGER<<1)|(cDANGER);
  3060  0EAF  0845               	movf	(_bDANGER+1)^(0+128),w
  3061  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  3062  0EB1  1303               	bcf	3,6	;RP1=0, select bank0
  3063  0EB2  00A1               	movwf	??_hotList+1
  3064  0EB3  1683               	bsf	3,5	;RP0=1, select bank1
  3065  0EB4  1303               	bcf	3,6	;RP1=0, select bank1
  3066  0EB5  0844               	movf	_bDANGER^(0+128),w
  3067  0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  3068  0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  3069  0EB8  00A0               	movwf	??_hotList
  3070  0EB9  1003               	clrc
  3071  0EBA  0DA0               	rlf	??_hotList,f
  3072  0EBB  0DA1               	rlf	??_hotList+1,f
  3073  0EBC  1683               	bsf	3,5	;RP0=1, select bank1
  3074  0EBD  1303               	bcf	3,6	;RP1=0, select bank1
  3075  0EBE  0847               	movf	(_aDANGER+1)^(0+128),w
  3076  0EBF  1283               	bcf	3,5	;RP0=0, select bank0
  3077  0EC0  1303               	bcf	3,6	;RP1=0, select bank0
  3078  0EC1  00A3               	movwf	??_hotList+3
  3079  0EC2  1683               	bsf	3,5	;RP0=1, select bank1
  3080  0EC3  1303               	bcf	3,6	;RP1=0, select bank1
  3081  0EC4  0846               	movf	_aDANGER^(0+128),w
  3082  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  3083  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  3084  0EC7  00A2               	movwf	??_hotList+2
  3085  0EC8  1003               	clrc
  3086  0EC9  0DA2               	rlf	??_hotList+2,f
  3087  0ECA  0DA3               	rlf	??_hotList+3,f
  3088  0ECB  1003               	clrc
  3089  0ECC  0DA2               	rlf	??_hotList+2,f
  3090  0ECD  0DA3               	rlf	??_hotList+3,f
  3091  0ECE  0820               	movf	??_hotList,w
  3092  0ECF  0422               	iorwf	??_hotList+2,w
  3093  0ED0  00A4               	movwf	??_hotList+4
  3094  0ED1  0821               	movf	??_hotList+1,w
  3095  0ED2  0423               	iorwf	??_hotList+3,w
  3096  0ED3  00A5               	movwf	??_hotList+5
  3097  0ED4  1683               	bsf	3,5	;RP0=1, select bank1
  3098  0ED5  1303               	bcf	3,6	;RP1=0, select bank1
  3099  0ED6  0842               	movf	_cDANGER^(0+128),w
  3100  0ED7  1283               	bcf	3,5	;RP0=0, select bank0
  3101  0ED8  1303               	bcf	3,6	;RP1=0, select bank0
  3102  0ED9  0424               	iorwf	??_hotList+4,w
  3103  0EDA  1683               	bsf	3,5	;RP0=1, select bank1
  3104  0EDB  1303               	bcf	3,6	;RP1=0, select bank1
  3105  0EDC  00C0               	movwf	_danger^(0+128)
  3106  0EDD  0843               	movf	(_cDANGER+1)^(0+128),w
  3107  0EDE  1283               	bcf	3,5	;RP0=0, select bank0
  3108  0EDF  1303               	bcf	3,6	;RP1=0, select bank0
  3109  0EE0  0425               	iorwf	??_hotList+5,w
  3110  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  3111  0EE2  1303               	bcf	3,6	;RP1=0, select bank1
  3112  0EE3  00C1               	movwf	(_danger+1)^(0+128)
  3113  0EE4                     l3173:	
  3114                           
  3115                           ;main.c: 162:     Lcd_Clear();
  3116  0EE4  160A  118A  234F  120A  158A  	fcall	_Lcd_Clear
  3117  0EE9                     l3175:	
  3118                           
  3119                           ;main.c: 163:     if(danger==7)nextState=off;
  3120  0EE9  3007               	movlw	7
  3121  0EEA  1683               	bsf	3,5	;RP0=1, select bank1
  3122  0EEB  1303               	bcf	3,6	;RP1=0, select bank1
  3123  0EEC  0640               	xorwf	_danger^(0+128),w
  3124  0EED  0441               	iorwf	(_danger+1)^(0+128),w
  3125  0EEE  1D03               	btfss	3,2
  3126  0EEF  2EF1               	goto	u4361
  3127  0EF0  2EF2               	goto	u4360
  3128  0EF1                     u4361:	
  3129  0EF1  2EFB               	goto	l204
  3130  0EF2                     u4360:	
  3131  0EF2                     l3177:	
  3132  0EF2  300B               	movlw	11
  3133  0EF3  1283               	bcf	3,5	;RP0=0, select bank0
  3134  0EF4  1303               	bcf	3,6	;RP1=0, select bank0
  3135  0EF5  00A0               	movwf	??_hotList
  3136  0EF6  0820               	movf	??_hotList,w
  3137  0EF7  1683               	bsf	3,5	;RP0=1, select bank1
  3138  0EF8  1303               	bcf	3,6	;RP1=0, select bank1
  3139  0EF9  00CE               	movwf	_nextState^(0+128)
  3140  0EFA  2FFF               	goto	l233
  3141  0EFB                     l204:	
  3142                           ;main.c: 164:     else{
  3143                           
  3144                           
  3145                           ;main.c: 165:        if(RB7==1){
  3146  0EFB  1283               	bcf	3,5	;RP0=0, select bank0
  3147  0EFC  1303               	bcf	3,6	;RP1=0, select bank0
  3148  0EFD  1F86               	btfss	6,7	;volatile
  3149  0EFE  2F00               	goto	u4371
  3150  0EFF  2F01               	goto	u4370
  3151  0F00                     u4371:	
  3152  0F00  2F5F               	goto	l206
  3153  0F01                     u4370:	
  3154  0F01                     l3179:	
  3155                           
  3156                           ;main.c: 166:            Lcd_Set_Cursor(1,1);
  3157  0F01  01F4               	clrf	Lcd_Set_Cursor@b
  3158  0F02  0AF4               	incf	Lcd_Set_Cursor@b,f
  3159  0F03  3001               	movlw	1
  3160  0F04  160A  118A  256C  120A  158A  	fcall	_Lcd_Set_Cursor
  3161  0F09                     l3181:	
  3162                           
  3163                           ;main.c: 167:            Lcd_Write_String("pS");
  3164  0F09  3032               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  3165  0F0A  00F5               	movwf	Lcd_Write_String@a
  3166  0F0B  3080               	movlw	128
  3167  0F0C  00F6               	movwf	Lcd_Write_String@a+1
  3168  0F0D  160A  118A  24E6  120A  158A  	fcall	_Lcd_Write_String
  3169  0F12                     l3183:	
  3170                           
  3171                           ;main.c: 168:            if(danger==0)nextState=pS3;
  3172  0F12  1683               	bsf	3,5	;RP0=1, select bank1
  3173  0F13  1303               	bcf	3,6	;RP1=0, select bank1
  3174  0F14  0840               	movf	_danger^(0+128),w
  3175  0F15  0441               	iorwf	(_danger+1)^(0+128),w
  3176  0F16  1D03               	btfss	3,2
  3177  0F17  2F19               	goto	u4381
  3178  0F18  2F1A               	goto	u4380
  3179  0F19                     u4381:	
  3180  0F19  2F23               	goto	l3187
  3181  0F1A                     u4380:	
  3182  0F1A                     l3185:	
  3183  0F1A  3002               	movlw	2
  3184  0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  3185  0F1C  1303               	bcf	3,6	;RP1=0, select bank0
  3186  0F1D  00A0               	movwf	??_hotList
  3187  0F1E  0820               	movf	??_hotList,w
  3188  0F1F  1683               	bsf	3,5	;RP0=1, select bank1
  3189  0F20  1303               	bcf	3,6	;RP1=0, select bank1
  3190  0F21  00CE               	movwf	_nextState^(0+128)
  3191  0F22  2FFF               	goto	l233
  3192  0F23                     l3187:	
  3193  0F23  0340               	decf	_danger^(0+128),w
  3194  0F24  0441               	iorwf	(_danger+1)^(0+128),w
  3195  0F25  1903               	btfsc	3,2
  3196  0F26  2F28               	goto	u4391
  3197  0F27  2F29               	goto	u4390
  3198  0F28                     u4391:	
  3199  0F28  2F37               	goto	l3193
  3200  0F29                     u4390:	
  3201  0F29                     l3189:	
  3202  0F29  3002               	movlw	2
  3203  0F2A  0640               	xorwf	_danger^(0+128),w
  3204  0F2B  0441               	iorwf	(_danger+1)^(0+128),w
  3205  0F2C  1903               	btfsc	3,2
  3206  0F2D  2F2F               	goto	u4401
  3207  0F2E  2F30               	goto	u4400
  3208  0F2F                     u4401:	
  3209  0F2F  2F37               	goto	l3193
  3210  0F30                     u4400:	
  3211  0F30                     l3191:	
  3212  0F30  3004               	movlw	4
  3213  0F31  0640               	xorwf	_danger^(0+128),w
  3214  0F32  0441               	iorwf	(_danger+1)^(0+128),w
  3215  0F33  1D03               	btfss	3,2
  3216  0F34  2F36               	goto	u4411
  3217  0F35  2F37               	goto	u4410
  3218  0F36                     u4411:	
  3219  0F36  2F40               	goto	l3195
  3220  0F37                     u4410:	
  3221  0F37                     l3193:	
  3222  0F37  3003               	movlw	3
  3223  0F38  1283               	bcf	3,5	;RP0=0, select bank0
  3224  0F39  1303               	bcf	3,6	;RP1=0, select bank0
  3225  0F3A  00A0               	movwf	??_hotList
  3226  0F3B  0820               	movf	??_hotList,w
  3227  0F3C  1683               	bsf	3,5	;RP0=1, select bank1
  3228  0F3D  1303               	bcf	3,6	;RP1=0, select bank1
  3229  0F3E  00CE               	movwf	_nextState^(0+128)
  3230  0F3F  2FFF               	goto	l233
  3231  0F40                     l3195:	
  3232  0F40  3003               	movlw	3
  3233  0F41  0640               	xorwf	_danger^(0+128),w
  3234  0F42  0441               	iorwf	(_danger+1)^(0+128),w
  3235  0F43  1903               	btfsc	3,2
  3236  0F44  2F46               	goto	u4421
  3237  0F45  2F47               	goto	u4420
  3238  0F46                     u4421:	
  3239  0F46  2F55               	goto	l3201
  3240  0F47                     u4420:	
  3241  0F47                     l3197:	
  3242  0F47  3006               	movlw	6
  3243  0F48  0640               	xorwf	_danger^(0+128),w
  3244  0F49  0441               	iorwf	(_danger+1)^(0+128),w
  3245  0F4A  1903               	btfsc	3,2
  3246  0F4B  2F4D               	goto	u4431
  3247  0F4C  2F4E               	goto	u4430
  3248  0F4D                     u4431:	
  3249  0F4D  2F55               	goto	l3201
  3250  0F4E                     u4430:	
  3251  0F4E                     l3199:	
  3252  0F4E  3005               	movlw	5
  3253  0F4F  0640               	xorwf	_danger^(0+128),w
  3254  0F50  0441               	iorwf	(_danger+1)^(0+128),w
  3255  0F51  1D03               	btfss	3,2
  3256  0F52  2F54               	goto	u4441
  3257  0F53  2F55               	goto	u4440
  3258  0F54                     u4441:	
  3259  0F54  2F5E               	goto	l208
  3260  0F55                     u4440:	
  3261  0F55                     l3201:	
  3262  0F55  3004               	movlw	4
  3263  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  3264  0F57  1303               	bcf	3,6	;RP1=0, select bank0
  3265  0F58  00A0               	movwf	??_hotList
  3266  0F59  0820               	movf	??_hotList,w
  3267  0F5A  1683               	bsf	3,5	;RP0=1, select bank1
  3268  0F5B  1303               	bcf	3,6	;RP1=0, select bank1
  3269  0F5C  00CE               	movwf	_nextState^(0+128)
  3270  0F5D  2FFF               	goto	l233
  3271  0F5E                     l208:	
  3272                           
  3273                           ;main.c: 171:        }else if(RB6==1){
  3274  0F5E  2FFF               	goto	l233
  3275  0F5F                     l206:	
  3276  0F5F  1F06               	btfss	6,6	;volatile
  3277  0F60  2F62               	goto	u4451
  3278  0F61  2F63               	goto	u4450
  3279  0F62                     u4451:	
  3280  0F62  2FC0               	goto	l3227
  3281  0F63                     u4450:	
  3282  0F63                     l3203:	
  3283                           
  3284                           ;main.c: 172:            Lcd_Set_Cursor(1,1);
  3285  0F63  01F4               	clrf	Lcd_Set_Cursor@b
  3286  0F64  0AF4               	incf	Lcd_Set_Cursor@b,f
  3287  0F65  3001               	movlw	1
  3288  0F66  160A  118A  256C  120A  158A  	fcall	_Lcd_Set_Cursor
  3289  0F6B                     l3205:	
  3290                           
  3291                           ;main.c: 173:            Lcd_Write_String("mP");
  3292  0F6B  302F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  3293  0F6C  00F5               	movwf	Lcd_Write_String@a
  3294  0F6D  3080               	movlw	128
  3295  0F6E  00F6               	movwf	Lcd_Write_String@a+1
  3296  0F6F  160A  118A  24E6  120A  158A  	fcall	_Lcd_Write_String
  3297  0F74                     l3207:	
  3298                           
  3299                           ;main.c: 174:            if(danger==0)nextState=mP3;
  3300  0F74  1683               	bsf	3,5	;RP0=1, select bank1
  3301  0F75  1303               	bcf	3,6	;RP1=0, select bank1
  3302  0F76  0840               	movf	_danger^(0+128),w
  3303  0F77  0441               	iorwf	(_danger+1)^(0+128),w
  3304  0F78  1D03               	btfss	3,2
  3305  0F79  2F7B               	goto	u4461
  3306  0F7A  2F7C               	goto	u4460
  3307  0F7B                     u4461:	
  3308  0F7B  2F85               	goto	l3211
  3309  0F7C                     u4460:	
  3310  0F7C                     l3209:	
  3311  0F7C  3005               	movlw	5
  3312  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  3313  0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  3314  0F7F  00A0               	movwf	??_hotList
  3315  0F80  0820               	movf	??_hotList,w
  3316  0F81  1683               	bsf	3,5	;RP0=1, select bank1
  3317  0F82  1303               	bcf	3,6	;RP1=0, select bank1
  3318  0F83  00CE               	movwf	_nextState^(0+128)
  3319  0F84  2FFF               	goto	l233
  3320  0F85                     l3211:	
  3321  0F85  0340               	decf	_danger^(0+128),w
  3322  0F86  0441               	iorwf	(_danger+1)^(0+128),w
  3323  0F87  1903               	btfsc	3,2
  3324  0F88  2F8A               	goto	u4471
  3325  0F89  2F8B               	goto	u4470
  3326  0F8A                     u4471:	
  3327  0F8A  2F99               	goto	l3217
  3328  0F8B                     u4470:	
  3329  0F8B                     l3213:	
  3330  0F8B  3002               	movlw	2
  3331  0F8C  0640               	xorwf	_danger^(0+128),w
  3332  0F8D  0441               	iorwf	(_danger+1)^(0+128),w
  3333  0F8E  1903               	btfsc	3,2
  3334  0F8F  2F91               	goto	u4481
  3335  0F90  2F92               	goto	u4480
  3336  0F91                     u4481:	
  3337  0F91  2F99               	goto	l3217
  3338  0F92                     u4480:	
  3339  0F92                     l3215:	
  3340  0F92  3004               	movlw	4
  3341  0F93  0640               	xorwf	_danger^(0+128),w
  3342  0F94  0441               	iorwf	(_danger+1)^(0+128),w
  3343  0F95  1D03               	btfss	3,2
  3344  0F96  2F98               	goto	u4491
  3345  0F97  2F99               	goto	u4490
  3346  0F98                     u4491:	
  3347  0F98  2FA2               	goto	l3219
  3348  0F99                     u4490:	
  3349  0F99                     l3217:	
  3350  0F99  3006               	movlw	6
  3351  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  3352  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  3353  0F9C  00A0               	movwf	??_hotList
  3354  0F9D  0820               	movf	??_hotList,w
  3355  0F9E  1683               	bsf	3,5	;RP0=1, select bank1
  3356  0F9F  1303               	bcf	3,6	;RP1=0, select bank1
  3357  0FA0  00CE               	movwf	_nextState^(0+128)
  3358  0FA1  2FFF               	goto	l233
  3359  0FA2                     l3219:	
  3360  0FA2  3003               	movlw	3
  3361  0FA3  0640               	xorwf	_danger^(0+128),w
  3362  0FA4  0441               	iorwf	(_danger+1)^(0+128),w
  3363  0FA5  1903               	btfsc	3,2
  3364  0FA6  2FA8               	goto	u4501
  3365  0FA7  2FA9               	goto	u4500
  3366  0FA8                     u4501:	
  3367  0FA8  2FB7               	goto	l3225
  3368  0FA9                     u4500:	
  3369  0FA9                     l3221:	
  3370  0FA9  3006               	movlw	6
  3371  0FAA  0640               	xorwf	_danger^(0+128),w
  3372  0FAB  0441               	iorwf	(_danger+1)^(0+128),w
  3373  0FAC  1903               	btfsc	3,2
  3374  0FAD  2FAF               	goto	u4511
  3375  0FAE  2FB0               	goto	u4510
  3376  0FAF                     u4511:	
  3377  0FAF  2FB7               	goto	l3225
  3378  0FB0                     u4510:	
  3379  0FB0                     l3223:	
  3380  0FB0  3005               	movlw	5
  3381  0FB1  0640               	xorwf	_danger^(0+128),w
  3382  0FB2  0441               	iorwf	(_danger+1)^(0+128),w
  3383  0FB3  1D03               	btfss	3,2
  3384  0FB4  2FB6               	goto	u4521
  3385  0FB5  2FB7               	goto	u4520
  3386  0FB6                     u4521:	
  3387  0FB6  2F5E               	goto	l208
  3388  0FB7                     u4520:	
  3389  0FB7                     l3225:	
  3390  0FB7  3007               	movlw	7
  3391  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  3392  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  3393  0FBA  00A0               	movwf	??_hotList
  3394  0FBB  0820               	movf	??_hotList,w
  3395  0FBC  1683               	bsf	3,5	;RP0=1, select bank1
  3396  0FBD  1303               	bcf	3,6	;RP1=0, select bank1
  3397  0FBE  00CE               	movwf	_nextState^(0+128)
  3398  0FBF  2FFF               	goto	l233
  3399  0FC0                     l3227:	
  3400                           
  3401                           ;main.c: 178:            Lcd_Set_Cursor(1,1);
  3402  0FC0  01F4               	clrf	Lcd_Set_Cursor@b
  3403  0FC1  0AF4               	incf	Lcd_Set_Cursor@b,f
  3404  0FC2  3001               	movlw	1
  3405  0FC3  160A  118A  256C  120A  158A  	fcall	_Lcd_Set_Cursor
  3406  0FC8                     l3229:	
  3407                           
  3408                           ;main.c: 179:            Lcd_Write_String("p ");
  3409  0FC8  302C               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  3410  0FC9  00F5               	movwf	Lcd_Write_String@a
  3411  0FCA  3080               	movlw	128
  3412  0FCB  00F6               	movwf	Lcd_Write_String@a+1
  3413  0FCC  160A  118A  24E6  120A  158A  	fcall	_Lcd_Write_String
  3414  0FD1                     l3231:	
  3415                           
  3416                           ;main.c: 180:            if(aDANGER==0)nextState=aP;
  3417  0FD1  1683               	bsf	3,5	;RP0=1, select bank1
  3418  0FD2  1303               	bcf	3,6	;RP1=0, select bank1
  3419  0FD3  0846               	movf	_aDANGER^(0+128),w
  3420  0FD4  0447               	iorwf	(_aDANGER+1)^(0+128),w
  3421  0FD5  1D03               	btfss	3,2
  3422  0FD6  2FD8               	goto	u4531
  3423  0FD7  2FD9               	goto	u4530
  3424  0FD8                     u4531:	
  3425  0FD8  2FE2               	goto	l3235
  3426  0FD9                     u4530:	
  3427  0FD9                     l3233:	
  3428  0FD9  3008               	movlw	8
  3429  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  3430  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  3431  0FDC  00A0               	movwf	??_hotList
  3432  0FDD  0820               	movf	??_hotList,w
  3433  0FDE  1683               	bsf	3,5	;RP0=1, select bank1
  3434  0FDF  1303               	bcf	3,6	;RP1=0, select bank1
  3435  0FE0  00CE               	movwf	_nextState^(0+128)
  3436  0FE1  2FFF               	goto	l233
  3437  0FE2                     l3235:	
  3438  0FE2  0846               	movf	_aDANGER^(0+128),w
  3439  0FE3  0447               	iorwf	(_aDANGER+1)^(0+128),w
  3440  0FE4  1D03               	btfss	3,2
  3441  0FE5  2FE7               	goto	u4541
  3442  0FE6  2FE8               	goto	u4540
  3443  0FE7                     u4541:	
  3444  0FE7  2FF1               	goto	l3239
  3445  0FE8                     u4540:	
  3446  0FE8                     l3237:	
  3447  0FE8  3009               	movlw	9
  3448  0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  3449  0FEA  1303               	bcf	3,6	;RP1=0, select bank0
  3450  0FEB  00A0               	movwf	??_hotList
  3451  0FEC  0820               	movf	??_hotList,w
  3452  0FED  1683               	bsf	3,5	;RP0=1, select bank1
  3453  0FEE  1303               	bcf	3,6	;RP1=0, select bank1
  3454  0FEF  00CE               	movwf	_nextState^(0+128)
  3455  0FF0  2FFF               	goto	l233
  3456  0FF1                     l3239:	
  3457  0FF1  0842               	movf	_cDANGER^(0+128),w
  3458  0FF2  0443               	iorwf	(_cDANGER+1)^(0+128),w
  3459  0FF3  1D03               	btfss	3,2
  3460  0FF4  2FF6               	goto	u4551
  3461  0FF5  2FF7               	goto	u4550
  3462  0FF6                     u4551:	
  3463  0FF6  2F5E               	goto	l208
  3464  0FF7                     u4550:	
  3465  0FF7                     l3241:	
  3466  0FF7  300A               	movlw	10
  3467  0FF8  1283               	bcf	3,5	;RP0=0, select bank0
  3468  0FF9  1303               	bcf	3,6	;RP1=0, select bank0
  3469  0FFA  00A0               	movwf	??_hotList
  3470  0FFB  0820               	movf	??_hotList,w
  3471  0FFC  1683               	bsf	3,5	;RP0=1, select bank1
  3472  0FFD  1303               	bcf	3,6	;RP1=0, select bank1
  3473  0FFE  00CE               	movwf	_nextState^(0+128)
  3474  0FFF                     l233:	
  3475  0FFF  0008               	return
  3476  1000                     __end_of_hotList:	
  3477                           
  3478                           	psect	text11
  3479  134F                     __ptext11:	
  3480 ;; *************** function _Lcd_Clear *****************
  3481 ;; Defined at:
  3482 ;;		line 36 in file "./lcd.h"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;		None
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;		None
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  2   94[None  ] int 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0, pclath, cstack
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3496 ;;      Params:         0       0       0       0       0
  3497 ;;      Locals:         0       0       0       0       0
  3498 ;;      Temps:          0       0       0       0       0
  3499 ;;      Totals:         0       0       0       0       0
  3500 ;;Total ram usage:        0 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; Hardware stack levels required when called:    2
  3503 ;; This function calls:
  3504 ;;		_Lcd_Cmd
  3505 ;; This function is called by:
  3506 ;;		_main
  3507 ;;		_hotList
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           
  3512                           ;psect for function _Lcd_Clear
  3513  134F                     _Lcd_Clear:	
  3514  134F                     l2691:	
  3515                           ;incstack = 0
  3516                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3517                           
  3518                           
  3519                           ;./lcd.h: 38:  Lcd_Cmd(0);
  3520  134F  3000               	movlw	0
  3521  1350  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  3522                           
  3523                           ;./lcd.h: 39:  Lcd_Cmd(1);
  3524  1355  3001               	movlw	1
  3525  1356  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  3526  135B                     l95:	
  3527  135B  0008               	return
  3528  135C                     __end_of_Lcd_Clear:	
  3529                           
  3530                           	psect	text12
  3531  0B69                     __ptext12:	
  3532 ;; *************** function _currentMeasurement *****************
  3533 ;; Defined at:
  3534 ;;		line 312 in file "main.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;		None
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;		None
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  1    wreg      void 
  3541 ;; Registers used:
  3542 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3548 ;;      Params:         0       0       0       0       0
  3549 ;;      Locals:         0       0       0       0       0
  3550 ;;      Temps:          0       0       1       0       0
  3551 ;;      Totals:         0       0       1       0       0
  3552 ;;Total ram usage:        1 bytes
  3553 ;; Hardware stack levels used:    1
  3554 ;; Hardware stack levels required when called:    2
  3555 ;; This function calls:
  3556 ;;		___fladd
  3557 ;;		___fldiv
  3558 ;;		___flmul
  3559 ;;		___flsub
  3560 ;;		___fltol
  3561 ;;		___xxtofl
  3562 ;; This function is called by:
  3563 ;;		_main
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           
  3568                           ;psect for function _currentMeasurement
  3569  0B69                     _currentMeasurement:	
  3570  0B69                     l3445:	
  3571                           ;incstack = 0
  3572                           ; Regs used in _currentMeasurement: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3573                           
  3574                           
  3575                           ;main.c: 313:     RB2=1;
  3576  0B69  1283               	bcf	3,5	;RP0=0, select bank0
  3577  0B6A  1303               	bcf	3,6	;RP1=0, select bank0
  3578  0B6B  1506               	bsf	6,2	;volatile
  3579  0B6C                     l3447:	
  3580                           
  3581                           ;main.c: 314:     ADCON0bits.CHS=3;
  3582  0B6C  081F               	movf	31,w	;volatile
  3583  0B6D  39C7               	andlw	-57
  3584  0B6E  3818               	iorlw	24
  3585  0B6F  009F               	movwf	31	;volatile
  3586  0B70                     l3449:	
  3587                           
  3588                           ;main.c: 315:     ADCON0bits.GO_nDONE=1;
  3589  0B70  151F               	bsf	31,2	;volatile
  3590  0B71                     l332:	
  3591                           ;main.c: 316:     while(ADCON0bits.GO_nDONE==1);
  3592                           
  3593  0B71  191F               	btfsc	31,2	;volatile
  3594  0B72  2B74               	goto	u4861
  3595  0B73  2B75               	goto	u4860
  3596  0B74                     u4861:	
  3597  0B74  2B71               	goto	l332
  3598  0B75                     u4860:	
  3599  0B75                     l3451:	
  3600                           
  3601                           ;main.c: 317:     current=(ADRESH<<8)+ADRESL;
  3602  0B75  081E               	movf	30,w	;volatile
  3603  0B76  1683               	bsf	3,5	;RP0=1, select bank1
  3604  0B77  1303               	bcf	3,6	;RP1=0, select bank1
  3605  0B78  00D0               	movwf	(_current+1)^(0+128)
  3606  0B79  081E               	movf	30,w	;volatile
  3607  0B7A  00CF               	movwf	_current^(0+128)
  3608                           
  3609                           ;main.c: 318:     if(current>=512)current=((0.005*current)-2.5)/0.066;
  3610  0B7B  3002               	movlw	2
  3611  0B7C  0250               	subwf	(_current+1)^(0+128),w
  3612  0B7D  3000               	movlw	0
  3613  0B7E  1903               	skipnz
  3614  0B7F  024F               	subwf	_current^(0+128),w
  3615  0B80  1C03               	skipc
  3616  0B81  2B83               	goto	u4871
  3617  0B82  2B84               	goto	u4870
  3618  0B83                     u4871:	
  3619  0B83  2BF9               	goto	l3455
  3620  0B84                     u4870:	
  3621  0B84                     l3453:	
  3622  0B84  084F               	movf	_current^(0+128),w
  3623  0B85  00F0               	movwf	___xxtofl@val
  3624  0B86  0850               	movf	(_current+1)^(0+128),w
  3625  0B87  00F1               	movwf	___xxtofl@val+1
  3626  0B88  01F2               	clrf	___xxtofl@val+2
  3627  0B89  01F3               	clrf	___xxtofl@val+3
  3628  0B8A  3000               	movlw	0
  3629  0B8B  120A  158A  203B  120A  158A  	fcall	___xxtofl
  3630  0B90  0873               	movf	?___xxtofl+3,w
  3631  0B91  1283               	bcf	3,5	;RP0=0, select bank0
  3632  0B92  1303               	bcf	3,6	;RP1=0, select bank0
  3633  0B93  00A7               	movwf	___flmul@a+3
  3634  0B94  0872               	movf	?___xxtofl+2,w
  3635  0B95  00A6               	movwf	___flmul@a+2
  3636  0B96  0871               	movf	?___xxtofl+1,w
  3637  0B97  00A5               	movwf	___flmul@a+1
  3638  0B98  0870               	movf	?___xxtofl,w
  3639  0B99  00A4               	movwf	___flmul@a
  3640  0B9A  303B               	movlw	59
  3641  0B9B  00A3               	movwf	___flmul@b+3
  3642  0B9C  30A3               	movlw	163
  3643  0B9D  00A2               	movwf	___flmul@b+2
  3644  0B9E  30D7               	movlw	215
  3645  0B9F  00A1               	movwf	___flmul@b+1
  3646  0BA0  300A               	movlw	10
  3647  0BA1  00A0               	movwf	___flmul@b
  3648  0BA2  120A  118A  2492  120A  158A  	fcall	___flmul
  3649  0BA7  1283               	bcf	3,5	;RP0=0, select bank0
  3650  0BA8  1303               	bcf	3,6	;RP1=0, select bank0
  3651  0BA9  0823               	movf	?___flmul+3,w
  3652  0BAA  00C1               	movwf	___fladd@a+3
  3653  0BAB  0822               	movf	?___flmul+2,w
  3654  0BAC  00C0               	movwf	___fladd@a+2
  3655  0BAD  0821               	movf	?___flmul+1,w
  3656  0BAE  00BF               	movwf	___fladd@a+1
  3657  0BAF  0820               	movf	?___flmul,w
  3658  0BB0  00BE               	movwf	___fladd@a
  3659  0BB1  30C0               	movlw	192
  3660  0BB2  00BD               	movwf	___fladd@b+3
  3661  0BB3  3020               	movlw	32
  3662  0BB4  00BC               	movwf	___fladd@b+2
  3663  0BB5  3000               	movlw	0
  3664  0BB6  00BB               	movwf	___fladd@b+1
  3665  0BB7  3000               	movlw	0
  3666  0BB8  00BA               	movwf	___fladd@b
  3667  0BB9  120A  118A  220A  120A  158A  	fcall	___fladd
  3668  0BBE  1283               	bcf	3,5	;RP0=0, select bank0
  3669  0BBF  1303               	bcf	3,6	;RP1=0, select bank0
  3670  0BC0  083D               	movf	?___fladd+3,w
  3671  0BC1  00DD               	movwf	___fldiv@b+3
  3672  0BC2  083C               	movf	?___fladd+2,w
  3673  0BC3  00DC               	movwf	___fldiv@b+2
  3674  0BC4  083B               	movf	?___fladd+1,w
  3675  0BC5  00DB               	movwf	___fldiv@b+1
  3676  0BC6  083A               	movf	?___fladd,w
  3677  0BC7  00DA               	movwf	___fldiv@b
  3678  0BC8  303D               	movlw	61
  3679  0BC9  00D9               	movwf	___fldiv@a+3
  3680  0BCA  3087               	movlw	135
  3681  0BCB  00D8               	movwf	___fldiv@a+2
  3682  0BCC  302B               	movlw	43
  3683  0BCD  00D7               	movwf	___fldiv@a+1
  3684  0BCE  3002               	movlw	2
  3685  0BCF  00D6               	movwf	___fldiv@a
  3686  0BD0  120A  118A  202D  120A  158A  	fcall	___fldiv
  3687  0BD5  1283               	bcf	3,5	;RP0=0, select bank0
  3688  0BD6  1303               	bcf	3,6	;RP1=0, select bank0
  3689  0BD7  0859               	movf	?___fldiv+3,w
  3690  0BD8  1683               	bsf	3,5	;RP0=1, select bank1
  3691  0BD9  1303               	bcf	3,6	;RP1=0, select bank1
  3692  0BDA  00A3               	movwf	(___fltol@f1+3)^(0+128)
  3693  0BDB  1283               	bcf	3,5	;RP0=0, select bank0
  3694  0BDC  1303               	bcf	3,6	;RP1=0, select bank0
  3695  0BDD  0858               	movf	?___fldiv+2,w
  3696  0BDE  1683               	bsf	3,5	;RP0=1, select bank1
  3697  0BDF  1303               	bcf	3,6	;RP1=0, select bank1
  3698  0BE0  00A2               	movwf	(___fltol@f1+2)^(0+128)
  3699  0BE1  1283               	bcf	3,5	;RP0=0, select bank0
  3700  0BE2  1303               	bcf	3,6	;RP1=0, select bank0
  3701  0BE3  0857               	movf	?___fldiv+1,w
  3702  0BE4  1683               	bsf	3,5	;RP0=1, select bank1
  3703  0BE5  1303               	bcf	3,6	;RP1=0, select bank1
  3704  0BE6  00A1               	movwf	(___fltol@f1+1)^(0+128)
  3705  0BE7  1283               	bcf	3,5	;RP0=0, select bank0
  3706  0BE8  1303               	bcf	3,6	;RP1=0, select bank0
  3707  0BE9  0856               	movf	?___fldiv,w
  3708  0BEA  1683               	bsf	3,5	;RP0=1, select bank1
  3709  0BEB  1303               	bcf	3,6	;RP1=0, select bank1
  3710  0BEC  00A0               	movwf	___fltol@f1^(0+128)
  3711  0BED  160A  118A  26CC  120A  158A  	fcall	___fltol
  3712  0BF2  1683               	bsf	3,5	;RP0=1, select bank1
  3713  0BF3  1303               	bcf	3,6	;RP1=0, select bank1
  3714  0BF4  0821               	movf	(?___fltol+1)^(0+128),w
  3715  0BF5  00D0               	movwf	(_current+1)^(0+128)
  3716  0BF6  0820               	movf	?___fltol^(0+128),w
  3717  0BF7  00CF               	movwf	_current^(0+128)
  3718  0BF8  2C71               	goto	l3457
  3719  0BF9                     l3455:	
  3720  0BF9  3040               	movlw	64
  3721  0BFA  1283               	bcf	3,5	;RP0=0, select bank0
  3722  0BFB  1303               	bcf	3,6	;RP1=0, select bank0
  3723  0BFC  00D5               	movwf	___flsub@b+3
  3724  0BFD  3020               	movlw	32
  3725  0BFE  00D4               	movwf	___flsub@b+2
  3726  0BFF  3000               	movlw	0
  3727  0C00  00D3               	movwf	___flsub@b+1
  3728  0C01  3000               	movlw	0
  3729  0C02  00D2               	movwf	___flsub@b
  3730  0C03  1683               	bsf	3,5	;RP0=1, select bank1
  3731  0C04  1303               	bcf	3,6	;RP1=0, select bank1
  3732  0C05  084F               	movf	_current^(0+128),w
  3733  0C06  00F0               	movwf	___xxtofl@val
  3734  0C07  0850               	movf	(_current+1)^(0+128),w
  3735  0C08  00F1               	movwf	___xxtofl@val+1
  3736  0C09  01F2               	clrf	___xxtofl@val+2
  3737  0C0A  01F3               	clrf	___xxtofl@val+3
  3738  0C0B  3000               	movlw	0
  3739  0C0C  120A  158A  203B  120A  158A  	fcall	___xxtofl
  3740  0C11  0873               	movf	?___xxtofl+3,w
  3741  0C12  1283               	bcf	3,5	;RP0=0, select bank0
  3742  0C13  1303               	bcf	3,6	;RP1=0, select bank0
  3743  0C14  00A7               	movwf	___flmul@a+3
  3744  0C15  0872               	movf	?___xxtofl+2,w
  3745  0C16  00A6               	movwf	___flmul@a+2
  3746  0C17  0871               	movf	?___xxtofl+1,w
  3747  0C18  00A5               	movwf	___flmul@a+1
  3748  0C19  0870               	movf	?___xxtofl,w
  3749  0C1A  00A4               	movwf	___flmul@a
  3750  0C1B  303B               	movlw	59
  3751  0C1C  00A3               	movwf	___flmul@b+3
  3752  0C1D  30A3               	movlw	163
  3753  0C1E  00A2               	movwf	___flmul@b+2
  3754  0C1F  30D7               	movlw	215
  3755  0C20  00A1               	movwf	___flmul@b+1
  3756  0C21  300A               	movlw	10
  3757  0C22  00A0               	movwf	___flmul@b
  3758  0C23  120A  118A  2492  120A  158A  	fcall	___flmul
  3759  0C28  1283               	bcf	3,5	;RP0=0, select bank0
  3760  0C29  1303               	bcf	3,6	;RP1=0, select bank0
  3761  0C2A  0823               	movf	?___flmul+3,w
  3762  0C2B  00D1               	movwf	___flsub@a+3
  3763  0C2C  0822               	movf	?___flmul+2,w
  3764  0C2D  00D0               	movwf	___flsub@a+2
  3765  0C2E  0821               	movf	?___flmul+1,w
  3766  0C2F  00CF               	movwf	___flsub@a+1
  3767  0C30  0820               	movf	?___flmul,w
  3768  0C31  00CE               	movwf	___flsub@a
  3769  0C32  160A  118A  240C  120A  158A  	fcall	___flsub
  3770  0C37  1283               	bcf	3,5	;RP0=0, select bank0
  3771  0C38  1303               	bcf	3,6	;RP1=0, select bank0
  3772  0C39  0851               	movf	?___flsub+3,w
  3773  0C3A  00DD               	movwf	___fldiv@b+3
  3774  0C3B  0850               	movf	?___flsub+2,w
  3775  0C3C  00DC               	movwf	___fldiv@b+2
  3776  0C3D  084F               	movf	?___flsub+1,w
  3777  0C3E  00DB               	movwf	___fldiv@b+1
  3778  0C3F  084E               	movf	?___flsub,w
  3779  0C40  00DA               	movwf	___fldiv@b
  3780  0C41  303D               	movlw	61
  3781  0C42  00D9               	movwf	___fldiv@a+3
  3782  0C43  3087               	movlw	135
  3783  0C44  00D8               	movwf	___fldiv@a+2
  3784  0C45  302B               	movlw	43
  3785  0C46  00D7               	movwf	___fldiv@a+1
  3786  0C47  3002               	movlw	2
  3787  0C48  00D6               	movwf	___fldiv@a
  3788  0C49  120A  118A  202D  120A  158A  	fcall	___fldiv
  3789  0C4E  1283               	bcf	3,5	;RP0=0, select bank0
  3790  0C4F  1303               	bcf	3,6	;RP1=0, select bank0
  3791  0C50  0859               	movf	?___fldiv+3,w
  3792  0C51  1683               	bsf	3,5	;RP0=1, select bank1
  3793  0C52  1303               	bcf	3,6	;RP1=0, select bank1
  3794  0C53  00A3               	movwf	(___fltol@f1+3)^(0+128)
  3795  0C54  1283               	bcf	3,5	;RP0=0, select bank0
  3796  0C55  1303               	bcf	3,6	;RP1=0, select bank0
  3797  0C56  0858               	movf	?___fldiv+2,w
  3798  0C57  1683               	bsf	3,5	;RP0=1, select bank1
  3799  0C58  1303               	bcf	3,6	;RP1=0, select bank1
  3800  0C59  00A2               	movwf	(___fltol@f1+2)^(0+128)
  3801  0C5A  1283               	bcf	3,5	;RP0=0, select bank0
  3802  0C5B  1303               	bcf	3,6	;RP1=0, select bank0
  3803  0C5C  0857               	movf	?___fldiv+1,w
  3804  0C5D  1683               	bsf	3,5	;RP0=1, select bank1
  3805  0C5E  1303               	bcf	3,6	;RP1=0, select bank1
  3806  0C5F  00A1               	movwf	(___fltol@f1+1)^(0+128)
  3807  0C60  1283               	bcf	3,5	;RP0=0, select bank0
  3808  0C61  1303               	bcf	3,6	;RP1=0, select bank0
  3809  0C62  0856               	movf	?___fldiv,w
  3810  0C63  1683               	bsf	3,5	;RP0=1, select bank1
  3811  0C64  1303               	bcf	3,6	;RP1=0, select bank1
  3812  0C65  00A0               	movwf	___fltol@f1^(0+128)
  3813  0C66  160A  118A  26CC  120A  158A  	fcall	___fltol
  3814  0C6B  1683               	bsf	3,5	;RP0=1, select bank1
  3815  0C6C  1303               	bcf	3,6	;RP1=0, select bank1
  3816  0C6D  0821               	movf	(?___fltol+1)^(0+128),w
  3817  0C6E  00D0               	movwf	(_current+1)^(0+128)
  3818  0C6F  0820               	movf	?___fltol^(0+128),w
  3819  0C70  00CF               	movwf	_current^(0+128)
  3820  0C71                     l3457:	
  3821                           
  3822                           ;main.c: 320:     nextState=pC;
  3823  0C71  300D               	movlw	13
  3824  0C72  00AB               	movwf	??_currentMeasurement^(0+128)
  3825  0C73  082B               	movf	??_currentMeasurement^(0+128),w
  3826  0C74  00CE               	movwf	_nextState^(0+128)
  3827  0C75                     l3459:	
  3828                           
  3829                           ;main.c: 321:     _delay((unsigned long)((200)*(20000000/4000000.0)));
  3830  0C75  30C7               	movlw	199
  3831  0C76  1683               	bsf	3,5	;RP0=1, select bank1
  3832  0C77  1303               	bcf	3,6	;RP1=0, select bank1
  3833  0C78  00AB               	movwf	??_currentMeasurement^(0+128)
  3834  0C79                     u5117:	
  3835  0C79  2C7A               	nop2
  3836  0C7A  0BAB               	decfsz	??_currentMeasurement^(0+128),f
  3837  0C7B  2C79               	goto	u5117
  3838  0C7C  2C7D               	nop2
  3839  0C7D                     l3461:	
  3840                           
  3841                           ;main.c: 322:     RB2=0;
  3842  0C7D  1283               	bcf	3,5	;RP0=0, select bank0
  3843  0C7E  1303               	bcf	3,6	;RP1=0, select bank0
  3844  0C7F  1106               	bcf	6,2	;volatile
  3845  0C80                     l337:	
  3846  0C80  0008               	return
  3847  0C81                     __end_of_currentMeasurement:	
  3848                           
  3849                           	psect	text13
  3850  140C                     __ptext13:	
  3851 ;; *************** function ___flsub *****************
  3852 ;; Defined at:
  3853 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;  a               4   46[BANK0 ] void 
  3856 ;;  b               4   50[BANK0 ] void 
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;		None
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  4   46[BANK0 ] void 
  3861 ;; Registers used:
  3862 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3868 ;;      Params:         0       8       0       0       0
  3869 ;;      Locals:         0       0       0       0       0
  3870 ;;      Temps:          0       0       0       0       0
  3871 ;;      Totals:         0       8       0       0       0
  3872 ;;Total ram usage:        8 bytes
  3873 ;; Hardware stack levels used:    1
  3874 ;; Hardware stack levels required when called:    1
  3875 ;; This function calls:
  3876 ;;		___fladd
  3877 ;; This function is called by:
  3878 ;;		_currentMeasurement
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882                           
  3883                           ;psect for function ___flsub
  3884  140C                     ___flsub:	
  3885  140C                     l2777:	
  3886                           ;incstack = 0
  3887                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3888                           
  3889  140C  3080               	movlw	128
  3890  140D  1283               	bcf	3,5	;RP0=0, select bank0
  3891  140E  1303               	bcf	3,6	;RP1=0, select bank0
  3892  140F  06D1               	xorwf	___flsub@a+3,f
  3893  1410                     l2779:	
  3894  1410  0855               	movf	___flsub@b+3,w
  3895  1411  00BD               	movwf	___fladd@b+3
  3896  1412  0854               	movf	___flsub@b+2,w
  3897  1413  00BC               	movwf	___fladd@b+2
  3898  1414  0853               	movf	___flsub@b+1,w
  3899  1415  00BB               	movwf	___fladd@b+1
  3900  1416  0852               	movf	___flsub@b,w
  3901  1417  00BA               	movwf	___fladd@b
  3902  1418  0851               	movf	___flsub@a+3,w
  3903  1419  00C1               	movwf	___fladd@a+3
  3904  141A  0850               	movf	___flsub@a+2,w
  3905  141B  00C0               	movwf	___fladd@a+2
  3906  141C  084F               	movf	___flsub@a+1,w
  3907  141D  00BF               	movwf	___fladd@a+1
  3908  141E  084E               	movf	___flsub@a,w
  3909  141F  00BE               	movwf	___fladd@a
  3910  1420  120A  118A  220A  160A  118A  	fcall	___fladd
  3911  1425  1283               	bcf	3,5	;RP0=0, select bank0
  3912  1426  1303               	bcf	3,6	;RP1=0, select bank0
  3913  1427  083D               	movf	?___fladd+3,w
  3914  1428  00D1               	movwf	?___flsub+3
  3915  1429  083C               	movf	?___fladd+2,w
  3916  142A  00D0               	movwf	?___flsub+2
  3917  142B  083B               	movf	?___fladd+1,w
  3918  142C  00CF               	movwf	?___flsub+1
  3919  142D  083A               	movf	?___fladd,w
  3920  142E  00CE               	movwf	?___flsub
  3921  142F                     l796:	
  3922  142F  0008               	return
  3923  1430                     __end_of___flsub:	
  3924                           
  3925                           	psect	text14
  3926  020A                     __ptext14:	
  3927 ;; *************** function ___fladd *****************
  3928 ;; Defined at:
  3929 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;  b               4   26[BANK0 ] void 
  3932 ;;  a               4   30[BANK0 ] void 
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;  grs             1   45[BANK0 ] unsigned char 
  3935 ;;  bexp            1   44[BANK0 ] unsigned char 
  3936 ;;  aexp            1   43[BANK0 ] unsigned char 
  3937 ;;  signs           1   42[BANK0 ] unsigned char 
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  4   26[BANK0 ] unsigned char 
  3940 ;; Registers used:
  3941 ;;		wreg, status,2, status,0, btemp+1
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3947 ;;      Params:         0       8       0       0       0
  3948 ;;      Locals:         0       4       0       0       0
  3949 ;;      Temps:          0       8       0       0       0
  3950 ;;      Totals:         0      20       0       0       0
  3951 ;;Total ram usage:       20 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; This function calls:
  3954 ;;		Nothing
  3955 ;; This function is called by:
  3956 ;;		_currentMeasurement
  3957 ;;		___flsub
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           
  3962                           ;psect for function ___fladd
  3963  020A                     ___fladd:	
  3964  020A                     l2483:	
  3965                           ;incstack = 0
  3966                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3967                           
  3968  020A  1283               	bcf	3,5	;RP0=0, select bank0
  3969  020B  1303               	bcf	3,6	;RP1=0, select bank0
  3970  020C  083D               	movf	___fladd@b+3,w
  3971  020D  3980               	andlw	128
  3972  020E  00C2               	movwf	??___fladd
  3973  020F  0842               	movf	??___fladd,w
  3974  0210  00CA               	movwf	___fladd@signs
  3975  0211                     l2485:	
  3976  0211  083D               	movf	___fladd@b+3,w
  3977  0212  00C2               	movwf	??___fladd
  3978  0213  0742               	addwf	??___fladd,w
  3979  0214  00C3               	movwf	??___fladd+1
  3980  0215  0843               	movf	??___fladd+1,w
  3981  0216  00CC               	movwf	___fladd@bexp
  3982  0217                     l2487:	
  3983  0217  1FBC               	btfss	___fladd@b+2,7
  3984  0218  2A1A               	goto	u2801
  3985  0219  2A1B               	goto	u2800
  3986  021A                     u2801:	
  3987  021A  2A1C               	goto	l2491
  3988  021B                     u2800:	
  3989  021B                     l2489:	
  3990  021B  144C               	bsf	___fladd@bexp,0
  3991  021C                     l2491:	
  3992  021C  084C               	movf	___fladd@bexp,w
  3993  021D  1903               	btfsc	3,2
  3994  021E  2A20               	goto	u2811
  3995  021F  2A21               	goto	u2810
  3996  0220                     u2811:	
  3997  0220  2A31               	goto	l2501
  3998  0221                     u2810:	
  3999  0221                     l2493:	
  4000  0221  0A4C               	incf	___fladd@bexp,w
  4001  0222  1D03               	btfss	3,2
  4002  0223  2A25               	goto	u2821
  4003  0224  2A26               	goto	u2820
  4004  0225                     u2821:	
  4005  0225  2A2E               	goto	l2497
  4006  0226                     u2820:	
  4007  0226                     l2495:	
  4008  0226  3000               	movlw	0
  4009  0227  00BD               	movwf	___fladd@b+3
  4010  0228  3000               	movlw	0
  4011  0229  00BC               	movwf	___fladd@b+2
  4012  022A  3000               	movlw	0
  4013  022B  00BB               	movwf	___fladd@b+1
  4014  022C  3000               	movlw	0
  4015  022D  00BA               	movwf	___fladd@b
  4016  022E                     l2497:	
  4017  022E  17BC               	bsf	___fladd@b+2,7
  4018  022F                     l2499:	
  4019  022F  01BD               	clrf	___fladd@b+3
  4020  0230  2A39               	goto	l2503
  4021  0231                     l2501:	
  4022  0231  3000               	movlw	0
  4023  0232  00BD               	movwf	___fladd@b+3
  4024  0233  3000               	movlw	0
  4025  0234  00BC               	movwf	___fladd@b+2
  4026  0235  3000               	movlw	0
  4027  0236  00BB               	movwf	___fladd@b+1
  4028  0237  3000               	movlw	0
  4029  0238  00BA               	movwf	___fladd@b
  4030  0239                     l2503:	
  4031  0239  0841               	movf	___fladd@a+3,w
  4032  023A  3980               	andlw	128
  4033  023B  00C2               	movwf	??___fladd
  4034  023C  0842               	movf	??___fladd,w
  4035  023D  00CB               	movwf	___fladd@aexp
  4036  023E                     l2505:	
  4037  023E  084B               	movf	___fladd@aexp,w
  4038  023F  064A               	xorwf	___fladd@signs,w
  4039  0240  1903               	skipnz
  4040  0241  2A43               	goto	u2831
  4041  0242  2A44               	goto	u2830
  4042  0243                     u2831:	
  4043  0243  2A45               	goto	l2509
  4044  0244                     u2830:	
  4045  0244                     l2507:	
  4046  0244  174A               	bsf	___fladd@signs,6
  4047  0245                     l2509:	
  4048  0245  0841               	movf	___fladd@a+3,w
  4049  0246  00C2               	movwf	??___fladd
  4050  0247  0742               	addwf	??___fladd,w
  4051  0248  00C3               	movwf	??___fladd+1
  4052  0249  0843               	movf	??___fladd+1,w
  4053  024A  00CB               	movwf	___fladd@aexp
  4054  024B                     l2511:	
  4055  024B  1FC0               	btfss	___fladd@a+2,7
  4056  024C  2A4E               	goto	u2841
  4057  024D  2A4F               	goto	u2840
  4058  024E                     u2841:	
  4059  024E  2A50               	goto	l2515
  4060  024F                     u2840:	
  4061  024F                     l2513:	
  4062  024F  144B               	bsf	___fladd@aexp,0
  4063  0250                     l2515:	
  4064  0250  084B               	movf	___fladd@aexp,w
  4065  0251  1903               	btfsc	3,2
  4066  0252  2A54               	goto	u2851
  4067  0253  2A55               	goto	u2850
  4068  0254                     u2851:	
  4069  0254  2A65               	goto	l2525
  4070  0255                     u2850:	
  4071  0255                     l2517:	
  4072  0255  0A4B               	incf	___fladd@aexp,w
  4073  0256  1D03               	btfss	3,2
  4074  0257  2A59               	goto	u2861
  4075  0258  2A5A               	goto	u2860
  4076  0259                     u2861:	
  4077  0259  2A62               	goto	l2521
  4078  025A                     u2860:	
  4079  025A                     l2519:	
  4080  025A  3000               	movlw	0
  4081  025B  00C1               	movwf	___fladd@a+3
  4082  025C  3000               	movlw	0
  4083  025D  00C0               	movwf	___fladd@a+2
  4084  025E  3000               	movlw	0
  4085  025F  00BF               	movwf	___fladd@a+1
  4086  0260  3000               	movlw	0
  4087  0261  00BE               	movwf	___fladd@a
  4088  0262                     l2521:	
  4089  0262  17C0               	bsf	___fladd@a+2,7
  4090  0263                     l2523:	
  4091  0263  01C1               	clrf	___fladd@a+3
  4092  0264  2A6D               	goto	l750
  4093  0265                     l2525:	
  4094  0265  3000               	movlw	0
  4095  0266  00C1               	movwf	___fladd@a+3
  4096  0267  3000               	movlw	0
  4097  0268  00C0               	movwf	___fladd@a+2
  4098  0269  3000               	movlw	0
  4099  026A  00BF               	movwf	___fladd@a+1
  4100  026B  3000               	movlw	0
  4101  026C  00BE               	movwf	___fladd@a
  4102  026D                     l750:	
  4103  026D  084C               	movf	___fladd@bexp,w
  4104  026E  024B               	subwf	___fladd@aexp,w
  4105  026F  1803               	skipnc
  4106  0270  2A72               	goto	u2871
  4107  0271  2A73               	goto	u2870
  4108  0272                     u2871:	
  4109  0272  2AB7               	goto	l2561
  4110  0273                     u2870:	
  4111  0273                     l2527:	
  4112  0273  1F4A               	btfss	___fladd@signs,6
  4113  0274  2A76               	goto	u2881
  4114  0275  2A77               	goto	u2880
  4115  0276                     u2881:	
  4116  0276  2A7B               	goto	l2531
  4117  0277                     u2880:	
  4118  0277                     l2529:	
  4119  0277  3080               	movlw	128
  4120  0278  00C2               	movwf	??___fladd
  4121  0279  0842               	movf	??___fladd,w
  4122  027A  06CA               	xorwf	___fladd@signs,f
  4123  027B                     l2531:	
  4124  027B  084C               	movf	___fladd@bexp,w
  4125  027C  00C2               	movwf	??___fladd
  4126  027D  0842               	movf	??___fladd,w
  4127  027E  00CD               	movwf	___fladd@grs
  4128  027F                     l2533:	
  4129  027F  084B               	movf	___fladd@aexp,w
  4130  0280  00C2               	movwf	??___fladd
  4131  0281  0842               	movf	??___fladd,w
  4132  0282  00CC               	movwf	___fladd@bexp
  4133  0283                     l2535:	
  4134  0283  084D               	movf	___fladd@grs,w
  4135  0284  00C2               	movwf	??___fladd
  4136  0285  0842               	movf	??___fladd,w
  4137  0286  00CB               	movwf	___fladd@aexp
  4138  0287                     l2537:	
  4139  0287  083A               	movf	___fladd@b,w
  4140  0288  00C2               	movwf	??___fladd
  4141  0289  0842               	movf	??___fladd,w
  4142  028A  00CD               	movwf	___fladd@grs
  4143  028B                     l2539:	
  4144  028B  083E               	movf	___fladd@a,w
  4145  028C  00C2               	movwf	??___fladd
  4146  028D  0842               	movf	??___fladd,w
  4147  028E  00BA               	movwf	___fladd@b
  4148  028F                     l2541:	
  4149  028F  084D               	movf	___fladd@grs,w
  4150  0290  00C2               	movwf	??___fladd
  4151  0291  0842               	movf	??___fladd,w
  4152  0292  00BE               	movwf	___fladd@a
  4153  0293                     l2543:	
  4154  0293  083B               	movf	___fladd@b+1,w
  4155  0294  00C2               	movwf	??___fladd
  4156  0295  0842               	movf	??___fladd,w
  4157  0296  00CD               	movwf	___fladd@grs
  4158  0297                     l2545:	
  4159  0297  083F               	movf	___fladd@a+1,w
  4160  0298  00C2               	movwf	??___fladd
  4161  0299  0842               	movf	??___fladd,w
  4162  029A  00BB               	movwf	___fladd@b+1
  4163  029B                     l2547:	
  4164  029B  084D               	movf	___fladd@grs,w
  4165  029C  00C2               	movwf	??___fladd
  4166  029D  0842               	movf	??___fladd,w
  4167  029E  00BF               	movwf	___fladd@a+1
  4168  029F                     l2549:	
  4169  029F  083C               	movf	___fladd@b+2,w
  4170  02A0  00C2               	movwf	??___fladd
  4171  02A1  0842               	movf	??___fladd,w
  4172  02A2  00CD               	movwf	___fladd@grs
  4173  02A3                     l2551:	
  4174  02A3  0840               	movf	___fladd@a+2,w
  4175  02A4  00C2               	movwf	??___fladd
  4176  02A5  0842               	movf	??___fladd,w
  4177  02A6  00BC               	movwf	___fladd@b+2
  4178  02A7                     l2553:	
  4179  02A7  084D               	movf	___fladd@grs,w
  4180  02A8  00C2               	movwf	??___fladd
  4181  02A9  0842               	movf	??___fladd,w
  4182  02AA  00C0               	movwf	___fladd@a+2
  4183  02AB                     l2555:	
  4184  02AB  083D               	movf	___fladd@b+3,w
  4185  02AC  00C2               	movwf	??___fladd
  4186  02AD  0842               	movf	??___fladd,w
  4187  02AE  00CD               	movwf	___fladd@grs
  4188  02AF                     l2557:	
  4189  02AF  0841               	movf	___fladd@a+3,w
  4190  02B0  00C2               	movwf	??___fladd
  4191  02B1  0842               	movf	??___fladd,w
  4192  02B2  00BD               	movwf	___fladd@b+3
  4193  02B3                     l2559:	
  4194  02B3  084D               	movf	___fladd@grs,w
  4195  02B4  00C2               	movwf	??___fladd
  4196  02B5  0842               	movf	??___fladd,w
  4197  02B6  00C1               	movwf	___fladd@a+3
  4198  02B7                     l2561:	
  4199  02B7  01CD               	clrf	___fladd@grs
  4200  02B8                     l2563:	
  4201  02B8  084B               	movf	___fladd@aexp,w
  4202  02B9  00C2               	movwf	??___fladd
  4203  02BA  01C3               	clrf	??___fladd+1
  4204  02BB  0843               	movf	??___fladd+1,w
  4205  02BC  00C5               	movwf	??___fladd+3
  4206  02BD  084C               	movf	___fladd@bexp,w
  4207  02BE  0242               	subwf	??___fladd,w
  4208  02BF  00C4               	movwf	??___fladd+2
  4209  02C0  1C03               	skipc
  4210  02C1  03C5               	decf	??___fladd+3,f
  4211  02C2  0845               	movf	??___fladd+3,w
  4212  02C3  3A80               	xorlw	128
  4213  02C4  00FF               	movwf	btemp+1
  4214  02C5  3080               	movlw	128
  4215  02C6  027F               	subwf	btemp+1,w
  4216  02C7  1D03               	skipz
  4217  02C8  2ACB               	goto	u2895
  4218  02C9  301A               	movlw	26
  4219  02CA  0244               	subwf	??___fladd+2,w
  4220  02CB                     u2895:	
  4221  02CB  1C03               	skipc
  4222  02CC  2ACE               	goto	u2891
  4223  02CD  2ACF               	goto	u2890
  4224  02CE                     u2891:	
  4225  02CE  2B0C               	goto	l2579
  4226  02CF                     u2890:	
  4227  02CF                     l2565:	
  4228  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  4229  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  4230  02D1  083D               	movf	___fladd@b+3,w
  4231  02D2  043C               	iorwf	___fladd@b+2,w
  4232  02D3  043B               	iorwf	___fladd@b+1,w
  4233  02D4  043A               	iorwf	___fladd@b,w
  4234  02D5  1D03               	skipz
  4235  02D6  2AD8               	goto	u2901
  4236  02D7  2ADA               	goto	u2900
  4237  02D8                     u2901:	
  4238  02D8  3001               	movlw	1
  4239  02D9  2ADB               	goto	u2910
  4240  02DA                     u2900:	
  4241  02DA  3000               	movlw	0
  4242  02DB                     u2910:	
  4243  02DB  00C2               	movwf	??___fladd
  4244  02DC  0842               	movf	??___fladd,w
  4245  02DD  00CD               	movwf	___fladd@grs
  4246  02DE  3000               	movlw	0
  4247  02DF  00BD               	movwf	___fladd@b+3
  4248  02E0  3000               	movlw	0
  4249  02E1  00BC               	movwf	___fladd@b+2
  4250  02E2  3000               	movlw	0
  4251  02E3  00BB               	movwf	___fladd@b+1
  4252  02E4  3000               	movlw	0
  4253  02E5  00BA               	movwf	___fladd@b
  4254  02E6  084B               	movf	___fladd@aexp,w
  4255  02E7  00C2               	movwf	??___fladd
  4256  02E8  0842               	movf	??___fladd,w
  4257  02E9  00CC               	movwf	___fladd@bexp
  4258  02EA  2B14               	goto	l754
  4259  02EB                     l756:	
  4260  02EB  1C4D               	btfss	___fladd@grs,0
  4261  02EC  2AEE               	goto	u2921
  4262  02ED  2AEF               	goto	u2920
  4263  02EE                     u2921:	
  4264  02EE  2AF8               	goto	l2569
  4265  02EF                     u2920:	
  4266  02EF                     l2567:	
  4267  02EF  084D               	movf	___fladd@grs,w
  4268  02F0  00C2               	movwf	??___fladd
  4269  02F1  1003               	clrc
  4270  02F2  0C42               	rrf	??___fladd,w
  4271  02F3  3801               	iorlw	1
  4272  02F4  00C3               	movwf	??___fladd+1
  4273  02F5  0843               	movf	??___fladd+1,w
  4274  02F6  00CD               	movwf	___fladd@grs
  4275  02F7  2AFA               	goto	l2571
  4276  02F8                     l2569:	
  4277  02F8  1003               	clrc
  4278  02F9  0CCD               	rrf	___fladd@grs,f
  4279  02FA                     l2571:	
  4280  02FA  1C3A               	btfss	___fladd@b,0
  4281  02FB  2AFD               	goto	u2931
  4282  02FC  2AFE               	goto	u2930
  4283  02FD                     u2931:	
  4284  02FD  2AFF               	goto	l2575
  4285  02FE                     u2930:	
  4286  02FE                     l2573:	
  4287  02FE  17CD               	bsf	___fladd@grs,7
  4288  02FF                     l2575:	
  4289  02FF  3001               	movlw	1
  4290  0300  00C2               	movwf	??___fladd
  4291  0301                     u2945:	
  4292  0301  0D3D               	rlf	___fladd@b+3,w
  4293  0302  0CBD               	rrf	___fladd@b+3,f
  4294  0303  0CBC               	rrf	___fladd@b+2,f
  4295  0304  0CBB               	rrf	___fladd@b+1,f
  4296  0305  0CBA               	rrf	___fladd@b,f
  4297  0306  0BC2               	decfsz	??___fladd& (0+127),f
  4298  0307  2B01               	goto	u2945
  4299  0308                     l2577:	
  4300  0308  3001               	movlw	1
  4301  0309  00C2               	movwf	??___fladd
  4302  030A  0842               	movf	??___fladd,w
  4303  030B  07CC               	addwf	___fladd@bexp,f
  4304  030C                     l2579:	
  4305  030C  1283               	bcf	3,5	;RP0=0, select bank0
  4306  030D  1303               	bcf	3,6	;RP1=0, select bank0
  4307  030E  084B               	movf	___fladd@aexp,w
  4308  030F  024C               	subwf	___fladd@bexp,w
  4309  0310  1C03               	skipc
  4310  0311  2B13               	goto	u2951
  4311  0312  2B14               	goto	u2950
  4312  0313                     u2951:	
  4313  0313  2AEB               	goto	l756
  4314  0314                     u2950:	
  4315  0314                     l754:	
  4316  0314  1B4A               	btfsc	___fladd@signs,6
  4317  0315  2B17               	goto	u2961
  4318  0316  2B18               	goto	u2960
  4319  0317                     u2961:	
  4320  0317  2B63               	goto	l2605
  4321  0318                     u2960:	
  4322  0318                     l2581:	
  4323  0318  084C               	movf	___fladd@bexp,w
  4324  0319  1D03               	btfss	3,2
  4325  031A  2B1C               	goto	u2971
  4326  031B  2B1D               	goto	u2970
  4327  031C                     u2971:	
  4328  031C  2B26               	goto	l2587
  4329  031D                     u2970:	
  4330  031D                     l2583:	
  4331  031D  3000               	movlw	0
  4332  031E  00BD               	movwf	?___fladd+3
  4333  031F  3000               	movlw	0
  4334  0320  00BC               	movwf	?___fladd+2
  4335  0321  3000               	movlw	0
  4336  0322  00BB               	movwf	?___fladd+1
  4337  0323  3000               	movlw	0
  4338  0324  00BA               	movwf	?___fladd
  4339  0325  2C91               	goto	l763
  4340  0326                     l2587:	
  4341  0326  083E               	movf	___fladd@a,w
  4342  0327  07BA               	addwf	___fladd@b,f
  4343  0328  083F               	movf	___fladd@a+1,w
  4344  0329  1103               	clrz
  4345  032A  1803               	skipnc
  4346  032B  3E01               	addlw	1
  4347  032C  1903               	skipnz
  4348  032D  2B2F               	goto	u2981
  4349  032E  07BB               	addwf	___fladd@b+1,f
  4350  032F                     u2981:	
  4351  032F  0840               	movf	___fladd@a+2,w
  4352  0330  1103               	clrz
  4353  0331  1803               	skipnc
  4354  0332  3E01               	addlw	1
  4355  0333  1903               	skipnz
  4356  0334  2B36               	goto	u2982
  4357  0335  07BC               	addwf	___fladd@b+2,f
  4358  0336                     u2982:	
  4359  0336  0841               	movf	___fladd@a+3,w
  4360  0337  1103               	clrz
  4361  0338  1803               	skipnc
  4362  0339  3E01               	addlw	1
  4363  033A  1903               	skipnz
  4364  033B  2B3D               	goto	u2983
  4365  033C  07BD               	addwf	___fladd@b+3,f
  4366  033D                     u2983:	
  4367  033D                     l2589:	
  4368  033D  1C3D               	btfss	___fladd@b+3,0
  4369  033E  2B40               	goto	u2991
  4370  033F  2B41               	goto	u2990
  4371  0340                     u2991:	
  4372  0340  2C17               	goto	l2639
  4373  0341                     u2990:	
  4374  0341                     l2591:	
  4375  0341  1C4D               	btfss	___fladd@grs,0
  4376  0342  2B44               	goto	u3001
  4377  0343  2B45               	goto	u3000
  4378  0344                     u3001:	
  4379  0344  2B4E               	goto	l2595
  4380  0345                     u3000:	
  4381  0345                     l2593:	
  4382  0345  084D               	movf	___fladd@grs,w
  4383  0346  00C2               	movwf	??___fladd
  4384  0347  1003               	clrc
  4385  0348  0C42               	rrf	??___fladd,w
  4386  0349  3801               	iorlw	1
  4387  034A  00C3               	movwf	??___fladd+1
  4388  034B  0843               	movf	??___fladd+1,w
  4389  034C  00CD               	movwf	___fladd@grs
  4390  034D  2B50               	goto	l2597
  4391  034E                     l2595:	
  4392  034E  1003               	clrc
  4393  034F  0CCD               	rrf	___fladd@grs,f
  4394  0350                     l2597:	
  4395  0350  1C3A               	btfss	___fladd@b,0
  4396  0351  2B53               	goto	u3011
  4397  0352  2B54               	goto	u3010
  4398  0353                     u3011:	
  4399  0353  2B55               	goto	l2601
  4400  0354                     u3010:	
  4401  0354                     l2599:	
  4402  0354  17CD               	bsf	___fladd@grs,7
  4403  0355                     l2601:	
  4404  0355  3001               	movlw	1
  4405  0356  00C2               	movwf	??___fladd
  4406  0357                     u3025:	
  4407  0357  0D3D               	rlf	___fladd@b+3,w
  4408  0358  0CBD               	rrf	___fladd@b+3,f
  4409  0359  0CBC               	rrf	___fladd@b+2,f
  4410  035A  0CBB               	rrf	___fladd@b+1,f
  4411  035B  0CBA               	rrf	___fladd@b,f
  4412  035C  0BC2               	decfsz	??___fladd& (0+127),f
  4413  035D  2B57               	goto	u3025
  4414  035E                     l2603:	
  4415  035E  3001               	movlw	1
  4416  035F  00C2               	movwf	??___fladd
  4417  0360  0842               	movf	??___fladd,w
  4418  0361  07CC               	addwf	___fladd@bexp,f
  4419  0362  2C17               	goto	l2639
  4420  0363                     l2605:	
  4421  0363  083D               	movf	___fladd@b+3,w
  4422  0364  3A80               	xorlw	128
  4423  0365  00FF               	movwf	btemp+1
  4424  0366  0841               	movf	___fladd@a+3,w
  4425  0367  3A80               	xorlw	128
  4426  0368  027F               	subwf	btemp+1,w
  4427  0369  1D03               	skipz
  4428  036A  2B75               	goto	u3033
  4429  036B  0840               	movf	___fladd@a+2,w
  4430  036C  023C               	subwf	___fladd@b+2,w
  4431  036D  1D03               	skipz
  4432  036E  2B75               	goto	u3033
  4433  036F  083F               	movf	___fladd@a+1,w
  4434  0370  023B               	subwf	___fladd@b+1,w
  4435  0371  1D03               	skipz
  4436  0372  2B75               	goto	u3033
  4437  0373  083E               	movf	___fladd@a,w
  4438  0374  023A               	subwf	___fladd@b,w
  4439  0375                     u3033:	
  4440  0375  1803               	skipnc
  4441  0376  2B78               	goto	u3031
  4442  0377  2B79               	goto	u3030
  4443  0378                     u3031:	
  4444  0378  2BD1               	goto	l2615
  4445  0379                     u3030:	
  4446  0379                     l2607:	
  4447  0379  30FF               	movlw	255
  4448  037A  00C2               	movwf	??___fladd
  4449  037B  30FF               	movlw	255
  4450  037C  00C3               	movwf	??___fladd+1
  4451  037D  30FF               	movlw	255
  4452  037E  00C4               	movwf	??___fladd+2
  4453  037F  30FF               	movlw	255
  4454  0380  00C5               	movwf	??___fladd+3
  4455  0381  083E               	movf	___fladd@a,w
  4456  0382  00C6               	movwf	??___fladd+4
  4457  0383  083F               	movf	___fladd@a+1,w
  4458  0384  00C7               	movwf	??___fladd+5
  4459  0385  0840               	movf	___fladd@a+2,w
  4460  0386  00C8               	movwf	??___fladd+6
  4461  0387  0841               	movf	___fladd@a+3,w
  4462  0388  00C9               	movwf	??___fladd+7
  4463  0389  083A               	movf	___fladd@b,w
  4464  038A  02C6               	subwf	??___fladd+4,f
  4465  038B  083B               	movf	___fladd@b+1,w
  4466  038C  1C03               	skipc
  4467  038D  0F3B               	incfsz	___fladd@b+1,w
  4468  038E  2B90               	goto	u3041
  4469  038F  2B91               	goto	u3042
  4470  0390                     u3041:	
  4471  0390  02C7               	subwf	??___fladd+5,f
  4472  0391                     u3042:	
  4473  0391  083C               	movf	___fladd@b+2,w
  4474  0392  1C03               	skipc
  4475  0393  0F3C               	incfsz	___fladd@b+2,w
  4476  0394  2B96               	goto	u3043
  4477  0395  2B97               	goto	u3044
  4478  0396                     u3043:	
  4479  0396  02C8               	subwf	??___fladd+6,f
  4480  0397                     u3044:	
  4481  0397  083D               	movf	___fladd@b+3,w
  4482  0398  1C03               	skipc
  4483  0399  0F3D               	incfsz	___fladd@b+3,w
  4484  039A  2B9C               	goto	u3045
  4485  039B  2B9D               	goto	u3046
  4486  039C                     u3045:	
  4487  039C  02C9               	subwf	??___fladd+7,f
  4488  039D                     u3046:	
  4489  039D  0846               	movf	??___fladd+4,w
  4490  039E  07C2               	addwf	??___fladd,f
  4491  039F  0847               	movf	??___fladd+5,w
  4492  03A0  1803               	skipnc
  4493  03A1  0F47               	incfsz	??___fladd+5,w
  4494  03A2  2BA4               	goto	u3050
  4495  03A3  2BA5               	goto	u3051
  4496  03A4                     u3050:	
  4497  03A4  07C3               	addwf	??___fladd+1,f
  4498  03A5                     u3051:	
  4499  03A5  0848               	movf	??___fladd+6,w
  4500  03A6  1803               	skipnc
  4501  03A7  0F48               	incfsz	??___fladd+6,w
  4502  03A8  2BAA               	goto	u3052
  4503  03A9  2BAB               	goto	u3053
  4504  03AA                     u3052:	
  4505  03AA  07C4               	addwf	??___fladd+2,f
  4506  03AB                     u3053:	
  4507  03AB  0849               	movf	??___fladd+7,w
  4508  03AC  1803               	skipnc
  4509  03AD  0A49               	incf	??___fladd+7,w
  4510  03AE  07C5               	addwf	??___fladd+3,f
  4511  03AF  0845               	movf	??___fladd+3,w
  4512  03B0  00BD               	movwf	___fladd@b+3
  4513  03B1  0844               	movf	??___fladd+2,w
  4514  03B2  00BC               	movwf	___fladd@b+2
  4515  03B3  0843               	movf	??___fladd+1,w
  4516  03B4  00BB               	movwf	___fladd@b+1
  4517  03B5  0842               	movf	??___fladd,w
  4518  03B6  00BA               	movwf	___fladd@b
  4519  03B7                     l2609:	
  4520  03B7  3080               	movlw	128
  4521  03B8  00C2               	movwf	??___fladd
  4522  03B9  0842               	movf	??___fladd,w
  4523  03BA  06CA               	xorwf	___fladd@signs,f
  4524  03BB  09CD               	comf	___fladd@grs,f
  4525  03BC  0ACD               	incf	___fladd@grs,f
  4526  03BD                     l2611:	
  4527  03BD  084D               	movf	___fladd@grs,w
  4528  03BE  1D03               	btfss	3,2
  4529  03BF  2BC1               	goto	u3061
  4530  03C0  2BC2               	goto	u3060
  4531  03C1                     u3061:	
  4532  03C1  2BDF               	goto	l771
  4533  03C2                     u3060:	
  4534  03C2                     l2613:	
  4535  03C2  3001               	movlw	1
  4536  03C3  07BA               	addwf	___fladd@b,f
  4537  03C4  3000               	movlw	0
  4538  03C5  1803               	skipnc
  4539  03C6  3001               	movlw	1
  4540  03C7  07BB               	addwf	___fladd@b+1,f
  4541  03C8  3000               	movlw	0
  4542  03C9  1803               	skipnc
  4543  03CA  3001               	movlw	1
  4544  03CB  07BC               	addwf	___fladd@b+2,f
  4545  03CC  3000               	movlw	0
  4546  03CD  1803               	skipnc
  4547  03CE  3001               	movlw	1
  4548  03CF  07BD               	addwf	___fladd@b+3,f
  4549  03D0  2BDF               	goto	l771
  4550  03D1                     l2615:	
  4551  03D1  083E               	movf	___fladd@a,w
  4552  03D2  02BA               	subwf	___fladd@b,f
  4553  03D3  083F               	movf	___fladd@a+1,w
  4554  03D4  1C03               	skipc
  4555  03D5  0F3F               	incfsz	___fladd@a+1,w
  4556  03D6  02BB               	subwf	___fladd@b+1,f
  4557  03D7  0840               	movf	___fladd@a+2,w
  4558  03D8  1C03               	skipc
  4559  03D9  0F40               	incfsz	___fladd@a+2,w
  4560  03DA  02BC               	subwf	___fladd@b+2,f
  4561  03DB  0841               	movf	___fladd@a+3,w
  4562  03DC  1C03               	skipc
  4563  03DD  0F41               	incfsz	___fladd@a+3,w
  4564  03DE  02BD               	subwf	___fladd@b+3,f
  4565  03DF                     l771:	
  4566  03DF  083D               	movf	___fladd@b+3,w
  4567  03E0  043C               	iorwf	___fladd@b+2,w
  4568  03E1  043B               	iorwf	___fladd@b+1,w
  4569  03E2  043A               	iorwf	___fladd@b,w
  4570  03E3  1D03               	skipz
  4571  03E4  2BE6               	goto	u3071
  4572  03E5  2BE7               	goto	u3070
  4573  03E6                     u3071:	
  4574  03E6  2C13               	goto	l2637
  4575  03E7                     u3070:	
  4576  03E7                     l2617:	
  4577  03E7  084D               	movf	___fladd@grs,w
  4578  03E8  1D03               	btfss	3,2
  4579  03E9  2BEB               	goto	u3081
  4580  03EA  2BEC               	goto	u3080
  4581  03EB                     u3081:	
  4582  03EB  2C13               	goto	l2637
  4583  03EC                     u3080:	
  4584  03EC                     l2619:	
  4585  03EC  3000               	movlw	0
  4586  03ED  00BD               	movwf	?___fladd+3
  4587  03EE  3000               	movlw	0
  4588  03EF  00BC               	movwf	?___fladd+2
  4589  03F0  3000               	movlw	0
  4590  03F1  00BB               	movwf	?___fladd+1
  4591  03F2  3000               	movlw	0
  4592  03F3  00BA               	movwf	?___fladd
  4593  03F4  2C91               	goto	l763
  4594  03F5                     l2623:	
  4595  03F5  3001               	movlw	1
  4596  03F6  00C2               	movwf	??___fladd
  4597  03F7                     u3095:	
  4598  03F7  1003               	clrc
  4599  03F8  0DBA               	rlf	___fladd@b,f
  4600  03F9  0DBB               	rlf	___fladd@b+1,f
  4601  03FA  0DBC               	rlf	___fladd@b+2,f
  4602  03FB  0DBD               	rlf	___fladd@b+3,f
  4603  03FC  0BC2               	decfsz	??___fladd,f
  4604  03FD  2BF7               	goto	u3095
  4605  03FE                     l2625:	
  4606  03FE  1FCD               	btfss	___fladd@grs,7
  4607  03FF  2C01               	goto	u3101
  4608  0400  2C02               	goto	u3100
  4609  0401                     u3101:	
  4610  0401  2C03               	goto	l775
  4611  0402                     u3100:	
  4612  0402                     l2627:	
  4613  0402  143A               	bsf	___fladd@b,0
  4614  0403                     l775:	
  4615  0403  1C4D               	btfss	___fladd@grs,0
  4616  0404  2C06               	goto	u3111
  4617  0405  2C07               	goto	u3110
  4618  0406                     u3111:	
  4619  0406  2C0A               	goto	l2631
  4620  0407                     u3110:	
  4621  0407                     l2629:	
  4622  0407  1403               	setc
  4623  0408  0DCD               	rlf	___fladd@grs,f
  4624  0409  2C0C               	goto	l2633
  4625  040A                     l2631:	
  4626  040A  1003               	clrc
  4627  040B  0DCD               	rlf	___fladd@grs,f
  4628  040C                     l2633:	
  4629  040C  084C               	movf	___fladd@bexp,w
  4630  040D  1903               	btfsc	3,2
  4631  040E  2C10               	goto	u3121
  4632  040F  2C11               	goto	u3120
  4633  0410                     u3121:	
  4634  0410  2C13               	goto	l2637
  4635  0411                     u3120:	
  4636  0411                     l2635:	
  4637  0411  3001               	movlw	1
  4638  0412  02CC               	subwf	___fladd@bexp,f
  4639  0413                     l2637:	
  4640  0413  1FBC               	btfss	___fladd@b+2,7
  4641  0414  2C16               	goto	u3131
  4642  0415  2C17               	goto	u3130
  4643  0416                     u3131:	
  4644  0416  2BF5               	goto	l2623
  4645  0417                     u3130:	
  4646  0417                     l2639:	
  4647  0417  01CB               	clrf	___fladd@aexp
  4648  0418                     l2641:	
  4649  0418  1FCD               	btfss	___fladd@grs,7
  4650  0419  2C1B               	goto	u3141
  4651  041A  2C1C               	goto	u3140
  4652  041B                     u3141:	
  4653  041B  2C2A               	goto	l2649
  4654  041C                     u3140:	
  4655  041C                     l2643:	
  4656  041C  084D               	movf	___fladd@grs,w
  4657  041D  397F               	andlw	127
  4658  041E  1903               	btfsc	3,2
  4659  041F  2C21               	goto	u3151
  4660  0420  2C22               	goto	u3150
  4661  0421                     u3151:	
  4662  0421  2C25               	goto	l781
  4663  0422                     u3150:	
  4664  0422                     l2645:	
  4665  0422  01CB               	clrf	___fladd@aexp
  4666  0423  0ACB               	incf	___fladd@aexp,f
  4667  0424  2C2A               	goto	l2649
  4668  0425                     l781:	
  4669  0425  1C3A               	btfss	___fladd@b,0
  4670  0426  2C28               	goto	u3161
  4671  0427  2C29               	goto	u3160
  4672  0428                     u3161:	
  4673  0428  2C2A               	goto	l2649
  4674  0429                     u3160:	
  4675  0429  2C22               	goto	l2645
  4676  042A                     l2649:	
  4677  042A  084B               	movf	___fladd@aexp,w
  4678  042B  1903               	btfsc	3,2
  4679  042C  2C2E               	goto	u3171
  4680  042D  2C2F               	goto	u3170
  4681  042E                     u3171:	
  4682  042E  2C63               	goto	l784
  4683  042F                     u3170:	
  4684  042F                     l2651:	
  4685  042F  3001               	movlw	1
  4686  0430  07BA               	addwf	___fladd@b,f
  4687  0431  3000               	movlw	0
  4688  0432  1803               	skipnc
  4689  0433  3001               	movlw	1
  4690  0434  07BB               	addwf	___fladd@b+1,f
  4691  0435  3000               	movlw	0
  4692  0436  1803               	skipnc
  4693  0437  3001               	movlw	1
  4694  0438  07BC               	addwf	___fladd@b+2,f
  4695  0439  3000               	movlw	0
  4696  043A  1803               	skipnc
  4697  043B  3001               	movlw	1
  4698  043C  07BD               	addwf	___fladd@b+3,f
  4699  043D                     l2653:	
  4700  043D  1C3D               	btfss	___fladd@b+3,0
  4701  043E  2C40               	goto	u3181
  4702  043F  2C41               	goto	u3180
  4703  0440                     u3181:	
  4704  0440  2C63               	goto	l784
  4705  0441                     u3180:	
  4706  0441                     l2655:	
  4707  0441  083A               	movf	___fladd@b,w
  4708  0442  00C2               	movwf	??___fladd
  4709  0443  083B               	movf	___fladd@b+1,w
  4710  0444  00C3               	movwf	??___fladd+1
  4711  0445  083C               	movf	___fladd@b+2,w
  4712  0446  00C4               	movwf	??___fladd+2
  4713  0447  083D               	movf	___fladd@b+3,w
  4714  0448  00C5               	movwf	??___fladd+3
  4715  0449  3001               	movlw	1
  4716  044A  00C6               	movwf	??___fladd+4
  4717  044B                     u3195:	
  4718  044B  0D45               	rlf	??___fladd+3,w
  4719  044C  0CC5               	rrf	??___fladd+3,f
  4720  044D  0CC4               	rrf	??___fladd+2,f
  4721  044E  0CC3               	rrf	??___fladd+1,f
  4722  044F  0CC2               	rrf	??___fladd,f
  4723  0450                     u3190:	
  4724  0450  0BC6               	decfsz	??___fladd+4,f
  4725  0451  2C4B               	goto	u3195
  4726  0452  0845               	movf	??___fladd+3,w
  4727  0453  00BD               	movwf	___fladd@b+3
  4728  0454  0844               	movf	??___fladd+2,w
  4729  0455  00BC               	movwf	___fladd@b+2
  4730  0456  0843               	movf	??___fladd+1,w
  4731  0457  00BB               	movwf	___fladd@b+1
  4732  0458  0842               	movf	??___fladd,w
  4733  0459  00BA               	movwf	___fladd@b
  4734  045A  0A4C               	incf	___fladd@bexp,w
  4735  045B  1903               	btfsc	3,2
  4736  045C  2C5E               	goto	u3201
  4737  045D  2C5F               	goto	u3200
  4738  045E                     u3201:	
  4739  045E  2C63               	goto	l784
  4740  045F                     u3200:	
  4741  045F                     l2657:	
  4742  045F  3001               	movlw	1
  4743  0460  00C2               	movwf	??___fladd
  4744  0461  0842               	movf	??___fladd,w
  4745  0462  07CC               	addwf	___fladd@bexp,f
  4746  0463                     l784:	
  4747  0463  0A4C               	incf	___fladd@bexp,w
  4748  0464  1903               	btfsc	3,2
  4749  0465  2C67               	goto	u3211
  4750  0466  2C68               	goto	u3210
  4751  0467                     u3211:	
  4752  0467  2C6D               	goto	l2661
  4753  0468                     u3210:	
  4754  0468                     l2659:	
  4755  0468  084C               	movf	___fladd@bexp,w
  4756  0469  1D03               	btfss	3,2
  4757  046A  2C6C               	goto	u3221
  4758  046B  2C6D               	goto	u3220
  4759  046C                     u3221:	
  4760  046C  2C7B               	goto	l2667
  4761  046D                     u3220:	
  4762  046D                     l2661:	
  4763  046D  3000               	movlw	0
  4764  046E  00BD               	movwf	___fladd@b+3
  4765  046F  3000               	movlw	0
  4766  0470  00BC               	movwf	___fladd@b+2
  4767  0471  3000               	movlw	0
  4768  0472  00BB               	movwf	___fladd@b+1
  4769  0473  3000               	movlw	0
  4770  0474  00BA               	movwf	___fladd@b
  4771  0475                     l2663:	
  4772  0475  084C               	movf	___fladd@bexp,w
  4773  0476  1D03               	btfss	3,2
  4774  0477  2C79               	goto	u3231
  4775  0478  2C7A               	goto	u3230
  4776  0479                     u3231:	
  4777  0479  2C7B               	goto	l2667
  4778  047A                     u3230:	
  4779  047A                     l2665:	
  4780  047A  01CA               	clrf	___fladd@signs
  4781  047B                     l2667:	
  4782  047B  1C4C               	btfss	___fladd@bexp,0
  4783  047C  2C7E               	goto	u3241
  4784  047D  2C7F               	goto	u3240
  4785  047E                     u3241:	
  4786  047E  2C81               	goto	l2671
  4787  047F                     u3240:	
  4788  047F                     l2669:	
  4789  047F  17BC               	bsf	___fladd@b+2,7
  4790  0480  2C85               	goto	l792
  4791  0481                     l2671:	
  4792  0481  307F               	movlw	127
  4793  0482  00C2               	movwf	??___fladd
  4794  0483  0842               	movf	??___fladd,w
  4795  0484  05BC               	andwf	___fladd@b+2,f
  4796  0485                     l792:	
  4797  0485  084C               	movf	___fladd@bexp,w
  4798  0486  00C2               	movwf	??___fladd
  4799  0487  1003               	clrc
  4800  0488  0C42               	rrf	??___fladd,w
  4801  0489  00C3               	movwf	??___fladd+1
  4802  048A  0843               	movf	??___fladd+1,w
  4803  048B  00BD               	movwf	___fladd@b+3
  4804  048C                     l2673:	
  4805  048C  1FCA               	btfss	___fladd@signs,7
  4806  048D  2C8F               	goto	u3251
  4807  048E  2C90               	goto	u3250
  4808  048F                     u3251:	
  4809  048F  2C91               	goto	l793
  4810  0490                     u3250:	
  4811  0490                     l2675:	
  4812  0490  17BD               	bsf	___fladd@b+3,7
  4813  0491                     l793:	
  4814  0491                     l763:	
  4815  0491  0008               	return
  4816  0492                     __end_of___fladd:	
  4817                           
  4818                           	psect	text15
  4819  002D                     __ptext15:	
  4820 ;; *************** function ___fldiv *****************
  4821 ;; Defined at:
  4822 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  4823 ;; Parameters:    Size  Location     Type
  4824 ;;  a               4   54[BANK0 ] unsigned char 
  4825 ;;  b               4   58[BANK0 ] unsigned char 
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;  grs             4   74[BANK0 ] unsigned long 
  4828 ;;  rem             4   67[BANK0 ] unsigned long 
  4829 ;;  new_exp         2   72[BANK0 ] int 
  4830 ;;  aexp            1   79[BANK0 ] unsigned char 
  4831 ;;  bexp            1   78[BANK0 ] unsigned char 
  4832 ;;  sign            1   71[BANK0 ] unsigned char 
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  4   54[BANK0 ] unsigned char 
  4835 ;; Registers used:
  4836 ;;		wreg, status,2, status,0, btemp+1
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4842 ;;      Params:         0       8       0       0       0
  4843 ;;      Locals:         0      13       0       0       0
  4844 ;;      Temps:          0       5       0       0       0
  4845 ;;      Totals:         0      26       0       0       0
  4846 ;;Total ram usage:       26 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; This function calls:
  4849 ;;		Nothing
  4850 ;; This function is called by:
  4851 ;;		_currentMeasurement
  4852 ;; This function uses a non-reentrant model
  4853 ;;
  4854                           
  4855                           
  4856                           ;psect for function ___fldiv
  4857  002D                     ___fldiv:	
  4858  002D                     l2783:	
  4859                           ;incstack = 0
  4860                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4861                           
  4862  002D  1283               	bcf	3,5	;RP0=0, select bank0
  4863  002E  1303               	bcf	3,6	;RP1=0, select bank0
  4864  002F  085D               	movf	___fldiv@b+3,w
  4865  0030  3980               	andlw	128
  4866  0031  00DE               	movwf	??___fldiv
  4867  0032  085E               	movf	??___fldiv,w
  4868  0033  00E7               	movwf	___fldiv@sign
  4869  0034                     l2785:	
  4870  0034  085D               	movf	___fldiv@b+3,w
  4871  0035  00DE               	movwf	??___fldiv
  4872  0036  075E               	addwf	??___fldiv,w
  4873  0037  00DF               	movwf	??___fldiv+1
  4874  0038  085F               	movf	??___fldiv+1,w
  4875  0039  00EE               	movwf	___fldiv@bexp
  4876  003A                     l2787:	
  4877  003A  1FDC               	btfss	___fldiv@b+2,7
  4878  003B  283D               	goto	u3471
  4879  003C  283E               	goto	u3470
  4880  003D                     u3471:	
  4881  003D  283F               	goto	l2791
  4882  003E                     u3470:	
  4883  003E                     l2789:	
  4884  003E  146E               	bsf	___fldiv@bexp,0
  4885  003F                     l2791:	
  4886  003F  086E               	movf	___fldiv@bexp,w
  4887  0040  1903               	btfsc	3,2
  4888  0041  2843               	goto	u3481
  4889  0042  2844               	goto	u3480
  4890  0043                     u3481:	
  4891  0043  2854               	goto	l2801
  4892  0044                     u3480:	
  4893  0044                     l2793:	
  4894  0044  0A6E               	incf	___fldiv@bexp,w
  4895  0045  1D03               	btfss	3,2
  4896  0046  2848               	goto	u3491
  4897  0047  2849               	goto	u3490
  4898  0048                     u3491:	
  4899  0048  2851               	goto	l2797
  4900  0049                     u3490:	
  4901  0049                     l2795:	
  4902  0049  3000               	movlw	0
  4903  004A  00DD               	movwf	___fldiv@b+3
  4904  004B  3000               	movlw	0
  4905  004C  00DC               	movwf	___fldiv@b+2
  4906  004D  3000               	movlw	0
  4907  004E  00DB               	movwf	___fldiv@b+1
  4908  004F  3000               	movlw	0
  4909  0050  00DA               	movwf	___fldiv@b
  4910  0051                     l2797:	
  4911  0051  17DC               	bsf	___fldiv@b+2,7
  4912  0052                     l2799:	
  4913  0052  01DD               	clrf	___fldiv@b+3
  4914  0053  285C               	goto	l2803
  4915  0054                     l2801:	
  4916  0054  3000               	movlw	0
  4917  0055  00DD               	movwf	___fldiv@b+3
  4918  0056  3000               	movlw	0
  4919  0057  00DC               	movwf	___fldiv@b+2
  4920  0058  3000               	movlw	0
  4921  0059  00DB               	movwf	___fldiv@b+1
  4922  005A  3000               	movlw	0
  4923  005B  00DA               	movwf	___fldiv@b
  4924  005C                     l2803:	
  4925  005C  0859               	movf	___fldiv@a+3,w
  4926  005D  3980               	andlw	128
  4927  005E  00DE               	movwf	??___fldiv
  4928  005F  085E               	movf	??___fldiv,w
  4929  0060  06E7               	xorwf	___fldiv@sign,f
  4930  0061                     l2805:	
  4931  0061  0859               	movf	___fldiv@a+3,w
  4932  0062  00DE               	movwf	??___fldiv
  4933  0063  075E               	addwf	??___fldiv,w
  4934  0064  00DF               	movwf	??___fldiv+1
  4935  0065  085F               	movf	??___fldiv+1,w
  4936  0066  00EF               	movwf	___fldiv@aexp
  4937  0067                     l2807:	
  4938  0067  1FD8               	btfss	___fldiv@a+2,7
  4939  0068  286A               	goto	u3501
  4940  0069  286B               	goto	u3500
  4941  006A                     u3501:	
  4942  006A  286C               	goto	l2811
  4943  006B                     u3500:	
  4944  006B                     l2809:	
  4945  006B  146F               	bsf	___fldiv@aexp,0
  4946  006C                     l2811:	
  4947  006C  086F               	movf	___fldiv@aexp,w
  4948  006D  1903               	btfsc	3,2
  4949  006E  2870               	goto	u3511
  4950  006F  2871               	goto	u3510
  4951  0070                     u3511:	
  4952  0070  2881               	goto	l2821
  4953  0071                     u3510:	
  4954  0071                     l2813:	
  4955  0071  0A6F               	incf	___fldiv@aexp,w
  4956  0072  1D03               	btfss	3,2
  4957  0073  2875               	goto	u3521
  4958  0074  2876               	goto	u3520
  4959  0075                     u3521:	
  4960  0075  287E               	goto	l2817
  4961  0076                     u3520:	
  4962  0076                     l2815:	
  4963  0076  3000               	movlw	0
  4964  0077  00D9               	movwf	___fldiv@a+3
  4965  0078  3000               	movlw	0
  4966  0079  00D8               	movwf	___fldiv@a+2
  4967  007A  3000               	movlw	0
  4968  007B  00D7               	movwf	___fldiv@a+1
  4969  007C  3000               	movlw	0
  4970  007D  00D6               	movwf	___fldiv@a
  4971  007E                     l2817:	
  4972  007E  17D8               	bsf	___fldiv@a+2,7
  4973  007F                     l2819:	
  4974  007F  01D9               	clrf	___fldiv@a+3
  4975  0080  2889               	goto	l806
  4976  0081                     l2821:	
  4977  0081  3000               	movlw	0
  4978  0082  00D9               	movwf	___fldiv@a+3
  4979  0083  3000               	movlw	0
  4980  0084  00D8               	movwf	___fldiv@a+2
  4981  0085  3000               	movlw	0
  4982  0086  00D7               	movwf	___fldiv@a+1
  4983  0087  3000               	movlw	0
  4984  0088  00D6               	movwf	___fldiv@a
  4985  0089                     l806:	
  4986  0089  0859               	movf	___fldiv@a+3,w
  4987  008A  0458               	iorwf	___fldiv@a+2,w
  4988  008B  0457               	iorwf	___fldiv@a+1,w
  4989  008C  0456               	iorwf	___fldiv@a,w
  4990  008D  1D03               	skipz
  4991  008E  2890               	goto	u3531
  4992  008F  2891               	goto	u3530
  4993  0090                     u3531:	
  4994  0090  28AA               	goto	l2831
  4995  0091                     u3530:	
  4996  0091                     l2823:	
  4997  0091  3000               	movlw	0
  4998  0092  00DD               	movwf	___fldiv@b+3
  4999  0093  3000               	movlw	0
  5000  0094  00DC               	movwf	___fldiv@b+2
  5001  0095  3000               	movlw	0
  5002  0096  00DB               	movwf	___fldiv@b+1
  5003  0097  3000               	movlw	0
  5004  0098  00DA               	movwf	___fldiv@b
  5005  0099  3080               	movlw	128
  5006  009A  04DC               	iorwf	___fldiv@b+2,f
  5007  009B  307F               	movlw	127
  5008  009C  04DD               	iorwf	___fldiv@b+3,f
  5009  009D                     l2825:	
  5010  009D  0867               	movf	___fldiv@sign,w
  5011  009E  00DE               	movwf	??___fldiv
  5012  009F  085E               	movf	??___fldiv,w
  5013  00A0  04DD               	iorwf	___fldiv@b+3,f
  5014  00A1                     l2827:	
  5015  00A1  085D               	movf	___fldiv@b+3,w
  5016  00A2  00D9               	movwf	?___fldiv+3
  5017  00A3  085C               	movf	___fldiv@b+2,w
  5018  00A4  00D8               	movwf	?___fldiv+2
  5019  00A5  085B               	movf	___fldiv@b+1,w
  5020  00A6  00D7               	movwf	?___fldiv+1
  5021  00A7  085A               	movf	___fldiv@b,w
  5022  00A8  00D6               	movwf	?___fldiv
  5023  00A9  2A09               	goto	l808
  5024  00AA                     l2831:	
  5025  00AA  086E               	movf	___fldiv@bexp,w
  5026  00AB  1D03               	btfss	3,2
  5027  00AC  28AE               	goto	u3541
  5028  00AD  28AF               	goto	u3540
  5029  00AE                     u3541:	
  5030  00AE  28B8               	goto	l2837
  5031  00AF                     u3540:	
  5032  00AF                     l2833:	
  5033  00AF  3000               	movlw	0
  5034  00B0  00D9               	movwf	?___fldiv+3
  5035  00B1  3000               	movlw	0
  5036  00B2  00D8               	movwf	?___fldiv+2
  5037  00B3  3000               	movlw	0
  5038  00B4  00D7               	movwf	?___fldiv+1
  5039  00B5  3000               	movlw	0
  5040  00B6  00D6               	movwf	?___fldiv
  5041  00B7  2A09               	goto	l808
  5042  00B8                     l2837:	
  5043  00B8  086E               	movf	___fldiv@bexp,w
  5044  00B9  00DE               	movwf	??___fldiv
  5045  00BA  01DF               	clrf	??___fldiv+1
  5046  00BB  085F               	movf	??___fldiv+1,w
  5047  00BC  00E1               	movwf	??___fldiv+3
  5048  00BD  086F               	movf	___fldiv@aexp,w
  5049  00BE  025E               	subwf	??___fldiv,w
  5050  00BF  00E0               	movwf	??___fldiv+2
  5051  00C0  1C03               	skipc
  5052  00C1  03E1               	decf	??___fldiv+3,f
  5053  00C2  0860               	movf	??___fldiv+2,w
  5054  00C3  3E7F               	addlw	127
  5055  00C4  00E8               	movwf	___fldiv@new_exp
  5056  00C5  0861               	movf	??___fldiv+3,w
  5057  00C6  1803               	skipnc
  5058  00C7  3E01               	addlw	1
  5059  00C8  3E00               	addlw	0
  5060  00C9  00E9               	movwf	___fldiv@new_exp+1
  5061  00CA                     l2839:	
  5062  00CA  085D               	movf	___fldiv@b+3,w
  5063  00CB  00E6               	movwf	___fldiv@rem+3
  5064  00CC  085C               	movf	___fldiv@b+2,w
  5065  00CD  00E5               	movwf	___fldiv@rem+2
  5066  00CE  085B               	movf	___fldiv@b+1,w
  5067  00CF  00E4               	movwf	___fldiv@rem+1
  5068  00D0  085A               	movf	___fldiv@b,w
  5069  00D1  00E3               	movwf	___fldiv@rem
  5070  00D2                     l2841:	
  5071  00D2  3000               	movlw	0
  5072  00D3  00DD               	movwf	___fldiv@b+3
  5073  00D4  3000               	movlw	0
  5074  00D5  00DC               	movwf	___fldiv@b+2
  5075  00D6  3000               	movlw	0
  5076  00D7  00DB               	movwf	___fldiv@b+1
  5077  00D8  3000               	movlw	0
  5078  00D9  00DA               	movwf	___fldiv@b
  5079  00DA                     l2843:	
  5080  00DA  3000               	movlw	0
  5081  00DB  00ED               	movwf	___fldiv@grs+3
  5082  00DC  3000               	movlw	0
  5083  00DD  00EC               	movwf	___fldiv@grs+2
  5084  00DE  3000               	movlw	0
  5085  00DF  00EB               	movwf	___fldiv@grs+1
  5086  00E0  3000               	movlw	0
  5087  00E1  00EA               	movwf	___fldiv@grs
  5088  00E2                     l2845:	
  5089  00E2  01EF               	clrf	___fldiv@aexp
  5090  00E3  292E               	goto	l2865
  5091  00E4                     l2847:	
  5092  00E4  086F               	movf	___fldiv@aexp,w
  5093  00E5  1903               	btfsc	3,2
  5094  00E6  28E8               	goto	u3551
  5095  00E7  28E9               	goto	u3550
  5096  00E8                     u3551:	
  5097  00E8  2909               	goto	l2857
  5098  00E9                     u3550:	
  5099  00E9                     l2849:	
  5100  00E9  3001               	movlw	1
  5101  00EA  00DE               	movwf	??___fldiv
  5102  00EB                     u3565:	
  5103  00EB  1003               	clrc
  5104  00EC  0DE3               	rlf	___fldiv@rem,f
  5105  00ED  0DE4               	rlf	___fldiv@rem+1,f
  5106  00EE  0DE5               	rlf	___fldiv@rem+2,f
  5107  00EF  0DE6               	rlf	___fldiv@rem+3,f
  5108  00F0  0BDE               	decfsz	??___fldiv,f
  5109  00F1  28EB               	goto	u3565
  5110  00F2  3001               	movlw	1
  5111  00F3  00DE               	movwf	??___fldiv
  5112  00F4                     u3575:	
  5113  00F4  1003               	clrc
  5114  00F5  0DDA               	rlf	___fldiv@b,f
  5115  00F6  0DDB               	rlf	___fldiv@b+1,f
  5116  00F7  0DDC               	rlf	___fldiv@b+2,f
  5117  00F8  0DDD               	rlf	___fldiv@b+3,f
  5118  00F9  0BDE               	decfsz	??___fldiv,f
  5119  00FA  28F4               	goto	u3575
  5120  00FB                     l2851:	
  5121  00FB  1FED               	btfss	___fldiv@grs+3,7
  5122  00FC  28FE               	goto	u3581
  5123  00FD  28FF               	goto	u3580
  5124  00FE                     u3581:	
  5125  00FE  2900               	goto	l2855
  5126  00FF                     u3580:	
  5127  00FF                     l2853:	
  5128  00FF  145A               	bsf	___fldiv@b,0
  5129  0100                     l2855:	
  5130  0100  3001               	movlw	1
  5131  0101  00DE               	movwf	??___fldiv
  5132  0102                     u3595:	
  5133  0102  1003               	clrc
  5134  0103  0DEA               	rlf	___fldiv@grs,f
  5135  0104  0DEB               	rlf	___fldiv@grs+1,f
  5136  0105  0DEC               	rlf	___fldiv@grs+2,f
  5137  0106  0DED               	rlf	___fldiv@grs+3,f
  5138  0107  0BDE               	decfsz	??___fldiv,f
  5139  0108  2902               	goto	u3595
  5140  0109                     l2857:	
  5141  0109  0859               	movf	___fldiv@a+3,w
  5142  010A  0266               	subwf	___fldiv@rem+3,w
  5143  010B  1D03               	skipz
  5144  010C  2917               	goto	u3605
  5145  010D  0858               	movf	___fldiv@a+2,w
  5146  010E  0265               	subwf	___fldiv@rem+2,w
  5147  010F  1D03               	skipz
  5148  0110  2917               	goto	u3605
  5149  0111  0857               	movf	___fldiv@a+1,w
  5150  0112  0264               	subwf	___fldiv@rem+1,w
  5151  0113  1D03               	skipz
  5152  0114  2917               	goto	u3605
  5153  0115  0856               	movf	___fldiv@a,w
  5154  0116  0263               	subwf	___fldiv@rem,w
  5155  0117                     u3605:	
  5156  0117  1C03               	skipc
  5157  0118  291A               	goto	u3601
  5158  0119  291B               	goto	u3600
  5159  011A                     u3601:	
  5160  011A  292A               	goto	l2863
  5161  011B                     u3600:	
  5162  011B                     l2859:	
  5163  011B  176D               	bsf	___fldiv@grs+3,6
  5164  011C                     l2861:	
  5165  011C  0856               	movf	___fldiv@a,w
  5166  011D  02E3               	subwf	___fldiv@rem,f
  5167  011E  0857               	movf	___fldiv@a+1,w
  5168  011F  1C03               	skipc
  5169  0120  0F57               	incfsz	___fldiv@a+1,w
  5170  0121  02E4               	subwf	___fldiv@rem+1,f
  5171  0122  0858               	movf	___fldiv@a+2,w
  5172  0123  1C03               	skipc
  5173  0124  0F58               	incfsz	___fldiv@a+2,w
  5174  0125  02E5               	subwf	___fldiv@rem+2,f
  5175  0126  0859               	movf	___fldiv@a+3,w
  5176  0127  1C03               	skipc
  5177  0128  0F59               	incfsz	___fldiv@a+3,w
  5178  0129  02E6               	subwf	___fldiv@rem+3,f
  5179  012A                     l2863:	
  5180  012A  3001               	movlw	1
  5181  012B  00DE               	movwf	??___fldiv
  5182  012C  085E               	movf	??___fldiv,w
  5183  012D  07EF               	addwf	___fldiv@aexp,f
  5184  012E                     l2865:	
  5185  012E  301A               	movlw	26
  5186  012F  026F               	subwf	___fldiv@aexp,w
  5187  0130  1C03               	skipc
  5188  0131  2933               	goto	u3611
  5189  0132  2934               	goto	u3610
  5190  0133                     u3611:	
  5191  0133  28E4               	goto	l2847
  5192  0134                     u3610:	
  5193  0134                     l2867:	
  5194  0134  0866               	movf	___fldiv@rem+3,w
  5195  0135  0465               	iorwf	___fldiv@rem+2,w
  5196  0136  0464               	iorwf	___fldiv@rem+1,w
  5197  0137  0463               	iorwf	___fldiv@rem,w
  5198  0138  1903               	skipnz
  5199  0139  293B               	goto	u3621
  5200  013A  293C               	goto	u3620
  5201  013B                     u3621:	
  5202  013B  295B               	goto	l2881
  5203  013C                     u3620:	
  5204  013C                     l2869:	
  5205  013C  146A               	bsf	___fldiv@grs,0
  5206  013D  295B               	goto	l2881
  5207  013E                     l2871:	
  5208  013E  3001               	movlw	1
  5209  013F  00DE               	movwf	??___fldiv
  5210  0140                     u3635:	
  5211  0140  1003               	clrc
  5212  0141  0DDA               	rlf	___fldiv@b,f
  5213  0142  0DDB               	rlf	___fldiv@b+1,f
  5214  0143  0DDC               	rlf	___fldiv@b+2,f
  5215  0144  0DDD               	rlf	___fldiv@b+3,f
  5216  0145  0BDE               	decfsz	??___fldiv,f
  5217  0146  2940               	goto	u3635
  5218  0147                     l2873:	
  5219  0147  1FED               	btfss	___fldiv@grs+3,7
  5220  0148  294A               	goto	u3641
  5221  0149  294B               	goto	u3640
  5222  014A                     u3641:	
  5223  014A  294C               	goto	l2877
  5224  014B                     u3640:	
  5225  014B                     l2875:	
  5226  014B  145A               	bsf	___fldiv@b,0
  5227  014C                     l2877:	
  5228  014C  3001               	movlw	1
  5229  014D  00DE               	movwf	??___fldiv
  5230  014E                     u3655:	
  5231  014E  1003               	clrc
  5232  014F  0DEA               	rlf	___fldiv@grs,f
  5233  0150  0DEB               	rlf	___fldiv@grs+1,f
  5234  0151  0DEC               	rlf	___fldiv@grs+2,f
  5235  0152  0DED               	rlf	___fldiv@grs+3,f
  5236  0153  0BDE               	decfsz	??___fldiv,f
  5237  0154  294E               	goto	u3655
  5238  0155                     l2879:	
  5239  0155  30FF               	movlw	255
  5240  0156  07E8               	addwf	___fldiv@new_exp,f
  5241  0157  1803               	skipnc
  5242  0158  0AE9               	incf	___fldiv@new_exp+1,f
  5243  0159  30FF               	movlw	255
  5244  015A  07E9               	addwf	___fldiv@new_exp+1,f
  5245  015B                     l2881:	
  5246  015B  1FDC               	btfss	___fldiv@b+2,7
  5247  015C  295E               	goto	u3661
  5248  015D  295F               	goto	u3660
  5249  015E                     u3661:	
  5250  015E  293E               	goto	l2871
  5251  015F                     u3660:	
  5252  015F                     l2883:	
  5253  015F  01EF               	clrf	___fldiv@aexp
  5254  0160                     l2885:	
  5255  0160  1FED               	btfss	___fldiv@grs+3,7
  5256  0161  2963               	goto	u3671
  5257  0162  2964               	goto	u3670
  5258  0163                     u3671:	
  5259  0163  2980               	goto	l2893
  5260  0164                     u3670:	
  5261  0164                     l2887:	
  5262  0164  30FF               	movlw	255
  5263  0165  056A               	andwf	___fldiv@grs,w
  5264  0166  00DE               	movwf	??___fldiv
  5265  0167  30FF               	movlw	255
  5266  0168  056B               	andwf	___fldiv@grs+1,w
  5267  0169  00DF               	movwf	??___fldiv+1
  5268  016A  30FF               	movlw	255
  5269  016B  056C               	andwf	___fldiv@grs+2,w
  5270  016C  00E0               	movwf	??___fldiv+2
  5271  016D  307F               	movlw	127
  5272  016E  056D               	andwf	___fldiv@grs+3,w
  5273  016F  00E1               	movwf	??___fldiv+3
  5274  0170  0861               	movf	??___fldiv+3,w
  5275  0171  0460               	iorwf	??___fldiv+2,w
  5276  0172  045F               	iorwf	??___fldiv+1,w
  5277  0173  045E               	iorwf	??___fldiv,w
  5278  0174  1903               	skipnz
  5279  0175  2977               	goto	u3681
  5280  0176  2978               	goto	u3680
  5281  0177                     u3681:	
  5282  0177  297B               	goto	l822
  5283  0178                     u3680:	
  5284  0178                     l2889:	
  5285  0178  01EF               	clrf	___fldiv@aexp
  5286  0179  0AEF               	incf	___fldiv@aexp,f
  5287  017A  2980               	goto	l2893
  5288  017B                     l822:	
  5289  017B  1C5A               	btfss	___fldiv@b,0
  5290  017C  297E               	goto	u3691
  5291  017D  297F               	goto	u3690
  5292  017E                     u3691:	
  5293  017E  2980               	goto	l2893
  5294  017F                     u3690:	
  5295  017F  2978               	goto	l2889
  5296  0180                     l2893:	
  5297  0180  086F               	movf	___fldiv@aexp,w
  5298  0181  1903               	btfsc	3,2
  5299  0182  2984               	goto	u3701
  5300  0183  2985               	goto	u3700
  5301  0184                     u3701:	
  5302  0184  29B6               	goto	l2903
  5303  0185                     u3700:	
  5304  0185                     l2895:	
  5305  0185  3001               	movlw	1
  5306  0186  07DA               	addwf	___fldiv@b,f
  5307  0187  3000               	movlw	0
  5308  0188  1803               	skipnc
  5309  0189  3001               	movlw	1
  5310  018A  07DB               	addwf	___fldiv@b+1,f
  5311  018B  3000               	movlw	0
  5312  018C  1803               	skipnc
  5313  018D  3001               	movlw	1
  5314  018E  07DC               	addwf	___fldiv@b+2,f
  5315  018F  3000               	movlw	0
  5316  0190  1803               	skipnc
  5317  0191  3001               	movlw	1
  5318  0192  07DD               	addwf	___fldiv@b+3,f
  5319  0193                     l2897:	
  5320  0193  1C5D               	btfss	___fldiv@b+3,0
  5321  0194  2996               	goto	u3711
  5322  0195  2997               	goto	u3710
  5323  0196                     u3711:	
  5324  0196  29B6               	goto	l2903
  5325  0197                     u3710:	
  5326  0197                     l2899:	
  5327  0197  085A               	movf	___fldiv@b,w
  5328  0198  00DE               	movwf	??___fldiv
  5329  0199  085B               	movf	___fldiv@b+1,w
  5330  019A  00DF               	movwf	??___fldiv+1
  5331  019B  085C               	movf	___fldiv@b+2,w
  5332  019C  00E0               	movwf	??___fldiv+2
  5333  019D  085D               	movf	___fldiv@b+3,w
  5334  019E  00E1               	movwf	??___fldiv+3
  5335  019F  3001               	movlw	1
  5336  01A0  00E2               	movwf	??___fldiv+4
  5337  01A1                     u3725:	
  5338  01A1  0D61               	rlf	??___fldiv+3,w
  5339  01A2  0CE1               	rrf	??___fldiv+3,f
  5340  01A3  0CE0               	rrf	??___fldiv+2,f
  5341  01A4  0CDF               	rrf	??___fldiv+1,f
  5342  01A5  0CDE               	rrf	??___fldiv,f
  5343  01A6                     u3720:	
  5344  01A6  0BE2               	decfsz	??___fldiv+4,f
  5345  01A7  29A1               	goto	u3725
  5346  01A8  0861               	movf	??___fldiv+3,w
  5347  01A9  00DD               	movwf	___fldiv@b+3
  5348  01AA  0860               	movf	??___fldiv+2,w
  5349  01AB  00DC               	movwf	___fldiv@b+2
  5350  01AC  085F               	movf	??___fldiv+1,w
  5351  01AD  00DB               	movwf	___fldiv@b+1
  5352  01AE  085E               	movf	??___fldiv,w
  5353  01AF  00DA               	movwf	___fldiv@b
  5354  01B0                     l2901:	
  5355  01B0  3001               	movlw	1
  5356  01B1  07E8               	addwf	___fldiv@new_exp,f
  5357  01B2  1803               	skipnc
  5358  01B3  0AE9               	incf	___fldiv@new_exp+1,f
  5359  01B4  3000               	movlw	0
  5360  01B5  07E9               	addwf	___fldiv@new_exp+1,f
  5361  01B6                     l2903:	
  5362  01B6  0869               	movf	___fldiv@new_exp+1,w
  5363  01B7  3A80               	xorlw	128
  5364  01B8  00FF               	movwf	btemp+1
  5365  01B9  3080               	movlw	128
  5366  01BA  027F               	subwf	btemp+1,w
  5367  01BB  1D03               	skipz
  5368  01BC  29BF               	goto	u3735
  5369  01BD  30FF               	movlw	255
  5370  01BE  0268               	subwf	___fldiv@new_exp,w
  5371  01BF                     u3735:	
  5372  01BF  1C03               	skipc
  5373  01C0  29C2               	goto	u3731
  5374  01C1  29C3               	goto	u3730
  5375  01C2                     u3731:	
  5376  01C2  29D1               	goto	l2907
  5377  01C3                     u3730:	
  5378  01C3                     l2905:	
  5379  01C3  30FF               	movlw	255
  5380  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  5381  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  5382  01C6  00E8               	movwf	___fldiv@new_exp
  5383  01C7  3000               	movlw	0
  5384  01C8  00E9               	movwf	___fldiv@new_exp+1
  5385  01C9  3000               	movlw	0
  5386  01CA  00DD               	movwf	___fldiv@b+3
  5387  01CB  3000               	movlw	0
  5388  01CC  00DC               	movwf	___fldiv@b+2
  5389  01CD  3000               	movlw	0
  5390  01CE  00DB               	movwf	___fldiv@b+1
  5391  01CF  3000               	movlw	0
  5392  01D0  00DA               	movwf	___fldiv@b
  5393  01D1                     l2907:	
  5394  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  5395  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  5396  01D3  0869               	movf	___fldiv@new_exp+1,w
  5397  01D4  3A80               	xorlw	128
  5398  01D5  00FF               	movwf	btemp+1
  5399  01D6  3080               	movlw	128
  5400  01D7  027F               	subwf	btemp+1,w
  5401  01D8  1D03               	skipz
  5402  01D9  29DC               	goto	u3745
  5403  01DA  3001               	movlw	1
  5404  01DB  0268               	subwf	___fldiv@new_exp,w
  5405  01DC                     u3745:	
  5406  01DC  1803               	skipnc
  5407  01DD  29DF               	goto	u3741
  5408  01DE  29E0               	goto	u3740
  5409  01DF                     u3741:	
  5410  01DF  29ED               	goto	l828
  5411  01E0                     u3740:	
  5412  01E0                     l2909:	
  5413  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  5414  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  5415  01E2  01E8               	clrf	___fldiv@new_exp
  5416  01E3  01E9               	clrf	___fldiv@new_exp+1
  5417  01E4                     l2911:	
  5418  01E4  3000               	movlw	0
  5419  01E5  00DD               	movwf	___fldiv@b+3
  5420  01E6  3000               	movlw	0
  5421  01E7  00DC               	movwf	___fldiv@b+2
  5422  01E8  3000               	movlw	0
  5423  01E9  00DB               	movwf	___fldiv@b+1
  5424  01EA  3000               	movlw	0
  5425  01EB  00DA               	movwf	___fldiv@b
  5426  01EC                     l2913:	
  5427  01EC  01E7               	clrf	___fldiv@sign
  5428  01ED                     l828:	
  5429  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  5430  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  5431  01EF  0868               	movf	___fldiv@new_exp,w
  5432  01F0  00DE               	movwf	??___fldiv
  5433  01F1  085E               	movf	??___fldiv,w
  5434  01F2  00EE               	movwf	___fldiv@bexp
  5435  01F3                     l2915:	
  5436  01F3  1C6E               	btfss	___fldiv@bexp,0
  5437  01F4  29F6               	goto	u3751
  5438  01F5  29F7               	goto	u3750
  5439  01F6                     u3751:	
  5440  01F6  29F9               	goto	l2919
  5441  01F7                     u3750:	
  5442  01F7                     l2917:	
  5443  01F7  17DC               	bsf	___fldiv@b+2,7
  5444  01F8  29FD               	goto	l830
  5445  01F9                     l2919:	
  5446  01F9  307F               	movlw	127
  5447  01FA  00DE               	movwf	??___fldiv
  5448  01FB  085E               	movf	??___fldiv,w
  5449  01FC  05DC               	andwf	___fldiv@b+2,f
  5450  01FD                     l830:	
  5451  01FD  086E               	movf	___fldiv@bexp,w
  5452  01FE  00DE               	movwf	??___fldiv
  5453  01FF  1003               	clrc
  5454  0200  0C5E               	rrf	??___fldiv,w
  5455  0201  00DF               	movwf	??___fldiv+1
  5456  0202  085F               	movf	??___fldiv+1,w
  5457  0203  00DD               	movwf	___fldiv@b+3
  5458  0204  0867               	movf	___fldiv@sign,w
  5459  0205  00DE               	movwf	??___fldiv
  5460  0206  085E               	movf	??___fldiv,w
  5461  0207  04DD               	iorwf	___fldiv@b+3,f
  5462  0208  28A1               	goto	l2827
  5463  0209                     l808:	
  5464  0209  0008               	return
  5465  020A                     __end_of___fldiv:	
  5466                           
  5467                           	psect	text16
  5468  1342                     __ptext16:	
  5469 ;; *************** function _ble *****************
  5470 ;; Defined at:
  5471 ;;		line 337 in file "main.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;		None
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;		None
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  1    wreg      void 
  5478 ;; Registers used:
  5479 ;;		None
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5485 ;;      Params:         0       0       0       0       0
  5486 ;;      Locals:         0       0       0       0       0
  5487 ;;      Temps:          0       0       0       0       0
  5488 ;;      Totals:         0       0       0       0       0
  5489 ;;Total ram usage:        0 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; This function calls:
  5492 ;;		Nothing
  5493 ;; This function is called by:
  5494 ;;		_main
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           
  5499                           ;psect for function _ble
  5500  1342                     _ble:	
  5501  1342                     l3479:	
  5502                           ;incstack = 0
  5503                           ; Regs used in _ble: []
  5504                           
  5505                           
  5506                           ;main.c: 338:     nextState=hL;
  5507  1342  1683               	bsf	3,5	;RP0=1, select bank1
  5508  1343  1303               	bcf	3,6	;RP1=0, select bank1
  5509  1344  01CE               	clrf	_nextState^(0+128)
  5510  1345  0ACE               	incf	_nextState^(0+128),f
  5511  1346                     l343:	
  5512  1346  0008               	return
  5513  1347                     __end_of_ble:	
  5514                           
  5515                           	psect	text17
  5516  13A6                     __ptext17:	
  5517 ;; *************** function _OFF *****************
  5518 ;; Defined at:
  5519 ;;		line 303 in file "main.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;		None
  5522 ;; Auto vars:     Size  Location     Type
  5523 ;;		None
  5524 ;; Return value:  Size  Location     Type
  5525 ;;                  1    wreg      void 
  5526 ;; Registers used:
  5527 ;;		wreg, status,2, status,0, pclath, cstack
  5528 ;; Tracked objects:
  5529 ;;		On entry : 0/0
  5530 ;;		On exit  : 0/0
  5531 ;;		Unchanged: 0/0
  5532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5533 ;;      Params:         0       0       0       0       0
  5534 ;;      Locals:         0       0       0       0       0
  5535 ;;      Temps:          1       0       0       0       0
  5536 ;;      Totals:         1       0       0       0       0
  5537 ;;Total ram usage:        1 bytes
  5538 ;; Hardware stack levels used:    1
  5539 ;; Hardware stack levels required when called:    3
  5540 ;; This function calls:
  5541 ;;		_Lcd_Set_Cursor
  5542 ;;		_Lcd_Write_Char
  5543 ;; This function is called by:
  5544 ;;		_main
  5545 ;; This function uses a non-reentrant model
  5546 ;;
  5547                           
  5548                           
  5549                           ;psect for function _OFF
  5550  13A6                     _OFF:	
  5551  13A6                     l3435:	
  5552                           ;incstack = 0
  5553                           ; Regs used in _OFF: [wreg+status,2+status,0+pclath+cstack]
  5554                           
  5555                           
  5556                           ;main.c: 304:     RB3=0;
  5557  13A6  1283               	bcf	3,5	;RP0=0, select bank0
  5558  13A7  1303               	bcf	3,6	;RP1=0, select bank0
  5559  13A8  1186               	bcf	6,3	;volatile
  5560                           
  5561                           ;main.c: 305:     RB4=0;
  5562  13A9  1206               	bcf	6,4	;volatile
  5563                           
  5564                           ;main.c: 306:     RB5=0;
  5565  13AA  1286               	bcf	6,5	;volatile
  5566  13AB                     l3437:	
  5567                           
  5568                           ;main.c: 307:     voltage=0;
  5569  13AB  1683               	bsf	3,5	;RP0=1, select bank1
  5570  13AC  1303               	bcf	3,6	;RP1=0, select bank1
  5571  13AD  01BE               	clrf	_voltage^(0+128)
  5572  13AE  01BF               	clrf	(_voltage+1)^(0+128)
  5573  13AF                     l3439:	
  5574                           
  5575                           ;main.c: 308:     Lcd_Set_Cursor(1,16);
  5576  13AF  3010               	movlw	16
  5577  13B0  00FB               	movwf	??_OFF
  5578  13B1  087B               	movf	??_OFF,w
  5579  13B2  00F4               	movwf	Lcd_Set_Cursor@b
  5580  13B3  3001               	movlw	1
  5581  13B4  160A  118A  256C  160A  118A  	fcall	_Lcd_Set_Cursor
  5582  13B9                     l3441:	
  5583                           
  5584                           ;main.c: 309:     Lcd_Write_Char('-');
  5585  13B9  302D               	movlw	45
  5586  13BA  160A  118A  24AD  160A  118A  	fcall	_Lcd_Write_Char
  5587  13BF                     l3443:	
  5588                           
  5589                           ;main.c: 310:     nextState=cM;
  5590  13BF  300C               	movlw	12
  5591  13C0  00FB               	movwf	??_OFF
  5592  13C1  087B               	movf	??_OFF,w
  5593  13C2  1683               	bsf	3,5	;RP0=1, select bank1
  5594  13C3  1303               	bcf	3,6	;RP1=0, select bank1
  5595  13C4  00CE               	movwf	_nextState^(0+128)
  5596  13C5                     l329:	
  5597  13C5  0008               	return
  5598  13C6                     __end_of_OFF:	
  5599                           
  5600                           	psect	text18
  5601  166E                     __ptext18:	
  5602 ;; *************** function _Lcd_Init *****************
  5603 ;; Defined at:
  5604 ;;		line 63 in file "./lcd.h"
  5605 ;; Parameters:    Size  Location     Type
  5606 ;;		None
  5607 ;; Auto vars:     Size  Location     Type
  5608 ;;		None
  5609 ;; Return value:  Size  Location     Type
  5610 ;;                  1    wreg      void 
  5611 ;; Registers used:
  5612 ;;		wreg, status,2, status,0, pclath, cstack
  5613 ;; Tracked objects:
  5614 ;;		On entry : 0/0
  5615 ;;		On exit  : 0/0
  5616 ;;		Unchanged: 0/0
  5617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5618 ;;      Params:         0       0       0       0       0
  5619 ;;      Locals:         0       0       0       0       0
  5620 ;;      Temps:          2       0       0       0       0
  5621 ;;      Totals:         2       0       0       0       0
  5622 ;;Total ram usage:        2 bytes
  5623 ;; Hardware stack levels used:    1
  5624 ;; Hardware stack levels required when called:    2
  5625 ;; This function calls:
  5626 ;;		_Lcd_Cmd
  5627 ;;		_Lcd_Port
  5628 ;; This function is called by:
  5629 ;;		_main
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           
  5634                           ;psect for function _Lcd_Init
  5635  166E                     _Lcd_Init:	
  5636  166E                     l3109:	
  5637                           ;incstack = 0
  5638                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  5639                           
  5640                           
  5641                           ;./lcd.h: 65:   Lcd_Port(0x00);
  5642  166E  3000               	movlw	0
  5643  166F  160A  118A  23C6  160A  118A  	fcall	_Lcd_Port
  5644  1674                     l3111:	
  5645                           
  5646                           ;./lcd.h: 66:    _delay((unsigned long)((20)*(20000000/4000.0)));
  5647  1674  3082               	movlw	130
  5648  1675  00F5               	movwf	??_Lcd_Init+1
  5649  1676  30DD               	movlw	221
  5650  1677  00F4               	movwf	??_Lcd_Init
  5651  1678                     u5127:	
  5652  1678  0BF4               	decfsz	??_Lcd_Init,f
  5653  1679  2E78               	goto	u5127
  5654  167A  0BF5               	decfsz	??_Lcd_Init+1,f
  5655  167B  2E78               	goto	u5127
  5656  167C  2E7D               	nop2
  5657  167D                     l3113:	
  5658                           
  5659                           ;./lcd.h: 67:   Lcd_Cmd(0x03);
  5660  167D  3003               	movlw	3
  5661  167E  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  5662                           
  5663                           ;./lcd.h: 68:  _delay((unsigned long)((5)*(20000000/4000.0)));
  5664  1683  3021               	movlw	33
  5665  1684  00F5               	movwf	??_Lcd_Init+1
  5666  1685  3076               	movlw	118
  5667  1686  00F4               	movwf	??_Lcd_Init
  5668  1687                     u5137:	
  5669  1687  0BF4               	decfsz	??_Lcd_Init,f
  5670  1688  2E87               	goto	u5137
  5671  1689  0BF5               	decfsz	??_Lcd_Init+1,f
  5672  168A  2E87               	goto	u5137
  5673  168B  0000               	nop
  5674  168C                     l3115:	
  5675                           
  5676                           ;./lcd.h: 69:   Lcd_Cmd(0x03);
  5677  168C  3003               	movlw	3
  5678  168D  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  5679  1692                     l3117:	
  5680                           
  5681                           ;./lcd.h: 70:  _delay((unsigned long)((11)*(20000000/4000.0)));
  5682  1692  3048               	movlw	72
  5683  1693  00F5               	movwf	??_Lcd_Init+1
  5684  1694  306C               	movlw	108
  5685  1695  00F4               	movwf	??_Lcd_Init
  5686  1696                     u5147:	
  5687  1696  0BF4               	decfsz	??_Lcd_Init,f
  5688  1697  2E96               	goto	u5147
  5689  1698  0BF5               	decfsz	??_Lcd_Init+1,f
  5690  1699  2E96               	goto	u5147
  5691  169A  0000               	nop
  5692                           
  5693                           ;./lcd.h: 71:   Lcd_Cmd(0x03);
  5694  169B  3003               	movlw	3
  5695  169C  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  5696                           
  5697                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  5698  16A1  3002               	movlw	2
  5699  16A2  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  5700                           
  5701                           ;./lcd.h: 74:   Lcd_Cmd(0x02);
  5702  16A7  3002               	movlw	2
  5703  16A8  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  5704                           
  5705                           ;./lcd.h: 75:   Lcd_Cmd(0x08);
  5706  16AD  3008               	movlw	8
  5707  16AE  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  5708                           
  5709                           ;./lcd.h: 76:   Lcd_Cmd(0x00);
  5710  16B3  3000               	movlw	0
  5711  16B4  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  5712                           
  5713                           ;./lcd.h: 77:   Lcd_Cmd(0x0C);
  5714  16B9  300C               	movlw	12
  5715  16BA  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  5716                           
  5717                           ;./lcd.h: 78:   Lcd_Cmd(0x00);
  5718  16BF  3000               	movlw	0
  5719  16C0  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  5720                           
  5721                           ;./lcd.h: 79:   Lcd_Cmd(0x06);
  5722  16C5  3006               	movlw	6
  5723  16C6  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  5724  16CB                     l104:	
  5725  16CB  0008               	return
  5726  16CC                     __end_of_Lcd_Init:	
  5727                           
  5728                           	psect	text19
  5729  1748                     __ptext19:	
  5730 ;; *************** function _LCD *****************
  5731 ;; Defined at:
  5732 ;;		line 324 in file "main.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;		None
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;		None
  5737 ;; Return value:  Size  Location     Type
  5738 ;;                  1    wreg      void 
  5739 ;; Registers used:
  5740 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5741 ;; Tracked objects:
  5742 ;;		On entry : 0/0
  5743 ;;		On exit  : 0/0
  5744 ;;		Unchanged: 0/0
  5745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5746 ;;      Params:         0       0       0       0       0
  5747 ;;      Locals:         0       0       0       0       0
  5748 ;;      Temps:          0       0       1       0       0
  5749 ;;      Totals:         0       0       1       0       0
  5750 ;;Total ram usage:        1 bytes
  5751 ;; Hardware stack levels used:    1
  5752 ;; Hardware stack levels required when called:    4
  5753 ;; This function calls:
  5754 ;;		_Lcd_Set_Cursor
  5755 ;;		_Lcd_Write_Int
  5756 ;;		_Lcd_Write_String
  5757 ;;		___flmul
  5758 ;;		___fltol
  5759 ;;		___wmul
  5760 ;;		___xxtofl
  5761 ;; This function is called by:
  5762 ;;		_main
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766                           
  5767                           ;psect for function _LCD
  5768  1748                     _LCD:	
  5769  1748                     l3463:	
  5770                           ;incstack = 0
  5771                           ; Regs used in _LCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5772                           
  5773                           
  5774                           ;main.c: 325:     Lcd_Set_Cursor(2,1);
  5775  1748  01F4               	clrf	Lcd_Set_Cursor@b
  5776  1749  0AF4               	incf	Lcd_Set_Cursor@b,f
  5777  174A  3002               	movlw	2
  5778  174B  160A  118A  256C  160A  118A  	fcall	_Lcd_Set_Cursor
  5779  1750                     l3465:	
  5780                           
  5781                           ;main.c: 326:     Lcd_Write_Int(0.5*voltage);
  5782  1750  1683               	bsf	3,5	;RP0=1, select bank1
  5783  1751  1303               	bcf	3,6	;RP1=0, select bank1
  5784  1752  083E               	movf	_voltage^(0+128),w
  5785  1753  00F0               	movwf	___xxtofl@val
  5786  1754  083F               	movf	(_voltage+1)^(0+128),w
  5787  1755  00F1               	movwf	___xxtofl@val+1
  5788  1756  01F2               	clrf	___xxtofl@val+2
  5789  1757  01F3               	clrf	___xxtofl@val+3
  5790  1758  3000               	movlw	0
  5791  1759  120A  158A  203B  160A  118A  	fcall	___xxtofl
  5792  175E  0873               	movf	?___xxtofl+3,w
  5793  175F  1283               	bcf	3,5	;RP0=0, select bank0
  5794  1760  1303               	bcf	3,6	;RP1=0, select bank0
  5795  1761  00A7               	movwf	___flmul@a+3
  5796  1762  0872               	movf	?___xxtofl+2,w
  5797  1763  00A6               	movwf	___flmul@a+2
  5798  1764  0871               	movf	?___xxtofl+1,w
  5799  1765  00A5               	movwf	___flmul@a+1
  5800  1766  0870               	movf	?___xxtofl,w
  5801  1767  00A4               	movwf	___flmul@a
  5802  1768  303F               	movlw	63
  5803  1769  00A3               	movwf	___flmul@b+3
  5804  176A  3000               	movlw	0
  5805  176B  00A2               	movwf	___flmul@b+2
  5806  176C  3000               	movlw	0
  5807  176D  00A1               	movwf	___flmul@b+1
  5808  176E  3000               	movlw	0
  5809  176F  00A0               	movwf	___flmul@b
  5810  1770  120A  118A  2492  160A  118A  	fcall	___flmul
  5811  1775  1283               	bcf	3,5	;RP0=0, select bank0
  5812  1776  1303               	bcf	3,6	;RP1=0, select bank0
  5813  1777  0823               	movf	?___flmul+3,w
  5814  1778  1683               	bsf	3,5	;RP0=1, select bank1
  5815  1779  1303               	bcf	3,6	;RP1=0, select bank1
  5816  177A  00A3               	movwf	(___fltol@f1+3)^(0+128)
  5817  177B  1283               	bcf	3,5	;RP0=0, select bank0
  5818  177C  1303               	bcf	3,6	;RP1=0, select bank0
  5819  177D  0822               	movf	?___flmul+2,w
  5820  177E  1683               	bsf	3,5	;RP0=1, select bank1
  5821  177F  1303               	bcf	3,6	;RP1=0, select bank1
  5822  1780  00A2               	movwf	(___fltol@f1+2)^(0+128)
  5823  1781  1283               	bcf	3,5	;RP0=0, select bank0
  5824  1782  1303               	bcf	3,6	;RP1=0, select bank0
  5825  1783  0821               	movf	?___flmul+1,w
  5826  1784  1683               	bsf	3,5	;RP0=1, select bank1
  5827  1785  1303               	bcf	3,6	;RP1=0, select bank1
  5828  1786  00A1               	movwf	(___fltol@f1+1)^(0+128)
  5829  1787  1283               	bcf	3,5	;RP0=0, select bank0
  5830  1788  1303               	bcf	3,6	;RP1=0, select bank0
  5831  1789  0820               	movf	?___flmul,w
  5832  178A  1683               	bsf	3,5	;RP0=1, select bank1
  5833  178B  1303               	bcf	3,6	;RP1=0, select bank1
  5834  178C  00A0               	movwf	___fltol@f1^(0+128)
  5835  178D  160A  118A  26CC  160A  118A  	fcall	___fltol
  5836  1792  1683               	bsf	3,5	;RP0=1, select bank1
  5837  1793  1303               	bcf	3,6	;RP1=0, select bank1
  5838  1794  0821               	movf	(?___fltol+1)^(0+128),w
  5839  1795  00AC               	movwf	(Lcd_Write_Int@num+1)^(0+128)
  5840  1796  0820               	movf	?___fltol^(0+128),w
  5841  1797  00AB               	movwf	Lcd_Write_Int@num^(0+128)
  5842  1798  160A  118A  23E8  160A  118A  	fcall	_Lcd_Write_Int
  5843  179D                     l3467:	
  5844                           
  5845                           ;main.c: 327:     Lcd_Write_String("V");
  5846  179D  303A               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  5847  179E  00F5               	movwf	Lcd_Write_String@a
  5848  179F  3080               	movlw	128
  5849  17A0  00F6               	movwf	Lcd_Write_String@a+1
  5850  17A1  160A  118A  24E6  160A  118A  	fcall	_Lcd_Write_String
  5851                           
  5852                           ;main.c: 328:     Lcd_Set_Cursor(2,7);
  5853  17A6  3007               	movlw	7
  5854  17A7  1683               	bsf	3,5	;RP0=1, select bank1
  5855  17A8  1303               	bcf	3,6	;RP1=0, select bank1
  5856  17A9  00B6               	movwf	??_LCD^(0+128)
  5857  17AA  0836               	movf	??_LCD^(0+128),w
  5858  17AB  00F4               	movwf	Lcd_Set_Cursor@b
  5859  17AC  3002               	movlw	2
  5860  17AD  160A  118A  256C  160A  118A  	fcall	_Lcd_Set_Cursor
  5861  17B2                     l3469:	
  5862                           
  5863                           ;main.c: 329:     Lcd_Write_Int(current);
  5864  17B2  1683               	bsf	3,5	;RP0=1, select bank1
  5865  17B3  1303               	bcf	3,6	;RP1=0, select bank1
  5866  17B4  0850               	movf	(_current+1)^(0+128),w
  5867  17B5  00AC               	movwf	(Lcd_Write_Int@num+1)^(0+128)
  5868  17B6  084F               	movf	_current^(0+128),w
  5869  17B7  00AB               	movwf	Lcd_Write_Int@num^(0+128)
  5870  17B8  160A  118A  23E8  160A  118A  	fcall	_Lcd_Write_Int
  5871  17BD                     l3471:	
  5872                           
  5873                           ;main.c: 330:     Lcd_Write_String("A");
  5874  17BD  3038               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  5875  17BE  00F5               	movwf	Lcd_Write_String@a
  5876  17BF  3080               	movlw	128
  5877  17C0  00F6               	movwf	Lcd_Write_String@a+1
  5878  17C1  160A  118A  24E6  160A  118A  	fcall	_Lcd_Write_String
  5879                           
  5880                           ;main.c: 331:     Lcd_Set_Cursor(2,11);
  5881  17C6  300B               	movlw	11
  5882  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  5883  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  5884  17C9  00B6               	movwf	??_LCD^(0+128)
  5885  17CA  0836               	movf	??_LCD^(0+128),w
  5886  17CB  00F4               	movwf	Lcd_Set_Cursor@b
  5887  17CC  3002               	movlw	2
  5888  17CD  160A  118A  256C  160A  118A  	fcall	_Lcd_Set_Cursor
  5889                           
  5890                           ;main.c: 332:     power=current*voltage;
  5891  17D2  1683               	bsf	3,5	;RP0=1, select bank1
  5892  17D3  1303               	bcf	3,6	;RP1=0, select bank1
  5893  17D4  0850               	movf	(_current+1)^(0+128),w
  5894  17D5  00F1               	movwf	___wmul@multiplier+1
  5895  17D6  084F               	movf	_current^(0+128),w
  5896  17D7  00F0               	movwf	___wmul@multiplier
  5897  17D8  083F               	movf	(_voltage+1)^(0+128),w
  5898  17D9  00F3               	movwf	___wmul@multiplicand+1
  5899  17DA  083E               	movf	_voltage^(0+128),w
  5900  17DB  00F2               	movwf	___wmul@multiplicand
  5901  17DC  160A  118A  2430  160A  118A  	fcall	___wmul
  5902  17E1  0871               	movf	?___wmul+1,w
  5903  17E2  1683               	bsf	3,5	;RP0=1, select bank1
  5904  17E3  1303               	bcf	3,6	;RP1=0, select bank1
  5905  17E4  00BD               	movwf	(_power+1)^(0+128)
  5906  17E5  0870               	movf	?___wmul,w
  5907  17E6  00BC               	movwf	_power^(0+128)
  5908  17E7                     l3473:	
  5909                           
  5910                           ;main.c: 333:     Lcd_Write_Int(power);
  5911  17E7  083D               	movf	(_power+1)^(0+128),w
  5912  17E8  00AC               	movwf	(Lcd_Write_Int@num+1)^(0+128)
  5913  17E9  083C               	movf	_power^(0+128),w
  5914  17EA  00AB               	movwf	Lcd_Write_Int@num^(0+128)
  5915  17EB  160A  118A  23E8  160A  118A  	fcall	_Lcd_Write_Int
  5916  17F0                     l3475:	
  5917                           
  5918                           ;main.c: 334:     Lcd_Write_String("W");
  5919  17F0  303C               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  5920  17F1  00F5               	movwf	Lcd_Write_String@a
  5921  17F2  3080               	movlw	128
  5922  17F3  00F6               	movwf	Lcd_Write_String@a+1
  5923  17F4  160A  118A  24E6  160A  118A  	fcall	_Lcd_Write_String
  5924  17F9                     l3477:	
  5925                           
  5926                           ;main.c: 335:     nextState=BLE;
  5927  17F9  300F               	movlw	15
  5928  17FA  1683               	bsf	3,5	;RP0=1, select bank1
  5929  17FB  1303               	bcf	3,6	;RP1=0, select bank1
  5930  17FC  00B6               	movwf	??_LCD^(0+128)
  5931  17FD  0836               	movf	??_LCD^(0+128),w
  5932  17FE  00CE               	movwf	_nextState^(0+128)
  5933  17FF                     l340:	
  5934  17FF  0008               	return
  5935  1800                     __end_of_LCD:	
  5936                           
  5937                           	psect	text20
  5938  083B                     __ptext20:	
  5939 ;; *************** function ___xxtofl *****************
  5940 ;; Defined at:
  5941 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;  sign            1    wreg     unsigned char 
  5944 ;;  val             4    0[COMMON] long 
  5945 ;; Auto vars:     Size  Location     Type
  5946 ;;  sign            1    8[COMMON] unsigned char 
  5947 ;;  arg             4   10[COMMON] unsigned long 
  5948 ;;  exp             1    9[COMMON] unsigned char 
  5949 ;; Return value:  Size  Location     Type
  5950 ;;                  4    0[COMMON] unsigned char 
  5951 ;; Registers used:
  5952 ;;		wreg, status,2, status,0
  5953 ;; Tracked objects:
  5954 ;;		On entry : 0/0
  5955 ;;		On exit  : 0/0
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5958 ;;      Params:         4       0       0       0       0
  5959 ;;      Locals:         6       0       0       0       0
  5960 ;;      Temps:          4       0       0       0       0
  5961 ;;      Totals:        14       0       0       0       0
  5962 ;;Total ram usage:       14 bytes
  5963 ;; Hardware stack levels used:    1
  5964 ;; This function calls:
  5965 ;;		Nothing
  5966 ;; This function is called by:
  5967 ;;		_currentMeasurement
  5968 ;;		_LCD
  5969 ;; This function uses a non-reentrant model
  5970 ;;
  5971                           
  5972                           
  5973                           ;psect for function ___xxtofl
  5974  083B                     ___xxtofl:	
  5975                           
  5976                           ;incstack = 0
  5977                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5978                           ;___xxtofl@sign stored from wreg
  5979  083B  00F8               	movwf	___xxtofl@sign
  5980  083C                     l3065:	
  5981  083C  0878               	movf	___xxtofl@sign,w
  5982  083D  1903               	btfsc	3,2
  5983  083E  2840               	goto	u4131
  5984  083F  2841               	goto	u4130
  5985  0840                     u4131:	
  5986  0840  2855               	goto	l3071
  5987  0841                     u4130:	
  5988  0841                     l3067:	
  5989  0841  1FF3               	btfss	___xxtofl@val+3,7
  5990  0842  2844               	goto	u4141
  5991  0843  2845               	goto	u4140
  5992  0844                     u4141:	
  5993  0844  2855               	goto	l3071
  5994  0845                     u4140:	
  5995  0845                     l3069:	
  5996  0845  0970               	comf	___xxtofl@val,w
  5997  0846  00FA               	movwf	___xxtofl@arg
  5998  0847  0971               	comf	___xxtofl@val+1,w
  5999  0848  00FB               	movwf	___xxtofl@arg+1
  6000  0849  0972               	comf	___xxtofl@val+2,w
  6001  084A  00FC               	movwf	___xxtofl@arg+2
  6002  084B  0973               	comf	___xxtofl@val+3,w
  6003  084C  00FD               	movwf	___xxtofl@arg+3
  6004  084D  0AFA               	incf	___xxtofl@arg,f
  6005  084E  1903               	skipnz
  6006  084F  0AFB               	incf	___xxtofl@arg+1,f
  6007  0850  1903               	skipnz
  6008  0851  0AFC               	incf	___xxtofl@arg+2,f
  6009  0852  1903               	skipnz
  6010  0853  0AFD               	incf	___xxtofl@arg+3,f
  6011  0854  285D               	goto	l884
  6012  0855                     l3071:	
  6013  0855  0873               	movf	___xxtofl@val+3,w
  6014  0856  00FD               	movwf	___xxtofl@arg+3
  6015  0857  0872               	movf	___xxtofl@val+2,w
  6016  0858  00FC               	movwf	___xxtofl@arg+2
  6017  0859  0871               	movf	___xxtofl@val+1,w
  6018  085A  00FB               	movwf	___xxtofl@arg+1
  6019  085B  0870               	movf	___xxtofl@val,w
  6020  085C  00FA               	movwf	___xxtofl@arg
  6021  085D                     l884:	
  6022  085D  0873               	movf	___xxtofl@val+3,w
  6023  085E  0472               	iorwf	___xxtofl@val+2,w
  6024  085F  0471               	iorwf	___xxtofl@val+1,w
  6025  0860  0470               	iorwf	___xxtofl@val,w
  6026  0861  1D03               	skipz
  6027  0862  2864               	goto	u4151
  6028  0863  2865               	goto	u4150
  6029  0864                     u4151:	
  6030  0864  286E               	goto	l3077
  6031  0865                     u4150:	
  6032  0865                     l3073:	
  6033  0865  3000               	movlw	0
  6034  0866  00F3               	movwf	?___xxtofl+3
  6035  0867  3000               	movlw	0
  6036  0868  00F2               	movwf	?___xxtofl+2
  6037  0869  3000               	movlw	0
  6038  086A  00F1               	movwf	?___xxtofl+1
  6039  086B  3000               	movlw	0
  6040  086C  00F0               	movwf	?___xxtofl
  6041  086D  28F4               	goto	l886
  6042  086E                     l3077:	
  6043  086E  3096               	movlw	150
  6044  086F  00F4               	movwf	??___xxtofl
  6045  0870  0874               	movf	??___xxtofl,w
  6046  0871  00F9               	movwf	___xxtofl@exp
  6047  0872  2880               	goto	l3081
  6048  0873                     l3079:	
  6049  0873  3001               	movlw	1
  6050  0874  00F4               	movwf	??___xxtofl
  6051  0875  0874               	movf	??___xxtofl,w
  6052  0876  07F9               	addwf	___xxtofl@exp,f
  6053  0877  3001               	movlw	1
  6054  0878                     u4165:	
  6055  0878  1003               	clrc
  6056  0879  0CFD               	rrf	___xxtofl@arg+3,f
  6057  087A  0CFC               	rrf	___xxtofl@arg+2,f
  6058  087B  0CFB               	rrf	___xxtofl@arg+1,f
  6059  087C  0CFA               	rrf	___xxtofl@arg,f
  6060  087D  3EFF               	addlw	-1
  6061  087E  1D03               	skipz
  6062  087F  2878               	goto	u4165
  6063  0880                     l3081:	
  6064  0880  30FE               	movlw	254
  6065  0881  057D               	andwf	___xxtofl@arg+3,w
  6066  0882  1D03               	btfss	3,2
  6067  0883  2885               	goto	u4171
  6068  0884  2886               	goto	u4170
  6069  0885                     u4171:	
  6070  0885  2873               	goto	l3079
  6071  0886                     u4170:	
  6072  0886  28A2               	goto	l890
  6073  0887                     l3083:	
  6074  0887  3001               	movlw	1
  6075  0888  00F4               	movwf	??___xxtofl
  6076  0889  0874               	movf	??___xxtofl,w
  6077  088A  07F9               	addwf	___xxtofl@exp,f
  6078  088B                     l3085:	
  6079  088B  3001               	movlw	1
  6080  088C  07FA               	addwf	___xxtofl@arg,f
  6081  088D  3000               	movlw	0
  6082  088E  1803               	skipnc
  6083  088F  3001               	movlw	1
  6084  0890  07FB               	addwf	___xxtofl@arg+1,f
  6085  0891  3000               	movlw	0
  6086  0892  1803               	skipnc
  6087  0893  3001               	movlw	1
  6088  0894  07FC               	addwf	___xxtofl@arg+2,f
  6089  0895  3000               	movlw	0
  6090  0896  1803               	skipnc
  6091  0897  3001               	movlw	1
  6092  0898  07FD               	addwf	___xxtofl@arg+3,f
  6093  0899                     l3087:	
  6094  0899  3001               	movlw	1
  6095  089A                     u4185:	
  6096  089A  1003               	clrc
  6097  089B  0CFD               	rrf	___xxtofl@arg+3,f
  6098  089C  0CFC               	rrf	___xxtofl@arg+2,f
  6099  089D  0CFB               	rrf	___xxtofl@arg+1,f
  6100  089E  0CFA               	rrf	___xxtofl@arg,f
  6101  089F  3EFF               	addlw	-1
  6102  08A0  1D03               	skipz
  6103  08A1  289A               	goto	u4185
  6104  08A2                     l890:	
  6105  08A2  30FF               	movlw	255
  6106  08A3  057D               	andwf	___xxtofl@arg+3,w
  6107  08A4  1D03               	btfss	3,2
  6108  08A5  28A7               	goto	u4191
  6109  08A6  28A8               	goto	u4190
  6110  08A7                     u4191:	
  6111  08A7  2887               	goto	l3083
  6112  08A8                     u4190:	
  6113  08A8  28B4               	goto	l3091
  6114  08A9                     l3089:	
  6115  08A9  3001               	movlw	1
  6116  08AA  02F9               	subwf	___xxtofl@exp,f
  6117  08AB  3001               	movlw	1
  6118  08AC  00F4               	movwf	??___xxtofl
  6119  08AD                     u4205:	
  6120  08AD  1003               	clrc
  6121  08AE  0DFA               	rlf	___xxtofl@arg,f
  6122  08AF  0DFB               	rlf	___xxtofl@arg+1,f
  6123  08B0  0DFC               	rlf	___xxtofl@arg+2,f
  6124  08B1  0DFD               	rlf	___xxtofl@arg+3,f
  6125  08B2  0BF4               	decfsz	??___xxtofl,f
  6126  08B3  28AD               	goto	u4205
  6127  08B4                     l3091:	
  6128  08B4  1BFC               	btfsc	___xxtofl@arg+2,7
  6129  08B5  28B7               	goto	u4211
  6130  08B6  28B8               	goto	u4210
  6131  08B7                     u4211:	
  6132  08B7  28BE               	goto	l897
  6133  08B8                     u4210:	
  6134  08B8                     l3093:	
  6135  08B8  3002               	movlw	2
  6136  08B9  0279               	subwf	___xxtofl@exp,w
  6137  08BA  1803               	skipnc
  6138  08BB  28BD               	goto	u4221
  6139  08BC  28BE               	goto	u4220
  6140  08BD                     u4221:	
  6141  08BD  28A9               	goto	l3089
  6142  08BE                     u4220:	
  6143  08BE                     l897:	
  6144  08BE  1879               	btfsc	___xxtofl@exp,0
  6145  08BF  28C1               	goto	u4231
  6146  08C0  28C2               	goto	u4230
  6147  08C1                     u4231:	
  6148  08C1  28CA               	goto	l898
  6149  08C2                     u4230:	
  6150  08C2                     l3095:	
  6151  08C2  30FF               	movlw	255
  6152  08C3  05FA               	andwf	___xxtofl@arg,f
  6153  08C4  30FF               	movlw	255
  6154  08C5  05FB               	andwf	___xxtofl@arg+1,f
  6155  08C6  307F               	movlw	127
  6156  08C7  05FC               	andwf	___xxtofl@arg+2,f
  6157  08C8  30FF               	movlw	255
  6158  08C9  05FD               	andwf	___xxtofl@arg+3,f
  6159  08CA                     l898:	
  6160  08CA  1003               	clrc
  6161  08CB  0CF9               	rrf	___xxtofl@exp,f
  6162  08CC                     l3097:	
  6163  08CC  0879               	movf	___xxtofl@exp,w
  6164  08CD  00F4               	movwf	??___xxtofl
  6165  08CE  01F5               	clrf	??___xxtofl+1
  6166  08CF  01F6               	clrf	??___xxtofl+2
  6167  08D0  01F7               	clrf	??___xxtofl+3
  6168  08D1  3018               	movlw	24
  6169  08D2                     u4245:	
  6170  08D2  1003               	clrc
  6171  08D3  0DF4               	rlf	??___xxtofl,f
  6172  08D4  0DF5               	rlf	??___xxtofl+1,f
  6173  08D5  0DF6               	rlf	??___xxtofl+2,f
  6174  08D6  0DF7               	rlf	??___xxtofl+3,f
  6175  08D7                     u4240:	
  6176  08D7  3EFF               	addlw	-1
  6177  08D8  1D03               	skipz
  6178  08D9  28D2               	goto	u4245
  6179  08DA  0874               	movf	??___xxtofl,w
  6180  08DB  04FA               	iorwf	___xxtofl@arg,f
  6181  08DC  0875               	movf	??___xxtofl+1,w
  6182  08DD  04FB               	iorwf	___xxtofl@arg+1,f
  6183  08DE  0876               	movf	??___xxtofl+2,w
  6184  08DF  04FC               	iorwf	___xxtofl@arg+2,f
  6185  08E0  0877               	movf	??___xxtofl+3,w
  6186  08E1  04FD               	iorwf	___xxtofl@arg+3,f
  6187  08E2                     l3099:	
  6188  08E2  0878               	movf	___xxtofl@sign,w
  6189  08E3  1903               	btfsc	3,2
  6190  08E4  28E6               	goto	u4251
  6191  08E5  28E7               	goto	u4250
  6192  08E6                     u4251:	
  6193  08E6  28EC               	goto	l3105
  6194  08E7                     u4250:	
  6195  08E7                     l3101:	
  6196  08E7  1FF3               	btfss	___xxtofl@val+3,7
  6197  08E8  28EA               	goto	u4261
  6198  08E9  28EB               	goto	u4260
  6199  08EA                     u4261:	
  6200  08EA  28EC               	goto	l3105
  6201  08EB                     u4260:	
  6202  08EB                     l3103:	
  6203  08EB  17FD               	bsf	___xxtofl@arg+3,7
  6204  08EC                     l3105:	
  6205  08EC  087D               	movf	___xxtofl@arg+3,w
  6206  08ED  00F3               	movwf	?___xxtofl+3
  6207  08EE  087C               	movf	___xxtofl@arg+2,w
  6208  08EF  00F2               	movwf	?___xxtofl+2
  6209  08F0  087B               	movf	___xxtofl@arg+1,w
  6210  08F1  00F1               	movwf	?___xxtofl+1
  6211  08F2  087A               	movf	___xxtofl@arg,w
  6212  08F3  00F0               	movwf	?___xxtofl
  6213  08F4                     l886:	
  6214  08F4  0008               	return
  6215  08F5                     __end_of___xxtofl:	
  6216                           
  6217                           	psect	text21
  6218  1430                     __ptext21:	
  6219 ;; *************** function ___wmul *****************
  6220 ;; Defined at:
  6221 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  6222 ;; Parameters:    Size  Location     Type
  6223 ;;  multiplier      2    0[COMMON] unsigned int 
  6224 ;;  multiplicand    2    2[COMMON] unsigned int 
  6225 ;; Auto vars:     Size  Location     Type
  6226 ;;  product         2    4[COMMON] unsigned int 
  6227 ;; Return value:  Size  Location     Type
  6228 ;;                  2    0[COMMON] unsigned int 
  6229 ;; Registers used:
  6230 ;;		wreg, status,2, status,0
  6231 ;; Tracked objects:
  6232 ;;		On entry : 0/0
  6233 ;;		On exit  : 0/0
  6234 ;;		Unchanged: 0/0
  6235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6236 ;;      Params:         4       0       0       0       0
  6237 ;;      Locals:         2       0       0       0       0
  6238 ;;      Temps:          0       0       0       0       0
  6239 ;;      Totals:         6       0       0       0       0
  6240 ;;Total ram usage:        6 bytes
  6241 ;; Hardware stack levels used:    1
  6242 ;; This function calls:
  6243 ;;		Nothing
  6244 ;; This function is called by:
  6245 ;;		_LCD
  6246 ;; This function uses a non-reentrant model
  6247 ;;
  6248                           
  6249                           
  6250                           ;psect for function ___wmul
  6251  1430                     ___wmul:	
  6252  1430                     l2727:	
  6253                           ;incstack = 0
  6254                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6255                           
  6256  1430  01F4               	clrf	___wmul@product
  6257  1431  01F5               	clrf	___wmul@product+1
  6258  1432                     l2729:	
  6259  1432  1C70               	btfss	___wmul@multiplier,0
  6260  1433  2C35               	goto	u3331
  6261  1434  2C36               	goto	u3330
  6262  1435                     u3331:	
  6263  1435  2C3C               	goto	l457
  6264  1436                     u3330:	
  6265  1436                     l2731:	
  6266  1436  0872               	movf	___wmul@multiplicand,w
  6267  1437  07F4               	addwf	___wmul@product,f
  6268  1438  1803               	skipnc
  6269  1439  0AF5               	incf	___wmul@product+1,f
  6270  143A  0873               	movf	___wmul@multiplicand+1,w
  6271  143B  07F5               	addwf	___wmul@product+1,f
  6272  143C                     l457:	
  6273  143C  3001               	movlw	1
  6274  143D                     u3345:	
  6275  143D  1003               	clrc
  6276  143E  0DF2               	rlf	___wmul@multiplicand,f
  6277  143F  0DF3               	rlf	___wmul@multiplicand+1,f
  6278  1440  3EFF               	addlw	-1
  6279  1441  1D03               	skipz
  6280  1442  2C3D               	goto	u3345
  6281  1443                     l2733:	
  6282  1443  3001               	movlw	1
  6283  1444                     u3355:	
  6284  1444  1003               	clrc
  6285  1445  0CF1               	rrf	___wmul@multiplier+1,f
  6286  1446  0CF0               	rrf	___wmul@multiplier,f
  6287  1447  3EFF               	addlw	-1
  6288  1448  1D03               	skipz
  6289  1449  2C44               	goto	u3355
  6290  144A                     l2735:	
  6291  144A  0870               	movf	___wmul@multiplier,w
  6292  144B  0471               	iorwf	___wmul@multiplier+1,w
  6293  144C  1D03               	btfss	3,2
  6294  144D  2C4F               	goto	u3361
  6295  144E  2C50               	goto	u3360
  6296  144F                     u3361:	
  6297  144F  2C32               	goto	l2729
  6298  1450                     u3360:	
  6299  1450                     l2737:	
  6300  1450  0875               	movf	___wmul@product+1,w
  6301  1451  00F1               	movwf	?___wmul+1
  6302  1452  0874               	movf	___wmul@product,w
  6303  1453  00F0               	movwf	?___wmul
  6304  1454                     l459:	
  6305  1454  0008               	return
  6306  1455                     __end_of___wmul:	
  6307                           
  6308                           	psect	text22
  6309  16CC                     __ptext22:	
  6310 ;; *************** function ___fltol *****************
  6311 ;; Defined at:
  6312 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  6313 ;; Parameters:    Size  Location     Type
  6314 ;;  f1              4    0[BANK1 ] unsigned int 
  6315 ;; Auto vars:     Size  Location     Type
  6316 ;;  exp1            1   10[BANK1 ] unsigned char 
  6317 ;;  sign1           1    9[BANK1 ] unsigned char 
  6318 ;; Return value:  Size  Location     Type
  6319 ;;                  4    0[BANK1 ] long 
  6320 ;; Registers used:
  6321 ;;		wreg, status,2, status,0
  6322 ;; Tracked objects:
  6323 ;;		On entry : 0/0
  6324 ;;		On exit  : 0/0
  6325 ;;		Unchanged: 0/0
  6326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6327 ;;      Params:         0       0       4       0       0
  6328 ;;      Locals:         0       0       2       0       0
  6329 ;;      Temps:          0       0       5       0       0
  6330 ;;      Totals:         0       0      11       0       0
  6331 ;;Total ram usage:       11 bytes
  6332 ;; Hardware stack levels used:    1
  6333 ;; This function calls:
  6334 ;;		Nothing
  6335 ;; This function is called by:
  6336 ;;		_currentMeasurement
  6337 ;;		_LCD
  6338 ;; This function uses a non-reentrant model
  6339 ;;
  6340                           
  6341                           
  6342                           ;psect for function ___fltol
  6343  16CC                     ___fltol:	
  6344  16CC                     l2741:	
  6345                           ;incstack = 0
  6346                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6347                           
  6348  16CC  1003               	clrc
  6349  16CD  1683               	bsf	3,5	;RP0=1, select bank1
  6350  16CE  1303               	bcf	3,6	;RP1=0, select bank1
  6351  16CF  0D22               	rlf	(___fltol@f1+2)^(0+128),w
  6352  16D0  0D23               	rlf	(___fltol@f1+3)^(0+128),w
  6353  16D1  00A4               	movwf	??___fltol^(0+128)
  6354  16D2  0824               	movf	??___fltol^(0+128),w
  6355  16D3  00AA               	movwf	___fltol@exp1^(0+128)
  6356  16D4  082A               	movf	___fltol@exp1^(0+128),w
  6357  16D5  1D03               	btfss	3,2
  6358  16D6  2ED8               	goto	u3371
  6359  16D7  2ED9               	goto	u3370
  6360  16D8                     u3371:	
  6361  16D8  2EE2               	goto	l2747
  6362  16D9                     u3370:	
  6363  16D9                     l2743:	
  6364  16D9  3000               	movlw	0
  6365  16DA  00A3               	movwf	(?___fltol+3)^(0+128)
  6366  16DB  3000               	movlw	0
  6367  16DC  00A2               	movwf	(?___fltol+2)^(0+128)
  6368  16DD  3000               	movlw	0
  6369  16DE  00A1               	movwf	(?___fltol+1)^(0+128)
  6370  16DF  3000               	movlw	0
  6371  16E0  00A0               	movwf	?___fltol^(0+128)
  6372  16E1  2F47               	goto	l643
  6373  16E2                     l2747:	
  6374  16E2  0820               	movf	___fltol@f1^(0+128),w
  6375  16E3  00A4               	movwf	??___fltol^(0+128)
  6376  16E4  0821               	movf	(___fltol@f1+1)^(0+128),w
  6377  16E5  00A5               	movwf	(??___fltol^(0+128)+1)
  6378  16E6  0822               	movf	(___fltol@f1+2)^(0+128),w
  6379  16E7  00A6               	movwf	(??___fltol^(0+128)+2)
  6380  16E8  0823               	movf	(___fltol@f1+3)^(0+128),w
  6381  16E9  00A7               	movwf	(??___fltol^(0+128)+3)
  6382  16EA  301F               	movlw	31
  6383  16EB                     u3385:	
  6384  16EB  1003               	clrc
  6385  16EC  0CA7               	rrf	(??___fltol^(0+128)+3),f
  6386  16ED  0CA6               	rrf	(??___fltol^(0+128)+2),f
  6387  16EE  0CA5               	rrf	(??___fltol^(0+128)+1),f
  6388  16EF  0CA4               	rrf	??___fltol^(0+128),f
  6389  16F0                     u3380:	
  6390  16F0  3EFF               	addlw	-1
  6391  16F1  1D03               	skipz
  6392  16F2  2EEB               	goto	u3385
  6393  16F3  0824               	movf	??___fltol^(0+128),w
  6394  16F4  00A8               	movwf	(??___fltol+4)^(0+128)
  6395  16F5  0828               	movf	(??___fltol+4)^(0+128),w
  6396  16F6  00A9               	movwf	___fltol@sign1^(0+128)
  6397  16F7                     l2749:	
  6398  16F7  17A2               	bsf	(___fltol@f1^(0+128)+2),7
  6399  16F8                     l2751:	
  6400  16F8  30FF               	movlw	255
  6401  16F9  05A0               	andwf	___fltol@f1^(0+128),f
  6402  16FA  30FF               	movlw	255
  6403  16FB  05A1               	andwf	(___fltol@f1+1)^(0+128),f
  6404  16FC  30FF               	movlw	255
  6405  16FD  05A2               	andwf	(___fltol@f1+2)^(0+128),f
  6406  16FE  3000               	movlw	0
  6407  16FF  05A3               	andwf	(___fltol@f1+3)^(0+128),f
  6408  1700                     l2753:	
  6409  1700  3096               	movlw	150
  6410  1701  02AA               	subwf	___fltol@exp1^(0+128),f
  6411  1702                     l2755:	
  6412  1702  1FAA               	btfss	___fltol@exp1^(0+128),7
  6413  1703  2F05               	goto	u3391
  6414  1704  2F06               	goto	u3390
  6415  1705                     u3391:	
  6416  1705  2F20               	goto	l2765
  6417  1706                     u3390:	
  6418  1706                     l2757:	
  6419  1706  082A               	movf	___fltol@exp1^(0+128),w
  6420  1707  3A80               	xorlw	128
  6421  1708  3E97               	addlw	151
  6422  1709  1803               	skipnc
  6423  170A  2F0C               	goto	u3401
  6424  170B  2F0D               	goto	u3400
  6425  170C                     u3401:	
  6426  170C  2F0E               	goto	l2763
  6427  170D                     u3400:	
  6428  170D  2ED9               	goto	l2743
  6429  170E                     l2763:	
  6430  170E  3001               	movlw	1
  6431  170F                     u3415:	
  6432  170F  1003               	clrc
  6433  1710  0CA3               	rrf	(___fltol@f1+3)^(0+128),f
  6434  1711  0CA2               	rrf	(___fltol@f1+2)^(0+128),f
  6435  1712  0CA1               	rrf	(___fltol@f1+1)^(0+128),f
  6436  1713  0CA0               	rrf	___fltol@f1^(0+128),f
  6437  1714  3EFF               	addlw	-1
  6438  1715  1D03               	skipz
  6439  1716  2F0F               	goto	u3415
  6440  1717  3001               	movlw	1
  6441  1718  00A4               	movwf	??___fltol^(0+128)
  6442  1719  0824               	movf	??___fltol^(0+128),w
  6443  171A  07AA               	addwf	___fltol@exp1^(0+128),f
  6444  171B  1D03               	btfss	3,2
  6445  171C  2F1E               	goto	u3421
  6446  171D  2F1F               	goto	u3420
  6447  171E                     u3421:	
  6448  171E  2F0E               	goto	l2763
  6449  171F                     u3420:	
  6450  171F  2F37               	goto	l2773
  6451  1720                     l2765:	
  6452  1720  3020               	movlw	32
  6453  1721  022A               	subwf	___fltol@exp1^(0+128),w
  6454  1722  1C03               	skipc
  6455  1723  2F25               	goto	u3431
  6456  1724  2F26               	goto	u3430
  6457  1725                     u3431:	
  6458  1725  2F32               	goto	l650
  6459  1726                     u3430:	
  6460  1726  2ED9               	goto	l2743
  6461  1727                     l2771:	
  6462  1727  3001               	movlw	1
  6463  1728  00A4               	movwf	??___fltol^(0+128)
  6464  1729                     u3445:	
  6465  1729  1003               	clrc
  6466  172A  0DA0               	rlf	___fltol@f1^(0+128),f
  6467  172B  0DA1               	rlf	(___fltol@f1+1)^(0+128),f
  6468  172C  0DA2               	rlf	(___fltol@f1+2)^(0+128),f
  6469  172D  0DA3               	rlf	(___fltol@f1+3)^(0+128),f
  6470  172E  0BA4               	decfsz	??___fltol^(0+128),f
  6471  172F  2F29               	goto	u3445
  6472  1730  3001               	movlw	1
  6473  1731  02AA               	subwf	___fltol@exp1^(0+128),f
  6474  1732                     l650:	
  6475  1732  082A               	movf	___fltol@exp1^(0+128),w
  6476  1733  1D03               	btfss	3,2
  6477  1734  2F36               	goto	u3451
  6478  1735  2F37               	goto	u3450
  6479  1736                     u3451:	
  6480  1736  2F27               	goto	l2771
  6481  1737                     u3450:	
  6482  1737                     l2773:	
  6483  1737  0829               	movf	___fltol@sign1^(0+128),w
  6484  1738  1903               	btfsc	3,2
  6485  1739  2F3B               	goto	u3461
  6486  173A  2F3C               	goto	u3460
  6487  173B                     u3461:	
  6488  173B  2F47               	goto	l653
  6489  173C                     u3460:	
  6490  173C                     l2775:	
  6491  173C  09A0               	comf	___fltol@f1^(0+128),f
  6492  173D  09A1               	comf	(___fltol@f1+1)^(0+128),f
  6493  173E  09A2               	comf	(___fltol@f1+2)^(0+128),f
  6494  173F  09A3               	comf	(___fltol@f1+3)^(0+128),f
  6495  1740  0AA0               	incf	___fltol@f1^(0+128),f
  6496  1741  1903               	skipnz
  6497  1742  0AA1               	incf	(___fltol@f1+1)^(0+128),f
  6498  1743  1903               	skipnz
  6499  1744  0AA2               	incf	(___fltol@f1+2)^(0+128),f
  6500  1745  1903               	skipnz
  6501  1746  0AA3               	incf	(___fltol@f1+3)^(0+128),f
  6502  1747                     l653:	
  6503  1747                     l643:	
  6504  1747  0008               	return
  6505  1748                     __end_of___fltol:	
  6506                           
  6507                           	psect	text23
  6508  0492                     __ptext23:	
  6509 ;; *************** function ___flmul *****************
  6510 ;; Defined at:
  6511 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  6512 ;; Parameters:    Size  Location     Type
  6513 ;;  b               4    0[BANK0 ] long 
  6514 ;;  a               4    4[BANK0 ] long 
  6515 ;; Auto vars:     Size  Location     Type
  6516 ;;  prod            4   20[BANK0 ] struct .
  6517 ;;  grs             4   14[BANK0 ] unsigned long 
  6518 ;;  temp            2   24[BANK0 ] struct .
  6519 ;;  bexp            1   19[BANK0 ] unsigned char 
  6520 ;;  aexp            1   18[BANK0 ] unsigned char 
  6521 ;;  sign            1   13[BANK0 ] unsigned char 
  6522 ;; Return value:  Size  Location     Type
  6523 ;;                  4    0[BANK0 ] unsigned char 
  6524 ;; Registers used:
  6525 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6526 ;; Tracked objects:
  6527 ;;		On entry : 0/0
  6528 ;;		On exit  : 0/0
  6529 ;;		Unchanged: 0/0
  6530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6531 ;;      Params:         0       8       0       0       0
  6532 ;;      Locals:         0      13       0       0       0
  6533 ;;      Temps:          0       5       0       0       0
  6534 ;;      Totals:         0      26       0       0       0
  6535 ;;Total ram usage:       26 bytes
  6536 ;; Hardware stack levels used:    1
  6537 ;; Hardware stack levels required when called:    1
  6538 ;; This function calls:
  6539 ;;		__Umul8_16
  6540 ;; This function is called by:
  6541 ;;		_currentMeasurement
  6542 ;;		_LCD
  6543 ;; This function uses a non-reentrant model
  6544 ;;
  6545                           
  6546                           
  6547                           ;psect for function ___flmul
  6548  0492                     ___flmul:	
  6549  0492                     l2925:	
  6550                           ;incstack = 0
  6551                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6552                           
  6553  0492  1283               	bcf	3,5	;RP0=0, select bank0
  6554  0493  1303               	bcf	3,6	;RP1=0, select bank0
  6555  0494  0823               	movf	___flmul@b+3,w
  6556  0495  3980               	andlw	128
  6557  0496  00A8               	movwf	??___flmul
  6558  0497  0828               	movf	??___flmul,w
  6559  0498  00AD               	movwf	___flmul@sign
  6560  0499                     l2927:	
  6561  0499  0823               	movf	___flmul@b+3,w
  6562  049A  00A8               	movwf	??___flmul
  6563  049B  0728               	addwf	??___flmul,w
  6564  049C  00A9               	movwf	??___flmul+1
  6565  049D  0829               	movf	??___flmul+1,w
  6566  049E  00B3               	movwf	___flmul@bexp
  6567  049F                     l2929:	
  6568  049F  1FA2               	btfss	___flmul@b+2,7
  6569  04A0  2CA2               	goto	u3761
  6570  04A1  2CA3               	goto	u3760
  6571  04A2                     u3761:	
  6572  04A2  2CA4               	goto	l2933
  6573  04A3                     u3760:	
  6574  04A3                     l2931:	
  6575  04A3  1433               	bsf	___flmul@bexp,0
  6576  04A4                     l2933:	
  6577  04A4  0833               	movf	___flmul@bexp,w
  6578  04A5  1903               	btfsc	3,2
  6579  04A6  2CA8               	goto	u3771
  6580  04A7  2CA9               	goto	u3770
  6581  04A8                     u3771:	
  6582  04A8  2CB8               	goto	l2941
  6583  04A9                     u3770:	
  6584  04A9                     l2935:	
  6585  04A9  0A33               	incf	___flmul@bexp,w
  6586  04AA  1D03               	btfss	3,2
  6587  04AB  2CAD               	goto	u3781
  6588  04AC  2CAE               	goto	u3780
  6589  04AD                     u3781:	
  6590  04AD  2CB6               	goto	l2939
  6591  04AE                     u3780:	
  6592  04AE                     l2937:	
  6593  04AE  3000               	movlw	0
  6594  04AF  00A3               	movwf	___flmul@b+3
  6595  04B0  3000               	movlw	0
  6596  04B1  00A2               	movwf	___flmul@b+2
  6597  04B2  3000               	movlw	0
  6598  04B3  00A1               	movwf	___flmul@b+1
  6599  04B4  3000               	movlw	0
  6600  04B5  00A0               	movwf	___flmul@b
  6601  04B6                     l2939:	
  6602  04B6  17A2               	bsf	___flmul@b+2,7
  6603  04B7  2CC0               	goto	l2943
  6604  04B8                     l2941:	
  6605  04B8  3000               	movlw	0
  6606  04B9  00A3               	movwf	___flmul@b+3
  6607  04BA  3000               	movlw	0
  6608  04BB  00A2               	movwf	___flmul@b+2
  6609  04BC  3000               	movlw	0
  6610  04BD  00A1               	movwf	___flmul@b+1
  6611  04BE  3000               	movlw	0
  6612  04BF  00A0               	movwf	___flmul@b
  6613  04C0                     l2943:	
  6614  04C0  0827               	movf	___flmul@a+3,w
  6615  04C1  3980               	andlw	128
  6616  04C2  00A8               	movwf	??___flmul
  6617  04C3  0828               	movf	??___flmul,w
  6618  04C4  06AD               	xorwf	___flmul@sign,f
  6619  04C5                     l2945:	
  6620  04C5  0827               	movf	___flmul@a+3,w
  6621  04C6  00A8               	movwf	??___flmul
  6622  04C7  0728               	addwf	??___flmul,w
  6623  04C8  00A9               	movwf	??___flmul+1
  6624  04C9  0829               	movf	??___flmul+1,w
  6625  04CA  00B2               	movwf	___flmul@aexp
  6626  04CB                     l2947:	
  6627  04CB  1FA6               	btfss	___flmul@a+2,7
  6628  04CC  2CCE               	goto	u3791
  6629  04CD  2CCF               	goto	u3790
  6630  04CE                     u3791:	
  6631  04CE  2CD0               	goto	l2951
  6632  04CF                     u3790:	
  6633  04CF                     l2949:	
  6634  04CF  1432               	bsf	___flmul@aexp,0
  6635  04D0                     l2951:	
  6636  04D0  0832               	movf	___flmul@aexp,w
  6637  04D1  1903               	btfsc	3,2
  6638  04D2  2CD4               	goto	u3801
  6639  04D3  2CD5               	goto	u3800
  6640  04D4                     u3801:	
  6641  04D4  2CE4               	goto	l2959
  6642  04D5                     u3800:	
  6643  04D5                     l2953:	
  6644  04D5  0A32               	incf	___flmul@aexp,w
  6645  04D6  1D03               	btfss	3,2
  6646  04D7  2CD9               	goto	u3811
  6647  04D8  2CDA               	goto	u3810
  6648  04D9                     u3811:	
  6649  04D9  2CE2               	goto	l2957
  6650  04DA                     u3810:	
  6651  04DA                     l2955:	
  6652  04DA  3000               	movlw	0
  6653  04DB  00A7               	movwf	___flmul@a+3
  6654  04DC  3000               	movlw	0
  6655  04DD  00A6               	movwf	___flmul@a+2
  6656  04DE  3000               	movlw	0
  6657  04DF  00A5               	movwf	___flmul@a+1
  6658  04E0  3000               	movlw	0
  6659  04E1  00A4               	movwf	___flmul@a
  6660  04E2                     l2957:	
  6661  04E2  17A6               	bsf	___flmul@a+2,7
  6662  04E3  2CEC               	goto	l2961
  6663  04E4                     l2959:	
  6664  04E4  3000               	movlw	0
  6665  04E5  00A7               	movwf	___flmul@a+3
  6666  04E6  3000               	movlw	0
  6667  04E7  00A6               	movwf	___flmul@a+2
  6668  04E8  3000               	movlw	0
  6669  04E9  00A5               	movwf	___flmul@a+1
  6670  04EA  3000               	movlw	0
  6671  04EB  00A4               	movwf	___flmul@a
  6672  04EC                     l2961:	
  6673  04EC  0832               	movf	___flmul@aexp,w
  6674  04ED  1903               	btfsc	3,2
  6675  04EE  2CF0               	goto	u3821
  6676  04EF  2CF1               	goto	u3820
  6677  04F0                     u3821:	
  6678  04F0  2CF6               	goto	l2965
  6679  04F1                     u3820:	
  6680  04F1                     l2963:	
  6681  04F1  0833               	movf	___flmul@bexp,w
  6682  04F2  1D03               	btfss	3,2
  6683  04F3  2CF5               	goto	u3831
  6684  04F4  2CF6               	goto	u3830
  6685  04F5                     u3831:	
  6686  04F5  2CFF               	goto	l2969
  6687  04F6                     u3830:	
  6688  04F6                     l2965:	
  6689  04F6  3000               	movlw	0
  6690  04F7  00A3               	movwf	?___flmul+3
  6691  04F8  3000               	movlw	0
  6692  04F9  00A2               	movwf	?___flmul+2
  6693  04FA  3000               	movlw	0
  6694  04FB  00A1               	movwf	?___flmul+1
  6695  04FC  3000               	movlw	0
  6696  04FD  00A0               	movwf	?___flmul
  6697  04FE  2FF2               	goto	l846
  6698  04FF                     l2969:	
  6699  04FF  0820               	movf	___flmul@b,w
  6700  0500  00A8               	movwf	??___flmul
  6701  0501  0828               	movf	??___flmul,w
  6702  0502  00F0               	movwf	__Umul8_16@multiplicand
  6703  0503  0826               	movf	___flmul@a+2,w
  6704  0504  120A  118A  2006  120A  118A  	fcall	__Umul8_16
  6705  0509  0871               	movf	?__Umul8_16+1,w
  6706  050A  1283               	bcf	3,5	;RP0=0, select bank0
  6707  050B  1303               	bcf	3,6	;RP1=0, select bank0
  6708  050C  00B9               	movwf	___flmul@temp+1
  6709  050D  0870               	movf	?__Umul8_16,w
  6710  050E  00B8               	movwf	___flmul@temp
  6711  050F                     l2971:	
  6712  050F  0838               	movf	___flmul@temp,w
  6713  0510  00A8               	movwf	??___flmul
  6714  0511  01A9               	clrf	??___flmul+1
  6715  0512  01AA               	clrf	??___flmul+2
  6716  0513  01AB               	clrf	??___flmul+3
  6717  0514  082B               	movf	??___flmul+3,w
  6718  0515  00B1               	movwf	___flmul@grs+3
  6719  0516  082A               	movf	??___flmul+2,w
  6720  0517  00B0               	movwf	___flmul@grs+2
  6721  0518  0829               	movf	??___flmul+1,w
  6722  0519  00AF               	movwf	___flmul@grs+1
  6723  051A  0828               	movf	??___flmul,w
  6724  051B  00AE               	movwf	___flmul@grs
  6725  051C                     l2973:	
  6726  051C  0839               	movf	___flmul@temp+1,w
  6727  051D  00A8               	movwf	??___flmul
  6728  051E  01A9               	clrf	??___flmul+1
  6729  051F  01AA               	clrf	??___flmul+2
  6730  0520  01AB               	clrf	??___flmul+3
  6731  0521  082B               	movf	??___flmul+3,w
  6732  0522  00B7               	movwf	___flmul@prod+3
  6733  0523  082A               	movf	??___flmul+2,w
  6734  0524  00B6               	movwf	___flmul@prod+2
  6735  0525  0829               	movf	??___flmul+1,w
  6736  0526  00B5               	movwf	___flmul@prod+1
  6737  0527  0828               	movf	??___flmul,w
  6738  0528  00B4               	movwf	___flmul@prod
  6739  0529  0821               	movf	___flmul@b+1,w
  6740  052A  00A8               	movwf	??___flmul
  6741  052B  0828               	movf	??___flmul,w
  6742  052C  00F0               	movwf	__Umul8_16@multiplicand
  6743  052D  0825               	movf	___flmul@a+1,w
  6744  052E  120A  118A  2006  120A  118A  	fcall	__Umul8_16
  6745  0533  0871               	movf	?__Umul8_16+1,w
  6746  0534  1283               	bcf	3,5	;RP0=0, select bank0
  6747  0535  1303               	bcf	3,6	;RP1=0, select bank0
  6748  0536  00B9               	movwf	___flmul@temp+1
  6749  0537  0870               	movf	?__Umul8_16,w
  6750  0538  00B8               	movwf	___flmul@temp
  6751  0539                     l2975:	
  6752  0539  0838               	movf	___flmul@temp,w
  6753  053A  00A8               	movwf	??___flmul
  6754  053B  01A9               	clrf	??___flmul+1
  6755  053C  01AA               	clrf	??___flmul+2
  6756  053D  01AB               	clrf	??___flmul+3
  6757  053E  0828               	movf	??___flmul,w
  6758  053F  07AE               	addwf	___flmul@grs,f
  6759  0540  0829               	movf	??___flmul+1,w
  6760  0541  1103               	clrz
  6761  0542  1803               	skipnc
  6762  0543  3E01               	addlw	1
  6763  0544  1903               	skipnz
  6764  0545  2D47               	goto	u3841
  6765  0546  07AF               	addwf	___flmul@grs+1,f
  6766  0547                     u3841:	
  6767  0547  082A               	movf	??___flmul+2,w
  6768  0548  1103               	clrz
  6769  0549  1803               	skipnc
  6770  054A  3E01               	addlw	1
  6771  054B  1903               	skipnz
  6772  054C  2D4E               	goto	u3842
  6773  054D  07B0               	addwf	___flmul@grs+2,f
  6774  054E                     u3842:	
  6775  054E  082B               	movf	??___flmul+3,w
  6776  054F  1103               	clrz
  6777  0550  1803               	skipnc
  6778  0551  3E01               	addlw	1
  6779  0552  1903               	skipnz
  6780  0553  2D55               	goto	u3843
  6781  0554  07B1               	addwf	___flmul@grs+3,f
  6782  0555                     u3843:	
  6783  0555                     l2977:	
  6784  0555  0839               	movf	___flmul@temp+1,w
  6785  0556  00A8               	movwf	??___flmul
  6786  0557  01A9               	clrf	??___flmul+1
  6787  0558  01AA               	clrf	??___flmul+2
  6788  0559  01AB               	clrf	??___flmul+3
  6789  055A  0828               	movf	??___flmul,w
  6790  055B  07B4               	addwf	___flmul@prod,f
  6791  055C  0829               	movf	??___flmul+1,w
  6792  055D  1103               	clrz
  6793  055E  1803               	skipnc
  6794  055F  3E01               	addlw	1
  6795  0560  1903               	skipnz
  6796  0561  2D63               	goto	u3851
  6797  0562  07B5               	addwf	___flmul@prod+1,f
  6798  0563                     u3851:	
  6799  0563  082A               	movf	??___flmul+2,w
  6800  0564  1103               	clrz
  6801  0565  1803               	skipnc
  6802  0566  3E01               	addlw	1
  6803  0567  1903               	skipnz
  6804  0568  2D6A               	goto	u3852
  6805  0569  07B6               	addwf	___flmul@prod+2,f
  6806  056A                     u3852:	
  6807  056A  082B               	movf	??___flmul+3,w
  6808  056B  1103               	clrz
  6809  056C  1803               	skipnc
  6810  056D  3E01               	addlw	1
  6811  056E  1903               	skipnz
  6812  056F  2D71               	goto	u3853
  6813  0570  07B7               	addwf	___flmul@prod+3,f
  6814  0571                     u3853:	
  6815  0571  0822               	movf	___flmul@b+2,w
  6816  0572  00A8               	movwf	??___flmul
  6817  0573  0828               	movf	??___flmul,w
  6818  0574  00F0               	movwf	__Umul8_16@multiplicand
  6819  0575  0824               	movf	___flmul@a,w
  6820  0576  120A  118A  2006  120A  118A  	fcall	__Umul8_16
  6821  057B  0871               	movf	?__Umul8_16+1,w
  6822  057C  1283               	bcf	3,5	;RP0=0, select bank0
  6823  057D  1303               	bcf	3,6	;RP1=0, select bank0
  6824  057E  00B9               	movwf	___flmul@temp+1
  6825  057F  0870               	movf	?__Umul8_16,w
  6826  0580  00B8               	movwf	___flmul@temp
  6827  0581                     l2979:	
  6828  0581  0838               	movf	___flmul@temp,w
  6829  0582  00A8               	movwf	??___flmul
  6830  0583  01A9               	clrf	??___flmul+1
  6831  0584  01AA               	clrf	??___flmul+2
  6832  0585  01AB               	clrf	??___flmul+3
  6833  0586  0828               	movf	??___flmul,w
  6834  0587  07AE               	addwf	___flmul@grs,f
  6835  0588  0829               	movf	??___flmul+1,w
  6836  0589  1103               	clrz
  6837  058A  1803               	skipnc
  6838  058B  3E01               	addlw	1
  6839  058C  1903               	skipnz
  6840  058D  2D8F               	goto	u3861
  6841  058E  07AF               	addwf	___flmul@grs+1,f
  6842  058F                     u3861:	
  6843  058F  082A               	movf	??___flmul+2,w
  6844  0590  1103               	clrz
  6845  0591  1803               	skipnc
  6846  0592  3E01               	addlw	1
  6847  0593  1903               	skipnz
  6848  0594  2D96               	goto	u3862
  6849  0595  07B0               	addwf	___flmul@grs+2,f
  6850  0596                     u3862:	
  6851  0596  082B               	movf	??___flmul+3,w
  6852  0597  1103               	clrz
  6853  0598  1803               	skipnc
  6854  0599  3E01               	addlw	1
  6855  059A  1903               	skipnz
  6856  059B  2D9D               	goto	u3863
  6857  059C  07B1               	addwf	___flmul@grs+3,f
  6858  059D                     u3863:	
  6859  059D                     l2981:	
  6860  059D  0839               	movf	___flmul@temp+1,w
  6861  059E  00A8               	movwf	??___flmul
  6862  059F  01A9               	clrf	??___flmul+1
  6863  05A0  01AA               	clrf	??___flmul+2
  6864  05A1  01AB               	clrf	??___flmul+3
  6865  05A2  0828               	movf	??___flmul,w
  6866  05A3  07B4               	addwf	___flmul@prod,f
  6867  05A4  0829               	movf	??___flmul+1,w
  6868  05A5  1103               	clrz
  6869  05A6  1803               	skipnc
  6870  05A7  3E01               	addlw	1
  6871  05A8  1903               	skipnz
  6872  05A9  2DAB               	goto	u3871
  6873  05AA  07B5               	addwf	___flmul@prod+1,f
  6874  05AB                     u3871:	
  6875  05AB  082A               	movf	??___flmul+2,w
  6876  05AC  1103               	clrz
  6877  05AD  1803               	skipnc
  6878  05AE  3E01               	addlw	1
  6879  05AF  1903               	skipnz
  6880  05B0  2DB2               	goto	u3872
  6881  05B1  07B6               	addwf	___flmul@prod+2,f
  6882  05B2                     u3872:	
  6883  05B2  082B               	movf	??___flmul+3,w
  6884  05B3  1103               	clrz
  6885  05B4  1803               	skipnc
  6886  05B5  3E01               	addlw	1
  6887  05B6  1903               	skipnz
  6888  05B7  2DB9               	goto	u3873
  6889  05B8  07B7               	addwf	___flmul@prod+3,f
  6890  05B9                     u3873:	
  6891  05B9                     l2983:	
  6892  05B9  3008               	movlw	8
  6893  05BA  00A8               	movwf	??___flmul
  6894  05BB                     u3885:	
  6895  05BB  1003               	clrc
  6896  05BC  0DAE               	rlf	___flmul@grs,f
  6897  05BD  0DAF               	rlf	___flmul@grs+1,f
  6898  05BE  0DB0               	rlf	___flmul@grs+2,f
  6899  05BF  0DB1               	rlf	___flmul@grs+3,f
  6900  05C0  0BA8               	decfsz	??___flmul,f
  6901  05C1  2DBB               	goto	u3885
  6902  05C2                     l2985:	
  6903  05C2  0821               	movf	___flmul@b+1,w
  6904  05C3  00A8               	movwf	??___flmul
  6905  05C4  0828               	movf	??___flmul,w
  6906  05C5  00F0               	movwf	__Umul8_16@multiplicand
  6907  05C6  0824               	movf	___flmul@a,w
  6908  05C7  120A  118A  2006  120A  118A  	fcall	__Umul8_16
  6909  05CC  0871               	movf	?__Umul8_16+1,w
  6910  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  6911  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  6912  05CF  00B9               	movwf	___flmul@temp+1
  6913  05D0  0870               	movf	?__Umul8_16,w
  6914  05D1  00B8               	movwf	___flmul@temp
  6915  05D2                     l2987:	
  6916  05D2  0838               	movf	___flmul@temp,w
  6917  05D3  00A8               	movwf	??___flmul
  6918  05D4  0839               	movf	___flmul@temp+1,w
  6919  05D5  00A9               	movwf	??___flmul+1
  6920  05D6  01AA               	clrf	??___flmul+2
  6921  05D7  01AB               	clrf	??___flmul+3
  6922  05D8  0828               	movf	??___flmul,w
  6923  05D9  07AE               	addwf	___flmul@grs,f
  6924  05DA  0829               	movf	??___flmul+1,w
  6925  05DB  1103               	clrz
  6926  05DC  1803               	skipnc
  6927  05DD  3E01               	addlw	1
  6928  05DE  1903               	skipnz
  6929  05DF  2DE1               	goto	u3891
  6930  05E0  07AF               	addwf	___flmul@grs+1,f
  6931  05E1                     u3891:	
  6932  05E1  082A               	movf	??___flmul+2,w
  6933  05E2  1103               	clrz
  6934  05E3  1803               	skipnc
  6935  05E4  3E01               	addlw	1
  6936  05E5  1903               	skipnz
  6937  05E6  2DE8               	goto	u3892
  6938  05E7  07B0               	addwf	___flmul@grs+2,f
  6939  05E8                     u3892:	
  6940  05E8  082B               	movf	??___flmul+3,w
  6941  05E9  1103               	clrz
  6942  05EA  1803               	skipnc
  6943  05EB  3E01               	addlw	1
  6944  05EC  1903               	skipnz
  6945  05ED  2DEF               	goto	u3893
  6946  05EE  07B1               	addwf	___flmul@grs+3,f
  6947  05EF                     u3893:	
  6948  05EF                     l2989:	
  6949  05EF  0820               	movf	___flmul@b,w
  6950  05F0  00A8               	movwf	??___flmul
  6951  05F1  0828               	movf	??___flmul,w
  6952  05F2  00F0               	movwf	__Umul8_16@multiplicand
  6953  05F3  0825               	movf	___flmul@a+1,w
  6954  05F4  120A  118A  2006  120A  118A  	fcall	__Umul8_16
  6955  05F9  0871               	movf	?__Umul8_16+1,w
  6956  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  6957  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  6958  05FC  00B9               	movwf	___flmul@temp+1
  6959  05FD  0870               	movf	?__Umul8_16,w
  6960  05FE  00B8               	movwf	___flmul@temp
  6961  05FF                     l2991:	
  6962  05FF  0838               	movf	___flmul@temp,w
  6963  0600  00A8               	movwf	??___flmul
  6964  0601  0839               	movf	___flmul@temp+1,w
  6965  0602  00A9               	movwf	??___flmul+1
  6966  0603  01AA               	clrf	??___flmul+2
  6967  0604  01AB               	clrf	??___flmul+3
  6968  0605  0828               	movf	??___flmul,w
  6969  0606  07AE               	addwf	___flmul@grs,f
  6970  0607  0829               	movf	??___flmul+1,w
  6971  0608  1103               	clrz
  6972  0609  1803               	skipnc
  6973  060A  3E01               	addlw	1
  6974  060B  1903               	skipnz
  6975  060C  2E0E               	goto	u3901
  6976  060D  07AF               	addwf	___flmul@grs+1,f
  6977  060E                     u3901:	
  6978  060E  082A               	movf	??___flmul+2,w
  6979  060F  1103               	clrz
  6980  0610  1803               	skipnc
  6981  0611  3E01               	addlw	1
  6982  0612  1903               	skipnz
  6983  0613  2E15               	goto	u3902
  6984  0614  07B0               	addwf	___flmul@grs+2,f
  6985  0615                     u3902:	
  6986  0615  082B               	movf	??___flmul+3,w
  6987  0616  1103               	clrz
  6988  0617  1803               	skipnc
  6989  0618  3E01               	addlw	1
  6990  0619  1903               	skipnz
  6991  061A  2E1C               	goto	u3903
  6992  061B  07B1               	addwf	___flmul@grs+3,f
  6993  061C                     u3903:	
  6994  061C                     l2993:	
  6995  061C  3008               	movlw	8
  6996  061D  00A8               	movwf	??___flmul
  6997  061E                     u3915:	
  6998  061E  1003               	clrc
  6999  061F  0DAE               	rlf	___flmul@grs,f
  7000  0620  0DAF               	rlf	___flmul@grs+1,f
  7001  0621  0DB0               	rlf	___flmul@grs+2,f
  7002  0622  0DB1               	rlf	___flmul@grs+3,f
  7003  0623  0BA8               	decfsz	??___flmul,f
  7004  0624  2E1E               	goto	u3915
  7005  0625  0820               	movf	___flmul@b,w
  7006  0626  00A8               	movwf	??___flmul
  7007  0627  0828               	movf	??___flmul,w
  7008  0628  00F0               	movwf	__Umul8_16@multiplicand
  7009  0629  0824               	movf	___flmul@a,w
  7010  062A  120A  118A  2006  120A  118A  	fcall	__Umul8_16
  7011  062F  0871               	movf	?__Umul8_16+1,w
  7012  0630  1283               	bcf	3,5	;RP0=0, select bank0
  7013  0631  1303               	bcf	3,6	;RP1=0, select bank0
  7014  0632  00B9               	movwf	___flmul@temp+1
  7015  0633  0870               	movf	?__Umul8_16,w
  7016  0634  00B8               	movwf	___flmul@temp
  7017  0635                     l2995:	
  7018  0635  0838               	movf	___flmul@temp,w
  7019  0636  00A8               	movwf	??___flmul
  7020  0637  0839               	movf	___flmul@temp+1,w
  7021  0638  00A9               	movwf	??___flmul+1
  7022  0639  01AA               	clrf	??___flmul+2
  7023  063A  01AB               	clrf	??___flmul+3
  7024  063B  0828               	movf	??___flmul,w
  7025  063C  07AE               	addwf	___flmul@grs,f
  7026  063D  0829               	movf	??___flmul+1,w
  7027  063E  1103               	clrz
  7028  063F  1803               	skipnc
  7029  0640  3E01               	addlw	1
  7030  0641  1903               	skipnz
  7031  0642  2E44               	goto	u3921
  7032  0643  07AF               	addwf	___flmul@grs+1,f
  7033  0644                     u3921:	
  7034  0644  082A               	movf	??___flmul+2,w
  7035  0645  1103               	clrz
  7036  0646  1803               	skipnc
  7037  0647  3E01               	addlw	1
  7038  0648  1903               	skipnz
  7039  0649  2E4B               	goto	u3922
  7040  064A  07B0               	addwf	___flmul@grs+2,f
  7041  064B                     u3922:	
  7042  064B  082B               	movf	??___flmul+3,w
  7043  064C  1103               	clrz
  7044  064D  1803               	skipnc
  7045  064E  3E01               	addlw	1
  7046  064F  1903               	skipnz
  7047  0650  2E52               	goto	u3923
  7048  0651  07B1               	addwf	___flmul@grs+3,f
  7049  0652                     u3923:	
  7050  0652                     l2997:	
  7051  0652  0821               	movf	___flmul@b+1,w
  7052  0653  00A8               	movwf	??___flmul
  7053  0654  0828               	movf	??___flmul,w
  7054  0655  00F0               	movwf	__Umul8_16@multiplicand
  7055  0656  0826               	movf	___flmul@a+2,w
  7056  0657  120A  118A  2006  120A  118A  	fcall	__Umul8_16
  7057  065C  0871               	movf	?__Umul8_16+1,w
  7058  065D  1283               	bcf	3,5	;RP0=0, select bank0
  7059  065E  1303               	bcf	3,6	;RP1=0, select bank0
  7060  065F  00B9               	movwf	___flmul@temp+1
  7061  0660  0870               	movf	?__Umul8_16,w
  7062  0661  00B8               	movwf	___flmul@temp
  7063  0662  0838               	movf	___flmul@temp,w
  7064  0663  00A8               	movwf	??___flmul
  7065  0664  0839               	movf	___flmul@temp+1,w
  7066  0665  00A9               	movwf	??___flmul+1
  7067  0666  01AA               	clrf	??___flmul+2
  7068  0667  01AB               	clrf	??___flmul+3
  7069  0668  0828               	movf	??___flmul,w
  7070  0669  07B4               	addwf	___flmul@prod,f
  7071  066A  0829               	movf	??___flmul+1,w
  7072  066B  1103               	clrz
  7073  066C  1803               	skipnc
  7074  066D  3E01               	addlw	1
  7075  066E  1903               	skipnz
  7076  066F  2E71               	goto	u3931
  7077  0670  07B5               	addwf	___flmul@prod+1,f
  7078  0671                     u3931:	
  7079  0671  082A               	movf	??___flmul+2,w
  7080  0672  1103               	clrz
  7081  0673  1803               	skipnc
  7082  0674  3E01               	addlw	1
  7083  0675  1903               	skipnz
  7084  0676  2E78               	goto	u3932
  7085  0677  07B6               	addwf	___flmul@prod+2,f
  7086  0678                     u3932:	
  7087  0678  082B               	movf	??___flmul+3,w
  7088  0679  1103               	clrz
  7089  067A  1803               	skipnc
  7090  067B  3E01               	addlw	1
  7091  067C  1903               	skipnz
  7092  067D  2E7F               	goto	u3933
  7093  067E  07B7               	addwf	___flmul@prod+3,f
  7094  067F                     u3933:	
  7095  067F                     l2999:	
  7096  067F  0822               	movf	___flmul@b+2,w
  7097  0680  00A8               	movwf	??___flmul
  7098  0681  0828               	movf	??___flmul,w
  7099  0682  00F0               	movwf	__Umul8_16@multiplicand
  7100  0683  0825               	movf	___flmul@a+1,w
  7101  0684  120A  118A  2006  120A  118A  	fcall	__Umul8_16
  7102  0689  0871               	movf	?__Umul8_16+1,w
  7103  068A  1283               	bcf	3,5	;RP0=0, select bank0
  7104  068B  1303               	bcf	3,6	;RP1=0, select bank0
  7105  068C  00B9               	movwf	___flmul@temp+1
  7106  068D  0870               	movf	?__Umul8_16,w
  7107  068E  00B8               	movwf	___flmul@temp
  7108  068F                     l3001:	
  7109  068F  0838               	movf	___flmul@temp,w
  7110  0690  00A8               	movwf	??___flmul
  7111  0691  0839               	movf	___flmul@temp+1,w
  7112  0692  00A9               	movwf	??___flmul+1
  7113  0693  01AA               	clrf	??___flmul+2
  7114  0694  01AB               	clrf	??___flmul+3
  7115  0695  0828               	movf	??___flmul,w
  7116  0696  07B4               	addwf	___flmul@prod,f
  7117  0697  0829               	movf	??___flmul+1,w
  7118  0698  1103               	clrz
  7119  0699  1803               	skipnc
  7120  069A  3E01               	addlw	1
  7121  069B  1903               	skipnz
  7122  069C  2E9E               	goto	u3941
  7123  069D  07B5               	addwf	___flmul@prod+1,f
  7124  069E                     u3941:	
  7125  069E  082A               	movf	??___flmul+2,w
  7126  069F  1103               	clrz
  7127  06A0  1803               	skipnc
  7128  06A1  3E01               	addlw	1
  7129  06A2  1903               	skipnz
  7130  06A3  2EA5               	goto	u3942
  7131  06A4  07B6               	addwf	___flmul@prod+2,f
  7132  06A5                     u3942:	
  7133  06A5  082B               	movf	??___flmul+3,w
  7134  06A6  1103               	clrz
  7135  06A7  1803               	skipnc
  7136  06A8  3E01               	addlw	1
  7137  06A9  1903               	skipnz
  7138  06AA  2EAC               	goto	u3943
  7139  06AB  07B7               	addwf	___flmul@prod+3,f
  7140  06AC                     u3943:	
  7141  06AC  0822               	movf	___flmul@b+2,w
  7142  06AD  00A8               	movwf	??___flmul
  7143  06AE  0828               	movf	??___flmul,w
  7144  06AF  00F0               	movwf	__Umul8_16@multiplicand
  7145  06B0  0826               	movf	___flmul@a+2,w
  7146  06B1  120A  118A  2006  120A  118A  	fcall	__Umul8_16
  7147  06B6  0871               	movf	?__Umul8_16+1,w
  7148  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  7149  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  7150  06B9  00B9               	movwf	___flmul@temp+1
  7151  06BA  0870               	movf	?__Umul8_16,w
  7152  06BB  00B8               	movwf	___flmul@temp
  7153  06BC                     l3003:	
  7154  06BC  0838               	movf	___flmul@temp,w
  7155  06BD  00A8               	movwf	??___flmul
  7156  06BE  0839               	movf	___flmul@temp+1,w
  7157  06BF  00A9               	movwf	??___flmul+1
  7158  06C0  01AA               	clrf	??___flmul+2
  7159  06C1  01AB               	clrf	??___flmul+3
  7160  06C2  3008               	movlw	8
  7161  06C3                     u3955:	
  7162  06C3  1003               	clrc
  7163  06C4  0DA8               	rlf	??___flmul,f
  7164  06C5  0DA9               	rlf	??___flmul+1,f
  7165  06C6  0DAA               	rlf	??___flmul+2,f
  7166  06C7  0DAB               	rlf	??___flmul+3,f
  7167  06C8                     u3950:	
  7168  06C8  3EFF               	addlw	-1
  7169  06C9  1D03               	skipz
  7170  06CA  2EC3               	goto	u3955
  7171  06CB  0828               	movf	??___flmul,w
  7172  06CC  07B4               	addwf	___flmul@prod,f
  7173  06CD  0829               	movf	??___flmul+1,w
  7174  06CE  1103               	clrz
  7175  06CF  1803               	skipnc
  7176  06D0  3E01               	addlw	1
  7177  06D1  1903               	skipnz
  7178  06D2  2ED4               	goto	u3961
  7179  06D3  07B5               	addwf	___flmul@prod+1,f
  7180  06D4                     u3961:	
  7181  06D4  082A               	movf	??___flmul+2,w
  7182  06D5  1103               	clrz
  7183  06D6  1803               	skipnc
  7184  06D7  3E01               	addlw	1
  7185  06D8  1903               	skipnz
  7186  06D9  2EDB               	goto	u3962
  7187  06DA  07B6               	addwf	___flmul@prod+2,f
  7188  06DB                     u3962:	
  7189  06DB  082B               	movf	??___flmul+3,w
  7190  06DC  1103               	clrz
  7191  06DD  1803               	skipnc
  7192  06DE  3E01               	addlw	1
  7193  06DF  1903               	skipnz
  7194  06E0  2EE2               	goto	u3963
  7195  06E1  07B7               	addwf	___flmul@prod+3,f
  7196  06E2                     u3963:	
  7197  06E2                     l3005:	
  7198  06E2  082E               	movf	___flmul@grs,w
  7199  06E3  00A8               	movwf	??___flmul
  7200  06E4  082F               	movf	___flmul@grs+1,w
  7201  06E5  00A9               	movwf	??___flmul+1
  7202  06E6  0830               	movf	___flmul@grs+2,w
  7203  06E7  00AA               	movwf	??___flmul+2
  7204  06E8  0831               	movf	___flmul@grs+3,w
  7205  06E9  00AB               	movwf	??___flmul+3
  7206  06EA  3018               	movlw	24
  7207  06EB                     u3975:	
  7208  06EB  1003               	clrc
  7209  06EC  0CAB               	rrf	??___flmul+3,f
  7210  06ED  0CAA               	rrf	??___flmul+2,f
  7211  06EE  0CA9               	rrf	??___flmul+1,f
  7212  06EF  0CA8               	rrf	??___flmul,f
  7213  06F0                     u3970:	
  7214  06F0  3EFF               	addlw	-1
  7215  06F1  1D03               	skipz
  7216  06F2  2EEB               	goto	u3975
  7217  06F3  0828               	movf	??___flmul,w
  7218  06F4  07B4               	addwf	___flmul@prod,f
  7219  06F5  0829               	movf	??___flmul+1,w
  7220  06F6  1103               	clrz
  7221  06F7  1803               	skipnc
  7222  06F8  3E01               	addlw	1
  7223  06F9  1903               	skipnz
  7224  06FA  2EFC               	goto	u3981
  7225  06FB  07B5               	addwf	___flmul@prod+1,f
  7226  06FC                     u3981:	
  7227  06FC  082A               	movf	??___flmul+2,w
  7228  06FD  1103               	clrz
  7229  06FE  1803               	skipnc
  7230  06FF  3E01               	addlw	1
  7231  0700  1903               	skipnz
  7232  0701  2F03               	goto	u3982
  7233  0702  07B6               	addwf	___flmul@prod+2,f
  7234  0703                     u3982:	
  7235  0703  082B               	movf	??___flmul+3,w
  7236  0704  1103               	clrz
  7237  0705  1803               	skipnc
  7238  0706  3E01               	addlw	1
  7239  0707  1903               	skipnz
  7240  0708  2F0A               	goto	u3983
  7241  0709  07B7               	addwf	___flmul@prod+3,f
  7242  070A                     u3983:	
  7243  070A                     l3007:	
  7244  070A  3008               	movlw	8
  7245  070B  00A8               	movwf	??___flmul
  7246  070C                     u3995:	
  7247  070C  1003               	clrc
  7248  070D  0DAE               	rlf	___flmul@grs,f
  7249  070E  0DAF               	rlf	___flmul@grs+1,f
  7250  070F  0DB0               	rlf	___flmul@grs+2,f
  7251  0710  0DB1               	rlf	___flmul@grs+3,f
  7252  0711  0BA8               	decfsz	??___flmul,f
  7253  0712  2F0C               	goto	u3995
  7254  0713                     l3009:	
  7255  0713  0833               	movf	___flmul@bexp,w
  7256  0714  0732               	addwf	___flmul@aexp,w
  7257  0715  00A8               	movwf	??___flmul
  7258  0716  01A9               	clrf	??___flmul+1
  7259  0717  0DA9               	rlf	??___flmul+1,f
  7260  0718  0828               	movf	??___flmul,w
  7261  0719  3E82               	addlw	130
  7262  071A  00B8               	movwf	___flmul@temp
  7263  071B  0829               	movf	??___flmul+1,w
  7264  071C  1803               	skipnc
  7265  071D  3E01               	addlw	1
  7266  071E  3EFF               	addlw	255
  7267  071F  00B9               	movwf	___flmul@temp+1
  7268  0720  2F3E               	goto	l3021
  7269  0721                     l3011:	
  7270  0721  3001               	movlw	1
  7271  0722  00A8               	movwf	??___flmul
  7272  0723                     u4005:	
  7273  0723  1003               	clrc
  7274  0724  0DB4               	rlf	___flmul@prod,f
  7275  0725  0DB5               	rlf	___flmul@prod+1,f
  7276  0726  0DB6               	rlf	___flmul@prod+2,f
  7277  0727  0DB7               	rlf	___flmul@prod+3,f
  7278  0728  0BA8               	decfsz	??___flmul,f
  7279  0729  2F23               	goto	u4005
  7280  072A                     l3013:	
  7281  072A  1FB1               	btfss	___flmul@grs+3,7
  7282  072B  2F2D               	goto	u4011
  7283  072C  2F2E               	goto	u4010
  7284  072D                     u4011:	
  7285  072D  2F2F               	goto	l3017
  7286  072E                     u4010:	
  7287  072E                     l3015:	
  7288  072E  1434               	bsf	___flmul@prod,0
  7289  072F                     l3017:	
  7290  072F  3001               	movlw	1
  7291  0730  00A8               	movwf	??___flmul
  7292  0731                     u4025:	
  7293  0731  1003               	clrc
  7294  0732  0DAE               	rlf	___flmul@grs,f
  7295  0733  0DAF               	rlf	___flmul@grs+1,f
  7296  0734  0DB0               	rlf	___flmul@grs+2,f
  7297  0735  0DB1               	rlf	___flmul@grs+3,f
  7298  0736  0BA8               	decfsz	??___flmul,f
  7299  0737  2F31               	goto	u4025
  7300  0738                     l3019:	
  7301  0738  30FF               	movlw	255
  7302  0739  07B8               	addwf	___flmul@temp,f
  7303  073A  1803               	skipnc
  7304  073B  0AB9               	incf	___flmul@temp+1,f
  7305  073C  30FF               	movlw	255
  7306  073D  07B9               	addwf	___flmul@temp+1,f
  7307  073E                     l3021:	
  7308  073E  1FB6               	btfss	___flmul@prod+2,7
  7309  073F  2F41               	goto	u4031
  7310  0740  2F42               	goto	u4030
  7311  0741                     u4031:	
  7312  0741  2F21               	goto	l3011
  7313  0742                     u4030:	
  7314  0742                     l3023:	
  7315  0742  01B2               	clrf	___flmul@aexp
  7316  0743                     l3025:	
  7317  0743  1FB1               	btfss	___flmul@grs+3,7
  7318  0744  2F46               	goto	u4041
  7319  0745  2F47               	goto	u4040
  7320  0746                     u4041:	
  7321  0746  2F63               	goto	l3033
  7322  0747                     u4040:	
  7323  0747                     l3027:	
  7324  0747  30FF               	movlw	255
  7325  0748  052E               	andwf	___flmul@grs,w
  7326  0749  00A8               	movwf	??___flmul
  7327  074A  30FF               	movlw	255
  7328  074B  052F               	andwf	___flmul@grs+1,w
  7329  074C  00A9               	movwf	??___flmul+1
  7330  074D  30FF               	movlw	255
  7331  074E  0530               	andwf	___flmul@grs+2,w
  7332  074F  00AA               	movwf	??___flmul+2
  7333  0750  307F               	movlw	127
  7334  0751  0531               	andwf	___flmul@grs+3,w
  7335  0752  00AB               	movwf	??___flmul+3
  7336  0753  082B               	movf	??___flmul+3,w
  7337  0754  042A               	iorwf	??___flmul+2,w
  7338  0755  0429               	iorwf	??___flmul+1,w
  7339  0756  0428               	iorwf	??___flmul,w
  7340  0757  1903               	skipnz
  7341  0758  2F5A               	goto	u4051
  7342  0759  2F5B               	goto	u4050
  7343  075A                     u4051:	
  7344  075A  2F5E               	goto	l852
  7345  075B                     u4050:	
  7346  075B                     l3029:	
  7347  075B  01B2               	clrf	___flmul@aexp
  7348  075C  0AB2               	incf	___flmul@aexp,f
  7349  075D  2F63               	goto	l3033
  7350  075E                     l852:	
  7351  075E  1C34               	btfss	___flmul@prod,0
  7352  075F  2F61               	goto	u4061
  7353  0760  2F62               	goto	u4060
  7354  0761                     u4061:	
  7355  0761  2F63               	goto	l3033
  7356  0762                     u4060:	
  7357  0762  2F5B               	goto	l3029
  7358  0763                     l3033:	
  7359  0763  0832               	movf	___flmul@aexp,w
  7360  0764  1903               	btfsc	3,2
  7361  0765  2F67               	goto	u4071
  7362  0766  2F68               	goto	u4070
  7363  0767                     u4071:	
  7364  0767  2F99               	goto	l3043
  7365  0768                     u4070:	
  7366  0768                     l3035:	
  7367  0768  3001               	movlw	1
  7368  0769  07B4               	addwf	___flmul@prod,f
  7369  076A  3000               	movlw	0
  7370  076B  1803               	skipnc
  7371  076C  3001               	movlw	1
  7372  076D  07B5               	addwf	___flmul@prod+1,f
  7373  076E  3000               	movlw	0
  7374  076F  1803               	skipnc
  7375  0770  3001               	movlw	1
  7376  0771  07B6               	addwf	___flmul@prod+2,f
  7377  0772  3000               	movlw	0
  7378  0773  1803               	skipnc
  7379  0774  3001               	movlw	1
  7380  0775  07B7               	addwf	___flmul@prod+3,f
  7381  0776                     l3037:	
  7382  0776  1C37               	btfss	___flmul@prod+3,0
  7383  0777  2F79               	goto	u4081
  7384  0778  2F7A               	goto	u4080
  7385  0779                     u4081:	
  7386  0779  2F99               	goto	l3043
  7387  077A                     u4080:	
  7388  077A                     l3039:	
  7389  077A  0834               	movf	___flmul@prod,w
  7390  077B  00A8               	movwf	??___flmul
  7391  077C  0835               	movf	___flmul@prod+1,w
  7392  077D  00A9               	movwf	??___flmul+1
  7393  077E  0836               	movf	___flmul@prod+2,w
  7394  077F  00AA               	movwf	??___flmul+2
  7395  0780  0837               	movf	___flmul@prod+3,w
  7396  0781  00AB               	movwf	??___flmul+3
  7397  0782  3001               	movlw	1
  7398  0783  00AC               	movwf	??___flmul+4
  7399  0784                     u4095:	
  7400  0784  0D2B               	rlf	??___flmul+3,w
  7401  0785  0CAB               	rrf	??___flmul+3,f
  7402  0786  0CAA               	rrf	??___flmul+2,f
  7403  0787  0CA9               	rrf	??___flmul+1,f
  7404  0788  0CA8               	rrf	??___flmul,f
  7405  0789                     u4090:	
  7406  0789  0BAC               	decfsz	??___flmul+4,f
  7407  078A  2F84               	goto	u4095
  7408  078B  082B               	movf	??___flmul+3,w
  7409  078C  00B7               	movwf	___flmul@prod+3
  7410  078D  082A               	movf	??___flmul+2,w
  7411  078E  00B6               	movwf	___flmul@prod+2
  7412  078F  0829               	movf	??___flmul+1,w
  7413  0790  00B5               	movwf	___flmul@prod+1
  7414  0791  0828               	movf	??___flmul,w
  7415  0792  00B4               	movwf	___flmul@prod
  7416  0793                     l3041:	
  7417  0793  3001               	movlw	1
  7418  0794  07B8               	addwf	___flmul@temp,f
  7419  0795  1803               	skipnc
  7420  0796  0AB9               	incf	___flmul@temp+1,f
  7421  0797  3000               	movlw	0
  7422  0798  07B9               	addwf	___flmul@temp+1,f
  7423  0799                     l3043:	
  7424  0799  0839               	movf	___flmul@temp+1,w
  7425  079A  3A80               	xorlw	128
  7426  079B  00FF               	movwf	btemp+1
  7427  079C  3080               	movlw	128
  7428  079D  027F               	subwf	btemp+1,w
  7429  079E  1D03               	skipz
  7430  079F  2FA2               	goto	u4105
  7431  07A0  30FF               	movlw	255
  7432  07A1  0238               	subwf	___flmul@temp,w
  7433  07A2                     u4105:	
  7434  07A2  1C03               	skipc
  7435  07A3  2FA5               	goto	u4101
  7436  07A4  2FA6               	goto	u4100
  7437  07A5                     u4101:	
  7438  07A5  2FB1               	goto	l3047
  7439  07A6                     u4100:	
  7440  07A6                     l3045:	
  7441  07A6  307F               	movlw	127
  7442  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  7443  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  7444  07A9  00B7               	movwf	___flmul@prod+3
  7445  07AA  3080               	movlw	128
  7446  07AB  00B6               	movwf	___flmul@prod+2
  7447  07AC  3000               	movlw	0
  7448  07AD  00B5               	movwf	___flmul@prod+1
  7449  07AE  3000               	movlw	0
  7450  07AF  00B4               	movwf	___flmul@prod
  7451  07B0  2FE6               	goto	l858
  7452  07B1                     l3047:	
  7453  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  7454  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  7455  07B3  0839               	movf	___flmul@temp+1,w
  7456  07B4  3A80               	xorlw	128
  7457  07B5  00FF               	movwf	btemp+1
  7458  07B6  3080               	movlw	128
  7459  07B7  027F               	subwf	btemp+1,w
  7460  07B8  1D03               	skipz
  7461  07B9  2FBC               	goto	u4115
  7462  07BA  3001               	movlw	1
  7463  07BB  0238               	subwf	___flmul@temp,w
  7464  07BC                     u4115:	
  7465  07BC  1803               	skipnc
  7466  07BD  2FBF               	goto	u4111
  7467  07BE  2FC0               	goto	u4110
  7468  07BF                     u4111:	
  7469  07BF  2FCC               	goto	l3053
  7470  07C0                     u4110:	
  7471  07C0                     l3049:	
  7472  07C0  3000               	movlw	0
  7473  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  7474  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  7475  07C3  00B7               	movwf	___flmul@prod+3
  7476  07C4  3000               	movlw	0
  7477  07C5  00B6               	movwf	___flmul@prod+2
  7478  07C6  3000               	movlw	0
  7479  07C7  00B5               	movwf	___flmul@prod+1
  7480  07C8  3000               	movlw	0
  7481  07C9  00B4               	movwf	___flmul@prod
  7482  07CA                     l3051:	
  7483  07CA  01AD               	clrf	___flmul@sign
  7484  07CB  2FE6               	goto	l858
  7485  07CC                     l3053:	
  7486  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  7487  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  7488  07CE  0838               	movf	___flmul@temp,w
  7489  07CF  00A8               	movwf	??___flmul
  7490  07D0  0828               	movf	??___flmul,w
  7491  07D1  00B3               	movwf	___flmul@bexp
  7492  07D2  30FF               	movlw	255
  7493  07D3  05B4               	andwf	___flmul@prod,f
  7494  07D4  30FF               	movlw	255
  7495  07D5  05B5               	andwf	___flmul@prod+1,f
  7496  07D6  307F               	movlw	127
  7497  07D7  05B6               	andwf	___flmul@prod+2,f
  7498  07D8  3000               	movlw	0
  7499  07D9  05B7               	andwf	___flmul@prod+3,f
  7500  07DA                     l3055:	
  7501  07DA  1C33               	btfss	___flmul@bexp,0
  7502  07DB  2FDD               	goto	u4121
  7503  07DC  2FDE               	goto	u4120
  7504  07DD                     u4121:	
  7505  07DD  2FDF               	goto	l3059
  7506  07DE                     u4120:	
  7507  07DE                     l3057:	
  7508  07DE  17B6               	bsf	___flmul@prod+2,7
  7509  07DF                     l3059:	
  7510  07DF  0833               	movf	___flmul@bexp,w
  7511  07E0  00A8               	movwf	??___flmul
  7512  07E1  1003               	clrc
  7513  07E2  0C28               	rrf	??___flmul,w
  7514  07E3  00A9               	movwf	??___flmul+1
  7515  07E4  0829               	movf	??___flmul+1,w
  7516  07E5  00B7               	movwf	___flmul@prod+3
  7517  07E6                     l858:	
  7518  07E6  082D               	movf	___flmul@sign,w
  7519  07E7  00A8               	movwf	??___flmul
  7520  07E8  0828               	movf	??___flmul,w
  7521  07E9  04B7               	iorwf	___flmul@prod+3,f
  7522  07EA                     l3061:	
  7523  07EA  0837               	movf	___flmul@prod+3,w
  7524  07EB  00A3               	movwf	?___flmul+3
  7525  07EC  0836               	movf	___flmul@prod+2,w
  7526  07ED  00A2               	movwf	?___flmul+2
  7527  07EE  0835               	movf	___flmul@prod+1,w
  7528  07EF  00A1               	movwf	?___flmul+1
  7529  07F0  0834               	movf	___flmul@prod,w
  7530  07F1  00A0               	movwf	?___flmul
  7531  07F2                     l846:	
  7532  07F2  0008               	return
  7533  07F3                     __end_of___flmul:	
  7534                           
  7535                           	psect	text24
  7536  0006                     __ptext24:	
  7537 ;; *************** function __Umul8_16 *****************
  7538 ;; Defined at:
  7539 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  7540 ;; Parameters:    Size  Location     Type
  7541 ;;  multiplier      1    wreg     unsigned char 
  7542 ;;  multiplicand    1    0[COMMON] unsigned char 
  7543 ;; Auto vars:     Size  Location     Type
  7544 ;;  multiplier      1    8[COMMON] unsigned char 
  7545 ;;  word_mpld       2    6[COMMON] unsigned int 
  7546 ;;  product         2    4[COMMON] unsigned int 
  7547 ;; Return value:  Size  Location     Type
  7548 ;;                  2    0[COMMON] unsigned int 
  7549 ;; Registers used:
  7550 ;;		wreg, status,2, status,0
  7551 ;; Tracked objects:
  7552 ;;		On entry : 0/0
  7553 ;;		On exit  : 0/0
  7554 ;;		Unchanged: 0/0
  7555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7556 ;;      Params:         2       0       0       0       0
  7557 ;;      Locals:         5       0       0       0       0
  7558 ;;      Temps:          2       0       0       0       0
  7559 ;;      Totals:         9       0       0       0       0
  7560 ;;Total ram usage:        9 bytes
  7561 ;; Hardware stack levels used:    1
  7562 ;; This function calls:
  7563 ;;		Nothing
  7564 ;; This function is called by:
  7565 ;;		___flmul
  7566 ;; This function uses a non-reentrant model
  7567 ;;
  7568                           
  7569                           
  7570                           ;psect for function __Umul8_16
  7571  0006                     __Umul8_16:	
  7572                           
  7573                           ;incstack = 0
  7574                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7575                           ;__Umul8_16@multiplier stored from wreg
  7576  0006  00F8               	movwf	__Umul8_16@multiplier
  7577  0007                     l2677:	
  7578  0007  01F4               	clrf	__Umul8_16@product
  7579  0008  01F5               	clrf	__Umul8_16@product+1
  7580  0009                     l2679:	
  7581  0009  0870               	movf	__Umul8_16@multiplicand,w
  7582  000A  00F2               	movwf	??__Umul8_16
  7583  000B  01F3               	clrf	??__Umul8_16+1
  7584  000C  0872               	movf	??__Umul8_16,w
  7585  000D  00F6               	movwf	__Umul8_16@word_mpld
  7586  000E  0873               	movf	??__Umul8_16+1,w
  7587  000F  00F7               	movwf	__Umul8_16@word_mpld+1
  7588  0010                     l2681:	
  7589  0010  1C78               	btfss	__Umul8_16@multiplier,0
  7590  0011  2813               	goto	u3261
  7591  0012  2814               	goto	u3260
  7592  0013                     u3261:	
  7593  0013  281A               	goto	l903
  7594  0014                     u3260:	
  7595  0014                     l2683:	
  7596  0014  0876               	movf	__Umul8_16@word_mpld,w
  7597  0015  07F4               	addwf	__Umul8_16@product,f
  7598  0016  1803               	skipnc
  7599  0017  0AF5               	incf	__Umul8_16@product+1,f
  7600  0018  0877               	movf	__Umul8_16@word_mpld+1,w
  7601  0019  07F5               	addwf	__Umul8_16@product+1,f
  7602  001A                     l903:	
  7603  001A  3001               	movlw	1
  7604  001B                     u3275:	
  7605  001B  1003               	clrc
  7606  001C  0DF6               	rlf	__Umul8_16@word_mpld,f
  7607  001D  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  7608  001E  3EFF               	addlw	-1
  7609  001F  1D03               	skipz
  7610  0020  281B               	goto	u3275
  7611  0021  1003               	clrc
  7612  0022  0CF8               	rrf	__Umul8_16@multiplier,f
  7613  0023                     l2685:	
  7614  0023  0878               	movf	__Umul8_16@multiplier,w
  7615  0024  1D03               	btfss	3,2
  7616  0025  2827               	goto	u3281
  7617  0026  2828               	goto	u3280
  7618  0027                     u3281:	
  7619  0027  2810               	goto	l2681
  7620  0028                     u3280:	
  7621  0028                     l2687:	
  7622  0028  0875               	movf	__Umul8_16@product+1,w
  7623  0029  00F1               	movwf	?__Umul8_16+1
  7624  002A  0874               	movf	__Umul8_16@product,w
  7625  002B  00F0               	movwf	?__Umul8_16
  7626  002C                     l905:	
  7627  002C  0008               	return
  7628  002D                     __end_of__Umul8_16:	
  7629                           
  7630                           	psect	text25
  7631  13E8                     __ptext25:	
  7632 ;; *************** function _Lcd_Write_Int *****************
  7633 ;; Defined at:
  7634 ;;		line 117 in file "./lcd.h"
  7635 ;; Parameters:    Size  Location     Type
  7636 ;;  num             2   11[BANK1 ] int 
  7637 ;; Auto vars:     Size  Location     Type
  7638 ;;  number          8   14[BANK1 ] unsigned char [8]
  7639 ;; Return value:  Size  Location     Type
  7640 ;;                  1    wreg      void 
  7641 ;; Registers used:
  7642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7643 ;; Tracked objects:
  7644 ;;		On entry : 0/0
  7645 ;;		On exit  : 0/0
  7646 ;;		Unchanged: 0/0
  7647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7648 ;;      Params:         0       0       2       0       0
  7649 ;;      Locals:         0       0       8       0       0
  7650 ;;      Temps:          0       0       1       0       0
  7651 ;;      Totals:         0       0      11       0       0
  7652 ;;Total ram usage:       11 bytes
  7653 ;; Hardware stack levels used:    1
  7654 ;; Hardware stack levels required when called:    3
  7655 ;; This function calls:
  7656 ;;		_Lcd_Write_String
  7657 ;;		_sprintf
  7658 ;; This function is called by:
  7659 ;;		_LCD
  7660 ;; This function uses a non-reentrant model
  7661 ;;
  7662                           
  7663                           
  7664                           ;psect for function _Lcd_Write_Int
  7665  13E8                     _Lcd_Write_Int:	
  7666  13E8                     l2713:	
  7667                           ;incstack = 0
  7668                           ; Regs used in _Lcd_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7669                           
  7670                           
  7671                           ;./lcd.h: 118:     char number[8];;./lcd.h: 119:     sprintf(number,"%d",num);
  7672  13E8  3035               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  7673  13E9  1683               	bsf	3,5	;RP0=1, select bank1
  7674  13EA  1303               	bcf	3,6	;RP1=0, select bank1
  7675  13EB  00AD               	movwf	??_Lcd_Write_Int^(0+128)
  7676  13EC  082D               	movf	??_Lcd_Write_Int^(0+128),w
  7677  13ED  1283               	bcf	3,5	;RP0=0, select bank0
  7678  13EE  1303               	bcf	3,6	;RP1=0, select bank0
  7679  13EF  00A0               	movwf	sprintf@f
  7680  13F0  1683               	bsf	3,5	;RP0=1, select bank1
  7681  13F1  1303               	bcf	3,6	;RP1=0, select bank1
  7682  13F2  082C               	movf	(Lcd_Write_Int@num+1)^(0+128),w
  7683  13F3  1283               	bcf	3,5	;RP0=0, select bank0
  7684  13F4  1303               	bcf	3,6	;RP1=0, select bank0
  7685  13F5  00A2               	movwf	?_sprintf+2
  7686  13F6  1683               	bsf	3,5	;RP0=1, select bank1
  7687  13F7  1303               	bcf	3,6	;RP1=0, select bank1
  7688  13F8  082B               	movf	Lcd_Write_Int@num^(0+128),w
  7689  13F9  1283               	bcf	3,5	;RP0=0, select bank0
  7690  13FA  1303               	bcf	3,6	;RP1=0, select bank0
  7691  13FB  00A1               	movwf	?_sprintf+1
  7692  13FC  30AE               	movlw	(low (Lcd_Write_Int@number| 0))& (0+255)
  7693  13FD  120A  158A  2281  160A  118A  	fcall	_sprintf
  7694                           
  7695                           ;./lcd.h: 120:     Lcd_Write_String(number);
  7696  1402  30AE               	movlw	(low (Lcd_Write_Int@number| 0))& (0+255)
  7697  1403  00F5               	movwf	Lcd_Write_String@a
  7698  1404  3000               	movlw	0
  7699  1405  00F6               	movwf	Lcd_Write_String@a+1
  7700  1406  160A  118A  24E6  160A  118A  	fcall	_Lcd_Write_String
  7701  140B                     l122:	
  7702  140B  0008               	return
  7703  140C                     __end_of_Lcd_Write_Int:	
  7704                           
  7705                           	psect	text26
  7706  0A81                     __ptext26:	
  7707 ;; *************** function _sprintf *****************
  7708 ;; Defined at:
  7709 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  7710 ;; Parameters:    Size  Location     Type
  7711 ;;  sp              1    wreg     PTR unsigned char 
  7712 ;;		 -> Lcd_Write_Int@number(8), 
  7713 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  7714 ;;		 -> STR_1(3), 
  7715 ;; Auto vars:     Size  Location     Type
  7716 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  7717 ;;		 -> Lcd_Write_Int@number(8), 
  7718 ;;  tmpval          4    0        struct .
  7719 ;;  val             2    9[BANK0 ] unsigned int 
  7720 ;;  cp              2    0        PTR const unsigned char 
  7721 ;;  len             2    0        unsigned int 
  7722 ;;  c               1   12[BANK0 ] unsigned char 
  7723 ;;  prec            1    8[BANK0 ] char 
  7724 ;;  flag            1    7[BANK0 ] unsigned char 
  7725 ;;  ap              1    6[BANK0 ] PTR void [1]
  7726 ;;		 -> ?_sprintf(2), 
  7727 ;; Return value:  Size  Location     Type
  7728 ;;                  2    0[BANK0 ] int 
  7729 ;; Registers used:
  7730 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7731 ;; Tracked objects:
  7732 ;;		On entry : 0/0
  7733 ;;		On exit  : 0/0
  7734 ;;		Unchanged: 0/0
  7735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7736 ;;      Params:         0       3       0       0       0
  7737 ;;      Locals:         0       7       0       0       0
  7738 ;;      Temps:          0       3       0       0       0
  7739 ;;      Totals:         0      13       0       0       0
  7740 ;;Total ram usage:       13 bytes
  7741 ;; Hardware stack levels used:    1
  7742 ;; Hardware stack levels required when called:    1
  7743 ;; This function calls:
  7744 ;;		___lwdiv
  7745 ;;		___lwmod
  7746 ;; This function is called by:
  7747 ;;		_Lcd_Write_Int
  7748 ;; This function uses a non-reentrant model
  7749 ;;
  7750                           
  7751                           
  7752                           ;psect for function _sprintf
  7753  0A81                     _sprintf:	
  7754                           
  7755                           ;incstack = 0
  7756                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7757                           ;sprintf@sp stored from wreg
  7758  0A81  1283               	bcf	3,5	;RP0=0, select bank0
  7759  0A82  1303               	bcf	3,6	;RP1=0, select bank0
  7760  0A83  00AB               	movwf	sprintf@sp
  7761  0A84                     l2421:	
  7762                           
  7763                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .10\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;
  7764  0A84  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  7765  0A85  00A3               	movwf	??_sprintf
  7766  0A86  0823               	movf	??_sprintf,w
  7767  0A87  00A6               	movwf	sprintf@ap
  7768                           
  7769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  7770  0A88  2B52               	goto	l2473
  7771  0A89                     l2423:	
  7772                           
  7773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  7774  0A89  3025               	movlw	37
  7775  0A8A  062C               	xorwf	sprintf@c,w
  7776  0A8B  1903               	btfsc	3,2
  7777  0A8C  2A8E               	goto	u2731
  7778  0A8D  2A8F               	goto	u2730
  7779  0A8E                     u2731:	
  7780  0A8E  2A9B               	goto	l2429
  7781  0A8F                     u2730:	
  7782  0A8F                     l2425:	
  7783                           
  7784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  7785  0A8F  082C               	movf	sprintf@c,w
  7786  0A90  00A3               	movwf	??_sprintf
  7787  0A91  082B               	movf	sprintf@sp,w
  7788  0A92  0084               	movwf	4
  7789  0A93  0823               	movf	??_sprintf,w
  7790  0A94  1383               	bcf	3,7	;select IRP bank0
  7791  0A95  0080               	movwf	0
  7792  0A96                     l2427:	
  7793  0A96  3001               	movlw	1
  7794  0A97  00A3               	movwf	??_sprintf
  7795  0A98  0823               	movf	??_sprintf,w
  7796  0A99  07AB               	addwf	sprintf@sp,f
  7797                           
  7798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  7799  0A9A  2B52               	goto	l2473
  7800  0A9B                     l2429:	
  7801                           
  7802                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  7803  0A9B  01A7               	clrf	sprintf@flag
  7804  0A9C                     l2433:	
  7805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 661:   swit
      +                          ch(c = *f++) {
  7806                           
  7807  0A9C  3001               	movlw	1
  7808  0A9D  07A0               	addwf	sprintf@f,f
  7809  0A9E  30FF               	movlw	-1
  7810  0A9F  0720               	addwf	sprintf@f,w
  7811  0AA0  0084               	movwf	4
  7812  0AA1  160A  118A  200A  120A  158A  	fcall	stringdir
  7813  0AA6  00AC               	movwf	sprintf@c
  7814  0AA7  00A3               	movwf	??_sprintf
  7815  0AA8  01A4               	clrf	??_sprintf+1
  7816                           
  7817                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7818                           ; Switch size 1, requested type "simple"
  7819                           ; Number of cases is 1, Range of values is 0 to 0
  7820                           ; switch strategies available:
  7821                           ; Name         Instructions Cycles
  7822                           ; simple_byte            4     3 (average)
  7823                           ; direct_byte           11     8 (fixed)
  7824                           ; jumptable            260     6 (fixed)
  7825                           ;	Chosen strategy is simple_byte
  7826  0AA9  0824               	movf	??_sprintf+1,w
  7827  0AAA  3A00               	xorlw	0	; case 0
  7828  0AAB  1903               	skipnz
  7829  0AAC  2AAE               	goto	l3743
  7830  0AAD  2B52               	goto	l2473
  7831  0AAE                     l3743:	
  7832                           
  7833                           ; Switch size 1, requested type "simple"
  7834                           ; Number of cases is 3, Range of values is 0 to 105
  7835                           ; switch strategies available:
  7836                           ; Name         Instructions Cycles
  7837                           ; simple_byte           10     6 (average)
  7838                           ; jumptable            260     6 (fixed)
  7839                           ;	Chosen strategy is simple_byte
  7840  0AAE  0823               	movf	??_sprintf,w
  7841  0AAF  3A00               	xorlw	0	; case 0
  7842  0AB0  1903               	skipnz
  7843  0AB1  2B64               	goto	l2475
  7844  0AB2  3A64               	xorlw	100	; case 100
  7845  0AB3  1903               	skipnz
  7846  0AB4  2AB9               	goto	l2435
  7847  0AB5  3A0D               	xorlw	13	; case 105
  7848  0AB6  1903               	skipnz
  7849  0AB7  2AB9               	goto	l2435
  7850  0AB8  2B52               	goto	l2473
  7851  0AB9                     l2435:	
  7852                           
  7853                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1279:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
  7854  0AB9  0826               	movf	sprintf@ap,w
  7855  0ABA  0084               	movwf	4
  7856  0ABB  1383               	bcf	3,7	;select IRP bank0
  7857  0ABC  0800               	movf	0,w
  7858  0ABD  00A9               	movwf	sprintf@val
  7859  0ABE  0A84               	incf	4,f
  7860  0ABF  0800               	movf	0,w
  7861  0AC0  00AA               	movwf	sprintf@val+1
  7862  0AC1                     l2437:	
  7863  0AC1  3002               	movlw	2
  7864  0AC2  00A3               	movwf	??_sprintf
  7865  0AC3  0823               	movf	??_sprintf,w
  7866  0AC4  07A6               	addwf	sprintf@ap,f
  7867  0AC5                     l2439:	
  7868                           
  7869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((int)val < 0) {
  7870  0AC5  1FAA               	btfss	sprintf@val+1,7
  7871  0AC6  2AC8               	goto	u2741
  7872  0AC7  2AC9               	goto	u2740
  7873  0AC8                     u2741:	
  7874  0AC8  2AD2               	goto	l2445
  7875  0AC9                     u2740:	
  7876  0AC9                     l2441:	
  7877                           
  7878                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
  7879  0AC9  3003               	movlw	3
  7880  0ACA  00A3               	movwf	??_sprintf
  7881  0ACB  0823               	movf	??_sprintf,w
  7882  0ACC  04A7               	iorwf	sprintf@flag,f
  7883  0ACD                     l2443:	
  7884                           
  7885                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
  7886  0ACD  09A9               	comf	sprintf@val,f
  7887  0ACE  09AA               	comf	sprintf@val+1,f
  7888  0ACF  0AA9               	incf	sprintf@val,f
  7889  0AD0  1903               	skipnz
  7890  0AD1  0AAA               	incf	sprintf@val+1,f
  7891  0AD2                     l2445:	
  7892                           
  7893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1292:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7894  0AD2  01AC               	clrf	sprintf@c
  7895  0AD3  0AAC               	incf	sprintf@c,f
  7896  0AD4                     l2451:	
  7897                           
  7898                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
  7899  0AD4  082C               	movf	sprintf@c,w
  7900  0AD5  00A3               	movwf	??_sprintf
  7901  0AD6  0723               	addwf	??_sprintf,w
  7902  0AD7  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  7903  0AD8  0084               	movwf	4
  7904  0AD9  160A  118A  200A  120A  158A  	fcall	stringdir
  7905  0ADE  00A4               	movwf	??_sprintf+1
  7906  0ADF  160A  118A  200A  120A  158A  	fcall	stringdir
  7907  0AE4  00A5               	movwf	??_sprintf+2
  7908  0AE5  0825               	movf	??_sprintf+2,w
  7909  0AE6  022A               	subwf	sprintf@val+1,w
  7910  0AE7  1D03               	skipz
  7911  0AE8  2AEB               	goto	u2755
  7912  0AE9  0824               	movf	??_sprintf+1,w
  7913  0AEA  0229               	subwf	sprintf@val,w
  7914  0AEB                     u2755:	
  7915  0AEB  1803               	skipnc
  7916  0AEC  2AEE               	goto	u2751
  7917  0AED  2AEF               	goto	u2750
  7918  0AEE                     u2751:	
  7919  0AEE  2AF0               	goto	l2455
  7920  0AEF                     u2750:	
  7921  0AEF  2AFA               	goto	l2457
  7922  0AF0                     l2455:	
  7923  0AF0  3001               	movlw	1
  7924  0AF1  00A3               	movwf	??_sprintf
  7925  0AF2  0823               	movf	??_sprintf,w
  7926  0AF3  07AC               	addwf	sprintf@c,f
  7927  0AF4  3005               	movlw	5
  7928  0AF5  062C               	xorwf	sprintf@c,w
  7929  0AF6  1D03               	btfss	3,2
  7930  0AF7  2AF9               	goto	u2761
  7931  0AF8  2AFA               	goto	u2760
  7932  0AF9                     u2761:	
  7933  0AF9  2AD4               	goto	l2451
  7934  0AFA                     u2760:	
  7935  0AFA                     l2457:	
  7936                           
  7937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
  7938  0AFA  0827               	movf	sprintf@flag,w
  7939  0AFB  3903               	andlw	3
  7940  0AFC  1903               	btfsc	3,2
  7941  0AFD  2AFF               	goto	u2771
  7942  0AFE  2B00               	goto	u2770
  7943  0AFF                     u2771:	
  7944  0AFF  2B0B               	goto	l2463
  7945  0B00                     u2770:	
  7946  0B00                     l2459:	
  7947                           
  7948                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  7949  0B00  302D               	movlw	45
  7950  0B01  00A3               	movwf	??_sprintf
  7951  0B02  082B               	movf	sprintf@sp,w
  7952  0B03  0084               	movwf	4
  7953  0B04  0823               	movf	??_sprintf,w
  7954  0B05  1383               	bcf	3,7	;select IRP bank0
  7955  0B06  0080               	movwf	0
  7956  0B07                     l2461:	
  7957  0B07  3001               	movlw	1
  7958  0B08  00A3               	movwf	??_sprintf
  7959  0B09  0823               	movf	??_sprintf,w
  7960  0B0A  07AB               	addwf	sprintf@sp,f
  7961  0B0B                     l2463:	
  7962                           
  7963                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1495:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1498:   prec 
      +                          = c;
  7964  0B0B  082C               	movf	sprintf@c,w
  7965  0B0C  00A3               	movwf	??_sprintf
  7966  0B0D  0823               	movf	??_sprintf,w
  7967  0B0E  00A8               	movwf	sprintf@prec
  7968                           
  7969                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  7970  0B0F  2B49               	goto	l2471
  7971  0B10                     l2465:	
  7972                           
  7973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  7974  0B10  300A               	movlw	10
  7975  0B11  00F8               	movwf	___lwmod@divisor
  7976  0B12  3000               	movlw	0
  7977  0B13  00F9               	movwf	___lwmod@divisor+1
  7978  0B14  0828               	movf	sprintf@prec,w
  7979  0B15  00A3               	movwf	??_sprintf
  7980  0B16  0723               	addwf	??_sprintf,w
  7981  0B17  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  7982  0B18  0084               	movwf	4
  7983  0B19  160A  118A  200A  120A  158A  	fcall	stringdir
  7984  0B1E  00F0               	movwf	___lwdiv@divisor
  7985  0B1F  160A  118A  200A  120A  158A  	fcall	stringdir
  7986  0B24  00F1               	movwf	___lwdiv@divisor+1
  7987  0B25  082A               	movf	sprintf@val+1,w
  7988  0B26  00F3               	movwf	___lwdiv@dividend+1
  7989  0B27  0829               	movf	sprintf@val,w
  7990  0B28  00F2               	movwf	___lwdiv@dividend
  7991  0B29  160A  118A  2528  120A  158A  	fcall	___lwdiv
  7992  0B2E  0871               	movf	?___lwdiv+1,w
  7993  0B2F  00FB               	movwf	___lwmod@dividend+1
  7994  0B30  0870               	movf	?___lwdiv,w
  7995  0B31  00FA               	movwf	___lwmod@dividend
  7996  0B32  120A  158A  2001  120A  158A  	fcall	___lwmod
  7997  0B37  0878               	movf	?___lwmod,w
  7998  0B38  3E30               	addlw	48
  7999  0B39  1283               	bcf	3,5	;RP0=0, select bank0
  8000  0B3A  1303               	bcf	3,6	;RP1=0, select bank0
  8001  0B3B  00A4               	movwf	??_sprintf+1
  8002  0B3C  0824               	movf	??_sprintf+1,w
  8003  0B3D  00AC               	movwf	sprintf@c
  8004  0B3E                     l2467:	
  8005                           
  8006                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
  8007  0B3E  082C               	movf	sprintf@c,w
  8008  0B3F  00A3               	movwf	??_sprintf
  8009  0B40  082B               	movf	sprintf@sp,w
  8010  0B41  0084               	movwf	4
  8011  0B42  0823               	movf	??_sprintf,w
  8012  0B43  1383               	bcf	3,7	;select IRP bank0
  8013  0B44  0080               	movwf	0
  8014  0B45                     l2469:	
  8015  0B45  3001               	movlw	1
  8016  0B46  00A3               	movwf	??_sprintf
  8017  0B47  0823               	movf	??_sprintf,w
  8018  0B48  07AB               	addwf	sprintf@sp,f
  8019  0B49                     l2471:	
  8020                           
  8021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  8022  0B49  30FF               	movlw	255
  8023  0B4A  00A3               	movwf	??_sprintf
  8024  0B4B  0823               	movf	??_sprintf,w
  8025  0B4C  07A8               	addwf	sprintf@prec,f
  8026  0B4D  0A28               	incf	sprintf@prec,w
  8027  0B4E  1D03               	btfss	3,2
  8028  0B4F  2B51               	goto	u2781
  8029  0B50  2B52               	goto	u2780
  8030  0B51                     u2781:	
  8031  0B51  2B10               	goto	l2465
  8032  0B52                     u2780:	
  8033  0B52                     l2473:	
  8034                           
  8035                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  8036  0B52  3001               	movlw	1
  8037  0B53  07A0               	addwf	sprintf@f,f
  8038  0B54  30FF               	movlw	-1
  8039  0B55  0720               	addwf	sprintf@f,w
  8040  0B56  0084               	movwf	4
  8041  0B57  160A  118A  200A  120A  158A  	fcall	stringdir
  8042  0B5C  00A3               	movwf	??_sprintf
  8043  0B5D  0823               	movf	??_sprintf,w
  8044  0B5E  00AC               	movwf	sprintf@c
  8045  0B5F  082C               	movf	sprintf@c,w
  8046  0B60  1D03               	btfss	3,2
  8047  0B61  2B63               	goto	u2791
  8048  0B62  2B64               	goto	u2790
  8049  0B63                     u2791:	
  8050  0B63  2A89               	goto	l2423
  8051  0B64                     u2790:	
  8052  0B64                     l2475:	
  8053                           
  8054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  8055  0B64  082B               	movf	sprintf@sp,w
  8056  0B65  0084               	movwf	4
  8057  0B66  1383               	bcf	3,7	;select IRP bank0
  8058  0B67  0180               	clrf	0
  8059  0B68                     l453:	
  8060  0B68  0008               	return
  8061  0B69                     __end_of_sprintf:	
  8062                           
  8063                           	psect	text27
  8064  0801                     __ptext27:	
  8065 ;; *************** function ___lwmod *****************
  8066 ;; Defined at:
  8067 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  8068 ;; Parameters:    Size  Location     Type
  8069 ;;  divisor         2    8[COMMON] unsigned int 
  8070 ;;  dividend        2   10[COMMON] unsigned int 
  8071 ;; Auto vars:     Size  Location     Type
  8072 ;;  counter         1   13[COMMON] unsigned char 
  8073 ;; Return value:  Size  Location     Type
  8074 ;;                  2    8[COMMON] unsigned int 
  8075 ;; Registers used:
  8076 ;;		wreg, status,2, status,0
  8077 ;; Tracked objects:
  8078 ;;		On entry : 0/0
  8079 ;;		On exit  : 0/0
  8080 ;;		Unchanged: 0/0
  8081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8082 ;;      Params:         4       0       0       0       0
  8083 ;;      Locals:         1       0       0       0       0
  8084 ;;      Temps:          1       0       0       0       0
  8085 ;;      Totals:         6       0       0       0       0
  8086 ;;Total ram usage:        6 bytes
  8087 ;; Hardware stack levels used:    1
  8088 ;; This function calls:
  8089 ;;		Nothing
  8090 ;; This function is called by:
  8091 ;;		_sprintf
  8092 ;; This function uses a non-reentrant model
  8093 ;;
  8094                           
  8095                           
  8096                           ;psect for function ___lwmod
  8097  0801                     ___lwmod:	
  8098  0801                     l2381:	
  8099                           ;incstack = 0
  8100                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8101                           
  8102  0801  0878               	movf	___lwmod@divisor,w
  8103  0802  0479               	iorwf	___lwmod@divisor+1,w
  8104  0803  1903               	btfsc	3,2
  8105  0804  2806               	goto	u2641
  8106  0805  2807               	goto	u2640
  8107  0806                     u2641:	
  8108  0806  2836               	goto	l2399
  8109  0807                     u2640:	
  8110  0807                     l2383:	
  8111  0807  01FD               	clrf	___lwmod@counter
  8112  0808  0AFD               	incf	___lwmod@counter,f
  8113  0809  2815               	goto	l2389
  8114  080A                     l2385:	
  8115  080A  3001               	movlw	1
  8116  080B                     u2655:	
  8117  080B  1003               	clrc
  8118  080C  0DF8               	rlf	___lwmod@divisor,f
  8119  080D  0DF9               	rlf	___lwmod@divisor+1,f
  8120  080E  3EFF               	addlw	-1
  8121  080F  1D03               	skipz
  8122  0810  280B               	goto	u2655
  8123  0811                     l2387:	
  8124  0811  3001               	movlw	1
  8125  0812  00FC               	movwf	??___lwmod
  8126  0813  087C               	movf	??___lwmod,w
  8127  0814  07FD               	addwf	___lwmod@counter,f
  8128  0815                     l2389:	
  8129  0815  1FF9               	btfss	___lwmod@divisor+1,7
  8130  0816  2818               	goto	u2661
  8131  0817  2819               	goto	u2660
  8132  0818                     u2661:	
  8133  0818  280A               	goto	l2385
  8134  0819                     u2660:	
  8135  0819                     l2391:	
  8136  0819  0879               	movf	___lwmod@divisor+1,w
  8137  081A  027B               	subwf	___lwmod@dividend+1,w
  8138  081B  1D03               	skipz
  8139  081C  281F               	goto	u2675
  8140  081D  0878               	movf	___lwmod@divisor,w
  8141  081E  027A               	subwf	___lwmod@dividend,w
  8142  081F                     u2675:	
  8143  081F  1C03               	skipc
  8144  0820  2822               	goto	u2671
  8145  0821  2823               	goto	u2670
  8146  0822                     u2671:	
  8147  0822  2829               	goto	l2395
  8148  0823                     u2670:	
  8149  0823                     l2393:	
  8150  0823  0878               	movf	___lwmod@divisor,w
  8151  0824  02FA               	subwf	___lwmod@dividend,f
  8152  0825  0879               	movf	___lwmod@divisor+1,w
  8153  0826  1C03               	skipc
  8154  0827  03FB               	decf	___lwmod@dividend+1,f
  8155  0828  02FB               	subwf	___lwmod@dividend+1,f
  8156  0829                     l2395:	
  8157  0829  3001               	movlw	1
  8158  082A                     u2685:	
  8159  082A  1003               	clrc
  8160  082B  0CF9               	rrf	___lwmod@divisor+1,f
  8161  082C  0CF8               	rrf	___lwmod@divisor,f
  8162  082D  3EFF               	addlw	-1
  8163  082E  1D03               	skipz
  8164  082F  282A               	goto	u2685
  8165  0830                     l2397:	
  8166  0830  3001               	movlw	1
  8167  0831  02FD               	subwf	___lwmod@counter,f
  8168  0832  1D03               	btfss	3,2
  8169  0833  2835               	goto	u2691
  8170  0834  2836               	goto	u2690
  8171  0835                     u2691:	
  8172  0835  2819               	goto	l2391
  8173  0836                     u2690:	
  8174  0836                     l2399:	
  8175  0836  087B               	movf	___lwmod@dividend+1,w
  8176  0837  00F9               	movwf	?___lwmod+1
  8177  0838  087A               	movf	___lwmod@dividend,w
  8178  0839  00F8               	movwf	?___lwmod
  8179  083A                     l739:	
  8180  083A  0008               	return
  8181  083B                     __end_of___lwmod:	
  8182                           
  8183                           	psect	text28
  8184  1528                     __ptext28:	
  8185 ;; *************** function ___lwdiv *****************
  8186 ;; Defined at:
  8187 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  8188 ;; Parameters:    Size  Location     Type
  8189 ;;  divisor         2    0[COMMON] unsigned int 
  8190 ;;  dividend        2    2[COMMON] unsigned int 
  8191 ;; Auto vars:     Size  Location     Type
  8192 ;;  quotient        2    5[COMMON] unsigned int 
  8193 ;;  counter         1    7[COMMON] unsigned char 
  8194 ;; Return value:  Size  Location     Type
  8195 ;;                  2    0[COMMON] unsigned int 
  8196 ;; Registers used:
  8197 ;;		wreg, status,2, status,0
  8198 ;; Tracked objects:
  8199 ;;		On entry : 0/0
  8200 ;;		On exit  : 0/0
  8201 ;;		Unchanged: 0/0
  8202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8203 ;;      Params:         4       0       0       0       0
  8204 ;;      Locals:         3       0       0       0       0
  8205 ;;      Temps:          1       0       0       0       0
  8206 ;;      Totals:         8       0       0       0       0
  8207 ;;Total ram usage:        8 bytes
  8208 ;; Hardware stack levels used:    1
  8209 ;; This function calls:
  8210 ;;		Nothing
  8211 ;; This function is called by:
  8212 ;;		_sprintf
  8213 ;; This function uses a non-reentrant model
  8214 ;;
  8215                           
  8216                           
  8217                           ;psect for function ___lwdiv
  8218  1528                     ___lwdiv:	
  8219  1528                     l2355:	
  8220                           ;incstack = 0
  8221                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8222                           
  8223  1528  01F5               	clrf	___lwdiv@quotient
  8224  1529  01F6               	clrf	___lwdiv@quotient+1
  8225  152A                     l2357:	
  8226  152A  0870               	movf	___lwdiv@divisor,w
  8227  152B  0471               	iorwf	___lwdiv@divisor+1,w
  8228  152C  1903               	btfsc	3,2
  8229  152D  2D2F               	goto	u2571
  8230  152E  2D30               	goto	u2570
  8231  152F                     u2571:	
  8232  152F  2D67               	goto	l2377
  8233  1530                     u2570:	
  8234  1530                     l2359:	
  8235  1530  01F7               	clrf	___lwdiv@counter
  8236  1531  0AF7               	incf	___lwdiv@counter,f
  8237  1532  2D3E               	goto	l2365
  8238  1533                     l2361:	
  8239  1533  3001               	movlw	1
  8240  1534                     u2585:	
  8241  1534  1003               	clrc
  8242  1535  0DF0               	rlf	___lwdiv@divisor,f
  8243  1536  0DF1               	rlf	___lwdiv@divisor+1,f
  8244  1537  3EFF               	addlw	-1
  8245  1538  1D03               	skipz
  8246  1539  2D34               	goto	u2585
  8247  153A                     l2363:	
  8248  153A  3001               	movlw	1
  8249  153B  00F4               	movwf	??___lwdiv
  8250  153C  0874               	movf	??___lwdiv,w
  8251  153D  07F7               	addwf	___lwdiv@counter,f
  8252  153E                     l2365:	
  8253  153E  1FF1               	btfss	___lwdiv@divisor+1,7
  8254  153F  2D41               	goto	u2591
  8255  1540  2D42               	goto	u2590
  8256  1541                     u2591:	
  8257  1541  2D33               	goto	l2361
  8258  1542                     u2590:	
  8259  1542                     l2367:	
  8260  1542  3001               	movlw	1
  8261  1543                     u2605:	
  8262  1543  1003               	clrc
  8263  1544  0DF5               	rlf	___lwdiv@quotient,f
  8264  1545  0DF6               	rlf	___lwdiv@quotient+1,f
  8265  1546  3EFF               	addlw	-1
  8266  1547  1D03               	skipz
  8267  1548  2D43               	goto	u2605
  8268  1549  0871               	movf	___lwdiv@divisor+1,w
  8269  154A  0273               	subwf	___lwdiv@dividend+1,w
  8270  154B  1D03               	skipz
  8271  154C  2D4F               	goto	u2615
  8272  154D  0870               	movf	___lwdiv@divisor,w
  8273  154E  0272               	subwf	___lwdiv@dividend,w
  8274  154F                     u2615:	
  8275  154F  1C03               	skipc
  8276  1550  2D52               	goto	u2611
  8277  1551  2D53               	goto	u2610
  8278  1552                     u2611:	
  8279  1552  2D5A               	goto	l2373
  8280  1553                     u2610:	
  8281  1553                     l2369:	
  8282  1553  0870               	movf	___lwdiv@divisor,w
  8283  1554  02F2               	subwf	___lwdiv@dividend,f
  8284  1555  0871               	movf	___lwdiv@divisor+1,w
  8285  1556  1C03               	skipc
  8286  1557  03F3               	decf	___lwdiv@dividend+1,f
  8287  1558  02F3               	subwf	___lwdiv@dividend+1,f
  8288  1559                     l2371:	
  8289  1559  1475               	bsf	___lwdiv@quotient,0
  8290  155A                     l2373:	
  8291  155A  3001               	movlw	1
  8292  155B                     u2625:	
  8293  155B  1003               	clrc
  8294  155C  0CF1               	rrf	___lwdiv@divisor+1,f
  8295  155D  0CF0               	rrf	___lwdiv@divisor,f
  8296  155E  3EFF               	addlw	-1
  8297  155F  1D03               	skipz
  8298  1560  2D5B               	goto	u2625
  8299  1561                     l2375:	
  8300  1561  3001               	movlw	1
  8301  1562  02F7               	subwf	___lwdiv@counter,f
  8302  1563  1D03               	btfss	3,2
  8303  1564  2D66               	goto	u2631
  8304  1565  2D67               	goto	u2630
  8305  1566                     u2631:	
  8306  1566  2D42               	goto	l2367
  8307  1567                     u2630:	
  8308  1567                     l2377:	
  8309  1567  0876               	movf	___lwdiv@quotient+1,w
  8310  1568  00F1               	movwf	?___lwdiv+1
  8311  1569  0875               	movf	___lwdiv@quotient,w
  8312  156A  00F0               	movwf	?___lwdiv
  8313  156B                     l729:	
  8314  156B  0008               	return
  8315  156C                     __end_of___lwdiv:	
  8316                           
  8317                           	psect	text29
  8318  14E6                     __ptext29:	
  8319 ;; *************** function _Lcd_Write_String *****************
  8320 ;; Defined at:
  8321 ;;		line 98 in file "./lcd.h"
  8322 ;; Parameters:    Size  Location     Type
  8323 ;;  a               2    5[COMMON] PTR unsigned char 
  8324 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(3), 
  8325 ;;		 -> STR_6(3), STR_5(3), STR_4(8), STR_3(16), 
  8326 ;;		 -> STR_2(9), Lcd_Write_Int@number(8), 
  8327 ;; Auto vars:     Size  Location     Type
  8328 ;;  i               2   10[COMMON] int 
  8329 ;; Return value:  Size  Location     Type
  8330 ;;                  1    wreg      void 
  8331 ;; Registers used:
  8332 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8333 ;; Tracked objects:
  8334 ;;		On entry : 0/0
  8335 ;;		On exit  : 0/0
  8336 ;;		Unchanged: 0/0
  8337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8338 ;;      Params:         2       0       0       0       0
  8339 ;;      Locals:         2       0       0       0       0
  8340 ;;      Temps:          3       0       0       0       0
  8341 ;;      Totals:         7       0       0       0       0
  8342 ;;Total ram usage:        7 bytes
  8343 ;; Hardware stack levels used:    1
  8344 ;; Hardware stack levels required when called:    2
  8345 ;; This function calls:
  8346 ;;		_Lcd_Write_Char
  8347 ;; This function is called by:
  8348 ;;		_Lcd_Write_Int
  8349 ;;		_main
  8350 ;;		_hotList
  8351 ;;		_LCD
  8352 ;; This function uses a non-reentrant model
  8353 ;;
  8354                           
  8355                           
  8356                           ;psect for function _Lcd_Write_String
  8357  14E6                     _Lcd_Write_String:	
  8358  14E6                     l2413:	
  8359                           ;incstack = 0
  8360                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8361                           
  8362                           
  8363                           ;./lcd.h: 98: void Lcd_Write_String(char *a);./lcd.h: 99: {;./lcd.h: 100:  int i;;./lcd.
      +                          h: 101:  for(i=0;a[i]!='\0';i++)
  8364  14E6  01FA               	clrf	Lcd_Write_String@i
  8365  14E7  01FB               	clrf	Lcd_Write_String@i+1
  8366  14E8  2D0B               	goto	l2419
  8367  14E9                     l2415:	
  8368                           
  8369                           ;./lcd.h: 102:     Lcd_Write_Char(a[i]);
  8370  14E9  087A               	movf	Lcd_Write_String@i,w
  8371  14EA  0775               	addwf	Lcd_Write_String@a,w
  8372  14EB  00F8               	movwf	??_Lcd_Write_String+1
  8373  14EC  0876               	movf	Lcd_Write_String@a+1,w
  8374  14ED  00F7               	movwf	??_Lcd_Write_String
  8375  14EE  1803               	skipnc
  8376  14EF  0AF7               	incf	??_Lcd_Write_String,f
  8377  14F0  1FFA               	btfss	Lcd_Write_String@i,7
  8378  14F1  2CF3               	goto	u2700
  8379  14F2  03F7               	decf	??_Lcd_Write_String,f
  8380  14F3                     u2700:	
  8381  14F3  0877               	movf	??_Lcd_Write_String,w
  8382  14F4  00F9               	movwf	??_Lcd_Write_String+2
  8383  14F5  0879               	movf	??_Lcd_Write_String+2,w
  8384  14F6  1283               	bcf	3,5	;RP0=0, select bank0
  8385  14F7  1303               	bcf	3,6	;RP1=0, select bank0
  8386  14F8  00FF               	movwf	btemp+1
  8387  14F9  0878               	movf	??_Lcd_Write_String+1,w
  8388  14FA  0084               	movwf	4
  8389  14FB  160A  118A  2000  160A  118A  	fcall	stringtab
  8390  1500  160A  118A  24AD  160A  118A  	fcall	_Lcd_Write_Char
  8391  1505                     l2417:	
  8392  1505  3001               	movlw	1
  8393  1506  07FA               	addwf	Lcd_Write_String@i,f
  8394  1507  1803               	skipnc
  8395  1508  0AFB               	incf	Lcd_Write_String@i+1,f
  8396  1509  3000               	movlw	0
  8397  150A  07FB               	addwf	Lcd_Write_String@i+1,f
  8398  150B                     l2419:	
  8399  150B  087A               	movf	Lcd_Write_String@i,w
  8400  150C  0775               	addwf	Lcd_Write_String@a,w
  8401  150D  00F8               	movwf	??_Lcd_Write_String+1
  8402  150E  0876               	movf	Lcd_Write_String@a+1,w
  8403  150F  00F7               	movwf	??_Lcd_Write_String
  8404  1510  1803               	skipnc
  8405  1511  0AF7               	incf	??_Lcd_Write_String,f
  8406  1512  1FFA               	btfss	Lcd_Write_String@i,7
  8407  1513  2D15               	goto	u2710
  8408  1514  03F7               	decf	??_Lcd_Write_String,f
  8409  1515                     u2710:	
  8410  1515  0877               	movf	??_Lcd_Write_String,w
  8411  1516  00F9               	movwf	??_Lcd_Write_String+2
  8412  1517  0879               	movf	??_Lcd_Write_String+2,w
  8413  1518  1283               	bcf	3,5	;RP0=0, select bank0
  8414  1519  1303               	bcf	3,6	;RP1=0, select bank0
  8415  151A  00FF               	movwf	btemp+1
  8416  151B  0878               	movf	??_Lcd_Write_String+1,w
  8417  151C  0084               	movwf	4
  8418  151D  160A  118A  2000  160A  118A  	fcall	stringtab
  8419  1522  3A00               	xorlw	0
  8420  1523  1D03               	skipz
  8421  1524  2D26               	goto	u2721
  8422  1525  2D27               	goto	u2720
  8423  1526                     u2721:	
  8424  1526  2CE9               	goto	l2415
  8425  1527                     u2720:	
  8426  1527                     l113:	
  8427  1527  0008               	return
  8428  1528                     __end_of_Lcd_Write_String:	
  8429                           
  8430                           	psect	text30
  8431  14AD                     __ptext30:	
  8432 ;; *************** function _Lcd_Write_Char *****************
  8433 ;; Defined at:
  8434 ;;		line 82 in file "./lcd.h"
  8435 ;; Parameters:    Size  Location     Type
  8436 ;;  a               1    wreg     unsigned char 
  8437 ;; Auto vars:     Size  Location     Type
  8438 ;;  a               1    4[COMMON] unsigned char 
  8439 ;;  y               1    3[COMMON] unsigned char 
  8440 ;;  temp            1    2[COMMON] unsigned char 
  8441 ;; Return value:  Size  Location     Type
  8442 ;;                  1    wreg      void 
  8443 ;; Registers used:
  8444 ;;		wreg, status,2, status,0, pclath, cstack
  8445 ;; Tracked objects:
  8446 ;;		On entry : 0/0
  8447 ;;		On exit  : 0/0
  8448 ;;		Unchanged: 0/0
  8449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8450 ;;      Params:         0       0       0       0       0
  8451 ;;      Locals:         3       0       0       0       0
  8452 ;;      Temps:          1       0       0       0       0
  8453 ;;      Totals:         4       0       0       0       0
  8454 ;;Total ram usage:        4 bytes
  8455 ;; Hardware stack levels used:    1
  8456 ;; Hardware stack levels required when called:    1
  8457 ;; This function calls:
  8458 ;;		_Lcd_Port
  8459 ;; This function is called by:
  8460 ;;		_Lcd_Write_String
  8461 ;;		_OFF
  8462 ;; This function uses a non-reentrant model
  8463 ;;
  8464                           
  8465                           
  8466                           ;psect for function _Lcd_Write_Char
  8467  14AD                     _Lcd_Write_Char:	
  8468                           
  8469                           ;incstack = 0
  8470                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  8471                           ;Lcd_Write_Char@a stored from wreg
  8472  14AD  00F4               	movwf	Lcd_Write_Char@a
  8473  14AE                     l2335:	
  8474                           
  8475                           ;./lcd.h: 82: void Lcd_Write_Char(char a);./lcd.h: 83: {;./lcd.h: 84:    char temp,y;;./
      +                          lcd.h: 85:    temp = a&0x0F;
  8476  14AE  0874               	movf	Lcd_Write_Char@a,w
  8477  14AF  390F               	andlw	15
  8478  14B0  00F1               	movwf	??_Lcd_Write_Char
  8479  14B1  0871               	movf	??_Lcd_Write_Char,w
  8480  14B2  00F2               	movwf	Lcd_Write_Char@temp
  8481                           
  8482                           ;./lcd.h: 86:    y = a&0xF0;
  8483  14B3  0874               	movf	Lcd_Write_Char@a,w
  8484  14B4  39F0               	andlw	240
  8485  14B5  00F1               	movwf	??_Lcd_Write_Char
  8486  14B6  0871               	movf	??_Lcd_Write_Char,w
  8487  14B7  00F3               	movwf	Lcd_Write_Char@y
  8488  14B8                     l2337:	
  8489                           
  8490                           ;./lcd.h: 87:    RD1 = 1;
  8491  14B8  1283               	bcf	3,5	;RP0=0, select bank0
  8492  14B9  1303               	bcf	3,6	;RP1=0, select bank0
  8493  14BA  1488               	bsf	8,1	;volatile
  8494  14BB                     l2339:	
  8495                           
  8496                           ;./lcd.h: 88:    Lcd_Port(y>>4);
  8497  14BB  0873               	movf	Lcd_Write_Char@y,w
  8498  14BC  00F1               	movwf	??_Lcd_Write_Char
  8499  14BD  3004               	movlw	4
  8500  14BE                     u2565:	
  8501  14BE  1003               	clrc
  8502  14BF  0CF1               	rrf	??_Lcd_Write_Char,f
  8503  14C0  3EFF               	addlw	-1
  8504  14C1  1D03               	skipz
  8505  14C2  2CBE               	goto	u2565
  8506  14C3  0871               	movf	??_Lcd_Write_Char,w
  8507  14C4  160A  118A  23C6  160A  118A  	fcall	_Lcd_Port
  8508  14C9                     l2341:	
  8509                           
  8510                           ;./lcd.h: 89:    RD3 = 1;
  8511  14C9  1283               	bcf	3,5	;RP0=0, select bank0
  8512  14CA  1303               	bcf	3,6	;RP1=0, select bank0
  8513  14CB  1588               	bsf	8,3	;volatile
  8514  14CC                     l2343:	
  8515                           
  8516                           ;./lcd.h: 90:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  8517  14CC  3042               	movlw	66
  8518  14CD  00F1               	movwf	??_Lcd_Write_Char
  8519  14CE                     u5157:	
  8520  14CE  0BF1               	decfsz	??_Lcd_Write_Char,f
  8521  14CF  2CCE               	goto	u5157
  8522  14D0  0000               	nop
  8523  14D1                     l2345:	
  8524                           
  8525                           ;./lcd.h: 91:    RD3 = 0;
  8526  14D1  1283               	bcf	3,5	;RP0=0, select bank0
  8527  14D2  1303               	bcf	3,6	;RP1=0, select bank0
  8528  14D3  1188               	bcf	8,3	;volatile
  8529  14D4                     l2347:	
  8530                           
  8531                           ;./lcd.h: 92:    Lcd_Port(temp);
  8532  14D4  0872               	movf	Lcd_Write_Char@temp,w
  8533  14D5  160A  118A  23C6  160A  118A  	fcall	_Lcd_Port
  8534  14DA                     l2349:	
  8535                           
  8536                           ;./lcd.h: 93:    RD3 = 1;
  8537  14DA  1283               	bcf	3,5	;RP0=0, select bank0
  8538  14DB  1303               	bcf	3,6	;RP1=0, select bank0
  8539  14DC  1588               	bsf	8,3	;volatile
  8540  14DD                     l2351:	
  8541                           
  8542                           ;./lcd.h: 94:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  8543  14DD  3042               	movlw	66
  8544  14DE  00F1               	movwf	??_Lcd_Write_Char
  8545  14DF                     u5167:	
  8546  14DF  0BF1               	decfsz	??_Lcd_Write_Char,f
  8547  14E0  2CDF               	goto	u5167
  8548  14E1  0000               	nop
  8549  14E2                     l2353:	
  8550                           
  8551                           ;./lcd.h: 95:    RD3 = 0;
  8552  14E2  1283               	bcf	3,5	;RP0=0, select bank0
  8553  14E3  1303               	bcf	3,6	;RP1=0, select bank0
  8554  14E4  1188               	bcf	8,3	;volatile
  8555  14E5                     l107:	
  8556  14E5  0008               	return
  8557  14E6                     __end_of_Lcd_Write_Char:	
  8558                           
  8559                           	psect	text31
  8560  156C                     __ptext31:	
  8561 ;; *************** function _Lcd_Set_Cursor *****************
  8562 ;; Defined at:
  8563 ;;		line 42 in file "./lcd.h"
  8564 ;; Parameters:    Size  Location     Type
  8565 ;;  a               1    wreg     unsigned char 
  8566 ;;  b               1    4[COMMON] unsigned char 
  8567 ;; Auto vars:     Size  Location     Type
  8568 ;;  a               1    7[COMMON] unsigned char 
  8569 ;;  temp            1   10[COMMON] unsigned char 
  8570 ;;  y               1    9[COMMON] unsigned char 
  8571 ;;  z               1    8[COMMON] unsigned char 
  8572 ;; Return value:  Size  Location     Type
  8573 ;;                  1    wreg      void 
  8574 ;; Registers used:
  8575 ;;		wreg, status,2, status,0, pclath, cstack
  8576 ;; Tracked objects:
  8577 ;;		On entry : 0/0
  8578 ;;		On exit  : 0/0
  8579 ;;		Unchanged: 0/0
  8580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8581 ;;      Params:         1       0       0       0       0
  8582 ;;      Locals:         4       0       0       0       0
  8583 ;;      Temps:          2       0       0       0       0
  8584 ;;      Totals:         7       0       0       0       0
  8585 ;;Total ram usage:        7 bytes
  8586 ;; Hardware stack levels used:    1
  8587 ;; Hardware stack levels required when called:    2
  8588 ;; This function calls:
  8589 ;;		_Lcd_Cmd
  8590 ;; This function is called by:
  8591 ;;		_main
  8592 ;;		_hotList
  8593 ;;		_OFF
  8594 ;;		_LCD
  8595 ;; This function uses a non-reentrant model
  8596 ;;
  8597                           
  8598                           
  8599                           ;psect for function _Lcd_Set_Cursor
  8600  156C                     _Lcd_Set_Cursor:	
  8601                           
  8602                           ;incstack = 0
  8603                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  8604                           ;Lcd_Set_Cursor@a stored from wreg
  8605  156C  00F7               	movwf	Lcd_Set_Cursor@a
  8606  156D                     l2693:	
  8607                           
  8608                           ;./lcd.h: 42: void Lcd_Set_Cursor(char a, char b);./lcd.h: 43: {;./lcd.h: 44:  char temp
      +                          ,z,y;;./lcd.h: 45:  if(a == 1)
  8609  156D  0377               	decf	Lcd_Set_Cursor@a,w
  8610  156E  1D03               	btfss	3,2
  8611  156F  2D71               	goto	u3291
  8612  1570  2D72               	goto	u3290
  8613  1571                     u3291:	
  8614  1571  2D95               	goto	l2703
  8615  1572                     u3290:	
  8616  1572                     l2695:	
  8617                           
  8618                           ;./lcd.h: 46:  {;./lcd.h: 47:    temp = 0x80 + b - 1;
  8619  1572  0874               	movf	Lcd_Set_Cursor@b,w
  8620  1573  3E7F               	addlw	127
  8621  1574  00F5               	movwf	??_Lcd_Set_Cursor
  8622  1575  0875               	movf	??_Lcd_Set_Cursor,w
  8623  1576  00FA               	movwf	Lcd_Set_Cursor@temp
  8624                           
  8625                           ;./lcd.h: 48:   z = temp>>4;
  8626  1577  087A               	movf	Lcd_Set_Cursor@temp,w
  8627  1578  00F5               	movwf	??_Lcd_Set_Cursor
  8628  1579  3004               	movlw	4
  8629  157A                     u3305:	
  8630  157A  1003               	clrc
  8631  157B  0CF5               	rrf	??_Lcd_Set_Cursor,f
  8632  157C  3EFF               	addlw	-1
  8633  157D  1D03               	skipz
  8634  157E  2D7A               	goto	u3305
  8635  157F  0875               	movf	??_Lcd_Set_Cursor,w
  8636  1580  00F6               	movwf	??_Lcd_Set_Cursor+1
  8637  1581  0876               	movf	??_Lcd_Set_Cursor+1,w
  8638  1582  00F8               	movwf	Lcd_Set_Cursor@z
  8639  1583                     l2697:	
  8640                           
  8641                           ;./lcd.h: 49:   y = temp & 0x0F;
  8642  1583  087A               	movf	Lcd_Set_Cursor@temp,w
  8643  1584  390F               	andlw	15
  8644  1585  00F5               	movwf	??_Lcd_Set_Cursor
  8645  1586  0875               	movf	??_Lcd_Set_Cursor,w
  8646  1587  00F9               	movwf	Lcd_Set_Cursor@y
  8647  1588                     l2699:	
  8648                           
  8649                           ;./lcd.h: 50:   Lcd_Cmd(z);
  8650  1588  0878               	movf	Lcd_Set_Cursor@z,w
  8651  1589  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  8652  158E                     l2701:	
  8653                           
  8654                           ;./lcd.h: 51:   Lcd_Cmd(y);
  8655  158E  0879               	movf	Lcd_Set_Cursor@y,w
  8656  158F  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  8657                           
  8658                           ;./lcd.h: 52:  }
  8659  1594  2DBD               	goto	l101
  8660  1595                     l2703:	
  8661  1595  3002               	movlw	2
  8662  1596  0677               	xorwf	Lcd_Set_Cursor@a,w
  8663  1597  1D03               	btfss	3,2
  8664  1598  2D9A               	goto	u3311
  8665  1599  2D9B               	goto	u3310
  8666  159A                     u3311:	
  8667  159A  2DBD               	goto	l101
  8668  159B                     u3310:	
  8669  159B                     l2705:	
  8670                           
  8671                           ;./lcd.h: 54:  {;./lcd.h: 55:   temp = 0xC0 + b - 1;
  8672  159B  0874               	movf	Lcd_Set_Cursor@b,w
  8673  159C  3EBF               	addlw	191
  8674  159D  00F5               	movwf	??_Lcd_Set_Cursor
  8675  159E  0875               	movf	??_Lcd_Set_Cursor,w
  8676  159F  00FA               	movwf	Lcd_Set_Cursor@temp
  8677                           
  8678                           ;./lcd.h: 56:   z = temp>>4;
  8679  15A0  087A               	movf	Lcd_Set_Cursor@temp,w
  8680  15A1  00F5               	movwf	??_Lcd_Set_Cursor
  8681  15A2  3004               	movlw	4
  8682  15A3                     u3325:	
  8683  15A3  1003               	clrc
  8684  15A4  0CF5               	rrf	??_Lcd_Set_Cursor,f
  8685  15A5  3EFF               	addlw	-1
  8686  15A6  1D03               	skipz
  8687  15A7  2DA3               	goto	u3325
  8688  15A8  0875               	movf	??_Lcd_Set_Cursor,w
  8689  15A9  00F6               	movwf	??_Lcd_Set_Cursor+1
  8690  15AA  0876               	movf	??_Lcd_Set_Cursor+1,w
  8691  15AB  00F8               	movwf	Lcd_Set_Cursor@z
  8692  15AC                     l2707:	
  8693                           
  8694                           ;./lcd.h: 57:   y = temp & 0x0F;
  8695  15AC  087A               	movf	Lcd_Set_Cursor@temp,w
  8696  15AD  390F               	andlw	15
  8697  15AE  00F5               	movwf	??_Lcd_Set_Cursor
  8698  15AF  0875               	movf	??_Lcd_Set_Cursor,w
  8699  15B0  00F9               	movwf	Lcd_Set_Cursor@y
  8700  15B1                     l2709:	
  8701                           
  8702                           ;./lcd.h: 58:   Lcd_Cmd(z);
  8703  15B1  0878               	movf	Lcd_Set_Cursor@z,w
  8704  15B2  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  8705  15B7                     l2711:	
  8706                           
  8707                           ;./lcd.h: 59:   Lcd_Cmd(y);
  8708  15B7  0879               	movf	Lcd_Set_Cursor@y,w
  8709  15B8  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  8710  15BD                     l101:	
  8711  15BD  0008               	return
  8712  15BE                     __end_of_Lcd_Set_Cursor:	
  8713                           
  8714                           	psect	text32
  8715  138C                     __ptext32:	
  8716 ;; *************** function _Lcd_Cmd *****************
  8717 ;; Defined at:
  8718 ;;		line 27 in file "./lcd.h"
  8719 ;; Parameters:    Size  Location     Type
  8720 ;;  a               1    wreg     unsigned char 
  8721 ;; Auto vars:     Size  Location     Type
  8722 ;;  a               1    3[COMMON] unsigned char 
  8723 ;; Return value:  Size  Location     Type
  8724 ;;                  1    wreg      void 
  8725 ;; Registers used:
  8726 ;;		wreg, status,2, status,0, pclath, cstack
  8727 ;; Tracked objects:
  8728 ;;		On entry : 0/0
  8729 ;;		On exit  : 0/0
  8730 ;;		Unchanged: 0/0
  8731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8732 ;;      Params:         0       0       0       0       0
  8733 ;;      Locals:         1       0       0       0       0
  8734 ;;      Temps:          2       0       0       0       0
  8735 ;;      Totals:         3       0       0       0       0
  8736 ;;Total ram usage:        3 bytes
  8737 ;; Hardware stack levels used:    1
  8738 ;; Hardware stack levels required when called:    1
  8739 ;; This function calls:
  8740 ;;		_Lcd_Port
  8741 ;; This function is called by:
  8742 ;;		_Lcd_Clear
  8743 ;;		_Lcd_Set_Cursor
  8744 ;;		_Lcd_Init
  8745 ;;		_Lcd_Shift_Right
  8746 ;;		_Lcd_Shift_Left
  8747 ;; This function uses a non-reentrant model
  8748 ;;
  8749                           
  8750                           
  8751                           ;psect for function _Lcd_Cmd
  8752  138C                     _Lcd_Cmd:	
  8753                           
  8754                           ;incstack = 0
  8755                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  8756                           ;Lcd_Cmd@a stored from wreg
  8757  138C  00F3               	movwf	Lcd_Cmd@a
  8758  138D                     l2403:	
  8759                           
  8760                           ;./lcd.h: 27: void Lcd_Cmd(char a);./lcd.h: 28: {;./lcd.h: 29:  RD1 = 0;
  8761  138D  1283               	bcf	3,5	;RP0=0, select bank0
  8762  138E  1303               	bcf	3,6	;RP1=0, select bank0
  8763  138F  1088               	bcf	8,1	;volatile
  8764  1390                     l2405:	
  8765                           
  8766                           ;./lcd.h: 30:  Lcd_Port(a);
  8767  1390  0873               	movf	Lcd_Cmd@a,w
  8768  1391  160A  118A  23C6  160A  118A  	fcall	_Lcd_Port
  8769  1396                     l2407:	
  8770                           
  8771                           ;./lcd.h: 31:  RD3 = 1;
  8772  1396  1283               	bcf	3,5	;RP0=0, select bank0
  8773  1397  1303               	bcf	3,6	;RP1=0, select bank0
  8774  1398  1588               	bsf	8,3	;volatile
  8775  1399                     l2409:	
  8776                           
  8777                           ;./lcd.h: 32:         _delay((unsigned long)((4)*(20000000/4000.0)));
  8778  1399  301A               	movlw	26
  8779  139A  00F2               	movwf	??_Lcd_Cmd+1
  8780  139B  30F8               	movlw	248
  8781  139C  00F1               	movwf	??_Lcd_Cmd
  8782  139D                     u5177:	
  8783  139D  0BF1               	decfsz	??_Lcd_Cmd,f
  8784  139E  2B9D               	goto	u5177
  8785  139F  0BF2               	decfsz	??_Lcd_Cmd+1,f
  8786  13A0  2B9D               	goto	u5177
  8787  13A1  0000               	nop
  8788  13A2                     l2411:	
  8789                           
  8790                           ;./lcd.h: 33:         RD3 = 0;
  8791  13A2  1283               	bcf	3,5	;RP0=0, select bank0
  8792  13A3  1303               	bcf	3,6	;RP1=0, select bank0
  8793  13A4  1188               	bcf	8,3	;volatile
  8794  13A5                     l92:	
  8795  13A5  0008               	return
  8796  13A6                     __end_of_Lcd_Cmd:	
  8797                           
  8798                           	psect	text33
  8799  13C6                     __ptext33:	
  8800 ;; *************** function _Lcd_Port *****************
  8801 ;; Defined at:
  8802 ;;		line 5 in file "./lcd.h"
  8803 ;; Parameters:    Size  Location     Type
  8804 ;;  a               1    wreg     unsigned char 
  8805 ;; Auto vars:     Size  Location     Type
  8806 ;;  a               1    0[COMMON] unsigned char 
  8807 ;; Return value:  Size  Location     Type
  8808 ;;                  1    wreg      void 
  8809 ;; Registers used:
  8810 ;;		wreg
  8811 ;; Tracked objects:
  8812 ;;		On entry : 0/0
  8813 ;;		On exit  : 0/0
  8814 ;;		Unchanged: 0/0
  8815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8816 ;;      Params:         0       0       0       0       0
  8817 ;;      Locals:         1       0       0       0       0
  8818 ;;      Temps:          0       0       0       0       0
  8819 ;;      Totals:         1       0       0       0       0
  8820 ;;Total ram usage:        1 bytes
  8821 ;; Hardware stack levels used:    1
  8822 ;; This function calls:
  8823 ;;		Nothing
  8824 ;; This function is called by:
  8825 ;;		_Lcd_Cmd
  8826 ;;		_Lcd_Init
  8827 ;;		_Lcd_Write_Char
  8828 ;; This function uses a non-reentrant model
  8829 ;;
  8830                           
  8831                           
  8832                           ;psect for function _Lcd_Port
  8833  13C6                     _Lcd_Port:	
  8834                           
  8835                           ;incstack = 0
  8836                           ; Regs used in _Lcd_Port: [wreg]
  8837                           ;Lcd_Port@a stored from wreg
  8838  13C6  00F0               	movwf	Lcd_Port@a
  8839  13C7                     l2325:	
  8840                           
  8841                           ;./lcd.h: 5: void Lcd_Port(char a);./lcd.h: 6: {;./lcd.h: 7:  if(a & 1)
  8842  13C7  1C70               	btfss	Lcd_Port@a,0
  8843  13C8  2BCA               	goto	u2521
  8844  13C9  2BCB               	goto	u2520
  8845  13CA                     u2521:	
  8846  13CA  2BCF               	goto	l81
  8847  13CB                     u2520:	
  8848  13CB                     l2327:	
  8849                           
  8850                           ;./lcd.h: 8:   RD4 = 1;
  8851  13CB  1283               	bcf	3,5	;RP0=0, select bank0
  8852  13CC  1303               	bcf	3,6	;RP1=0, select bank0
  8853  13CD  1608               	bsf	8,4	;volatile
  8854  13CE  2BD2               	goto	l82
  8855  13CF                     l81:	
  8856                           ;./lcd.h: 9:  else
  8857                           
  8858                           
  8859                           ;./lcd.h: 10:   RD4 = 0;
  8860  13CF  1283               	bcf	3,5	;RP0=0, select bank0
  8861  13D0  1303               	bcf	3,6	;RP1=0, select bank0
  8862  13D1  1208               	bcf	8,4	;volatile
  8863  13D2                     l82:	
  8864                           
  8865                           ;./lcd.h: 12:  if(a & 2)
  8866  13D2  1CF0               	btfss	Lcd_Port@a,1
  8867  13D3  2BD5               	goto	u2531
  8868  13D4  2BD6               	goto	u2530
  8869  13D5                     u2531:	
  8870  13D5  2BD8               	goto	l83
  8871  13D6                     u2530:	
  8872  13D6                     l2329:	
  8873                           
  8874                           ;./lcd.h: 13:   RD5 = 1;
  8875  13D6  1688               	bsf	8,5	;volatile
  8876  13D7  2BD9               	goto	l84
  8877  13D8                     l83:	
  8878                           ;./lcd.h: 14:  else
  8879                           
  8880                           
  8881                           ;./lcd.h: 15:   RD5 = 0;
  8882  13D8  1288               	bcf	8,5	;volatile
  8883  13D9                     l84:	
  8884                           
  8885                           ;./lcd.h: 17:  if(a & 4)
  8886  13D9  1D70               	btfss	Lcd_Port@a,2
  8887  13DA  2BDC               	goto	u2541
  8888  13DB  2BDD               	goto	u2540
  8889  13DC                     u2541:	
  8890  13DC  2BDF               	goto	l85
  8891  13DD                     u2540:	
  8892  13DD                     l2331:	
  8893                           
  8894                           ;./lcd.h: 18:   RD6 = 1;
  8895  13DD  1708               	bsf	8,6	;volatile
  8896  13DE  2BE0               	goto	l86
  8897  13DF                     l85:	
  8898                           ;./lcd.h: 19:  else
  8899                           
  8900                           
  8901                           ;./lcd.h: 20:   RD6 = 0;
  8902  13DF  1308               	bcf	8,6	;volatile
  8903  13E0                     l86:	
  8904                           
  8905                           ;./lcd.h: 22:  if(a & 8)
  8906  13E0  1DF0               	btfss	Lcd_Port@a,3
  8907  13E1  2BE3               	goto	u2551
  8908  13E2  2BE4               	goto	u2550
  8909  13E3                     u2551:	
  8910  13E3  2BE6               	goto	l87
  8911  13E4                     u2550:	
  8912  13E4                     l2333:	
  8913                           
  8914                           ;./lcd.h: 23:   RD7 = 1;
  8915  13E4  1788               	bsf	8,7	;volatile
  8916  13E5  2BE7               	goto	l89
  8917  13E6                     l87:	
  8918                           ;./lcd.h: 24:  else
  8919                           
  8920                           
  8921                           ;./lcd.h: 25:   RD7 = 0;
  8922  13E6  1388               	bcf	8,7	;volatile
  8923  13E7                     l89:	
  8924  13E7  0008               	return
  8925  13E8                     __end_of_Lcd_Port:	
  8926  007E                     btemp	set	126	;btemp
  8927  007E                     wtemp0	set	126


Data Sizes:
    Strings     51
    Constant    10
    Data        0
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     26      49
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Int@number(BANK1[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[8]), STR_3(CODE[16]), 
		 -> STR_2(CODE[9]), Lcd_Write_Int@number(BANK1[8]), 


Critical Paths under _main in COMMON

    _powerSaving3->_aON
    _powerSaving3->_bON
    _powerSaving3->_cON
    _powerSaving2->_aON
    _powerSaving2->_bON
    _powerSaving2->_cON
    _powerSaving1->_aON
    _powerSaving1->_bON
    _powerSaving1->_cON
    _maximumPower3->_aON
    _maximumPower3->_bON
    _maximumPower3->_cON
    _maximumPower2->_aON
    _maximumPower2->_bON
    _maximumPower2->_cON
    _maximumPower1->_aON
    _maximumPower1->_bON
    _maximumPower1->_cON
    _hotList->_Lcd_Write_String
    _Lcd_Clear->_Lcd_Cmd
    _currentMeasurement->___xxtofl
    ___flsub->___xxtofl
    ___fladd->___xxtofl
    ___fldiv->___xxtofl
    _OFF->_Lcd_Set_Cursor
    _Lcd_Init->_Lcd_Cmd
    _LCD->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    _Lcd_Write_Int->___xxtofl
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _currentMeasurement->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___fldiv->___flsub
    ___fltol->___fldiv

Critical Paths under _main in BANK1

    _main->_LCD
    _currentMeasurement->___fltol
    _LCD->_Lcd_Write_Int
    _Lcd_Write_Int->___fltol

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   24681
                                             23 BANK1      3     3      0
                                _LCD
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                                _OFF
                                _aON
                                _bON
                                _ble
                                _cON
                 _currentMeasurement
                            _hotList
                      _maximumPower1
                      _maximumPower2
                      _maximumPower3
                       _powerSaving1
                       _powerSaving2
                       _powerSaving3
 ---------------------------------------------------------------------------------
 (1) _powerSaving3                                         1     1      0       0
                                              1 COMMON     1     1      0
                                _aON
                                _bON
                                _cON
 ---------------------------------------------------------------------------------
 (1) _powerSaving2                                         1     1      0       0
                                              1 COMMON     1     1      0
                                _aON
                                _bON
                                _cON
 ---------------------------------------------------------------------------------
 (1) _powerSaving1                                         1     1      0       0
                                              1 COMMON     1     1      0
                                _aON
                                _bON
                                _cON
 ---------------------------------------------------------------------------------
 (1) _maximumPower3                                        1     1      0       0
                                              1 COMMON     1     1      0
                                _aON
                                _bON
                                _cON
 ---------------------------------------------------------------------------------
 (1) _maximumPower2                                        1     1      0       0
                                              1 COMMON     1     1      0
                                _aON
                                _bON
                                _cON
 ---------------------------------------------------------------------------------
 (1) _maximumPower1                                        1     1      0       0
                                              1 COMMON     1     1      0
                                _aON
                                _bON
                                _cON
 ---------------------------------------------------------------------------------
 (2) _cON                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _bON                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _aON                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _hotList                                              6     6      0    2278
                                              0 BANK0      6     6      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _currentMeasurement                                   1     1      0    9926
                                             11 BANK1      1     1      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             46 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             26 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1425
                                             54 BANK0     26    18      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _ble                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OFF                                                  1     1      0    1318
                                             11 COMMON     1     1      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _LCD                                                  1     1      0    8683
                                             22 BANK1      1     1      0
                     _Lcd_Set_Cursor
                      _Lcd_Write_Int
                   _Lcd_Write_String
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                              0 BANK1     11     7      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2721
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Int                                       11     9      2    2543
                                             11 BANK1     11     9      2
                   _Lcd_Write_String
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    1028
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       7     6      1    1140
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Int
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _sprintf (ARG)
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___flsub (ARG)
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___wmul
     ___xxtofl
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _OFF
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
   _aON
   _bON
   _ble
   _cON
   _currentMeasurement
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___fladd (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___flsub (ARG)
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___flsub
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___flsub (ARG)
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _hotList
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _maximumPower1
     _aON
     _bON
     _cON
   _maximumPower2
     _aON
     _bON
     _cON
   _maximumPower3
     _aON
     _bON
     _cON
   _powerSaving1
     _aON
     _bON
     _cON
   _powerSaving2
     _aON
     _bON
     _cON
   _powerSaving3
     _aON
     _bON
     _cON

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      8F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     1A      31       7       61.3%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      8F      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Jan 03 03:15:22 2021

                 __CFG_CP$ON 0000                 ___fldiv@aexp 006F                 ___fldiv@bexp 006E  
                          pc 0002                 ___fldiv@sign 0067                           l81 13CF  
                         l82 13D2                           l83 13D8                           l84 13D9  
                         l92 13A5                           l85 13DF                           l86 13E0  
                         l87 13E6                           l95 135B                           l89 13E7  
                __CFG_CPD$ON 0000                           fsr 0004          ___wmul@multiplicand 0072  
        __Umul8_16@word_mpld 0076                  __CFG_LVP$ON 0000                          l101 15BD  
                        l104 16CB                          l113 1527                          l122 140B  
                        l107 14E5                          l204 0EFB                          l206 0F5F  
                        l208 0F5E                          l320 136B                          l233 0FFF  
                        l323 137B                          l340 17FF                          l332 0B71  
                        l317 1480                          l309 1615                          l253 0A80  
                        l190 0E34                          l326 138B                          l343 1346  
                        l183 0DF5                          l168 0D97                          l329 13C5  
                        l337 0C80                          l275 14AC                          l267 166D  
                        l453 0B68                          l197 0E73                          l295 09BA  
                        l457 143C                          l650 1732                          l643 1747  
                        l459 1454                          l653 1747                          l830 01FD  
                        l822 017B                          l806 0089                          l750 026D  
                        l903 001A                          l808 0209                          l729 156B  
                        l905 002C                          l754 0314                          l739 083A  
                        l771 03DF                          l763 0491                          l852 075E  
                        l828 01ED                          l756 02EB                          l781 0425  
                        l846 07F2                          l775 0403                          l792 0485  
                        l784 0463                          l793 0491                          l858 07E6  
                        l890 08A2                          l884 085D                          l796 142F  
                        l886 08F4                          l897 08BE                          l898 08CA  
                        _LCD 1748                          _RB2 0032                          _RB3 0033  
                        _RB4 0034                          _RD1 0041                          _RB5 0035  
                        _RE0 0048                          _RB6 0036                          _RD3 0043  
                        _RB7 0037                          _RD4 0044                          _RD5 0045  
                        _RD6 0046                          _RD7 0047                          _OFF 13A6  
                        _aON 135C                          _bON 136C                          _cON 137C  
                        _ble 1342                          fsr0 0004                          indf 0000  
               __CFG_FOSC$HS 0000                 ___flmul@aexp 0032                 ___flmul@bexp 0033  
               ___flmul@sign 002D                 ___flmul@temp 0038                 ___flmul@prod 0034  
                       ?_LCD 0070                         ?_OFF 0070                         ?_aON 0070  
                       ?_bON 0070                         ?_cON 0070                 ___fltol@exp1 00AA  
                       l3001 068F                         l3011 0721                         l3003 06BC  
                       l3013 072A                         l3021 073E                         l3005 06E2  
                       l3101 08E7                         ?_ble 0070                         l3023 0742  
                       l3015 072E                         l3007 070A                         l3103 08EB  
                       l3111 1674                         l3041 0793                         l3033 0763  
                       l3025 0743                         l3017 072F                         l3009 0713  
                       l3105 08EC                         l3113 167D                         l3201 0F55  
                       l3121 0DF0                         l2331 13DD                         l2411 13A2  
                       l2403 138D                         l3051 07CA                         l3035 0768  
                       l3043 0799                         l3027 0747                         l3019 0738  
                       l3115 168C                         l3211 0F85                         l3203 0F63  
                       l3131 0E1B                         l3123 0DF4                         l2333 13E4  
                       l2325 13C7                         l2405 1390                         l2341 14C9  
                       l2413 14E6                         l2421 0A84                         l3061 07EA  
                       l3053 07CC                         l3045 07A6                         l3037 0776  
                       l3029 075B                         l3117 1692                         l3109 166E  
                       l2501 0231                         l3221 0FA9                         l3213 0F8B  
                       l3205 0F6B                         l3141 0E38                         l3133 0E22  
                       l3125 0DF9                         l3301 1646                         l2327 13CB  
                       l2407 1396                         l2351 14DD                         l2343 14CC  
                       l2335 14AE                         l2415 14E9                         l2423 0A89  
                       l3055 07DA                         l3047 07B1                         l3039 077A  
                       l3071 0855                         l2511 024B                         l2503 0239  
                       l3231 0FD1                         l3223 0FB0                         l3215 0F92  
                       l3207 0F74                         l3151 0E65                         l3143 0E3E  
                       l3135 0E26                         l3127 0DFF                         l3119 0DE9  
                       l3311 1667                         l2329 13D6                         l2409 1399  
                       l2353 14E2                         l2345 14D1                         l2337 14B8  
                       l2417 1505                         l2361 1533                         l2441 0AC9  
                       l2433 0A9C                         l2425 0A8F                         l3057 07DE  
                       l3049 07C0                         l3081 0880                         l3073 0865  
                       l3065 083C                         l2601 0355                         l2521 0262  
                       l2513 024F                         l2505 023E                         l3241 0FF7  
                       l3233 0FD9                         l3225 0FB7                         l3217 0F99  
                       l3209 0F7C                         l3161 0E8A                         l3153 0E6C  
                       l3145 0E4B                         l3137 0E2D                         l3129 0E0C  
                       l3321 1482                         l2347 14D4                         l2339 14BB  
                       l2419 150B                         l2371 1559                         l2363 153A  
                       l2355 1528                         l2451 0AD4                         l2443 0ACD  
                       l2435 0AB9                         l2427 0A96                         l3059 07DF  
                       l3091 08B4                         l3083 0887                         l3067 0841  
                       l2611 03BD                         l2603 035E                         l2531 027B  
                       l2523 0263                         l2515 0250                         l2507 0244  
                       l3235 0FE2                         l3219 0FA2                         l3227 0FC0  
                       l3171 0EAF                         l3163 0E99                         l3155 0E72  
                       l3147 0E5A                         l3139 0E33                         l3323 1488  
                       l3331 14A6                         l3251 09E1                         l3243 09BB  
                       l2701 158E                         l2349 14DA                         l2373 155A  
                       l2365 153E                         l2357 152A                         l2381 0801  
                       l2461 0B07                         l2445 0AD2                         l2437 0AC1  
                       l2429 0A9B                         l3093 08B8                         l3085 088B  
                       l3077 086E                         l3069 0845                         l2613 03C2  
                       l2605 0363                         l2541 028F                         l2533 027F  
                       l2517 0255                         l2525 0265                         l2509 0245  
                       l3237 0FE8                         l3229 0FC8                         l3181 0F09  
                       l3173 0EE4                         l3165 0EA0                         l3157 0E77  
                       l3149 0E61                         l3421 1462                         l3405 15FD  
                       l3341 0901                         l3325 148E                         l3309 1655  
                       l3261 0A0A                         l3253 09EB                         l3245 09C7  
                       l3501 0CA7                         l2711 15B7                         l2703 1595  
                       l2375 1561                         l2367 1542                         l2359 1530  
                       l2391 0819                         l2383 0807                         l2471 0B49  
                       l2463 0B0B                         l2455 0AF0                         l2439 0AC5  
                       l3095 08C2                         l3087 0899                         l3079 0873  
                       l2631 040A                         l2623 03F5                         l2607 0379  
                       l2615 03D1                         l2551 02A3                         l2543 0293  
                       l2535 0283                         l2527 0273                         l2519 025A  
                       l3239 0FF1                         l3191 0F30                         l3183 0F12  
                       l3175 0EE9                         l3167 0EA4                         l3159 0E7D  
                       l3415 1455                         l3407 160F                         l3343 090F  
                       l3319 1481                         l3247 09D5                         l3511 0CD2  
                       l3503 0CAC                         l2705 159B                         l2369 1553  
                       l2377 1567                         l2393 0823                         l2385 080A  
                       l2465 0B10                         l2457 0AFA                         l2473 0B52  
                       l2713 13E8                         l3097 08CC                         l3089 08A9  
                       l3441 13B9                         l2801 0054                         l2641 0418  
                       l2633 040C                         l2625 03FE                         l2617 03E7  
                       l2609 03B7                         l2553 02A7                         l2545 0297  
                       l2537 0287                         l2529 0277                         l2561 02B7  
                       l3193 0F37                         l3185 0F1A                         l3177 0EF2  
                       l3169 0EAB                         l2721 1371                         l3417 1456  
                       l3425 1468                         l3353 0934                         l3345 0915  
                       l3329 1494                         l3281 0A69                         l3273 0A38  
                       l3257 09FA                         l3249 09DB                         l3521 0D08  
                       l3513 0CE0                         l3505 0CB8                         l2707 15AC  
                       l2395 0829                         l2387 0811                         l2467 0B3E  
                       l2459 0B00                         l2475 0B64                         l2731 1436  
                       l3099 08E2                         l3443 13BF                         l3435 13A6  
                       l2811 006C                         l2803 005C                         l2651 042F  
                       l2643 041C                         l2635 0411                         l2627 0402  
                       l2619 03EC                         l2571 02FA                         l2563 02B8  
                       l2555 02AB                         l2547 029B                         l2539 028B  
                       l2491 021C                         l2483 020A                         l3451 0B75  
                       l3195 0F40                         l3187 0F23                         l3179 0F01  
                       l2715 135C                         l2723 137C                         l3419 145C  
                       l3427 147A                         l3371 0982                         l3363 0953  
                       l3355 093A                         l3347 091B                         l3339 08F5  
                       l3291 1625                         l3275 0A48                         l3267 0A19  
                       l3259 0A00                         l3531 0D25                         l3523 0D0D  
                       l3515 0CE5                         l3507 0CC1                         l2709 15B1  
                       l2397 0830                         l2389 0815                         l2469 0B45  
                       l2741 16CC                         l2733 1443                         l3437 13AB  
                       l2901 01B0                         l2813 0071                         l2821 0081  
                       l2805 0061                         l2661 046D                         l2653 043D  
                       l2645 0422                         l2629 0407                         l2637 0413  
                       l2581 0318                         l2573 02FE                         l2565 02CF  
                       l2557 02AF                         l2549 029F                         l2493 0221  
                       l2485 0211                         l3461 0C7D                         l3453 0B84  
                       l3445 0B69                         l3197 0F47                         l3189 0F29  
                       l2717 1361                         l2725 1381                         l3365 0961  
                       l3357 0944                         l3349 0925                         l3381 09B4  
                       l3293 162B                         l3269 0A27                         l3285 0A7A  
                       l3541 0D43                         l3533 0D2B                         l3525 0D11  
                       l3517 0CF1                         l3509 0CC9                         l2399 0836  
                       l2751 16F8                         l2743 16D9                         l2735 144A  
                       l2727 1430                         l3471 17BD                         l3463 1748  
                       l3439 13AF                         l2911 01E4                         l2903 01B6  
                       l2823 0091                         l2831 00AA                         l2815 0076  
                       l2807 0067                         l2671 0481                         l2663 0475  
                       l2655 0441                         l2591 0341                         l2639 0417  
                       l2583 031D                         l2575 02FF                         l2567 02EF  
                       l2559 02B3                         l2495 0226                         l2487 0217  
                       l3455 0BF9                         l3447 0B6C                         l3199 0F4E  
                       l2719 136C                         l3391 15D9                         l3383 15BE  
                       l3375 0993                         l3295 1631                         l3287 1616  
                       l3279 0A59                         l3551 0D61                         l3543 0D49  
                       l3535 0D31                         l3527 0D18                         l3519 0CFA  
                       l2681 0010                         l2753 1700                         l2737 1450  
                       l2729 1432                         l3473 17E7                         l3465 1750  
                       l2913 01EC                         l2905 01C3                         l2841 00D2  
                       l2833 00AF                         l2825 009D                         l2817 007E  
                       l2809 006B                         l2673 048C                         l2665 047A  
                       l2657 045F                         l2649 042A                         l2593 0345  
                       l2577 0308                         l2569 02F8                         l2497 022E  
                       l2489 021B                         l3457 0C71                         l3449 0B70  
                       l3385 15BF                         l3377 09A3                         l3369 0972  
                       l3289 1617                         l3561 0D7F                         l3553 0D67  
                       l3545 0D4F                         l3537 0D37                         l3529 0D1D  
                       l2683 0014                         l2931 04A3                         l2771 1727  
                       l2763 170E                         l2755 1702                         l2747 16E2  
                       l3475 17F0                         l3467 179D                         l2915 01F3  
                       l2907 01D1                         l2851 00FB                         l2843 00DA  
                       l2827 00A1                         l2819 007F                         l2675 0490  
                       l2667 047B                         l2659 0468                         l2595 034E  
                       l2587 0326                         l2579 030C                         l2499 022F  
                       l3459 0C75                         l2691 134F                         l3395 15E8  
                       l3387 15CD                         l3299 1640                         l3571 0D9F  
                       l3563 0D85                         l3555 0D6D                         l3547 0D55  
                       l3539 0D3D                         l3491 0C98                         l2693 156D  
                       l2685 0023                         l2677 0007                         l2941 04B8  
                       l2933 04A4                         l2925 0492                         l2773 1737  
                       l2757 1706                         l2765 1720                         l2749 16F7  
                       l3477 17F9                         l3469 17B2                         l2917 01F7  
                       l2909 01E0                         l2861 011C                         l2853 00FF  
                       l2845 00E2                         l2837 00B8                         l2669 047F  
                       l2597 0350                         l2589 033D                         l3741 146F  
                       l3397 15EE                         l3389 15D3                         l3581 0DBB  
                       l3573 0DA4                         l3565 0D8B                         l3557 0D73  
                       l3549 0D5B                         l3493 0C9B                         l3485 0C81  
                       l2695 1572                         l3743 0AAE                         l2687 0028  
                       l2679 0009                         l2951 04D0                         l2943 04C0  
                       l2935 04A9                         l2927 0499                         l2775 173C  
                       l3479 1342                         l2919 01F9                         l2871 013E  
                       l2863 012A                         l2855 0100                         l2847 00E4  
                       l2839 00CA                         l2791 003F                         l2783 002D  
                       l2599 0354                         l3735 165C                         l3591 0DD7  
                       l3583 0DC3                         l3575 0DAC                         l3567 0D91  
                       l3559 0D79                         l3495 0C9E                         l3487 0C8F  
                       l2697 1583                         l2961 04EC                         l2953 04D5  
                       l2945 04C5                         l2937 04AE                         l2929 049F  
                       l2873 0147                         l2881 015B                         l2849 00E9  
                       l2857 0109                         l2865 012E                         l2793 0044  
                       l2785 0034                         l2777 140C                         l3737 149B  
                       l3593 0DDA                         l3585 0DC8                         l3577 0DB0  
                       l3569 0D97                         l3497 0CA1                         l3489 0C91  
                       l2699 1588                         l2971 050F                         l2963 04F1  
                       l2955 04DA                         l2947 04CB                         l2939 04B6  
                       l2883 015F                         l2875 014B                         l2867 0134  
                       l2859 011B                         l2795 0049                         l2787 003A  
                       l2779 1410                         l3739 1604                         l3587 0DCB  
                       l3579 0DB6                         l3499 0CA4                         l2981 059D  
                       l2973 051C                         l2965 04F6                         l2957 04E2  
                       l2949 04CF                         l2893 0180                         l2885 0160  
                       l2877 014C                         l2869 013C                         l2797 0051  
                       l2789 003E                         l3589 0DCC                         l2991 05FF  
                       l2983 05B9                         l2975 0539                         l2959 04E4  
                       l2895 0185                         l2887 0164                         l2879 0155  
                       l2799 0052                         l2993 061C                         l2985 05C2  
                       l2977 0555                         l2969 04FF                         l2897 0193  
                       l2889 0178                         l2995 0635                         l2987 05D2  
                       l2979 0581                         l2899 0197                         l2997 0652  
                       l2989 05EF                         l2999 067F                         STR_1 1044  
                       STR_2 102A                         STR_3 101A                         STR_4 1033  
                       STR_5 1041                         STR_6 103E                         STR_7 103B  
                       STR_8 1049                         STR_9 1047                         u3000 0345  
                       u3001 0344                         u3010 0354                         u3011 0353  
                       u3100 0402                         u3101 0401                         u3110 0407  
                       u3030 0379                         u3111 0406                         u3031 0378  
                       u3200 045F                         u3120 0411                         u3201 045E  
                       u3121 0410                         u3041 0390                         u3033 0375  
                       u3025 0357                         u4010 072E                         u3210 0468  
                       u3130 0417                         u3050 03A4                         u3042 0391  
                       u4011 072D                         u3211 0467                         u3131 0416  
                       u3051 03A5                         u3043 0396                         u4100 07A6  
                       u3220 046D                         u3140 041C                         u3060 03C2  
                       u3052 03AA                         u3044 0397                         u4101 07A5  
                       u4005 0723                         u3221 046C                         u3141 041B  
                       u3061 03C1                         u3053 03AB                         u3045 039C  
                       u3310 159B                         u4110 07C0                         u4030 0742  
                       u3230 047A                         u3150 0422                         u3070 03E7  
                       u3046 039D                         u3311 159A                         u4111 07BF  
                       u4031 0741                         u3231 0479                         u3151 0421  
                       u3071 03E6                         u2520 13CB                         u4120 07DE  
                       u4040 0747                         u3400 170D                         u3240 047F  
                       u3160 0429                         u3080 03EC                         u5000 0DAC  
                       u2521 13CA                         u3305 157A                         u4121 07DD  
                       u4105 07A2                         u4041 0746                         u4025 0731  
                       u3401 170C                         u3241 047E                         u3161 0428  
                       u3081 03EB                         u5001 0DAB                         u2530 13D6  
                       u2610 1553                         u4050 075B                         u3330 1436  
                       u4210 08B8                         u4130 0841                         u3250 0490  
                       u3170 042F                         u5010 0DB6                         u2531 13D5  
                       u2611 1552                         u4115 07BC                         u4051 075A  
                       u3331 1435                         u4211 08B7                         u4131 0840  
                       u3251 048F                         u3171 042E                         u5011 0DB5  
                       u2540 13DD                         u2700 14F3                         u3260 0014  
                       u4060 0762                         u3420 171F                         u4220 08BE  
                       u4140 0845                         u3500 006B                         u3180 0441  
                       u4300 0E38                         u5020 0DC3                         u2541 13DC  
                       u3325 15A3                         u2605 1543                         u3261 0013  
                       u4061 0761                         u3421 171E                         u4221 08BD  
                       u4205 08AD                         u4141 0844                         u3501 006A  
                       u3181 0440                         u4301 0E37                         u5021 0DC2  
                       u2550 13E4                         u2710 1515                         u2630 1567  
                       u4070 0768                         u3430 1726                         u4230 08C2  
                       u4150 0865                         u3510 0071                         u3190 0450  
                       u4310 0E4B                         u2551 13E3                         u2631 1566  
                       u2615 154F                         u4071 0767                         u3431 1725  
                       u3415 170F                         u4231 08C1                         u4151 0864  
                       u3511 0070                         u3095 03F7                         u4311 0E4A  
                       u2720 1527                         u2640 0807                         u3280 0028  
                       u4080 077A                         u3360 1450                         u4240 08D7  
                       u3600 011B                         u3520 0076                         u2800 021B  
                       u4400 0F30                         u4320 0E5A                         u2721 1526  
                       u2625 155B                         u2641 0806                         u3281 0027  
                       u4081 0779                         u3361 144F                         u3345 143D  
                       u3601 011A                         u3521 0075                         u2801 021A  
                       u4401 0F2F                         u4321 0E59                         u3290 1572  
                       u2570 1530                         u2730 0A8F                         u4090 0789  
                       u3450 1737                         u3370 16D9                         u4250 08E7  
                       u4170 0886                         u3610 0134                         u3530 0091  
                       u2810 0221                         u4410 0F37                         u4330 0E77  
                       u3291 1571                         u2571 152F                         u2731 0A8E  
                       u3275 001B                         u3451 1736                         u3371 16D8  
                       u3355 1444                         u4251 08E6                         u4171 0885  
                       u3611 0133                         u3531 0090                         u3195 044B  
                       u2811 0220                         u4411 0F36                         u5107 0EA8  
                       u4331 0E76                         u4315 0E47                         u2660 0819  
                       u2740 0AC9                         u3460 173C                         u3380 16F0  
                       u4260 08EB                         u3700 0185                         u3620 013C  
                       u3540 00AF                         u2900 02DA                         u2820 0226  
                       u4500 0FA9                         u4420 0F47                         u4340 0E8A  
                       u2565 14BE                         u2661 0818                         u2741 0AC8  
                       u3461 173B                         u3445 1729                         u4261 08EA  
                       u4245 08D2                         u4165 0878                         u3701 0184  
                       u3621 013B                         u3605 0117                         u3541 00AE  
                       u2901 02D8                         u2821 0225                         u5117 0C79  
                       u4501 0FA8                         u4421 0F46                         u4341 0E89  
                       u4325 0E56                         u5037 0CDA                         u2590 1542  
                       u2670 0823                         u2750 0AEF                         u3390 1706  
                       u4190 08A8                         u3710 0197                         u3550 00E9  
                       u3470 003E                         u2910 02DB                         u2830 0244  
                       u4510 0FB0                         u4430 0F4E                         u4350 0E99  
                       u4270 0DF9                         u2591 1541                         u2671 0822  
                       u2655 080B                         u2751 0AEE                         u4095 0784  
                       u3391 1705                         u4191 08A7                         u5127 1678  
                       u3711 0196                         u3551 00E8                         u3471 003D  
                       u2831 0243                         u4511 0FAF                         u4431 0F4D  
                       u4351 0E98                         u4271 0DF8                         u5047 0D02  
                       u2760 0AFA                         u3800 04D5                         u3720 01A6  
                       u3640 014B                         u3480 0044                         u2920 02EF  
                       u2840 024F                         u4520 0FB7                         u4440 0F55  
                       u4360 0EF2                         u4280 0E0C                         u4600 0A0A  
                       u2585 1534                         u2761 0AF9                         u3801 04D4  
                       u3385 16EB                         u4185 089A                         u5137 1687  
                       u3641 014A                         u3481 0043                         u2921 02EE  
                       u2841 024E                         u4521 0FB6                         u4441 0F54  
                       u4361 0EF1                         u4345 0E86                         u4281 0E0B  
                       u4601 0A09                         u5057 0DD2                         u2690 0836  
                       u2770 0B00                         u3810 04DA                         u3730 01C3  
                       u3490 0049                         u2930 02FE                         u2850 0255  
                       u4530 0FD9                         u4450 0F63                         u4370 0F01  
                       u4290 0E1B                         u4610 0A18                         u2691 0835  
                       u2675 081F                         u2771 0AFF                         u2755 0AEB  
                       u3811 04D9                         u5147 1696                         u3731 01C2  
                       u3635 0140                         u3491 0048                         u2931 02FD  
                       u2851 0254                         u4531 0FD8                         u4451 0F62  
                       u4371 0F00                         u4355 0E95                         u4291 0E1A  
                       u4611 0A17                         u5067 0DE0                         u2780 0B52  
                       u3820 04F1                         u3740 01E0                         u3660 015F  
                       u3580 00FF                         u2860 025A                         u4540 0FE8  
                       u4460 0F7C                         u4380 0F1A                         u4700 1654  
                       u4620 0A27                         u5157 14CE                         u2685 082A  
                       u2781 0B51                         u3901 060E                         u3821 04F0  
                       u3741 01DF                         u3725 01A1                         u3661 015E  
                       u3581 00FE                         u3565 00EB                         u2861 0259  
                       u4541 0FE7                         u4461 0F7B                         u4381 0F19  
                       u4285 0E08                         u5077 0DED                         u4701 1653  
                       u4621 0A26                         u4605 0A06                         u2790 0B64  
                       u3902 0615                         u3830 04F6                         u3750 01F7  
                       u3670 0164                         u2950 0314                         u2870 0273  
                       u4550 0FF7                         u4470 0F8B                         u4390 0F29  
                       u4710 0901                         u4630 0A37                         u5167 14DF  
                       u2791 0B63                         u3903 061C                         u3831 04F5  
                       u3751 01F6                         u3735 01BF                         u3671 0163  
                       u3655 014E                         u3575 00F4                         u2951 0313  
                       u2871 0272                         u4551 0FF6                         u4471 0F8A  
                       u4391 0F28                         u5087 0E2A                         u4295 0E17  
                       u4711 0900                         u4631 0A36                         u4615 0A14  
                       u3760 04A3                         u3680 0178                         u2960 0318  
                       u2880 0277                         u4480 0F92                         u4800 0992  
                       u4720 090F                         u4640 0A48                         u4560 09C7  
                       u5177 139D                         u3921 0644                         u3841 0547  
                       u3761 04A2                         u3745 01DC                         u3681 0177  
                       u2961 0317                         u2945 0301                         u2881 0276  
                       u4481 0F91                         u5097 0E69                         u4801 0991  
                       u4721 090E                         u4705 1650                         u4641 0A47  
                       u4625 0A23                         u4561 09C6                         u3922 064B  
                       u3842 054E                         u3770 04A9                         u3690 017F  
                       u2970 031D                         u2890 02CF                         u4490 0F99  
                       u4810 09A3                         u4730 0925                         u4650 0A58  
                       u4570 09D5                         u3931 0671                         u3923 0652  
                       u3915 061E                         u3851 0563                         u3843 0555  
                       u3771 04A8                         u3691 017E                         u3595 0102  
                       u2971 031C                         u2891 02CE                         u4491 0F98  
                       u4811 09A2                         u4731 0924                         u4715 08FD  
                       u4651 0A57                         u4635 0A33                         u4571 09D4  
                       u3932 0678                         u3852 056A                         u3780 04AE  
                       u4820 09B3                         u4740 0933                         u4660 0A69  
                       u4580 09EB                         u4900 0D31                         u3941 069E  
                       u3933 067F                         u3861 058F                         u3853 0571  
                       u3781 04AD                         u2981 032F                         u4821 09B2  
                       u4805 098E                         u4741 0932                         u4725 090B  
                       u4661 0A68                         u4645 0A44                         u4581 09EA  
                       u4565 09C3                         u4901 0D30                         u3950 06C8  
                       u3942 06A5                         u3862 0596                         u3790 04CF  
                       u2990 0341                         u2982 0336                         u4830 15CD  
                       u4750 0944                         u4670 0A79                         u4590 09F9  
                       u4910 0D3D                         u3943 06AC                         u3871 05AB  
                       u3863 059D                         u3791 04CE                         u2991 0340  
                       u2983 033D                         u2895 02CB                         u4831 15CC  
                       u4815 099F                         u4751 0943                         u4735 0921  
                       u4671 0A78                         u4655 0A54                         u4591 09F8  
                       u4575 09D1                         u4911 0D3C                         u3872 05B2  
                       u4840 15E7                         u4760 0952                         u4680 1625  
                       u4920 0D49                         u3961 06D4                         u3873 05B9  
                       u4841 15E6                         u4825 09AF                         u4761 0951  
                       u4745 092F                         u4681 1624                         u4665 0A65  
                       u4585 09E7                         u4921 0D48                         u3970 06F0  
                       u3962 06DB                         u4850 15FC                         u4770 0961  
                       u4690 163F                         u4930 0D55                         u3963 06E2  
                       u3955 06C3                         u3891 05E1                         u4851 15FB  
                       u4835 15C9                         u4771 0960                         u4755 0940  
                       u4691 163E                         u4675 0A75                         u4595 09F5  
                       u4931 0D54                         u3892 05E8                         u4860 0B75  
                       u4780 0971                         u4940 0D61                         u3981 06FC  
                       u3893 05EF                         u3885 05BB                         u4861 0B74  
                       u4845 15E3                         u4781 0970                         u4765 094E  
                       u4685 1621                         u4941 0D60                         u3982 0703  
                       u4870 0B84                         u4790 0982                         u4950 0D6D  
                       u3983 070A                         u3975 06EB                         u4871 0B83  
                       u4855 15F8                         u4791 0981                         u4775 095D  
                       u4695 163B                         u4951 0D6C                         u4960 0D79  
                       u4880 0D18                         u4785 096D                         u4961 0D78  
                       u4881 0D17                         u4970 0D85                         u4890 0D25  
                       u3995 070C                         u4795 097E                         u4971 0D84  
                       u4891 0D24                         u4980 0D91                         u4981 0D90  
                       u4990 0D9F                         u4991 0D9E                 __CFG_WRT$OFF 0000  
          ?_Lcd_Write_String 0075                         _main 0C81  __size_of_currentMeasurement 0118  
                       btemp 007E                __CFG_BOREN$ON 0000                         start 0000  
         ??_Lcd_Write_String 0077              ___fldiv@new_exp 0068              __end_of_Lcd_Cmd 13A6  
                      ??_LCD 00B6                        ??_OFF 007B                        ??_aON 0070  
                      ??_bON 0070                        ??_cON 0070                        ??_ble 0070  
              ___fltol@sign1 00A9              __end_of___fladd 0492                        ?_main 0070  
            __end_of___fldiv 020A                        STR_10 104B                __CFG_WDTE$OFF 0000  
            __end_of___flmul 07F3              __end_of___flsub 1430              __end_of___fltol 1748  
            __end_of___lwdiv 156C              __end_of___lwmod 083B                        _PORTB 0006  
                      _PORTD 0008      __size_of_Lcd_Set_Cursor 0052                        _TRISA 0085  
                      _TRISB 0086                        _TRISD 0088                        _cLoop 00BA  
            __end_of_hotList 1000              __end_of_dpowers 101A                        _power 00BC  
                      pclath 000A                        status 0003                        wtemp0 007E  
            __end_of_sprintf 0B69             __end_of_Lcd_Init 16CC             __end_of_Lcd_Port 13E8  
            __initialization 07F3                 __end_of_main 0DE9                       ??_main 00B7  
         __size_of_Lcd_Clear 000D                       _ADRESH 001E                       _ADRESL 009E  
                  ??_Lcd_Cmd 0071      __size_of_Lcd_Write_Char 0039                       _TRISE0 0448  
           __end_of___xxtofl 08F5               __CFG_PWRTE$OFF 0000                    ??___fladd 0042  
                     ___wmul 1430                    ??___fldiv 005E                       _danger 00C0  
                  ??___flmul 0028                    ??___flsub 007E                    ??___fltol 00A4  
                  ??___lwdiv 0074                    ??___lwmod 007C        __end_of_Lcd_Write_Int 140C  
                  ??_hotList 0020           __size_of__Umul8_16 0027             Lcd_Write_Int@num 00AB  
                  ??_sprintf 0023              Lcd_Set_Cursor@a 0077              Lcd_Set_Cursor@b 0074  
            Lcd_Set_Cursor@y 0079              Lcd_Set_Cursor@z 0078                 ___xxtofl@arg 007A  
               ___xxtofl@exp 0079                 ___xxtofl@val 0070      __end_of__initialization 07FC  
          __end_of_Lcd_Clear 135C                   ___fltol@f1 00A0               __pcstackCOMMON 0070  
     __size_of_maximumPower1 002C       __size_of_maximumPower2 0058       __size_of_maximumPower3 00C6  
             _Lcd_Set_Cursor 156C                    ?_Lcd_Init 0070                    ?_Lcd_Port 0070  
                 __pbssBANK1 00BA            __end_of__Umul8_16 002D                   __pmaintext 0C81  
                    ?___wmul 0070    __size_of_Lcd_Write_String 0042       __end_of_Lcd_Set_Cursor 15BE  
                  ?___xxtofl 0070                   ??_Lcd_Init 0074                   ??_Lcd_Port 0070  
              _maximumPower1 1455                _maximumPower2 15BE                _maximumPower3 08F5  
                    _aDANGER 00C6                   __stringtab 1000   __end_of_currentMeasurement 0C81  
                    _bDANGER 00C4                      _cDANGER 00C2               _Lcd_Write_Char 14AD  
                    _Lcd_Cmd 138C                      ___fladd 020A                      ___fldiv 002D  
                    ___flmul 0492                      ___flsub 140C                      ___fltol 16CC  
            __size_of___wmul 0025                      ___lwdiv 1528                      ___lwmod 0801  
            ?_Lcd_Set_Cursor 0074                      __ptext1 09BB                      __ptext2 1616  
                    __ptext3 1481                      __ptext4 08F5                      __ptext5 15BE  
                    __ptext6 1455                      __ptext7 137C                      __ptext8 136C  
                    __ptext9 135C                 __size_of_LCD 00B8                 __size_of_OFF 0020  
                    _hotList 0DE9                 __size_of_aON 0010                 __size_of_bON 0010  
               __size_of_cON 0010                      _dpowers 1010                 __size_of_ble 0005  
                    _current 00CF                   ??___xxtofl 0074               ?_maximumPower1 0070  
             ?_maximumPower2 0070               ?_maximumPower3 0070                      _sprintf 0A81  
                    clrloop0 1348                      _voltage 00BE       __end_of_Lcd_Write_Char 14E6  
       end_of_initialization 07FC                    Lcd_Port@a 0070                  ___fladd@grs 004D  
              ___xxtofl@sign 0078                  ___fldiv@grs 006A                  ___fldiv@rem 0063  
              ?_powerSaving1 0070                ?_powerSaving2 0070                ?_powerSaving3 0070  
            ?_Lcd_Write_Char 0070            Lcd_Write_String@a 0075            Lcd_Write_String@i 007A  
                ___flmul@grs 002E                    _Lcd_Clear 134F               __end_of___wmul 1455  
           _Lcd_Write_String 14E6          start_initialization 07F3              ??_maximumPower1 0071  
            ??_maximumPower2 0071              ??_maximumPower3 0071                  __end_of_LCD 1800  
                __end_of_OFF 13C6                  __end_of_aON 136C                  __end_of_bON 137C  
                __end_of_cON 138C                  __end_of_ble 1347               ??_powerSaving1 0071  
             ??_powerSaving2 0071               ??_powerSaving3 0071            __size_of_Lcd_Init 005E  
          __size_of_Lcd_Port 0022       __size_of_Lcd_Write_Int 0024                   ?_Lcd_Clear 0070  
                   ??___wmul 0074                    __Umul8_16 0006              Lcd_Write_Char@a 0074  
            Lcd_Write_Char@y 0073                    ___fladd@a 003E                    ___fladd@b 003A  
                  ___fldiv@a 0056                    ___fldiv@b 005A                    ___flmul@a 0024  
                  ___flmul@b 0020                    ___flsub@a 004E                    ___flsub@b 0052  
                  ___latbits 0002                __pcstackBANK0 0020                __pcstackBANK1 00A0  
          __size_of___xxtofl 00BA                     ?_Lcd_Cmd 0070                  sprintf@flag 0027  
                sprintf@prec 0028             ___lwdiv@dividend 0072             ??_Lcd_Set_Cursor 0075  
         _currentMeasurement 0B69                     ?___fladd 003A                     ?___fldiv 0056  
                   ?___flmul 0020                     ?___flsub 004E                     ?___fltol 00A0  
                 ?__Umul8_16 0070                     ?___lwdiv 0070                     ?___lwmod 0078  
                  __pstrings 1000          ?_currentMeasurement 0070                     ?_hotList 0070  
              _Lcd_Write_Int 13E8             ___lwdiv@quotient 0075                     ?_sprintf 0020  
       ??_currentMeasurement 00AB               ___wmul@product 0074                    _nextState 00CE  
                  clear_ram0 1347                     Lcd_Cmd@a 0073                  ??_Lcd_Clear 0074  
       __end_of_powerSaving1 14AD         __end_of_powerSaving2 166E         __end_of_powerSaving3 0A81  
                 _ADCON0bits 001F                  __stringbase 100F                   _ADCON1bits 009F  
          ___wmul@multiplier 0070               ?_Lcd_Write_Int 00AB             ??_Lcd_Write_Char 0071  
                   _Lcd_Init 166E                     _Lcd_Port 13C6                     _aVOLTAGE 00CC  
   __end_of_Lcd_Write_String 1528                     _bVOLTAGE 00CA                     _cVOLTAGE 00C8  
           __size_of_Lcd_Cmd 001A                  ??__Umul8_16 0072             __size_of___fladd 0288  
           __size_of___fldiv 01DD             __size_of___flmul 0361             __size_of___flsub 0024  
           __size_of___fltol 007C             __size_of___lwdiv 0044             __size_of___lwmod 003A  
         __end_of__stringtab 1010                   sprintf@val 0029                     ___xxtofl 083B  
           __size_of_hotList 0217              ___lwdiv@divisor 0070              ___lwdiv@counter 0077  
                   __ptext10 0DE9                     __ptext11 134F                     __ptext20 083B  
                   __ptext12 0B69                     __ptext21 1430                     __ptext13 140C  
                   __ptext30 14AD                     __ptext22 16CC                     __ptext14 020A  
                   __ptext31 156C                     __ptext23 0492                     __ptext15 002D  
                   __ptext32 138C                     __ptext24 0006                     __ptext16 1342  
                   __ptext33 13C6                     __ptext25 13E8                     __ptext17 13A6  
                   __ptext26 0A81                     __ptext18 166E                     __ptext27 0801  
                   __ptext19 1748                     __ptext28 1528                     __ptext29 14E6  
           __size_of_sprintf 00E8                __size_of_main 0168              ??_Lcd_Write_Int 00AD  
      __end_of_maximumPower1 1481        __end_of_maximumPower2 1616        __end_of_maximumPower3 09BB  
        Lcd_Write_Int@number 00AE           Lcd_Write_Char@temp 0072                    sprintf@ap 0026  
                  sprintf@sp 002B             ___lwmod@dividend 007A        __size_of_powerSaving1 002C  
      __size_of_powerSaving2 0058        __size_of_powerSaving3 00C6                    stringcode 100A  
         Lcd_Set_Cursor@temp 007A       __Umul8_16@multiplicand 0070                     sprintf@c 002C  
                   sprintf@f 0020              ___lwmod@divisor 0078              ___lwmod@counter 007D  
                   stringdir 100A                     stringtab 1000                ___fladd@signs 004A  
               _powerSaving1 1481                 _powerSaving2 1616                 _powerSaving3 09BB  
               ___fladd@aexp 004B                 ___fladd@bexp 004C         __Umul8_16@multiplier 0078  
          __Umul8_16@product 0074  
