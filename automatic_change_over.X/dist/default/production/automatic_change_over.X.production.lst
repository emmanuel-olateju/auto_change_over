

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Dec 28 03:48:45 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.10
    48                           ; Generated 31/07/2019 GMT
    49                           ; 
    50                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F877A Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  018C                     	;# 
   200  018D                     	;# 
   201                           
   202                           	psect	strings
   203  1000                     __pstrings:	
   204  1000                     stringtab:	
   205  1000                     __stringtab:	
   206                           
   207                           ;	String table - string pointers are 1 byte each
   208  1000  1BFF               	btfsc	btemp+1,7
   209  1001  280A               	ljmp	stringcode
   210  1002  1383               	bcf	3,7
   211  1003  187F               	btfsc	btemp+1,0
   212  1004  1783               	bsf	3,7
   213  1005  0800               	movf	0,w
   214  1006  0A84               	incf	4,f
   215  1007  1903               	skipnz
   216  1008  0AFF               	incf	btemp+1,f
   217  1009  0008               	return
   218  100A                     stringcode:	
   219  100A                     stringdir:	
   220  100A  3010               	movlw	high stringdir
   221  100B  008A               	movwf	10
   222  100C  0804               	movf	4,w
   223  100D  0A84               	incf	4,f
   224  100E  0782               	addwf	2,f
   225  100F                     __stringbase:	
   226  100F  3400               	retlw	0
   227  1010                     __end_of__stringtab:	
   228  1010                     _dpowers:	
   229  1010  3401               	retlw	1
   230  1011  3400               	retlw	0
   231  1012  340A               	retlw	10
   232  1013  3400               	retlw	0
   233  1014  3464               	retlw	100
   234  1015  3400               	retlw	0
   235  1016  34E8               	retlw	232
   236  1017  3403               	retlw	3
   237  1018  3410               	retlw	16
   238  1019  3427               	retlw	39
   239  101A                     __end_of_dpowers:	
   240  001E                     _ADRESH	set	30
   241  0008                     _PORTD	set	8
   242  0006                     _PORTB	set	6
   243  001F                     _ADCON0bits	set	31
   244  0035                     _RB5	set	53
   245  0034                     _RB4	set	52
   246  0033                     _RB3	set	51
   247  0036                     _RB6	set	54
   248  0037                     _RB7	set	55
   249  0048                     _RE0	set	72
   250  0043                     _RD3	set	67
   251  0041                     _RD1	set	65
   252  0047                     _RD7	set	71
   253  0046                     _RD6	set	70
   254  0045                     _RD5	set	69
   255  0044                     _RD4	set	68
   256  009E                     _ADRESL	set	158
   257  0088                     _TRISD	set	136
   258  0086                     _TRISB	set	134
   259  0085                     _TRISA	set	133
   260  009F                     _ADCON1bits	set	159
   261  0448                     _TRISE0	set	1096
   262  101A                     STR_3:	
   263  101A  3461               	retlw	97	;'a'
   264  101B  3475               	retlw	117	;'u'
   265  101C  3474               	retlw	116	;'t'
   266  101D  346F               	retlw	111	;'o'
   267  101E  3420               	retlw	32	;' '
   268  101F  3470               	retlw	112	;'p'
   269  1020  3468               	retlw	104	;'h'
   270  1021  3461               	retlw	97	;'a'
   271  1022  3473               	retlw	115	;'s'
   272  1023  3465               	retlw	101	;'e'
   273  1024  3420               	retlw	32	;' '
   274  1025  3473               	retlw	115	;'s'
   275  1026  3479               	retlw	121	;'y'
   276  1027  3473               	retlw	115	;'s'
   277  1028  346D               	retlw	109	;'m'
   278  1029  3400               	retlw	0
   279  102A                     STR_2:	
   280  102A  3441               	retlw	65	;'A'
   281  102B  3465               	retlw	101	;'e'
   282  102C  346F               	retlw	111	;'o'
   283  102D  346E               	retlw	110	;'n'
   284  102E  342D               	retlw	45	;'-'
   285  102F  3441               	retlw	65	;'A'
   286  1030  3474               	retlw	116	;'t'
   287  1031  346B               	retlw	107	;'k'
   288  1032  3400               	retlw	0
   289  1033                     STR_4:	
   290  1033  346C               	retlw	108	;'l'
   291  1034  346F               	retlw	111	;'o'
   292  1035  3461               	retlw	97	;'a'
   293  1036  3464               	retlw	100	;'d'
   294  1037  3469               	retlw	105	;'i'
   295  1038  346E               	retlw	110	;'n'
   296  1039  3467               	retlw	103	;'g'
   297  103A  3400               	retlw	0
   298  103B                     STR_7:	
   299  103B  3470               	retlw	112	;'p'
   300  103C  3420               	retlw	32	;' '
   301  103D  3400               	retlw	0
   302  103E                     STR_6:	
   303  103E  346D               	retlw	109	;'m'
   304  103F  3450               	retlw	80	;'P'
   305  1040  3400               	retlw	0
   306  1041                     STR_5:	
   307  1041  3470               	retlw	112	;'p'
   308  1042  3453               	retlw	83	;'S'
   309  1043  3400               	retlw	0
   310  1044                     STR_1:	
   311  1044  3425               	retlw	37	;'%'
   312  1045  3464               	retlw	100	;'d'
   313  1046  3400               	retlw	0
   314  1047                     STR_9:	
   315  1047  3441               	retlw	65	;'A'
   316  1048  3400               	retlw	0
   317  1049                     STR_8:	
   318  1049  3456               	retlw	86	;'V'
   319  104A  3400               	retlw	0
   320  104B                     STR_10:	
   321  104B  3457               	retlw	87	;'W'
   322  104C  3400               	retlw	0
   323                           
   324                           ; #config settings
   325  0000                     
   326                           	psect	cinit
   327  07F3                     start_initialization:	
   328  07F3                     __initialization:	
   329                           
   330                           ; Clear objects allocated to BANK1
   331  07F3  1383               	bcf	3,7	;select IRP bank0
   332  07F4  30BA               	movlw	low __pbssBANK1
   333  07F5  0084               	movwf	4
   334  07F6  30D1               	movlw	low (__pbssBANK1+23)
   335  07F7  160A  118A  232F  120A  118A  	fcall	clear_ram0
   336  07FC                     end_of_initialization:	
   337                           ;End of C runtime variable initialization code
   338                           
   339  07FC                     __end_of__initialization:	
   340  07FC  0183               	clrf	3
   341  07FD  120A  158A  2C76   	ljmp	_main	;jump to C main() function
   342                           
   343                           	psect	bssBANK1
   344  00BA                     __pbssBANK1:	
   345  00BA                     _cLoop:	
   346  00BA                     	ds	2
   347  00BC                     _power:	
   348  00BC                     	ds	2
   349  00BE                     _voltage:	
   350  00BE                     	ds	2
   351  00C0                     _danger:	
   352  00C0                     	ds	2
   353  00C2                     _cDANGER:	
   354  00C2                     	ds	2
   355  00C4                     _bDANGER:	
   356  00C4                     	ds	2
   357  00C6                     _aDANGER:	
   358  00C6                     	ds	2
   359  00C8                     _cVOLTAGE:	
   360  00C8                     	ds	2
   361  00CA                     _bVOLTAGE:	
   362  00CA                     	ds	2
   363  00CC                     _aVOLTAGE:	
   364  00CC                     	ds	2
   365  00CE                     _nextState:	
   366  00CE                     	ds	1
   367  00CF                     _current:	
   368  00CF                     	ds	2
   369                           
   370                           	psect	clrtext
   371  132F                     clear_ram0:	
   372                           ;	Called with FSR containing the base address, and
   373                           ;	W with the last address+1
   374                           
   375  132F  0064               	clrwdt	;clear the watchdog before getting into this loop
   376  1330                     clrloop0:	
   377  1330  0180               	clrf	0	;clear RAM location pointed to by FSR
   378  1331  0A84               	incf	4,f	;increment pointer
   379  1332  0604               	xorwf	4,w	;XOR with final address
   380  1333  1903               	btfsc	3,2	;have we reached the end yet?
   381  1334  3400               	retlw	0	;all done for this memory range, return
   382  1335  0604               	xorwf	4,w	;XOR again to restore value
   383  1336  2B30               	goto	clrloop0	;do the next byte
   384                           
   385                           	psect	cstackBANK1
   386  00A0                     __pcstackBANK1:	
   387  00A0                     ?___fltol:	
   388  00A0                     ___fltol@f1:	
   389                           ; 4 bytes @ 0x0
   390                           
   391                           
   392                           ; 4 bytes @ 0x0
   393  00A0                     	ds	4
   394  00A4                     ??___fltol:	
   395                           
   396                           ; 1 bytes @ 0x4
   397  00A4                     	ds	5
   398  00A9                     ___fltol@sign1:	
   399                           
   400                           ; 1 bytes @ 0x9
   401  00A9                     	ds	1
   402  00AA                     ___fltol@exp1:	
   403                           
   404                           ; 1 bytes @ 0xA
   405  00AA                     	ds	1
   406  00AB                     ??_currentMeasurement:	
   407  00AB                     ?_Lcd_Write_Int:	
   408                           ; 1 bytes @ 0xB
   409                           
   410  00AB                     Lcd_Write_Int@num:	
   411                           ; 1 bytes @ 0xB
   412                           
   413                           
   414                           ; 2 bytes @ 0xB
   415  00AB                     	ds	2
   416  00AD                     ??_Lcd_Write_Int:	
   417                           
   418                           ; 1 bytes @ 0xD
   419  00AD                     	ds	1
   420  00AE                     Lcd_Write_Int@number:	
   421                           
   422                           ; 8 bytes @ 0xE
   423  00AE                     	ds	8
   424  00B6                     ??_LCD:	
   425                           
   426                           ; 1 bytes @ 0x16
   427  00B6                     	ds	1
   428  00B7                     ??_main:	
   429                           
   430                           ; 1 bytes @ 0x17
   431  00B7                     	ds	3
   432                           
   433                           	psect	cstackCOMMON
   434  0070                     __pcstackCOMMON:	
   435  0070                     ?_hotList:	
   436  0070                     ?_powerSaving3:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_powerSaving2:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_powerSaving1:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_maximumPower3:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?_maximumPower2:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ?_maximumPower1:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ?_aON:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ?_bON:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ?_cON:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     ?_OFF:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ?_currentMeasurement:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0070                     ?_LCD:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     ?_ble:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ??_ble:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ?_Lcd_Port:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ??_Lcd_Port:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ?_Lcd_Cmd:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0070                     ?_Lcd_Init:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ?_Lcd_Write_Char:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_main:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?__Umul8_16:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ?_Lcd_Clear:	
   500                           ; 2 bytes @ 0x0
   501                           
   502  0070                     ?___wmul:	
   503                           ; 2 bytes @ 0x0
   504                           
   505  0070                     ?___lwdiv:	
   506                           ; 2 bytes @ 0x0
   507                           
   508  0070                     ?___xxtofl:	
   509                           ; 2 bytes @ 0x0
   510                           
   511  0070                     Lcd_Port@a:	
   512                           ; 4 bytes @ 0x0
   513                           
   514  0070                     __Umul8_16@multiplicand:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ___wmul@multiplier:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ___lwdiv@divisor:	
   521                           ; 2 bytes @ 0x0
   522                           
   523  0070                     ___xxtofl@val:	
   524                           ; 2 bytes @ 0x0
   525                           
   526                           
   527                           ; 4 bytes @ 0x0
   528  0070                     	ds	1
   529  0071                     ??_Lcd_Cmd:	
   530  0071                     ??_Lcd_Write_Char:	
   531                           ; 1 bytes @ 0x1
   532                           
   533                           
   534                           ; 1 bytes @ 0x1
   535  0071                     	ds	1
   536  0072                     ??__Umul8_16:	
   537  0072                     Lcd_Write_Char@temp:	
   538                           ; 1 bytes @ 0x2
   539                           
   540  0072                     ___wmul@multiplicand:	
   541                           ; 1 bytes @ 0x2
   542                           
   543  0072                     ___lwdiv@dividend:	
   544                           ; 2 bytes @ 0x2
   545                           
   546                           
   547                           ; 2 bytes @ 0x2
   548  0072                     	ds	1
   549  0073                     Lcd_Cmd@a:	
   550  0073                     Lcd_Write_Char@y:	
   551                           ; 1 bytes @ 0x3
   552                           
   553                           
   554                           ; 1 bytes @ 0x3
   555  0073                     	ds	1
   556  0074                     ??_Lcd_Clear:	
   557  0074                     ?_Lcd_Set_Cursor:	
   558                           ; 1 bytes @ 0x4
   559                           
   560  0074                     ??_Lcd_Init:	
   561                           ; 1 bytes @ 0x4
   562                           
   563  0074                     ??___wmul:	
   564                           ; 1 bytes @ 0x4
   565                           
   566  0074                     ??___lwdiv:	
   567                           ; 1 bytes @ 0x4
   568                           
   569  0074                     ??___xxtofl:	
   570                           ; 1 bytes @ 0x4
   571                           
   572  0074                     Lcd_Set_Cursor@b:	
   573                           ; 1 bytes @ 0x4
   574                           
   575  0074                     Lcd_Write_Char@a:	
   576                           ; 1 bytes @ 0x4
   577                           
   578  0074                     ___wmul@product:	
   579                           ; 1 bytes @ 0x4
   580                           
   581  0074                     __Umul8_16@product:	
   582                           ; 2 bytes @ 0x4
   583                           
   584                           
   585                           ; 2 bytes @ 0x4
   586  0074                     	ds	1
   587  0075                     ??_aON:	
   588  0075                     ??_bON:	
   589                           ; 1 bytes @ 0x5
   590                           
   591  0075                     ??_cON:	
   592                           ; 1 bytes @ 0x5
   593                           
   594  0075                     ??_Lcd_Set_Cursor:	
   595                           ; 1 bytes @ 0x5
   596                           
   597  0075                     ?_Lcd_Write_String:	
   598                           ; 1 bytes @ 0x5
   599                           
   600  0075                     Lcd_Write_String@a:	
   601                           ; 1 bytes @ 0x5
   602                           
   603  0075                     ___lwdiv@quotient:	
   604                           ; 2 bytes @ 0x5
   605                           
   606                           
   607                           ; 2 bytes @ 0x5
   608  0075                     	ds	1
   609  0076                     ??_powerSaving3:	
   610  0076                     ??_powerSaving2:	
   611                           ; 1 bytes @ 0x6
   612                           
   613  0076                     ??_powerSaving1:	
   614                           ; 1 bytes @ 0x6
   615                           
   616  0076                     ??_maximumPower3:	
   617                           ; 1 bytes @ 0x6
   618                           
   619  0076                     ??_maximumPower2:	
   620                           ; 1 bytes @ 0x6
   621                           
   622  0076                     ??_maximumPower1:	
   623                           ; 1 bytes @ 0x6
   624                           
   625  0076                     __Umul8_16@word_mpld:	
   626                           ; 1 bytes @ 0x6
   627                           
   628                           
   629                           ; 2 bytes @ 0x6
   630  0076                     	ds	1
   631  0077                     ??_Lcd_Write_String:	
   632  0077                     Lcd_Set_Cursor@a:	
   633                           ; 1 bytes @ 0x7
   634                           
   635  0077                     ___lwdiv@counter:	
   636                           ; 1 bytes @ 0x7
   637                           
   638                           
   639                           ; 1 bytes @ 0x7
   640  0077                     	ds	1
   641  0078                     ?___lwmod:	
   642  0078                     Lcd_Set_Cursor@z:	
   643                           ; 2 bytes @ 0x8
   644                           
   645  0078                     ___xxtofl@sign:	
   646                           ; 1 bytes @ 0x8
   647                           
   648  0078                     __Umul8_16@multiplier:	
   649                           ; 1 bytes @ 0x8
   650                           
   651  0078                     ___lwmod@divisor:	
   652                           ; 1 bytes @ 0x8
   653                           
   654                           
   655                           ; 2 bytes @ 0x8
   656  0078                     	ds	1
   657  0079                     Lcd_Set_Cursor@y:	
   658  0079                     ___xxtofl@exp:	
   659                           ; 1 bytes @ 0x9
   660                           
   661                           
   662                           ; 1 bytes @ 0x9
   663  0079                     	ds	1
   664  007A                     Lcd_Set_Cursor@temp:	
   665  007A                     Lcd_Write_String@i:	
   666                           ; 1 bytes @ 0xA
   667                           
   668  007A                     ___lwmod@dividend:	
   669                           ; 2 bytes @ 0xA
   670                           
   671  007A                     ___xxtofl@arg:	
   672                           ; 2 bytes @ 0xA
   673                           
   674                           
   675                           ; 4 bytes @ 0xA
   676  007A                     	ds	1
   677  007B                     ??_OFF:	
   678                           
   679                           ; 1 bytes @ 0xB
   680  007B                     	ds	1
   681  007C                     ??___lwmod:	
   682                           
   683                           ; 1 bytes @ 0xC
   684  007C                     	ds	1
   685  007D                     ___lwmod@counter:	
   686                           
   687                           ; 1 bytes @ 0xD
   688  007D                     	ds	1
   689  007E                     ??___flsub:	
   690                           
   691                           	psect	cstackBANK0
   692  0020                     __pcstackBANK0:	
   693                           ; 1 bytes @ 0xE
   694                           
   695  0020                     ??_hotList:	
   696  0020                     ?_sprintf:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0020                     ?___flmul:	
   700                           ; 2 bytes @ 0x0
   701                           
   702  0020                     sprintf@f:	
   703                           ; 4 bytes @ 0x0
   704                           
   705  0020                     ___flmul@b:	
   706                           ; 1 bytes @ 0x0
   707                           
   708                           
   709                           ; 4 bytes @ 0x0
   710  0020                     	ds	3
   711  0023                     ??_sprintf:	
   712                           
   713                           ; 1 bytes @ 0x3
   714  0023                     	ds	1
   715  0024                     ___flmul@a:	
   716                           
   717                           ; 4 bytes @ 0x4
   718  0024                     	ds	2
   719  0026                     sprintf@ap:	
   720                           
   721                           ; 1 bytes @ 0x6
   722  0026                     	ds	1
   723  0027                     sprintf@flag:	
   724                           
   725                           ; 1 bytes @ 0x7
   726  0027                     	ds	1
   727  0028                     ??___flmul:	
   728  0028                     sprintf@prec:	
   729                           ; 1 bytes @ 0x8
   730                           
   731                           
   732                           ; 1 bytes @ 0x8
   733  0028                     	ds	1
   734  0029                     sprintf@val:	
   735                           
   736                           ; 2 bytes @ 0x9
   737  0029                     	ds	2
   738  002B                     sprintf@sp:	
   739                           
   740                           ; 1 bytes @ 0xB
   741  002B                     	ds	1
   742  002C                     sprintf@c:	
   743                           
   744                           ; 1 bytes @ 0xC
   745  002C                     	ds	1
   746  002D                     ___flmul@sign:	
   747                           
   748                           ; 1 bytes @ 0xD
   749  002D                     	ds	1
   750  002E                     ___flmul@grs:	
   751                           
   752                           ; 4 bytes @ 0xE
   753  002E                     	ds	4
   754  0032                     ___flmul@aexp:	
   755                           
   756                           ; 1 bytes @ 0x12
   757  0032                     	ds	1
   758  0033                     ___flmul@bexp:	
   759                           
   760                           ; 1 bytes @ 0x13
   761  0033                     	ds	1
   762  0034                     ___flmul@prod:	
   763                           
   764                           ; 4 bytes @ 0x14
   765  0034                     	ds	4
   766  0038                     ___flmul@temp:	
   767                           
   768                           ; 2 bytes @ 0x18
   769  0038                     	ds	2
   770  003A                     ?___fladd:	
   771  003A                     ___fladd@b:	
   772                           ; 4 bytes @ 0x1A
   773                           
   774                           
   775                           ; 4 bytes @ 0x1A
   776  003A                     	ds	4
   777  003E                     ___fladd@a:	
   778                           
   779                           ; 4 bytes @ 0x1E
   780  003E                     	ds	4
   781  0042                     ??___fladd:	
   782                           
   783                           ; 1 bytes @ 0x22
   784  0042                     	ds	8
   785  004A                     ___fladd@signs:	
   786                           
   787                           ; 1 bytes @ 0x2A
   788  004A                     	ds	1
   789  004B                     ___fladd@aexp:	
   790                           
   791                           ; 1 bytes @ 0x2B
   792  004B                     	ds	1
   793  004C                     ___fladd@bexp:	
   794                           
   795                           ; 1 bytes @ 0x2C
   796  004C                     	ds	1
   797  004D                     ___fladd@grs:	
   798                           
   799                           ; 1 bytes @ 0x2D
   800  004D                     	ds	1
   801  004E                     ?___flsub:	
   802  004E                     ___flsub@a:	
   803                           ; 4 bytes @ 0x2E
   804                           
   805                           
   806                           ; 4 bytes @ 0x2E
   807  004E                     	ds	4
   808  0052                     ___flsub@b:	
   809                           
   810                           ; 4 bytes @ 0x32
   811  0052                     	ds	4
   812  0056                     ?___fldiv:	
   813  0056                     ___fldiv@a:	
   814                           ; 4 bytes @ 0x36
   815                           
   816                           
   817                           ; 4 bytes @ 0x36
   818  0056                     	ds	4
   819  005A                     ___fldiv@b:	
   820                           
   821                           ; 4 bytes @ 0x3A
   822  005A                     	ds	4
   823  005E                     ??___fldiv:	
   824                           
   825                           ; 1 bytes @ 0x3E
   826  005E                     	ds	5
   827  0063                     ___fldiv@rem:	
   828                           
   829                           ; 4 bytes @ 0x43
   830  0063                     	ds	4
   831  0067                     ___fldiv@sign:	
   832                           
   833                           ; 1 bytes @ 0x47
   834  0067                     	ds	1
   835  0068                     ___fldiv@new_exp:	
   836                           
   837                           ; 2 bytes @ 0x48
   838  0068                     	ds	2
   839  006A                     ___fldiv@grs:	
   840                           
   841                           ; 4 bytes @ 0x4A
   842  006A                     	ds	4
   843  006E                     ___fldiv@bexp:	
   844                           
   845                           ; 1 bytes @ 0x4E
   846  006E                     	ds	1
   847  006F                     ___fldiv@aexp:	
   848                           
   849                           ; 1 bytes @ 0x4F
   850  006F                     	ds	1
   851                           
   852                           	psect	maintext
   853  0C76                     __pmaintext:	
   854 ;;
   855 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   856 ;;
   857 ;; *************** function _main *****************
   858 ;; Defined at:
   859 ;;		line 74 in file "main.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;		None
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   868 ;; Tracked objects:
   869 ;;		On entry : B00/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   873 ;;      Params:         0       0       0       0       0
   874 ;;      Locals:         0       0       0       0       0
   875 ;;      Temps:          0       0       3       0       0
   876 ;;      Totals:         0       0       3       0       0
   877 ;;Total ram usage:        3 bytes
   878 ;; Hardware stack levels required when called:    5
   879 ;; This function calls:
   880 ;;		_LCD
   881 ;;		_Lcd_Clear
   882 ;;		_Lcd_Init
   883 ;;		_Lcd_Set_Cursor
   884 ;;		_Lcd_Write_String
   885 ;;		_OFF
   886 ;;		_aON
   887 ;;		_bON
   888 ;;		_ble
   889 ;;		_cON
   890 ;;		_currentMeasurement
   891 ;;		_hotList
   892 ;;		_maximumPower1
   893 ;;		_maximumPower2
   894 ;;		_maximumPower3
   895 ;;		_powerSaving1
   896 ;;		_powerSaving2
   897 ;;		_powerSaving3
   898 ;; This function is called by:
   899 ;;		Startup code after reset
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           
   904                           ;psect for function _main
   905  0C76                     _main:	
   906  0C76                     l3495:	
   907                           ;incstack = 0
   908                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   909                           
   910                           
   911                           ;main.c: 75:     ADCON1bits.ADFM=1;
   912  0C76  1683               	bsf	3,5	;RP0=1, select bank1
   913  0C77  1303               	bcf	3,6	;RP1=0, select bank1
   914  0C78  179F               	bsf	31,7	;volatile
   915                           
   916                           ;main.c: 76:     ADCON1bits.ADCS2=0;
   917  0C79  131F               	bcf	31,6	;volatile
   918                           
   919                           ;main.c: 77:     ADCON0bits.ADCS1=1;
   920  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
   921  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
   922  0C7C  179F               	bsf	31,7	;volatile
   923                           
   924                           ;main.c: 78:     ADCON0bits.ADCS0=0;
   925  0C7D  131F               	bcf	31,6	;volatile
   926                           
   927                           ;main.c: 79:     ADCON1bits.PCFG3=0;
   928  0C7E  1683               	bsf	3,5	;RP0=1, select bank1
   929  0C7F  1303               	bcf	3,6	;RP1=0, select bank1
   930  0C80  119F               	bcf	31,3	;volatile
   931                           
   932                           ;main.c: 80:     ADCON1bits.PCFG2=0;
   933  0C81  111F               	bcf	31,2	;volatile
   934                           
   935                           ;main.c: 81:     ADCON1bits.PCFG1=1;
   936  0C82  149F               	bsf	31,1	;volatile
   937                           
   938                           ;main.c: 82:     ADCON1bits.PCFG0=0;
   939  0C83  101F               	bcf	31,0	;volatile
   940  0C84                     l3497:	
   941                           
   942                           ;main.c: 83:     TRISA=0x0F;
   943  0C84  300F               	movlw	15
   944  0C85  0085               	movwf	5	;volatile
   945  0C86                     l3499:	
   946                           
   947                           ;main.c: 84:     ADCON0bits.ADON=1;
   948  0C86  1283               	bcf	3,5	;RP0=0, select bank0
   949  0C87  1303               	bcf	3,6	;RP1=0, select bank0
   950  0C88  141F               	bsf	31,0	;volatile
   951                           
   952                           ;main.c: 85:     TRISB=0xC0;
   953  0C89  30C0               	movlw	192
   954  0C8A  1683               	bsf	3,5	;RP0=1, select bank1
   955  0C8B  1303               	bcf	3,6	;RP1=0, select bank1
   956  0C8C  0086               	movwf	6	;volatile
   957  0C8D                     l3501:	
   958                           
   959                           ;main.c: 86:     PORTB=0x00;
   960  0C8D  1283               	bcf	3,5	;RP0=0, select bank0
   961  0C8E  1303               	bcf	3,6	;RP1=0, select bank0
   962  0C8F  0186               	clrf	6	;volatile
   963  0C90                     l3503:	
   964                           
   965                           ;main.c: 87:     TRISE0=0;
   966  0C90  1683               	bsf	3,5	;RP0=1, select bank1
   967  0C91  1303               	bcf	3,6	;RP1=0, select bank1
   968  0C92  1009               	bcf	9,0	;volatile
   969  0C93                     l3505:	
   970                           
   971                           ;main.c: 88:     RE0=0;
   972  0C93  1283               	bcf	3,5	;RP0=0, select bank0
   973  0C94  1303               	bcf	3,6	;RP1=0, select bank0
   974  0C95  1009               	bcf	9,0	;volatile
   975  0C96                     l3507:	
   976                           
   977                           ;main.c: 89:     TRISD=0x00;
   978  0C96  1683               	bsf	3,5	;RP0=1, select bank1
   979  0C97  1303               	bcf	3,6	;RP1=0, select bank1
   980  0C98  0188               	clrf	8	;volatile
   981  0C99                     l3509:	
   982                           
   983                           ;main.c: 90:     PORTD=0x00;
   984  0C99  1283               	bcf	3,5	;RP0=0, select bank0
   985  0C9A  1303               	bcf	3,6	;RP1=0, select bank0
   986  0C9B  0188               	clrf	8	;volatile
   987  0C9C                     l3511:	
   988                           
   989                           ;main.c: 91:     Lcd_Init();
   990  0C9C  160A  118A  266E  120A  158A  	fcall	_Lcd_Init
   991  0CA1                     l3513:	
   992                           
   993                           ;main.c: 92:     Lcd_Set_Cursor(1,5);
   994  0CA1  3005               	movlw	5
   995  0CA2  1683               	bsf	3,5	;RP0=1, select bank1
   996  0CA3  1303               	bcf	3,6	;RP1=0, select bank1
   997  0CA4  00B7               	movwf	??_main^(0+128)
   998  0CA5  0837               	movf	??_main^(0+128),w
   999  0CA6  00F4               	movwf	Lcd_Set_Cursor@b
  1000  0CA7  3001               	movlw	1
  1001  0CA8  160A  118A  256C  120A  158A  	fcall	_Lcd_Set_Cursor
  1002  0CAD                     l3515:	
  1003                           
  1004                           ;main.c: 93:     Lcd_Write_String("Aeon-Atk");
  1005  0CAD  301B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1006  0CAE  00F5               	movwf	Lcd_Write_String@a
  1007  0CAF  3080               	movlw	128
  1008  0CB0  00F6               	movwf	Lcd_Write_String@a+1
  1009  0CB1  160A  118A  24E6  120A  158A  	fcall	_Lcd_Write_String
  1010  0CB6                     l3517:	
  1011                           
  1012                           ;main.c: 94:     Lcd_Set_Cursor(2,1);
  1013  0CB6  01F4               	clrf	Lcd_Set_Cursor@b
  1014  0CB7  0AF4               	incf	Lcd_Set_Cursor@b,f
  1015  0CB8  3002               	movlw	2
  1016  0CB9  160A  118A  256C  120A  158A  	fcall	_Lcd_Set_Cursor
  1017  0CBE                     l3519:	
  1018                           
  1019                           ;main.c: 95:     Lcd_Write_String("auto phase sysm");
  1020  0CBE  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1021  0CBF  00F5               	movwf	Lcd_Write_String@a
  1022  0CC0  3080               	movlw	128
  1023  0CC1  00F6               	movwf	Lcd_Write_String@a+1
  1024  0CC2  160A  118A  24E6  120A  158A  	fcall	_Lcd_Write_String
  1025  0CC7                     l3521:	
  1026                           
  1027                           ;main.c: 96:     _delay((unsigned long)((100)*(20000000/4000.0)));
  1028  0CC7  3003               	movlw	3
  1029  0CC8  1683               	bsf	3,5	;RP0=1, select bank1
  1030  0CC9  1303               	bcf	3,6	;RP1=0, select bank1
  1031  0CCA  00B9               	movwf	(??_main^(0+128)+2)
  1032  0CCB  308A               	movlw	138
  1033  0CCC  00B8               	movwf	(??_main^(0+128)+1)
  1034  0CCD  3055               	movlw	85
  1035  0CCE  00B7               	movwf	??_main^(0+128)
  1036  0CCF                     u5037:	
  1037  0CCF  0BB7               	decfsz	??_main^(0+128),f
  1038  0CD0  2CCF               	goto	u5037
  1039  0CD1  0BB8               	decfsz	(??_main^(0+128)+1),f
  1040  0CD2  2CCF               	goto	u5037
  1041  0CD3  0BB9               	decfsz	(??_main^(0+128)+2),f
  1042  0CD4  2CCF               	goto	u5037
  1043  0CD5                     l3523:	
  1044                           
  1045                           ;main.c: 97:     Lcd_Clear();
  1046  0CD5  160A  118A  2337  120A  158A  	fcall	_Lcd_Clear
  1047  0CDA                     l3525:	
  1048                           
  1049                           ;main.c: 98:     Lcd_Set_Cursor(1,5);
  1050  0CDA  3005               	movlw	5
  1051  0CDB  1683               	bsf	3,5	;RP0=1, select bank1
  1052  0CDC  1303               	bcf	3,6	;RP1=0, select bank1
  1053  0CDD  00B7               	movwf	??_main^(0+128)
  1054  0CDE  0837               	movf	??_main^(0+128),w
  1055  0CDF  00F4               	movwf	Lcd_Set_Cursor@b
  1056  0CE0  3001               	movlw	1
  1057  0CE1  160A  118A  256C  120A  158A  	fcall	_Lcd_Set_Cursor
  1058  0CE6                     l3527:	
  1059                           
  1060                           ;main.c: 99:     Lcd_Write_String("loading");
  1061  0CE6  3024               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1062  0CE7  00F5               	movwf	Lcd_Write_String@a
  1063  0CE8  3080               	movlw	128
  1064  0CE9  00F6               	movwf	Lcd_Write_String@a+1
  1065  0CEA  160A  118A  24E6  120A  158A  	fcall	_Lcd_Write_String
  1066  0CEF                     l3529:	
  1067                           
  1068                           ;main.c: 100:     _delay((unsigned long)((100)*(20000000/4000.0)));
  1069  0CEF  3003               	movlw	3
  1070  0CF0  1683               	bsf	3,5	;RP0=1, select bank1
  1071  0CF1  1303               	bcf	3,6	;RP1=0, select bank1
  1072  0CF2  00B9               	movwf	(??_main^(0+128)+2)
  1073  0CF3  308A               	movlw	138
  1074  0CF4  00B8               	movwf	(??_main^(0+128)+1)
  1075  0CF5  3055               	movlw	85
  1076  0CF6  00B7               	movwf	??_main^(0+128)
  1077  0CF7                     u5047:	
  1078  0CF7  0BB7               	decfsz	??_main^(0+128),f
  1079  0CF8  2CF7               	goto	u5047
  1080  0CF9  0BB8               	decfsz	(??_main^(0+128)+1),f
  1081  0CFA  2CF7               	goto	u5047
  1082  0CFB  0BB9               	decfsz	(??_main^(0+128)+2),f
  1083  0CFC  2CF7               	goto	u5047
  1084  0CFD                     l3531:	
  1085                           
  1086                           ;main.c: 101:     Lcd_Clear();
  1087  0CFD  160A  118A  2337  120A  158A  	fcall	_Lcd_Clear
  1088  0D02                     l3533:	
  1089                           
  1090                           ;main.c: 102:     nextState=hL;
  1091  0D02  1683               	bsf	3,5	;RP0=1, select bank1
  1092  0D03  1303               	bcf	3,6	;RP1=0, select bank1
  1093  0D04  01CE               	clrf	_nextState^(0+128)
  1094  0D05  0ACE               	incf	_nextState^(0+128),f
  1095  0D06                     l3535:	
  1096                           
  1097                           ;main.c: 105:         if(nextState==hL)hotList();
  1098  0D06  1683               	bsf	3,5	;RP0=1, select bank1
  1099  0D07  1303               	bcf	3,6	;RP1=0, select bank1
  1100  0D08  034E               	decf	_nextState^(0+128),w
  1101  0D09  1D03               	btfss	3,2
  1102  0D0A  2D0C               	goto	u4881
  1103  0D0B  2D0D               	goto	u4880
  1104  0D0C                     u4881:	
  1105  0D0C  2D12               	goto	l3539
  1106  0D0D                     u4880:	
  1107  0D0D                     l3537:	
  1108  0D0D  120A  158A  25E9  120A  158A  	fcall	_hotList
  1109  0D12                     l3539:	
  1110                           
  1111                           ;main.c: 106:         Lcd_Set_Cursor(1,16);
  1112  0D12  3010               	movlw	16
  1113  0D13  1683               	bsf	3,5	;RP0=1, select bank1
  1114  0D14  1303               	bcf	3,6	;RP1=0, select bank1
  1115  0D15  00B7               	movwf	??_main^(0+128)
  1116  0D16  0837               	movf	??_main^(0+128),w
  1117  0D17  00F4               	movwf	Lcd_Set_Cursor@b
  1118  0D18  3001               	movlw	1
  1119  0D19  160A  118A  256C  120A  158A  	fcall	_Lcd_Set_Cursor
  1120  0D1E                     l3541:	
  1121                           
  1122                           ;main.c: 107:         if(nextState==pS3)powerSaving3();
  1123  0D1E  3002               	movlw	2
  1124  0D1F  1683               	bsf	3,5	;RP0=1, select bank1
  1125  0D20  1303               	bcf	3,6	;RP1=0, select bank1
  1126  0D21  064E               	xorwf	_nextState^(0+128),w
  1127  0D22  1D03               	btfss	3,2
  1128  0D23  2D25               	goto	u4891
  1129  0D24  2D26               	goto	u4890
  1130  0D25                     u4891:	
  1131  0D25  2D2C               	goto	l3545
  1132  0D26                     u4890:	
  1133  0D26                     l3543:	
  1134  0D26  120A  158A  21BC  120A  158A  	fcall	_powerSaving3
  1135  0D2B  2D98               	goto	l3581
  1136  0D2C                     l3545:	
  1137  0D2C  3003               	movlw	3
  1138  0D2D  064E               	xorwf	_nextState^(0+128),w
  1139  0D2E  1D03               	btfss	3,2
  1140  0D2F  2D31               	goto	u4901
  1141  0D30  2D32               	goto	u4900
  1142  0D31                     u4901:	
  1143  0D31  2D38               	goto	l3549
  1144  0D32                     u4900:	
  1145  0D32                     l3547:	
  1146  0D32  160A  118A  2616  120A  158A  	fcall	_powerSaving2
  1147  0D37  2D98               	goto	l3581
  1148  0D38                     l3549:	
  1149  0D38  3004               	movlw	4
  1150  0D39  064E               	xorwf	_nextState^(0+128),w
  1151  0D3A  1D03               	btfss	3,2
  1152  0D3B  2D3D               	goto	u4911
  1153  0D3C  2D3E               	goto	u4910
  1154  0D3D                     u4911:	
  1155  0D3D  2D44               	goto	l3553
  1156  0D3E                     u4910:	
  1157  0D3E                     l3551:	
  1158  0D3E  160A  118A  2481  120A  158A  	fcall	_powerSaving1
  1159  0D43  2D98               	goto	l3581
  1160  0D44                     l3553:	
  1161  0D44  3005               	movlw	5
  1162  0D45  064E               	xorwf	_nextState^(0+128),w
  1163  0D46  1D03               	btfss	3,2
  1164  0D47  2D49               	goto	u4921
  1165  0D48  2D4A               	goto	u4920
  1166  0D49                     u4921:	
  1167  0D49  2D50               	goto	l3557
  1168  0D4A                     u4920:	
  1169  0D4A                     l3555:	
  1170  0D4A  120A  158A  20F6  120A  158A  	fcall	_maximumPower3
  1171  0D4F  2D98               	goto	l3581
  1172  0D50                     l3557:	
  1173  0D50  3006               	movlw	6
  1174  0D51  064E               	xorwf	_nextState^(0+128),w
  1175  0D52  1D03               	btfss	3,2
  1176  0D53  2D55               	goto	u4931
  1177  0D54  2D56               	goto	u4930
  1178  0D55                     u4931:	
  1179  0D55  2D5C               	goto	l3561
  1180  0D56                     u4930:	
  1181  0D56                     l3559:	
  1182  0D56  160A  118A  25BE  120A  158A  	fcall	_maximumPower2
  1183  0D5B  2D98               	goto	l3581
  1184  0D5C                     l3561:	
  1185  0D5C  3007               	movlw	7
  1186  0D5D  064E               	xorwf	_nextState^(0+128),w
  1187  0D5E  1D03               	btfss	3,2
  1188  0D5F  2D61               	goto	u4941
  1189  0D60  2D62               	goto	u4940
  1190  0D61                     u4941:	
  1191  0D61  2D68               	goto	l3565
  1192  0D62                     u4940:	
  1193  0D62                     l3563:	
  1194  0D62  160A  118A  2455  120A  158A  	fcall	_maximumPower1
  1195  0D67  2D98               	goto	l3581
  1196  0D68                     l3565:	
  1197  0D68  3008               	movlw	8
  1198  0D69  064E               	xorwf	_nextState^(0+128),w
  1199  0D6A  1D03               	btfss	3,2
  1200  0D6B  2D6D               	goto	u4951
  1201  0D6C  2D6E               	goto	u4950
  1202  0D6D                     u4951:	
  1203  0D6D  2D74               	goto	l3569
  1204  0D6E                     u4950:	
  1205  0D6E                     l3567:	
  1206  0D6E  160A  118A  2344  120A  158A  	fcall	_aON
  1207  0D73  2D98               	goto	l3581
  1208  0D74                     l3569:	
  1209  0D74  3009               	movlw	9
  1210  0D75  064E               	xorwf	_nextState^(0+128),w
  1211  0D76  1D03               	btfss	3,2
  1212  0D77  2D79               	goto	u4961
  1213  0D78  2D7A               	goto	u4960
  1214  0D79                     u4961:	
  1215  0D79  2D80               	goto	l3573
  1216  0D7A                     u4960:	
  1217  0D7A                     l3571:	
  1218  0D7A  160A  118A  235C  120A  158A  	fcall	_bON
  1219  0D7F  2D98               	goto	l3581
  1220  0D80                     l3573:	
  1221  0D80  300A               	movlw	10
  1222  0D81  064E               	xorwf	_nextState^(0+128),w
  1223  0D82  1D03               	btfss	3,2
  1224  0D83  2D85               	goto	u4971
  1225  0D84  2D86               	goto	u4970
  1226  0D85                     u4971:	
  1227  0D85  2D8C               	goto	l3577
  1228  0D86                     u4970:	
  1229  0D86                     l3575:	
  1230  0D86  160A  118A  2374  120A  158A  	fcall	_cON
  1231  0D8B  2D98               	goto	l3581
  1232  0D8C                     l3577:	
  1233  0D8C  300B               	movlw	11
  1234  0D8D  064E               	xorwf	_nextState^(0+128),w
  1235  0D8E  1D03               	btfss	3,2
  1236  0D8F  2D91               	goto	u4981
  1237  0D90  2D92               	goto	u4980
  1238  0D91                     u4981:	
  1239  0D91  2D98               	goto	l166
  1240  0D92                     u4980:	
  1241  0D92                     l3579:	
  1242  0D92  160A  118A  23A6  120A  158A  	fcall	_OFF
  1243  0D97  2D98               	goto	l3581
  1244  0D98                     l166:	
  1245  0D98                     l3581:	
  1246                           
  1247                           ;main.c: 117:         if(nextState==cM)currentMeasurement();
  1248  0D98  300C               	movlw	12
  1249  0D99  1683               	bsf	3,5	;RP0=1, select bank1
  1250  0D9A  1303               	bcf	3,6	;RP1=0, select bank1
  1251  0D9B  064E               	xorwf	_nextState^(0+128),w
  1252  0D9C  1D03               	btfss	3,2
  1253  0D9D  2D9F               	goto	u4991
  1254  0D9E  2DA0               	goto	u4990
  1255  0D9F                     u4991:	
  1256  0D9F  2DA5               	goto	l3585
  1257  0DA0                     u4990:	
  1258  0DA0                     l3583:	
  1259  0DA0  120A  158A  236A  120A  158A  	fcall	_currentMeasurement
  1260  0DA5                     l3585:	
  1261                           
  1262                           ;main.c: 118:         if(nextState==pC)nextState=lcd;
  1263  0DA5  300D               	movlw	13
  1264  0DA6  1683               	bsf	3,5	;RP0=1, select bank1
  1265  0DA7  1303               	bcf	3,6	;RP1=0, select bank1
  1266  0DA8  064E               	xorwf	_nextState^(0+128),w
  1267  0DA9  1D03               	btfss	3,2
  1268  0DAA  2DAC               	goto	u5001
  1269  0DAB  2DAD               	goto	u5000
  1270  0DAC                     u5001:	
  1271  0DAC  2DB1               	goto	l3589
  1272  0DAD                     u5000:	
  1273  0DAD                     l3587:	
  1274  0DAD  300E               	movlw	14
  1275  0DAE  00B7               	movwf	??_main^(0+128)
  1276  0DAF  0837               	movf	??_main^(0+128),w
  1277  0DB0  00CE               	movwf	_nextState^(0+128)
  1278  0DB1                     l3589:	
  1279                           
  1280                           ;main.c: 119:         if(nextState==lcd)LCD();
  1281  0DB1  300E               	movlw	14
  1282  0DB2  064E               	xorwf	_nextState^(0+128),w
  1283  0DB3  1D03               	btfss	3,2
  1284  0DB4  2DB6               	goto	u5011
  1285  0DB5  2DB7               	goto	u5010
  1286  0DB6                     u5011:	
  1287  0DB6  2DBC               	goto	l3593
  1288  0DB7                     u5010:	
  1289  0DB7                     l3591:	
  1290  0DB7  160A  118A  2748  120A  158A  	fcall	_LCD
  1291  0DBC                     l3593:	
  1292                           
  1293                           ;main.c: 120:         if(nextState==BLE)ble();
  1294  0DBC  300F               	movlw	15
  1295  0DBD  1683               	bsf	3,5	;RP0=1, select bank1
  1296  0DBE  1303               	bcf	3,6	;RP1=0, select bank1
  1297  0DBF  064E               	xorwf	_nextState^(0+128),w
  1298  0DC0  1D03               	btfss	3,2
  1299  0DC1  2DC3               	goto	u5021
  1300  0DC2  2DC4               	goto	u5020
  1301  0DC3                     u5021:	
  1302  0DC3  2DC9               	goto	l3597
  1303  0DC4                     u5020:	
  1304  0DC4                     l3595:	
  1305  0DC4  160A  118A  232A  120A  158A  	fcall	_ble
  1306  0DC9                     l3597:	
  1307                           
  1308                           ;main.c: 122:         RE0=1;
  1309  0DC9  1283               	bcf	3,5	;RP0=0, select bank0
  1310  0DCA  1303               	bcf	3,6	;RP1=0, select bank0
  1311  0DCB  1409               	bsf	9,0	;volatile
  1312  0DCC                     l3599:	
  1313                           
  1314                           ;main.c: 123:         _delay((unsigned long)((10)*(20000000/4000.0)));
  1315  0DCC  3041               	movlw	65
  1316  0DCD  1683               	bsf	3,5	;RP0=1, select bank1
  1317  0DCE  1303               	bcf	3,6	;RP1=0, select bank1
  1318  0DCF  00B8               	movwf	(??_main^(0+128)+1)
  1319  0DD0  30ED               	movlw	237
  1320  0DD1  00B7               	movwf	??_main^(0+128)
  1321  0DD2                     u5057:	
  1322  0DD2  0BB7               	decfsz	??_main^(0+128),f
  1323  0DD3  2DD2               	goto	u5057
  1324  0DD4  0BB8               	decfsz	(??_main^(0+128)+1),f
  1325  0DD5  2DD2               	goto	u5057
  1326  0DD6  2DD7               	nop2
  1327  0DD7                     l3601:	
  1328                           
  1329                           ;main.c: 124:         RE0=0;
  1330  0DD7  1283               	bcf	3,5	;RP0=0, select bank0
  1331  0DD8  1303               	bcf	3,6	;RP1=0, select bank0
  1332  0DD9  1009               	bcf	9,0	;volatile
  1333  0DDA                     l3603:	
  1334                           
  1335                           ;main.c: 125:         _delay((unsigned long)((10)*(20000000/4000.0)));
  1336  0DDA  3041               	movlw	65
  1337  0DDB  1683               	bsf	3,5	;RP0=1, select bank1
  1338  0DDC  1303               	bcf	3,6	;RP1=0, select bank1
  1339  0DDD  00B8               	movwf	(??_main^(0+128)+1)
  1340  0DDE  30ED               	movlw	237
  1341  0DDF  00B7               	movwf	??_main^(0+128)
  1342  0DE0                     u5067:	
  1343  0DE0  0BB7               	decfsz	??_main^(0+128),f
  1344  0DE1  2DE0               	goto	u5067
  1345  0DE2  0BB8               	decfsz	(??_main^(0+128)+1),f
  1346  0DE3  2DE0               	goto	u5067
  1347  0DE4  2DE5               	nop2
  1348  0DE5  2D06               	goto	l3535
  1349  0DE6  120A  118A  2800   	ljmp	start
  1350  0DE9                     __end_of_main:	
  1351                           
  1352                           	psect	text1
  1353  09BC                     __ptext1:	
  1354 ;; *************** function _powerSaving3 *****************
  1355 ;; Defined at:
  1356 ;;		line 178 in file "main.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;		None
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;		None
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      void 
  1363 ;; Registers used:
  1364 ;;		wreg, status,2, status,0, pclath, cstack
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1370 ;;      Params:         0       0       0       0       0
  1371 ;;      Locals:         0       0       0       0       0
  1372 ;;      Temps:          1       0       0       0       0
  1373 ;;      Totals:         1       0       0       0       0
  1374 ;;Total ram usage:        1 bytes
  1375 ;; Hardware stack levels used:    1
  1376 ;; Hardware stack levels required when called:    3
  1377 ;; This function calls:
  1378 ;;		_aON
  1379 ;;		_bON
  1380 ;;		_cON
  1381 ;; This function is called by:
  1382 ;;		_main
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           
  1387                           ;psect for function _powerSaving3
  1388  09BC                     _powerSaving3:	
  1389  09BC                     l3259:	
  1390                           ;incstack = 0
  1391                           ; Regs used in _powerSaving3: [wreg+status,2+status,0+pclath+cstack]
  1392                           
  1393                           
  1394                           ;main.c: 179:     if(aVOLTAGE==bVOLTAGE){
  1395  09BC  1683               	bsf	3,5	;RP0=1, select bank1
  1396  09BD  1303               	bcf	3,6	;RP1=0, select bank1
  1397  09BE  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  1398  09BF  064D               	xorwf	(_aVOLTAGE+1)^(0+128),w
  1399  09C0  1D03               	skipz
  1400  09C1  29C4               	goto	u4565
  1401  09C2  084A               	movf	_bVOLTAGE^(0+128),w
  1402  09C3  064C               	xorwf	_aVOLTAGE^(0+128),w
  1403  09C4                     u4565:	
  1404  09C4  1D03               	skipz
  1405  09C5  29C7               	goto	u4561
  1406  09C6  29C8               	goto	u4560
  1407  09C7                     u4561:	
  1408  09C7  29E2               	goto	l3267
  1409  09C8                     u4560:	
  1410  09C8                     l3261:	
  1411                           
  1412                           ;main.c: 180:         if(cVOLTAGE<aVOLTAGE)cON();
  1413  09C8  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  1414  09C9  3A80               	xorlw	128
  1415  09CA  00F6               	movwf	??_powerSaving3
  1416  09CB  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  1417  09CC  3A80               	xorlw	128
  1418  09CD  0276               	subwf	??_powerSaving3,w
  1419  09CE  1D03               	skipz
  1420  09CF  29D2               	goto	u4575
  1421  09D0  084C               	movf	_aVOLTAGE^(0+128),w
  1422  09D1  0248               	subwf	_cVOLTAGE^(0+128),w
  1423  09D2                     u4575:	
  1424  09D2  1803               	skipnc
  1425  09D3  29D5               	goto	u4571
  1426  09D4  29D6               	goto	u4570
  1427  09D5                     u4571:	
  1428  09D5  29DC               	goto	l3265
  1429  09D6                     u4570:	
  1430  09D6                     l3263:	
  1431  09D6  160A  118A  2374  120A  158A  	fcall	_cON
  1432  09DB  2A7B               	goto	l3301
  1433  09DC                     l3265:	
  1434  09DC  160A  118A  2344  120A  158A  	fcall	_aON
  1435  09E1  2A7B               	goto	l3301
  1436  09E2                     l3267:	
  1437  09E2  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  1438  09E3  064B               	xorwf	(_bVOLTAGE+1)^(0+128),w
  1439  09E4  1D03               	skipz
  1440  09E5  29E8               	goto	u4585
  1441  09E6  0848               	movf	_cVOLTAGE^(0+128),w
  1442  09E7  064A               	xorwf	_bVOLTAGE^(0+128),w
  1443  09E8                     u4585:	
  1444  09E8  1D03               	skipz
  1445  09E9  29EB               	goto	u4581
  1446  09EA  29EC               	goto	u4580
  1447  09EB                     u4581:	
  1448  09EB  2A01               	goto	l3275
  1449  09EC                     u4580:	
  1450  09EC                     l3269:	
  1451                           
  1452                           ;main.c: 183:         if(aVOLTAGE<bVOLTAGE)aON();
  1453  09EC  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  1454  09ED  3A80               	xorlw	128
  1455  09EE  00F6               	movwf	??_powerSaving3
  1456  09EF  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  1457  09F0  3A80               	xorlw	128
  1458  09F1  0276               	subwf	??_powerSaving3,w
  1459  09F2  1D03               	skipz
  1460  09F3  29F6               	goto	u4595
  1461  09F4  084A               	movf	_bVOLTAGE^(0+128),w
  1462  09F5  024C               	subwf	_aVOLTAGE^(0+128),w
  1463  09F6                     u4595:	
  1464  09F6  1803               	skipnc
  1465  09F7  29F9               	goto	u4591
  1466  09F8  29FA               	goto	u4590
  1467  09F9                     u4591:	
  1468  09F9  29FB               	goto	l3273
  1469  09FA                     u4590:	
  1470  09FA  29DC               	goto	l3265
  1471  09FB                     l3273:	
  1472  09FB  160A  118A  235C  120A  158A  	fcall	_bON
  1473  0A00  2A7B               	goto	l3301
  1474  0A01                     l3275:	
  1475  0A01  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  1476  0A02  064D               	xorwf	(_aVOLTAGE+1)^(0+128),w
  1477  0A03  1D03               	skipz
  1478  0A04  2A07               	goto	u4605
  1479  0A05  0848               	movf	_cVOLTAGE^(0+128),w
  1480  0A06  064C               	xorwf	_aVOLTAGE^(0+128),w
  1481  0A07                     u4605:	
  1482  0A07  1D03               	skipz
  1483  0A08  2A0A               	goto	u4601
  1484  0A09  2A0B               	goto	u4600
  1485  0A0A                     u4601:	
  1486  0A0A  2A1A               	goto	l3283
  1487  0A0B                     u4600:	
  1488  0A0B                     l3277:	
  1489                           
  1490                           ;main.c: 186:         if(bVOLTAGE<aVOLTAGE)bON();
  1491  0A0B  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  1492  0A0C  3A80               	xorlw	128
  1493  0A0D  00F6               	movwf	??_powerSaving3
  1494  0A0E  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  1495  0A0F  3A80               	xorlw	128
  1496  0A10  0276               	subwf	??_powerSaving3,w
  1497  0A11  1D03               	skipz
  1498  0A12  2A15               	goto	u4615
  1499  0A13  084C               	movf	_aVOLTAGE^(0+128),w
  1500  0A14  024A               	subwf	_bVOLTAGE^(0+128),w
  1501  0A15                     u4615:	
  1502  0A15  1803               	skipnc
  1503  0A16  2A18               	goto	u4611
  1504  0A17  2A19               	goto	u4610
  1505  0A18                     u4611:	
  1506  0A18  29DC               	goto	l3265
  1507  0A19                     u4610:	
  1508  0A19  29FB               	goto	l3273
  1509  0A1A                     l3283:	
  1510                           
  1511                           ;main.c: 189:         if((aVOLTAGE<bVOLTAGE)&&(aVOLTAGE<cVOLTAGE))aON;
  1512  0A1A  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  1513  0A1B  3A80               	xorlw	128
  1514  0A1C  00F6               	movwf	??_powerSaving3
  1515  0A1D  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  1516  0A1E  3A80               	xorlw	128
  1517  0A1F  0276               	subwf	??_powerSaving3,w
  1518  0A20  1D03               	skipz
  1519  0A21  2A24               	goto	u4625
  1520  0A22  084A               	movf	_bVOLTAGE^(0+128),w
  1521  0A23  024C               	subwf	_aVOLTAGE^(0+128),w
  1522  0A24                     u4625:	
  1523  0A24  1803               	skipnc
  1524  0A25  2A27               	goto	u4621
  1525  0A26  2A28               	goto	u4620
  1526  0A27                     u4621:	
  1527  0A27  2A39               	goto	l3289
  1528  0A28                     u4620:	
  1529  0A28                     l3285:	
  1530  0A28  1683               	bsf	3,5	;RP0=1, select bank1
  1531  0A29  1303               	bcf	3,6	;RP1=0, select bank1
  1532  0A2A  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  1533  0A2B  3A80               	xorlw	128
  1534  0A2C  00F6               	movwf	??_powerSaving3
  1535  0A2D  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  1536  0A2E  3A80               	xorlw	128
  1537  0A2F  0276               	subwf	??_powerSaving3,w
  1538  0A30  1D03               	skipz
  1539  0A31  2A34               	goto	u4635
  1540  0A32  0848               	movf	_cVOLTAGE^(0+128),w
  1541  0A33  024C               	subwf	_aVOLTAGE^(0+128),w
  1542  0A34                     u4635:	
  1543  0A34  1803               	skipnc
  1544  0A35  2A37               	goto	u4631
  1545  0A36  2A38               	goto	u4630
  1546  0A37                     u4631:	
  1547  0A37  2A39               	goto	l3289
  1548  0A38                     u4630:	
  1549  0A38  2A7B               	goto	l3301
  1550  0A39                     l3289:	
  1551  0A39  1683               	bsf	3,5	;RP0=1, select bank1
  1552  0A3A  1303               	bcf	3,6	;RP1=0, select bank1
  1553  0A3B  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  1554  0A3C  3A80               	xorlw	128
  1555  0A3D  00F6               	movwf	??_powerSaving3
  1556  0A3E  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  1557  0A3F  3A80               	xorlw	128
  1558  0A40  0276               	subwf	??_powerSaving3,w
  1559  0A41  1D03               	skipz
  1560  0A42  2A45               	goto	u4645
  1561  0A43  0848               	movf	_cVOLTAGE^(0+128),w
  1562  0A44  024A               	subwf	_bVOLTAGE^(0+128),w
  1563  0A45                     u4645:	
  1564  0A45  1803               	skipnc
  1565  0A46  2A48               	goto	u4641
  1566  0A47  2A49               	goto	u4640
  1567  0A48                     u4641:	
  1568  0A48  2A5A               	goto	l3295
  1569  0A49                     u4640:	
  1570  0A49                     l3291:	
  1571  0A49  1683               	bsf	3,5	;RP0=1, select bank1
  1572  0A4A  1303               	bcf	3,6	;RP1=0, select bank1
  1573  0A4B  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  1574  0A4C  3A80               	xorlw	128
  1575  0A4D  00F6               	movwf	??_powerSaving3
  1576  0A4E  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  1577  0A4F  3A80               	xorlw	128
  1578  0A50  0276               	subwf	??_powerSaving3,w
  1579  0A51  1D03               	skipz
  1580  0A52  2A55               	goto	u4655
  1581  0A53  084C               	movf	_aVOLTAGE^(0+128),w
  1582  0A54  024A               	subwf	_bVOLTAGE^(0+128),w
  1583  0A55                     u4655:	
  1584  0A55  1803               	skipnc
  1585  0A56  2A58               	goto	u4651
  1586  0A57  2A59               	goto	u4650
  1587  0A58                     u4651:	
  1588  0A58  2A5A               	goto	l3295
  1589  0A59                     u4650:	
  1590  0A59  29FB               	goto	l3273
  1591  0A5A                     l3295:	
  1592  0A5A  1683               	bsf	3,5	;RP0=1, select bank1
  1593  0A5B  1303               	bcf	3,6	;RP1=0, select bank1
  1594  0A5C  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  1595  0A5D  3A80               	xorlw	128
  1596  0A5E  00F6               	movwf	??_powerSaving3
  1597  0A5F  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  1598  0A60  3A80               	xorlw	128
  1599  0A61  0276               	subwf	??_powerSaving3,w
  1600  0A62  1D03               	skipz
  1601  0A63  2A66               	goto	u4665
  1602  0A64  084A               	movf	_bVOLTAGE^(0+128),w
  1603  0A65  0248               	subwf	_cVOLTAGE^(0+128),w
  1604  0A66                     u4665:	
  1605  0A66  1803               	skipnc
  1606  0A67  2A69               	goto	u4661
  1607  0A68  2A6A               	goto	u4660
  1608  0A69                     u4661:	
  1609  0A69  2A7B               	goto	l3301
  1610  0A6A                     u4660:	
  1611  0A6A                     l3297:	
  1612  0A6A  1683               	bsf	3,5	;RP0=1, select bank1
  1613  0A6B  1303               	bcf	3,6	;RP1=0, select bank1
  1614  0A6C  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  1615  0A6D  3A80               	xorlw	128
  1616  0A6E  00F6               	movwf	??_powerSaving3
  1617  0A6F  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  1618  0A70  3A80               	xorlw	128
  1619  0A71  0276               	subwf	??_powerSaving3,w
  1620  0A72  1D03               	skipz
  1621  0A73  2A76               	goto	u4675
  1622  0A74  084C               	movf	_aVOLTAGE^(0+128),w
  1623  0A75  0248               	subwf	_cVOLTAGE^(0+128),w
  1624  0A76                     u4675:	
  1625  0A76  1803               	skipnc
  1626  0A77  2A79               	goto	u4671
  1627  0A78  2A7A               	goto	u4670
  1628  0A79                     u4671:	
  1629  0A79  2A7B               	goto	l3301
  1630  0A7A                     u4670:	
  1631  0A7A  29D6               	goto	l3263
  1632  0A7B                     l3301:	
  1633                           
  1634                           ;main.c: 193:     nextState=cM;
  1635  0A7B  300C               	movlw	12
  1636  0A7C  00F6               	movwf	??_powerSaving3
  1637  0A7D  0876               	movf	??_powerSaving3,w
  1638  0A7E  1683               	bsf	3,5	;RP0=1, select bank1
  1639  0A7F  1303               	bcf	3,6	;RP1=0, select bank1
  1640  0A80  00CE               	movwf	_nextState^(0+128)
  1641  0A81                     l251:	
  1642  0A81  0008               	return
  1643  0A82                     __end_of_powerSaving3:	
  1644                           
  1645                           	psect	text2
  1646  1616                     __ptext2:	
  1647 ;; *************** function _powerSaving2 *****************
  1648 ;; Defined at:
  1649 ;;		line 195 in file "main.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;		None
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;		None
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  1    wreg      void 
  1656 ;; Registers used:
  1657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1663 ;;      Params:         0       0       0       0       0
  1664 ;;      Locals:         0       0       0       0       0
  1665 ;;      Temps:          1       0       0       0       0
  1666 ;;      Totals:         1       0       0       0       0
  1667 ;;Total ram usage:        1 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; Hardware stack levels required when called:    3
  1670 ;; This function calls:
  1671 ;;		_aON
  1672 ;;		_bON
  1673 ;;		_cON
  1674 ;; This function is called by:
  1675 ;;		_main
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           
  1680                           ;psect for function _powerSaving2
  1681  1616                     _powerSaving2:	
  1682  1616                     l3303:	
  1683                           ;incstack = 0
  1684                           ; Regs used in _powerSaving2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1685                           
  1686                           
  1687                           ;main.c: 196:     switch(danger){
  1688  1616  2E55               	goto	l3325
  1689  1617                     l3305:	
  1690                           
  1691                           ;main.c: 198:             if(aVOLTAGE<=bVOLTAGE)aON();
  1692  1617  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  1693  1618  3A80               	xorlw	128
  1694  1619  00F6               	movwf	??_powerSaving2
  1695  161A  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  1696  161B  3A80               	xorlw	128
  1697  161C  0276               	subwf	??_powerSaving2,w
  1698  161D  1D03               	skipz
  1699  161E  2E21               	goto	u4685
  1700  161F  084C               	movf	_aVOLTAGE^(0+128),w
  1701  1620  024A               	subwf	_bVOLTAGE^(0+128),w
  1702  1621                     u4685:	
  1703  1621  1C03               	skipc
  1704  1622  2E24               	goto	u4681
  1705  1623  2E25               	goto	u4680
  1706  1624                     u4681:	
  1707  1624  2E2B               	goto	l3309
  1708  1625                     u4680:	
  1709  1625                     l3307:	
  1710  1625  160A  118A  2344  160A  118A  	fcall	_aON
  1711  162A  2E67               	goto	l3327
  1712  162B                     l3309:	
  1713  162B  160A  118A  235C  160A  118A  	fcall	_bON
  1714  1630  2E67               	goto	l3327
  1715  1631                     l3311:	
  1716                           
  1717                           ;main.c: 202:             if(aVOLTAGE<=cVOLTAGE)aON();
  1718  1631  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  1719  1632  3A80               	xorlw	128
  1720  1633  00F6               	movwf	??_powerSaving2
  1721  1634  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  1722  1635  3A80               	xorlw	128
  1723  1636  0276               	subwf	??_powerSaving2,w
  1724  1637  1D03               	skipz
  1725  1638  2E3B               	goto	u4695
  1726  1639  084C               	movf	_aVOLTAGE^(0+128),w
  1727  163A  0248               	subwf	_cVOLTAGE^(0+128),w
  1728  163B                     u4695:	
  1729  163B  1C03               	skipc
  1730  163C  2E3E               	goto	u4691
  1731  163D  2E3F               	goto	u4690
  1732  163E                     u4691:	
  1733  163E  2E40               	goto	l3315
  1734  163F                     u4690:	
  1735  163F  2E25               	goto	l3307
  1736  1640                     l3315:	
  1737  1640  160A  118A  2374  160A  118A  	fcall	_cON
  1738  1645  2E67               	goto	l3327
  1739  1646                     l3317:	
  1740                           
  1741                           ;main.c: 206:             if(bVOLTAGE<=cVOLTAGE)bON();
  1742  1646  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  1743  1647  3A80               	xorlw	128
  1744  1648  00F6               	movwf	??_powerSaving2
  1745  1649  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  1746  164A  3A80               	xorlw	128
  1747  164B  0276               	subwf	??_powerSaving2,w
  1748  164C  1D03               	skipz
  1749  164D  2E50               	goto	u4705
  1750  164E  084A               	movf	_bVOLTAGE^(0+128),w
  1751  164F  0248               	subwf	_cVOLTAGE^(0+128),w
  1752  1650                     u4705:	
  1753  1650  1C03               	skipc
  1754  1651  2E53               	goto	u4701
  1755  1652  2E54               	goto	u4700
  1756  1653                     u4701:	
  1757  1653  2E40               	goto	l3315
  1758  1654                     u4700:	
  1759  1654  2E2B               	goto	l3309
  1760  1655                     l3325:	
  1761                           
  1762                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1763                           ; Switch size 1, requested type "simple"
  1764                           ; Number of cases is 1, Range of values is 0 to 0
  1765                           ; switch strategies available:
  1766                           ; Name         Instructions Cycles
  1767                           ; simple_byte            4     3 (average)
  1768                           ; direct_byte           11     8 (fixed)
  1769                           ; jumptable            260     6 (fixed)
  1770                           ;	Chosen strategy is simple_byte
  1771  1655  1683               	bsf	3,5	;RP0=1, select bank1
  1772  1656  1303               	bcf	3,6	;RP1=0, select bank1
  1773  1657  0841               	movf	(_danger+1)^(0+128),w
  1774  1658  3A00               	xorlw	0	; case 0
  1775  1659  1903               	skipnz
  1776  165A  2E5C               	goto	l3745
  1777  165B  2E67               	goto	l3327
  1778  165C                     l3745:	
  1779                           
  1780                           ; Switch size 1, requested type "simple"
  1781                           ; Number of cases is 3, Range of values is 1 to 4
  1782                           ; switch strategies available:
  1783                           ; Name         Instructions Cycles
  1784                           ; simple_byte           10     6 (average)
  1785                           ; direct_byte           23    11 (fixed)
  1786                           ; jumptable            263     9 (fixed)
  1787                           ;	Chosen strategy is simple_byte
  1788  165C  0840               	movf	_danger^(0+128),w
  1789  165D  3A01               	xorlw	1	; case 1
  1790  165E  1903               	skipnz
  1791  165F  2E17               	goto	l3305
  1792  1660  3A03               	xorlw	3	; case 2
  1793  1661  1903               	skipnz
  1794  1662  2E31               	goto	l3311
  1795  1663  3A06               	xorlw	6	; case 4
  1796  1664  1903               	skipnz
  1797  1665  2E46               	goto	l3317
  1798  1666  2E67               	goto	l3327
  1799  1667                     l3327:	
  1800                           
  1801                           ;main.c: 210:     nextState=cM;
  1802  1667  300C               	movlw	12
  1803  1668  00F6               	movwf	??_powerSaving2
  1804  1669  0876               	movf	??_powerSaving2,w
  1805  166A  1683               	bsf	3,5	;RP0=1, select bank1
  1806  166B  1303               	bcf	3,6	;RP1=0, select bank1
  1807  166C  00CE               	movwf	_nextState^(0+128)
  1808  166D                     l265:	
  1809  166D  0008               	return
  1810  166E                     __end_of_powerSaving2:	
  1811                           
  1812                           	psect	text3
  1813  1481                     __ptext3:	
  1814 ;; *************** function _powerSaving1 *****************
  1815 ;; Defined at:
  1816 ;;		line 212 in file "main.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;		None
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;		None
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  1    wreg      void 
  1823 ;; Registers used:
  1824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1830 ;;      Params:         0       0       0       0       0
  1831 ;;      Locals:         0       0       0       0       0
  1832 ;;      Temps:          1       0       0       0       0
  1833 ;;      Totals:         1       0       0       0       0
  1834 ;;Total ram usage:        1 bytes
  1835 ;; Hardware stack levels used:    1
  1836 ;; Hardware stack levels required when called:    3
  1837 ;; This function calls:
  1838 ;;		_aON
  1839 ;;		_bON
  1840 ;;		_cON
  1841 ;; This function is called by:
  1842 ;;		_main
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           
  1847                           ;psect for function _powerSaving1
  1848  1481                     _powerSaving1:	
  1849  1481                     l3335:	
  1850                           ;incstack = 0
  1851                           ; Regs used in _powerSaving1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1852                           
  1853                           
  1854                           ;main.c: 213:     switch(danger){
  1855  1481  2C94               	goto	l3345
  1856  1482                     l3337:	
  1857                           
  1858                           ;main.c: 215:             aON();
  1859  1482  160A  118A  2344  160A  118A  	fcall	_aON
  1860                           
  1861                           ;main.c: 216:             break;
  1862  1487  2CA6               	goto	l3347
  1863  1488                     l3339:	
  1864                           
  1865                           ;main.c: 218:             cON();
  1866  1488  160A  118A  2374  160A  118A  	fcall	_cON
  1867                           
  1868                           ;main.c: 219:             break;
  1869  148D  2CA6               	goto	l3347
  1870  148E                     l3341:	
  1871                           
  1872                           ;main.c: 221:             bON();
  1873  148E  160A  118A  235C  160A  118A  	fcall	_bON
  1874                           
  1875                           ;main.c: 222:             break;
  1876  1493  2CA6               	goto	l3347
  1877  1494                     l3345:	
  1878                           
  1879                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1880                           ; Switch size 1, requested type "simple"
  1881                           ; Number of cases is 1, Range of values is 0 to 0
  1882                           ; switch strategies available:
  1883                           ; Name         Instructions Cycles
  1884                           ; simple_byte            4     3 (average)
  1885                           ; direct_byte           11     8 (fixed)
  1886                           ; jumptable            260     6 (fixed)
  1887                           ;	Chosen strategy is simple_byte
  1888  1494  1683               	bsf	3,5	;RP0=1, select bank1
  1889  1495  1303               	bcf	3,6	;RP1=0, select bank1
  1890  1496  0841               	movf	(_danger+1)^(0+128),w
  1891  1497  3A00               	xorlw	0	; case 0
  1892  1498  1903               	skipnz
  1893  1499  2C9B               	goto	l3747
  1894  149A  2CA6               	goto	l3347
  1895  149B                     l3747:	
  1896                           
  1897                           ; Switch size 1, requested type "simple"
  1898                           ; Number of cases is 3, Range of values is 3 to 6
  1899                           ; switch strategies available:
  1900                           ; Name         Instructions Cycles
  1901                           ; simple_byte           10     6 (average)
  1902                           ; direct_byte           23    11 (fixed)
  1903                           ; jumptable            263     9 (fixed)
  1904                           ;	Chosen strategy is simple_byte
  1905  149B  0840               	movf	_danger^(0+128),w
  1906  149C  3A03               	xorlw	3	; case 3
  1907  149D  1903               	skipnz
  1908  149E  2C82               	goto	l3337
  1909  149F  3A06               	xorlw	6	; case 5
  1910  14A0  1903               	skipnz
  1911  14A1  2C8E               	goto	l3341
  1912  14A2  3A03               	xorlw	3	; case 6
  1913  14A3  1903               	skipnz
  1914  14A4  2C88               	goto	l3339
  1915  14A5  2CA6               	goto	l3347
  1916  14A6                     l3347:	
  1917                           
  1918                           ;main.c: 224:     nextState=cM;
  1919  14A6  300C               	movlw	12
  1920  14A7  00F6               	movwf	??_powerSaving1
  1921  14A8  0876               	movf	??_powerSaving1,w
  1922  14A9  1683               	bsf	3,5	;RP0=1, select bank1
  1923  14AA  1303               	bcf	3,6	;RP1=0, select bank1
  1924  14AB  00CE               	movwf	_nextState^(0+128)
  1925  14AC                     l273:	
  1926  14AC  0008               	return
  1927  14AD                     __end_of_powerSaving1:	
  1928                           
  1929                           	psect	text4
  1930  08F6                     __ptext4:	
  1931 ;; *************** function _maximumPower3 *****************
  1932 ;; Defined at:
  1933 ;;		line 226 in file "main.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;		None
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;		None
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  1    wreg      void 
  1940 ;; Registers used:
  1941 ;;		wreg, status,2, status,0, pclath, cstack
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1947 ;;      Params:         0       0       0       0       0
  1948 ;;      Locals:         0       0       0       0       0
  1949 ;;      Temps:          1       0       0       0       0
  1950 ;;      Totals:         1       0       0       0       0
  1951 ;;Total ram usage:        1 bytes
  1952 ;; Hardware stack levels used:    1
  1953 ;; Hardware stack levels required when called:    3
  1954 ;; This function calls:
  1955 ;;		_aON
  1956 ;;		_bON
  1957 ;;		_cON
  1958 ;; This function is called by:
  1959 ;;		_main
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           
  1964                           ;psect for function _maximumPower3
  1965  08F6                     _maximumPower3:	
  1966  08F6                     l3355:	
  1967                           ;incstack = 0
  1968                           ; Regs used in _maximumPower3: [wreg+status,2+status,0+pclath+cstack]
  1969                           
  1970                           
  1971                           ;main.c: 227:     if(aVOLTAGE==bVOLTAGE){
  1972  08F6  1683               	bsf	3,5	;RP0=1, select bank1
  1973  08F7  1303               	bcf	3,6	;RP1=0, select bank1
  1974  08F8  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  1975  08F9  064D               	xorwf	(_aVOLTAGE+1)^(0+128),w
  1976  08FA  1D03               	skipz
  1977  08FB  28FE               	goto	u4715
  1978  08FC  084A               	movf	_bVOLTAGE^(0+128),w
  1979  08FD  064C               	xorwf	_aVOLTAGE^(0+128),w
  1980  08FE                     u4715:	
  1981  08FE  1D03               	skipz
  1982  08FF  2901               	goto	u4711
  1983  0900  2902               	goto	u4710
  1984  0901                     u4711:	
  1985  0901  291C               	goto	l3363
  1986  0902                     u4710:	
  1987  0902                     l3357:	
  1988                           
  1989                           ;main.c: 228:         if(cVOLTAGE>aVOLTAGE)cON();
  1990  0902  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  1991  0903  3A80               	xorlw	128
  1992  0904  00F6               	movwf	??_maximumPower3
  1993  0905  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  1994  0906  3A80               	xorlw	128
  1995  0907  0276               	subwf	??_maximumPower3,w
  1996  0908  1D03               	skipz
  1997  0909  290C               	goto	u4725
  1998  090A  0848               	movf	_cVOLTAGE^(0+128),w
  1999  090B  024C               	subwf	_aVOLTAGE^(0+128),w
  2000  090C                     u4725:	
  2001  090C  1803               	skipnc
  2002  090D  290F               	goto	u4721
  2003  090E  2910               	goto	u4720
  2004  090F                     u4721:	
  2005  090F  2916               	goto	l3361
  2006  0910                     u4720:	
  2007  0910                     l3359:	
  2008  0910  160A  118A  2374  120A  158A  	fcall	_cON
  2009  0915  29B5               	goto	l3397
  2010  0916                     l3361:	
  2011  0916  160A  118A  2344  120A  158A  	fcall	_aON
  2012  091B  29B5               	goto	l3397
  2013  091C                     l3363:	
  2014  091C  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  2015  091D  064B               	xorwf	(_bVOLTAGE+1)^(0+128),w
  2016  091E  1D03               	skipz
  2017  091F  2922               	goto	u4735
  2018  0920  0848               	movf	_cVOLTAGE^(0+128),w
  2019  0921  064A               	xorwf	_bVOLTAGE^(0+128),w
  2020  0922                     u4735:	
  2021  0922  1D03               	skipz
  2022  0923  2925               	goto	u4731
  2023  0924  2926               	goto	u4730
  2024  0925                     u4731:	
  2025  0925  293B               	goto	l3371
  2026  0926                     u4730:	
  2027  0926                     l3365:	
  2028                           
  2029                           ;main.c: 231:         if(aVOLTAGE>bVOLTAGE)aON();
  2030  0926  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  2031  0927  3A80               	xorlw	128
  2032  0928  00F6               	movwf	??_maximumPower3
  2033  0929  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  2034  092A  3A80               	xorlw	128
  2035  092B  0276               	subwf	??_maximumPower3,w
  2036  092C  1D03               	skipz
  2037  092D  2930               	goto	u4745
  2038  092E  084C               	movf	_aVOLTAGE^(0+128),w
  2039  092F  024A               	subwf	_bVOLTAGE^(0+128),w
  2040  0930                     u4745:	
  2041  0930  1803               	skipnc
  2042  0931  2933               	goto	u4741
  2043  0932  2934               	goto	u4740
  2044  0933                     u4741:	
  2045  0933  2935               	goto	l3369
  2046  0934                     u4740:	
  2047  0934  2916               	goto	l3361
  2048  0935                     l3369:	
  2049  0935  160A  118A  235C  120A  158A  	fcall	_bON
  2050  093A  29B5               	goto	l3397
  2051  093B                     l3371:	
  2052  093B  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  2053  093C  064D               	xorwf	(_aVOLTAGE+1)^(0+128),w
  2054  093D  1D03               	skipz
  2055  093E  2941               	goto	u4755
  2056  093F  0848               	movf	_cVOLTAGE^(0+128),w
  2057  0940  064C               	xorwf	_aVOLTAGE^(0+128),w
  2058  0941                     u4755:	
  2059  0941  1D03               	skipz
  2060  0942  2944               	goto	u4751
  2061  0943  2945               	goto	u4750
  2062  0944                     u4751:	
  2063  0944  2954               	goto	l3379
  2064  0945                     u4750:	
  2065  0945                     l3373:	
  2066                           
  2067                           ;main.c: 234:         if(bVOLTAGE>aVOLTAGE)bON();
  2068  0945  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  2069  0946  3A80               	xorlw	128
  2070  0947  00F6               	movwf	??_maximumPower3
  2071  0948  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  2072  0949  3A80               	xorlw	128
  2073  094A  0276               	subwf	??_maximumPower3,w
  2074  094B  1D03               	skipz
  2075  094C  294F               	goto	u4765
  2076  094D  084A               	movf	_bVOLTAGE^(0+128),w
  2077  094E  024C               	subwf	_aVOLTAGE^(0+128),w
  2078  094F                     u4765:	
  2079  094F  1803               	skipnc
  2080  0950  2952               	goto	u4761
  2081  0951  2953               	goto	u4760
  2082  0952                     u4761:	
  2083  0952  2916               	goto	l3361
  2084  0953                     u4760:	
  2085  0953  2935               	goto	l3369
  2086  0954                     l3379:	
  2087                           
  2088                           ;main.c: 237:         if((aVOLTAGE>bVOLTAGE)&&(aVOLTAGE>cVOLTAGE))aON;
  2089  0954  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  2090  0955  3A80               	xorlw	128
  2091  0956  00F6               	movwf	??_maximumPower3
  2092  0957  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  2093  0958  3A80               	xorlw	128
  2094  0959  0276               	subwf	??_maximumPower3,w
  2095  095A  1D03               	skipz
  2096  095B  295E               	goto	u4775
  2097  095C  084C               	movf	_aVOLTAGE^(0+128),w
  2098  095D  024A               	subwf	_bVOLTAGE^(0+128),w
  2099  095E                     u4775:	
  2100  095E  1803               	skipnc
  2101  095F  2961               	goto	u4771
  2102  0960  2962               	goto	u4770
  2103  0961                     u4771:	
  2104  0961  2973               	goto	l3385
  2105  0962                     u4770:	
  2106  0962                     l3381:	
  2107  0962  1683               	bsf	3,5	;RP0=1, select bank1
  2108  0963  1303               	bcf	3,6	;RP1=0, select bank1
  2109  0964  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  2110  0965  3A80               	xorlw	128
  2111  0966  00F6               	movwf	??_maximumPower3
  2112  0967  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  2113  0968  3A80               	xorlw	128
  2114  0969  0276               	subwf	??_maximumPower3,w
  2115  096A  1D03               	skipz
  2116  096B  296E               	goto	u4785
  2117  096C  084C               	movf	_aVOLTAGE^(0+128),w
  2118  096D  0248               	subwf	_cVOLTAGE^(0+128),w
  2119  096E                     u4785:	
  2120  096E  1803               	skipnc
  2121  096F  2971               	goto	u4781
  2122  0970  2972               	goto	u4780
  2123  0971                     u4781:	
  2124  0971  2973               	goto	l3385
  2125  0972                     u4780:	
  2126  0972  29B5               	goto	l3397
  2127  0973                     l3385:	
  2128  0973  1683               	bsf	3,5	;RP0=1, select bank1
  2129  0974  1303               	bcf	3,6	;RP1=0, select bank1
  2130  0975  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  2131  0976  3A80               	xorlw	128
  2132  0977  00F6               	movwf	??_maximumPower3
  2133  0978  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  2134  0979  3A80               	xorlw	128
  2135  097A  0276               	subwf	??_maximumPower3,w
  2136  097B  1D03               	skipz
  2137  097C  297F               	goto	u4795
  2138  097D  084A               	movf	_bVOLTAGE^(0+128),w
  2139  097E  0248               	subwf	_cVOLTAGE^(0+128),w
  2140  097F                     u4795:	
  2141  097F  1803               	skipnc
  2142  0980  2982               	goto	u4791
  2143  0981  2983               	goto	u4790
  2144  0982                     u4791:	
  2145  0982  2994               	goto	l3391
  2146  0983                     u4790:	
  2147  0983                     l3387:	
  2148  0983  1683               	bsf	3,5	;RP0=1, select bank1
  2149  0984  1303               	bcf	3,6	;RP1=0, select bank1
  2150  0985  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  2151  0986  3A80               	xorlw	128
  2152  0987  00F6               	movwf	??_maximumPower3
  2153  0988  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  2154  0989  3A80               	xorlw	128
  2155  098A  0276               	subwf	??_maximumPower3,w
  2156  098B  1D03               	skipz
  2157  098C  298F               	goto	u4805
  2158  098D  084A               	movf	_bVOLTAGE^(0+128),w
  2159  098E  024C               	subwf	_aVOLTAGE^(0+128),w
  2160  098F                     u4805:	
  2161  098F  1803               	skipnc
  2162  0990  2992               	goto	u4801
  2163  0991  2993               	goto	u4800
  2164  0992                     u4801:	
  2165  0992  2994               	goto	l3391
  2166  0993                     u4800:	
  2167  0993  2935               	goto	l3369
  2168  0994                     l3391:	
  2169  0994  1683               	bsf	3,5	;RP0=1, select bank1
  2170  0995  1303               	bcf	3,6	;RP1=0, select bank1
  2171  0996  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  2172  0997  3A80               	xorlw	128
  2173  0998  00F6               	movwf	??_maximumPower3
  2174  0999  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  2175  099A  3A80               	xorlw	128
  2176  099B  0276               	subwf	??_maximumPower3,w
  2177  099C  1D03               	skipz
  2178  099D  29A0               	goto	u4815
  2179  099E  0848               	movf	_cVOLTAGE^(0+128),w
  2180  099F  024A               	subwf	_bVOLTAGE^(0+128),w
  2181  09A0                     u4815:	
  2182  09A0  1803               	skipnc
  2183  09A1  29A3               	goto	u4811
  2184  09A2  29A4               	goto	u4810
  2185  09A3                     u4811:	
  2186  09A3  29B5               	goto	l3397
  2187  09A4                     u4810:	
  2188  09A4                     l3393:	
  2189  09A4  1683               	bsf	3,5	;RP0=1, select bank1
  2190  09A5  1303               	bcf	3,6	;RP1=0, select bank1
  2191  09A6  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  2192  09A7  3A80               	xorlw	128
  2193  09A8  00F6               	movwf	??_maximumPower3
  2194  09A9  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  2195  09AA  3A80               	xorlw	128
  2196  09AB  0276               	subwf	??_maximumPower3,w
  2197  09AC  1D03               	skipz
  2198  09AD  29B0               	goto	u4825
  2199  09AE  0848               	movf	_cVOLTAGE^(0+128),w
  2200  09AF  024C               	subwf	_aVOLTAGE^(0+128),w
  2201  09B0                     u4825:	
  2202  09B0  1803               	skipnc
  2203  09B1  29B3               	goto	u4821
  2204  09B2  29B4               	goto	u4820
  2205  09B3                     u4821:	
  2206  09B3  29B5               	goto	l3397
  2207  09B4                     u4820:	
  2208  09B4  2910               	goto	l3359
  2209  09B5                     l3397:	
  2210                           
  2211                           ;main.c: 241:     nextState=cM;
  2212  09B5  300C               	movlw	12
  2213  09B6  00F6               	movwf	??_maximumPower3
  2214  09B7  0876               	movf	??_maximumPower3,w
  2215  09B8  1683               	bsf	3,5	;RP0=1, select bank1
  2216  09B9  1303               	bcf	3,6	;RP1=0, select bank1
  2217  09BA  00CE               	movwf	_nextState^(0+128)
  2218  09BB                     l293:	
  2219  09BB  0008               	return
  2220  09BC                     __end_of_maximumPower3:	
  2221                           
  2222                           	psect	text5
  2223  15BE                     __ptext5:	
  2224 ;; *************** function _maximumPower2 *****************
  2225 ;; Defined at:
  2226 ;;		line 243 in file "main.c"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;		None
  2229 ;; Auto vars:     Size  Location     Type
  2230 ;;		None
  2231 ;; Return value:  Size  Location     Type
  2232 ;;                  1    wreg      void 
  2233 ;; Registers used:
  2234 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2235 ;; Tracked objects:
  2236 ;;		On entry : 0/0
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2240 ;;      Params:         0       0       0       0       0
  2241 ;;      Locals:         0       0       0       0       0
  2242 ;;      Temps:          1       0       0       0       0
  2243 ;;      Totals:         1       0       0       0       0
  2244 ;;Total ram usage:        1 bytes
  2245 ;; Hardware stack levels used:    1
  2246 ;; Hardware stack levels required when called:    3
  2247 ;; This function calls:
  2248 ;;		_aON
  2249 ;;		_bON
  2250 ;;		_cON
  2251 ;; This function is called by:
  2252 ;;		_main
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           
  2257                           ;psect for function _maximumPower2
  2258  15BE                     _maximumPower2:	
  2259  15BE                     l3399:	
  2260                           ;incstack = 0
  2261                           ; Regs used in _maximumPower2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2262                           
  2263                           
  2264                           ;main.c: 244:     switch(danger){
  2265  15BE  2DFD               	goto	l3421
  2266  15BF                     l3401:	
  2267                           
  2268                           ;main.c: 246:             if(aVOLTAGE>=bVOLTAGE)aON();
  2269  15BF  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  2270  15C0  3A80               	xorlw	128
  2271  15C1  00F6               	movwf	??_maximumPower2
  2272  15C2  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  2273  15C3  3A80               	xorlw	128
  2274  15C4  0276               	subwf	??_maximumPower2,w
  2275  15C5  1D03               	skipz
  2276  15C6  2DC9               	goto	u4835
  2277  15C7  084A               	movf	_bVOLTAGE^(0+128),w
  2278  15C8  024C               	subwf	_aVOLTAGE^(0+128),w
  2279  15C9                     u4835:	
  2280  15C9  1C03               	skipc
  2281  15CA  2DCC               	goto	u4831
  2282  15CB  2DCD               	goto	u4830
  2283  15CC                     u4831:	
  2284  15CC  2DD3               	goto	l3405
  2285  15CD                     u4830:	
  2286  15CD                     l3403:	
  2287  15CD  160A  118A  2344  160A  118A  	fcall	_aON
  2288  15D2  2E0F               	goto	l3423
  2289  15D3                     l3405:	
  2290  15D3  160A  118A  235C  160A  118A  	fcall	_bON
  2291  15D8  2E0F               	goto	l3423
  2292  15D9                     l3407:	
  2293                           
  2294                           ;main.c: 250:             if(aVOLTAGE>=cVOLTAGE)aON();
  2295  15D9  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  2296  15DA  3A80               	xorlw	128
  2297  15DB  00F6               	movwf	??_maximumPower2
  2298  15DC  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  2299  15DD  3A80               	xorlw	128
  2300  15DE  0276               	subwf	??_maximumPower2,w
  2301  15DF  1D03               	skipz
  2302  15E0  2DE3               	goto	u4845
  2303  15E1  0848               	movf	_cVOLTAGE^(0+128),w
  2304  15E2  024C               	subwf	_aVOLTAGE^(0+128),w
  2305  15E3                     u4845:	
  2306  15E3  1C03               	skipc
  2307  15E4  2DE6               	goto	u4841
  2308  15E5  2DE7               	goto	u4840
  2309  15E6                     u4841:	
  2310  15E6  2DE8               	goto	l3411
  2311  15E7                     u4840:	
  2312  15E7  2DCD               	goto	l3403
  2313  15E8                     l3411:	
  2314  15E8  160A  118A  2374  160A  118A  	fcall	_cON
  2315  15ED  2E0F               	goto	l3423
  2316  15EE                     l3413:	
  2317                           
  2318                           ;main.c: 254:             if(bVOLTAGE>=cVOLTAGE)bON();
  2319  15EE  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  2320  15EF  3A80               	xorlw	128
  2321  15F0  00F6               	movwf	??_maximumPower2
  2322  15F1  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  2323  15F2  3A80               	xorlw	128
  2324  15F3  0276               	subwf	??_maximumPower2,w
  2325  15F4  1D03               	skipz
  2326  15F5  2DF8               	goto	u4855
  2327  15F6  0848               	movf	_cVOLTAGE^(0+128),w
  2328  15F7  024A               	subwf	_bVOLTAGE^(0+128),w
  2329  15F8                     u4855:	
  2330  15F8  1C03               	skipc
  2331  15F9  2DFB               	goto	u4851
  2332  15FA  2DFC               	goto	u4850
  2333  15FB                     u4851:	
  2334  15FB  2DE8               	goto	l3411
  2335  15FC                     u4850:	
  2336  15FC  2DD3               	goto	l3405
  2337  15FD                     l3421:	
  2338                           
  2339                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2340                           ; Switch size 1, requested type "simple"
  2341                           ; Number of cases is 1, Range of values is 0 to 0
  2342                           ; switch strategies available:
  2343                           ; Name         Instructions Cycles
  2344                           ; simple_byte            4     3 (average)
  2345                           ; direct_byte           11     8 (fixed)
  2346                           ; jumptable            260     6 (fixed)
  2347                           ;	Chosen strategy is simple_byte
  2348  15FD  1683               	bsf	3,5	;RP0=1, select bank1
  2349  15FE  1303               	bcf	3,6	;RP1=0, select bank1
  2350  15FF  0841               	movf	(_danger+1)^(0+128),w
  2351  1600  3A00               	xorlw	0	; case 0
  2352  1601  1903               	skipnz
  2353  1602  2E04               	goto	l3749
  2354  1603  2E0F               	goto	l3423
  2355  1604                     l3749:	
  2356                           
  2357                           ; Switch size 1, requested type "simple"
  2358                           ; Number of cases is 3, Range of values is 1 to 4
  2359                           ; switch strategies available:
  2360                           ; Name         Instructions Cycles
  2361                           ; simple_byte           10     6 (average)
  2362                           ; direct_byte           23    11 (fixed)
  2363                           ; jumptable            263     9 (fixed)
  2364                           ;	Chosen strategy is simple_byte
  2365  1604  0840               	movf	_danger^(0+128),w
  2366  1605  3A01               	xorlw	1	; case 1
  2367  1606  1903               	skipnz
  2368  1607  2DBF               	goto	l3401
  2369  1608  3A03               	xorlw	3	; case 2
  2370  1609  1903               	skipnz
  2371  160A  2DD9               	goto	l3407
  2372  160B  3A06               	xorlw	6	; case 4
  2373  160C  1903               	skipnz
  2374  160D  2DEE               	goto	l3413
  2375  160E  2E0F               	goto	l3423
  2376  160F                     l3423:	
  2377                           
  2378                           ;main.c: 258:     nextState=cM;
  2379  160F  300C               	movlw	12
  2380  1610  00F6               	movwf	??_maximumPower2
  2381  1611  0876               	movf	??_maximumPower2,w
  2382  1612  1683               	bsf	3,5	;RP0=1, select bank1
  2383  1613  1303               	bcf	3,6	;RP1=0, select bank1
  2384  1614  00CE               	movwf	_nextState^(0+128)
  2385  1615                     l307:	
  2386  1615  0008               	return
  2387  1616                     __end_of_maximumPower2:	
  2388                           
  2389                           	psect	text6
  2390  1455                     __ptext6:	
  2391 ;; *************** function _maximumPower1 *****************
  2392 ;; Defined at:
  2393 ;;		line 260 in file "main.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;		None
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;		None
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  1    wreg      void 
  2400 ;; Registers used:
  2401 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2407 ;;      Params:         0       0       0       0       0
  2408 ;;      Locals:         0       0       0       0       0
  2409 ;;      Temps:          1       0       0       0       0
  2410 ;;      Totals:         1       0       0       0       0
  2411 ;;Total ram usage:        1 bytes
  2412 ;; Hardware stack levels used:    1
  2413 ;; Hardware stack levels required when called:    3
  2414 ;; This function calls:
  2415 ;;		_aON
  2416 ;;		_bON
  2417 ;;		_cON
  2418 ;; This function is called by:
  2419 ;;		_main
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           
  2424                           ;psect for function _maximumPower1
  2425  1455                     _maximumPower1:	
  2426  1455                     l3431:	
  2427                           ;incstack = 0
  2428                           ; Regs used in _maximumPower1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2429                           
  2430                           
  2431                           ;main.c: 261:     switch(danger){
  2432  1455  2C68               	goto	l3441
  2433  1456                     l3433:	
  2434                           
  2435                           ;main.c: 263:             aON();
  2436  1456  160A  118A  2344  160A  118A  	fcall	_aON
  2437                           
  2438                           ;main.c: 264:             break;
  2439  145B  2C7A               	goto	l3443
  2440  145C                     l3435:	
  2441                           
  2442                           ;main.c: 266:             cON();
  2443  145C  160A  118A  2374  160A  118A  	fcall	_cON
  2444                           
  2445                           ;main.c: 267:             break;
  2446  1461  2C7A               	goto	l3443
  2447  1462                     l3437:	
  2448                           
  2449                           ;main.c: 269:             bON();
  2450  1462  160A  118A  235C  160A  118A  	fcall	_bON
  2451                           
  2452                           ;main.c: 270:             break;
  2453  1467  2C7A               	goto	l3443
  2454  1468                     l3441:	
  2455                           
  2456                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2457                           ; Switch size 1, requested type "simple"
  2458                           ; Number of cases is 1, Range of values is 0 to 0
  2459                           ; switch strategies available:
  2460                           ; Name         Instructions Cycles
  2461                           ; simple_byte            4     3 (average)
  2462                           ; direct_byte           11     8 (fixed)
  2463                           ; jumptable            260     6 (fixed)
  2464                           ;	Chosen strategy is simple_byte
  2465  1468  1683               	bsf	3,5	;RP0=1, select bank1
  2466  1469  1303               	bcf	3,6	;RP1=0, select bank1
  2467  146A  0841               	movf	(_danger+1)^(0+128),w
  2468  146B  3A00               	xorlw	0	; case 0
  2469  146C  1903               	skipnz
  2470  146D  2C6F               	goto	l3751
  2471  146E  2C7A               	goto	l3443
  2472  146F                     l3751:	
  2473                           
  2474                           ; Switch size 1, requested type "simple"
  2475                           ; Number of cases is 3, Range of values is 3 to 6
  2476                           ; switch strategies available:
  2477                           ; Name         Instructions Cycles
  2478                           ; simple_byte           10     6 (average)
  2479                           ; direct_byte           23    11 (fixed)
  2480                           ; jumptable            263     9 (fixed)
  2481                           ;	Chosen strategy is simple_byte
  2482  146F  0840               	movf	_danger^(0+128),w
  2483  1470  3A03               	xorlw	3	; case 3
  2484  1471  1903               	skipnz
  2485  1472  2C56               	goto	l3433
  2486  1473  3A06               	xorlw	6	; case 5
  2487  1474  1903               	skipnz
  2488  1475  2C62               	goto	l3437
  2489  1476  3A03               	xorlw	3	; case 6
  2490  1477  1903               	skipnz
  2491  1478  2C5C               	goto	l3435
  2492  1479  2C7A               	goto	l3443
  2493  147A                     l3443:	
  2494                           
  2495                           ;main.c: 272:     nextState=cM;
  2496  147A  300C               	movlw	12
  2497  147B  00F6               	movwf	??_maximumPower1
  2498  147C  0876               	movf	??_maximumPower1,w
  2499  147D  1683               	bsf	3,5	;RP0=1, select bank1
  2500  147E  1303               	bcf	3,6	;RP1=0, select bank1
  2501  147F  00CE               	movwf	_nextState^(0+128)
  2502  1480                     l315:	
  2503  1480  0008               	return
  2504  1481                     __end_of_maximumPower1:	
  2505                           
  2506                           	psect	text7
  2507  1374                     __ptext7:	
  2508 ;; *************** function _cON *****************
  2509 ;; Defined at:
  2510 ;;		line 290 in file "main.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;		None
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;		None
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      void 
  2517 ;; Registers used:
  2518 ;;		wreg, status,2, status,0, pclath, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2524 ;;      Params:         0       0       0       0       0
  2525 ;;      Locals:         0       0       0       0       0
  2526 ;;      Temps:          1       0       0       0       0
  2527 ;;      Totals:         1       0       0       0       0
  2528 ;;Total ram usage:        1 bytes
  2529 ;; Hardware stack levels used:    1
  2530 ;; Hardware stack levels required when called:    2
  2531 ;; This function calls:
  2532 ;;		_Lcd_Write_Char
  2533 ;; This function is called by:
  2534 ;;		_main
  2535 ;;		_powerSaving3
  2536 ;;		_powerSaving2
  2537 ;;		_powerSaving1
  2538 ;;		_maximumPower3
  2539 ;;		_maximumPower2
  2540 ;;		_maximumPower1
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           
  2545                           ;psect for function _cON
  2546  1374                     _cON:	
  2547  1374                     l2735:	
  2548                           ;incstack = 0
  2549                           ; Regs used in _cON: [wreg+status,2+status,0+pclath+cstack]
  2550                           
  2551                           
  2552                           ;main.c: 291:     RB3=0;
  2553  1374  1283               	bcf	3,5	;RP0=0, select bank0
  2554  1375  1303               	bcf	3,6	;RP1=0, select bank0
  2555  1376  1186               	bcf	6,3	;volatile
  2556                           
  2557                           ;main.c: 292:     RB4=0;
  2558  1377  1206               	bcf	6,4	;volatile
  2559                           
  2560                           ;main.c: 293:     RB5=1;
  2561  1378  1686               	bsf	6,5	;volatile
  2562  1379                     l2737:	
  2563                           
  2564                           ;main.c: 294:     voltage=cVOLTAGE;
  2565  1379  1683               	bsf	3,5	;RP0=1, select bank1
  2566  137A  1303               	bcf	3,6	;RP1=0, select bank1
  2567  137B  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  2568  137C  00BF               	movwf	(_voltage+1)^(0+128)
  2569  137D  0848               	movf	_cVOLTAGE^(0+128),w
  2570  137E  00BE               	movwf	_voltage^(0+128)
  2571  137F                     l2739:	
  2572                           
  2573                           ;main.c: 295:     Lcd_Write_Char('C');
  2574  137F  3043               	movlw	67
  2575  1380  160A  118A  24AD  160A  118A  	fcall	_Lcd_Write_Char
  2576  1385                     l2741:	
  2577                           
  2578                           ;main.c: 296:     nextState=cM;
  2579  1385  300C               	movlw	12
  2580  1386  00F5               	movwf	??_cON
  2581  1387  0875               	movf	??_cON,w
  2582  1388  1683               	bsf	3,5	;RP0=1, select bank1
  2583  1389  1303               	bcf	3,6	;RP1=0, select bank1
  2584  138A  00CE               	movwf	_nextState^(0+128)
  2585  138B                     l324:	
  2586  138B  0008               	return
  2587  138C                     __end_of_cON:	
  2588                           
  2589                           	psect	text8
  2590  135C                     __ptext8:	
  2591 ;; *************** function _bON *****************
  2592 ;; Defined at:
  2593 ;;		line 282 in file "main.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;		None
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      void 
  2600 ;; Registers used:
  2601 ;;		wreg, status,2, status,0, pclath, cstack
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2607 ;;      Params:         0       0       0       0       0
  2608 ;;      Locals:         0       0       0       0       0
  2609 ;;      Temps:          1       0       0       0       0
  2610 ;;      Totals:         1       0       0       0       0
  2611 ;;Total ram usage:        1 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    2
  2614 ;; This function calls:
  2615 ;;		_Lcd_Write_Char
  2616 ;; This function is called by:
  2617 ;;		_main
  2618 ;;		_powerSaving3
  2619 ;;		_powerSaving2
  2620 ;;		_powerSaving1
  2621 ;;		_maximumPower3
  2622 ;;		_maximumPower2
  2623 ;;		_maximumPower1
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           
  2628                           ;psect for function _bON
  2629  135C                     _bON:	
  2630  135C                     l2727:	
  2631                           ;incstack = 0
  2632                           ; Regs used in _bON: [wreg+status,2+status,0+pclath+cstack]
  2633                           
  2634                           
  2635                           ;main.c: 283:     RB3=0;
  2636  135C  1283               	bcf	3,5	;RP0=0, select bank0
  2637  135D  1303               	bcf	3,6	;RP1=0, select bank0
  2638  135E  1186               	bcf	6,3	;volatile
  2639                           
  2640                           ;main.c: 284:     RB4=1;
  2641  135F  1606               	bsf	6,4	;volatile
  2642                           
  2643                           ;main.c: 285:     RB5=0;
  2644  1360  1286               	bcf	6,5	;volatile
  2645  1361                     l2729:	
  2646                           
  2647                           ;main.c: 286:     voltage=bVOLTAGE;
  2648  1361  1683               	bsf	3,5	;RP0=1, select bank1
  2649  1362  1303               	bcf	3,6	;RP1=0, select bank1
  2650  1363  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  2651  1364  00BF               	movwf	(_voltage+1)^(0+128)
  2652  1365  084A               	movf	_bVOLTAGE^(0+128),w
  2653  1366  00BE               	movwf	_voltage^(0+128)
  2654  1367                     l2731:	
  2655                           
  2656                           ;main.c: 287:     Lcd_Write_Char('B');
  2657  1367  3042               	movlw	66
  2658  1368  160A  118A  24AD  160A  118A  	fcall	_Lcd_Write_Char
  2659  136D                     l2733:	
  2660                           
  2661                           ;main.c: 288:     nextState=cM;
  2662  136D  300C               	movlw	12
  2663  136E  00F5               	movwf	??_bON
  2664  136F  0875               	movf	??_bON,w
  2665  1370  1683               	bsf	3,5	;RP0=1, select bank1
  2666  1371  1303               	bcf	3,6	;RP1=0, select bank1
  2667  1372  00CE               	movwf	_nextState^(0+128)
  2668  1373                     l321:	
  2669  1373  0008               	return
  2670  1374                     __end_of_bON:	
  2671                           
  2672                           	psect	text9
  2673  1344                     __ptext9:	
  2674 ;; *************** function _aON *****************
  2675 ;; Defined at:
  2676 ;;		line 274 in file "main.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;		None
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;		None
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  1    wreg      void 
  2683 ;; Registers used:
  2684 ;;		wreg, status,2, status,0, pclath, cstack
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2690 ;;      Params:         0       0       0       0       0
  2691 ;;      Locals:         0       0       0       0       0
  2692 ;;      Temps:          1       0       0       0       0
  2693 ;;      Totals:         1       0       0       0       0
  2694 ;;Total ram usage:        1 bytes
  2695 ;; Hardware stack levels used:    1
  2696 ;; Hardware stack levels required when called:    2
  2697 ;; This function calls:
  2698 ;;		_Lcd_Write_Char
  2699 ;; This function is called by:
  2700 ;;		_main
  2701 ;;		_powerSaving3
  2702 ;;		_powerSaving2
  2703 ;;		_powerSaving1
  2704 ;;		_maximumPower3
  2705 ;;		_maximumPower2
  2706 ;;		_maximumPower1
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           
  2711                           ;psect for function _aON
  2712  1344                     _aON:	
  2713  1344                     l2719:	
  2714                           ;incstack = 0
  2715                           ; Regs used in _aON: [wreg+status,2+status,0+pclath+cstack]
  2716                           
  2717                           
  2718                           ;main.c: 275:     RB3=1;
  2719  1344  1283               	bcf	3,5	;RP0=0, select bank0
  2720  1345  1303               	bcf	3,6	;RP1=0, select bank0
  2721  1346  1586               	bsf	6,3	;volatile
  2722                           
  2723                           ;main.c: 276:     RB4=0;
  2724  1347  1206               	bcf	6,4	;volatile
  2725                           
  2726                           ;main.c: 277:     RB5=0;
  2727  1348  1286               	bcf	6,5	;volatile
  2728  1349                     l2721:	
  2729                           
  2730                           ;main.c: 278:     voltage=aVOLTAGE;
  2731  1349  1683               	bsf	3,5	;RP0=1, select bank1
  2732  134A  1303               	bcf	3,6	;RP1=0, select bank1
  2733  134B  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  2734  134C  00BF               	movwf	(_voltage+1)^(0+128)
  2735  134D  084C               	movf	_aVOLTAGE^(0+128),w
  2736  134E  00BE               	movwf	_voltage^(0+128)
  2737  134F                     l2723:	
  2738                           
  2739                           ;main.c: 279:     Lcd_Write_Char('A');
  2740  134F  3041               	movlw	65
  2741  1350  160A  118A  24AD  160A  118A  	fcall	_Lcd_Write_Char
  2742  1355                     l2725:	
  2743                           
  2744                           ;main.c: 280:     nextState=cM;
  2745  1355  300C               	movlw	12
  2746  1356  00F5               	movwf	??_aON
  2747  1357  0875               	movf	??_aON,w
  2748  1358  1683               	bsf	3,5	;RP0=1, select bank1
  2749  1359  1303               	bcf	3,6	;RP1=0, select bank1
  2750  135A  00CE               	movwf	_nextState^(0+128)
  2751  135B                     l318:	
  2752  135B  0008               	return
  2753  135C                     __end_of_aON:	
  2754                           
  2755                           	psect	text10
  2756  0DE9                     __ptext10:	
  2757 ;; *************** function _hotList *****************
  2758 ;; Defined at:
  2759 ;;		line 129 in file "main.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;		None
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;		None
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  1    wreg      void 
  2766 ;; Registers used:
  2767 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2773 ;;      Params:         0       0       0       0       0
  2774 ;;      Locals:         0       0       0       0       0
  2775 ;;      Temps:          0       6       0       0       0
  2776 ;;      Totals:         0       6       0       0       0
  2777 ;;Total ram usage:        6 bytes
  2778 ;; Hardware stack levels used:    1
  2779 ;; Hardware stack levels required when called:    3
  2780 ;; This function calls:
  2781 ;;		_Lcd_Clear
  2782 ;;		_Lcd_Set_Cursor
  2783 ;;		_Lcd_Write_String
  2784 ;; This function is called by:
  2785 ;;		_main
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           
  2790                           ;psect for function _hotList
  2791  0DE9                     _hotList:	
  2792  0DE9                     l3135:	
  2793                           ;incstack = 0
  2794                           ; Regs used in _hotList: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2795                           
  2796                           
  2797                           ;main.c: 130:     _delay((unsigned long)((20)*(20000000/4000000.0)));
  2798  0DE9  3020               	movlw	32
  2799  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  2800  0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  2801  0DEC  00A0               	movwf	??_hotList
  2802  0DED                     u5077:	
  2803  0DED  0BA0               	decfsz	??_hotList,f
  2804  0DEE  2DED               	goto	u5077
  2805  0DEF  0000               	nop
  2806  0DF0                     l3137:	
  2807                           
  2808                           ;main.c: 131:     ADCON0bits.CHS=0;
  2809  0DF0  30C7               	movlw	-57
  2810  0DF1  1283               	bcf	3,5	;RP0=0, select bank0
  2811  0DF2  1303               	bcf	3,6	;RP1=0, select bank0
  2812  0DF3  059F               	andwf	31,f	;volatile
  2813  0DF4                     l3139:	
  2814                           
  2815                           ;main.c: 132:     ADCON0bits.GO_nDONE=1;
  2816  0DF4  151F               	bsf	31,2	;volatile
  2817  0DF5                     l181:	
  2818                           ;main.c: 133:     while(ADCON0bits.GO_nDONE);
  2819                           
  2820  0DF5  191F               	btfsc	31,2	;volatile
  2821  0DF6  2DF8               	goto	u4271
  2822  0DF7  2DF9               	goto	u4270
  2823  0DF8                     u4271:	
  2824  0DF8  2DF5               	goto	l181
  2825  0DF9                     u4270:	
  2826  0DF9                     l3141:	
  2827                           
  2828                           ;main.c: 134:     aVOLTAGE=(ADRESH<<8)+ADRESL;
  2829  0DF9  081E               	movf	30,w	;volatile
  2830  0DFA  1683               	bsf	3,5	;RP0=1, select bank1
  2831  0DFB  1303               	bcf	3,6	;RP1=0, select bank1
  2832  0DFC  00CD               	movwf	(_aVOLTAGE+1)^(0+128)
  2833  0DFD  081E               	movf	30,w	;volatile
  2834  0DFE  00CC               	movwf	_aVOLTAGE^(0+128)
  2835  0DFF                     l3143:	
  2836                           
  2837                           ;main.c: 135:     if((aVOLTAGE>=614)||(aVOLTAGE<=368))aDANGER=1;
  2838  0DFF  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  2839  0E00  3A80               	xorlw	128
  2840  0E01  00FF               	movwf	btemp+1
  2841  0E02  3082               	movlw	130
  2842  0E03  027F               	subwf	btemp+1,w
  2843  0E04  1D03               	skipz
  2844  0E05  2E08               	goto	u4285
  2845  0E06  3066               	movlw	102
  2846  0E07  024C               	subwf	_aVOLTAGE^(0+128),w
  2847  0E08                     u4285:	
  2848  0E08  1803               	skipnc
  2849  0E09  2E0B               	goto	u4281
  2850  0E0A  2E0C               	goto	u4280
  2851  0E0B                     u4281:	
  2852  0E0B  2E1B               	goto	l3147
  2853  0E0C                     u4280:	
  2854  0E0C                     l3145:	
  2855  0E0C  1683               	bsf	3,5	;RP0=1, select bank1
  2856  0E0D  1303               	bcf	3,6	;RP1=0, select bank1
  2857  0E0E  084D               	movf	(_aVOLTAGE+1)^(0+128),w
  2858  0E0F  3A80               	xorlw	128
  2859  0E10  00FF               	movwf	btemp+1
  2860  0E11  3081               	movlw	129
  2861  0E12  027F               	subwf	btemp+1,w
  2862  0E13  1D03               	skipz
  2863  0E14  2E17               	goto	u4295
  2864  0E15  3071               	movlw	113
  2865  0E16  024C               	subwf	_aVOLTAGE^(0+128),w
  2866  0E17                     u4295:	
  2867  0E17  1803               	skipnc
  2868  0E18  2E1A               	goto	u4291
  2869  0E19  2E1B               	goto	u4290
  2870  0E1A                     u4291:	
  2871  0E1A  2E22               	goto	l3149
  2872  0E1B                     u4290:	
  2873  0E1B                     l3147:	
  2874  0E1B  3001               	movlw	1
  2875  0E1C  1683               	bsf	3,5	;RP0=1, select bank1
  2876  0E1D  1303               	bcf	3,6	;RP1=0, select bank1
  2877  0E1E  00C6               	movwf	_aDANGER^(0+128)
  2878  0E1F  3000               	movlw	0
  2879  0E20  00C7               	movwf	(_aDANGER^(0+128)+1)
  2880  0E21  2E26               	goto	l3151
  2881  0E22                     l3149:	
  2882  0E22  1683               	bsf	3,5	;RP0=1, select bank1
  2883  0E23  1303               	bcf	3,6	;RP1=0, select bank1
  2884  0E24  01C6               	clrf	_aDANGER^(0+128)
  2885  0E25  01C7               	clrf	(_aDANGER+1)^(0+128)
  2886  0E26                     l3151:	
  2887                           
  2888                           ;main.c: 137:     _delay((unsigned long)((20)*(20000000/4000000.0)));
  2889  0E26  3020               	movlw	32
  2890  0E27  1283               	bcf	3,5	;RP0=0, select bank0
  2891  0E28  1303               	bcf	3,6	;RP1=0, select bank0
  2892  0E29  00A0               	movwf	??_hotList
  2893  0E2A                     u5087:	
  2894  0E2A  0BA0               	decfsz	??_hotList,f
  2895  0E2B  2E2A               	goto	u5087
  2896  0E2C  0000               	nop
  2897  0E2D                     l3153:	
  2898                           
  2899                           ;main.c: 138:     ADCON0bits.CHS=1;
  2900  0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  2901  0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  2902  0E2F  081F               	movf	31,w	;volatile
  2903  0E30  39C7               	andlw	-57
  2904  0E31  3808               	iorlw	8
  2905  0E32  009F               	movwf	31	;volatile
  2906  0E33                     l3155:	
  2907                           
  2908                           ;main.c: 139:     ADCON0bits.GO_nDONE=1;
  2909  0E33  151F               	bsf	31,2	;volatile
  2910  0E34                     l188:	
  2911                           ;main.c: 140:     while(ADCON0bits.GO_nDONE);
  2912                           
  2913  0E34  191F               	btfsc	31,2	;volatile
  2914  0E35  2E37               	goto	u4301
  2915  0E36  2E38               	goto	u4300
  2916  0E37                     u4301:	
  2917  0E37  2E34               	goto	l188
  2918  0E38                     u4300:	
  2919  0E38                     l3157:	
  2920                           
  2921                           ;main.c: 141:     bVOLTAGE=(ADRESH<<8)+ADRESL;
  2922  0E38  081E               	movf	30,w	;volatile
  2923  0E39  1683               	bsf	3,5	;RP0=1, select bank1
  2924  0E3A  1303               	bcf	3,6	;RP1=0, select bank1
  2925  0E3B  00CB               	movwf	(_bVOLTAGE+1)^(0+128)
  2926  0E3C  081E               	movf	30,w	;volatile
  2927  0E3D  00CA               	movwf	_bVOLTAGE^(0+128)
  2928  0E3E                     l3159:	
  2929                           
  2930                           ;main.c: 142:     if((bVOLTAGE>=614)||(bVOLTAGE<=368))bDANGER=1;
  2931  0E3E  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  2932  0E3F  3A80               	xorlw	128
  2933  0E40  00FF               	movwf	btemp+1
  2934  0E41  3082               	movlw	130
  2935  0E42  027F               	subwf	btemp+1,w
  2936  0E43  1D03               	skipz
  2937  0E44  2E47               	goto	u4315
  2938  0E45  3066               	movlw	102
  2939  0E46  024A               	subwf	_bVOLTAGE^(0+128),w
  2940  0E47                     u4315:	
  2941  0E47  1803               	skipnc
  2942  0E48  2E4A               	goto	u4311
  2943  0E49  2E4B               	goto	u4310
  2944  0E4A                     u4311:	
  2945  0E4A  2E5A               	goto	l3163
  2946  0E4B                     u4310:	
  2947  0E4B                     l3161:	
  2948  0E4B  1683               	bsf	3,5	;RP0=1, select bank1
  2949  0E4C  1303               	bcf	3,6	;RP1=0, select bank1
  2950  0E4D  084B               	movf	(_bVOLTAGE+1)^(0+128),w
  2951  0E4E  3A80               	xorlw	128
  2952  0E4F  00FF               	movwf	btemp+1
  2953  0E50  3081               	movlw	129
  2954  0E51  027F               	subwf	btemp+1,w
  2955  0E52  1D03               	skipz
  2956  0E53  2E56               	goto	u4325
  2957  0E54  3071               	movlw	113
  2958  0E55  024A               	subwf	_bVOLTAGE^(0+128),w
  2959  0E56                     u4325:	
  2960  0E56  1803               	skipnc
  2961  0E57  2E59               	goto	u4321
  2962  0E58  2E5A               	goto	u4320
  2963  0E59                     u4321:	
  2964  0E59  2E61               	goto	l3165
  2965  0E5A                     u4320:	
  2966  0E5A                     l3163:	
  2967  0E5A  3001               	movlw	1
  2968  0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  2969  0E5C  1303               	bcf	3,6	;RP1=0, select bank1
  2970  0E5D  00C4               	movwf	_bDANGER^(0+128)
  2971  0E5E  3000               	movlw	0
  2972  0E5F  00C5               	movwf	(_bDANGER^(0+128)+1)
  2973  0E60  2E65               	goto	l3167
  2974  0E61                     l3165:	
  2975  0E61  1683               	bsf	3,5	;RP0=1, select bank1
  2976  0E62  1303               	bcf	3,6	;RP1=0, select bank1
  2977  0E63  01C4               	clrf	_bDANGER^(0+128)
  2978  0E64  01C5               	clrf	(_bDANGER+1)^(0+128)
  2979  0E65                     l3167:	
  2980                           
  2981                           ;main.c: 144:     _delay((unsigned long)((20)*(20000000/4000000.0)));
  2982  0E65  3020               	movlw	32
  2983  0E66  1283               	bcf	3,5	;RP0=0, select bank0
  2984  0E67  1303               	bcf	3,6	;RP1=0, select bank0
  2985  0E68  00A0               	movwf	??_hotList
  2986  0E69                     u5097:	
  2987  0E69  0BA0               	decfsz	??_hotList,f
  2988  0E6A  2E69               	goto	u5097
  2989  0E6B  0000               	nop
  2990  0E6C                     l3169:	
  2991                           
  2992                           ;main.c: 145:     ADCON0bits.CHS=2;
  2993  0E6C  1283               	bcf	3,5	;RP0=0, select bank0
  2994  0E6D  1303               	bcf	3,6	;RP1=0, select bank0
  2995  0E6E  081F               	movf	31,w	;volatile
  2996  0E6F  39C7               	andlw	-57
  2997  0E70  3810               	iorlw	16
  2998  0E71  009F               	movwf	31	;volatile
  2999  0E72                     l3171:	
  3000                           
  3001                           ;main.c: 146:     ADCON0bits.GO_nDONE=1;
  3002  0E72  151F               	bsf	31,2	;volatile
  3003  0E73                     l195:	
  3004                           ;main.c: 147:     while(ADCON0bits.GO_nDONE);
  3005                           
  3006  0E73  191F               	btfsc	31,2	;volatile
  3007  0E74  2E76               	goto	u4331
  3008  0E75  2E77               	goto	u4330
  3009  0E76                     u4331:	
  3010  0E76  2E73               	goto	l195
  3011  0E77                     u4330:	
  3012  0E77                     l3173:	
  3013                           
  3014                           ;main.c: 148:     cVOLTAGE=(ADRESH<<8)+ADRESL;
  3015  0E77  081E               	movf	30,w	;volatile
  3016  0E78  1683               	bsf	3,5	;RP0=1, select bank1
  3017  0E79  1303               	bcf	3,6	;RP1=0, select bank1
  3018  0E7A  00C9               	movwf	(_cVOLTAGE+1)^(0+128)
  3019  0E7B  081E               	movf	30,w	;volatile
  3020  0E7C  00C8               	movwf	_cVOLTAGE^(0+128)
  3021  0E7D                     l3175:	
  3022                           
  3023                           ;main.c: 149:     if((cVOLTAGE>=614)||(cVOLTAGE<=368))cDANGER=1;
  3024  0E7D  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  3025  0E7E  3A80               	xorlw	128
  3026  0E7F  00FF               	movwf	btemp+1
  3027  0E80  3082               	movlw	130
  3028  0E81  027F               	subwf	btemp+1,w
  3029  0E82  1D03               	skipz
  3030  0E83  2E86               	goto	u4345
  3031  0E84  3066               	movlw	102
  3032  0E85  0248               	subwf	_cVOLTAGE^(0+128),w
  3033  0E86                     u4345:	
  3034  0E86  1803               	skipnc
  3035  0E87  2E89               	goto	u4341
  3036  0E88  2E8A               	goto	u4340
  3037  0E89                     u4341:	
  3038  0E89  2E99               	goto	l3179
  3039  0E8A                     u4340:	
  3040  0E8A                     l3177:	
  3041  0E8A  1683               	bsf	3,5	;RP0=1, select bank1
  3042  0E8B  1303               	bcf	3,6	;RP1=0, select bank1
  3043  0E8C  0849               	movf	(_cVOLTAGE+1)^(0+128),w
  3044  0E8D  3A80               	xorlw	128
  3045  0E8E  00FF               	movwf	btemp+1
  3046  0E8F  3081               	movlw	129
  3047  0E90  027F               	subwf	btemp+1,w
  3048  0E91  1D03               	skipz
  3049  0E92  2E95               	goto	u4355
  3050  0E93  3071               	movlw	113
  3051  0E94  0248               	subwf	_cVOLTAGE^(0+128),w
  3052  0E95                     u4355:	
  3053  0E95  1803               	skipnc
  3054  0E96  2E98               	goto	u4351
  3055  0E97  2E99               	goto	u4350
  3056  0E98                     u4351:	
  3057  0E98  2EA0               	goto	l3181
  3058  0E99                     u4350:	
  3059  0E99                     l3179:	
  3060  0E99  3001               	movlw	1
  3061  0E9A  1683               	bsf	3,5	;RP0=1, select bank1
  3062  0E9B  1303               	bcf	3,6	;RP1=0, select bank1
  3063  0E9C  00C2               	movwf	_cDANGER^(0+128)
  3064  0E9D  3000               	movlw	0
  3065  0E9E  00C3               	movwf	(_cDANGER^(0+128)+1)
  3066  0E9F  2EA4               	goto	l3183
  3067  0EA0                     l3181:	
  3068  0EA0  1683               	bsf	3,5	;RP0=1, select bank1
  3069  0EA1  1303               	bcf	3,6	;RP1=0, select bank1
  3070  0EA2  01C2               	clrf	_cDANGER^(0+128)
  3071  0EA3  01C3               	clrf	(_cDANGER+1)^(0+128)
  3072  0EA4                     l3183:	
  3073                           
  3074                           ;main.c: 151:     _delay((unsigned long)((20)*(20000000/4000000.0)));
  3075  0EA4  3020               	movlw	32
  3076  0EA5  1283               	bcf	3,5	;RP0=0, select bank0
  3077  0EA6  1303               	bcf	3,6	;RP1=0, select bank0
  3078  0EA7  00A0               	movwf	??_hotList
  3079  0EA8                     u5107:	
  3080  0EA8  0BA0               	decfsz	??_hotList,f
  3081  0EA9  2EA8               	goto	u5107
  3082  0EAA  0000               	nop
  3083  0EAB                     l3185:	
  3084                           
  3085                           ;main.c: 152:     danger=0;
  3086  0EAB  1683               	bsf	3,5	;RP0=1, select bank1
  3087  0EAC  1303               	bcf	3,6	;RP1=0, select bank1
  3088  0EAD  01C0               	clrf	_danger^(0+128)
  3089  0EAE  01C1               	clrf	(_danger+1)^(0+128)
  3090  0EAF                     l3187:	
  3091                           
  3092                           ;main.c: 153:     danger=(aDANGER<<2)|(bDANGER<<1)|(cDANGER);
  3093  0EAF  0845               	movf	(_bDANGER+1)^(0+128),w
  3094  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  3095  0EB1  1303               	bcf	3,6	;RP1=0, select bank0
  3096  0EB2  00A1               	movwf	??_hotList+1
  3097  0EB3  1683               	bsf	3,5	;RP0=1, select bank1
  3098  0EB4  1303               	bcf	3,6	;RP1=0, select bank1
  3099  0EB5  0844               	movf	_bDANGER^(0+128),w
  3100  0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  3101  0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  3102  0EB8  00A0               	movwf	??_hotList
  3103  0EB9  1003               	clrc
  3104  0EBA  0DA0               	rlf	??_hotList,f
  3105  0EBB  0DA1               	rlf	??_hotList+1,f
  3106  0EBC  1683               	bsf	3,5	;RP0=1, select bank1
  3107  0EBD  1303               	bcf	3,6	;RP1=0, select bank1
  3108  0EBE  0847               	movf	(_aDANGER+1)^(0+128),w
  3109  0EBF  1283               	bcf	3,5	;RP0=0, select bank0
  3110  0EC0  1303               	bcf	3,6	;RP1=0, select bank0
  3111  0EC1  00A3               	movwf	??_hotList+3
  3112  0EC2  1683               	bsf	3,5	;RP0=1, select bank1
  3113  0EC3  1303               	bcf	3,6	;RP1=0, select bank1
  3114  0EC4  0846               	movf	_aDANGER^(0+128),w
  3115  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  3116  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  3117  0EC7  00A2               	movwf	??_hotList+2
  3118  0EC8  1003               	clrc
  3119  0EC9  0DA2               	rlf	??_hotList+2,f
  3120  0ECA  0DA3               	rlf	??_hotList+3,f
  3121  0ECB  1003               	clrc
  3122  0ECC  0DA2               	rlf	??_hotList+2,f
  3123  0ECD  0DA3               	rlf	??_hotList+3,f
  3124  0ECE  0820               	movf	??_hotList,w
  3125  0ECF  0422               	iorwf	??_hotList+2,w
  3126  0ED0  00A4               	movwf	??_hotList+4
  3127  0ED1  0821               	movf	??_hotList+1,w
  3128  0ED2  0423               	iorwf	??_hotList+3,w
  3129  0ED3  00A5               	movwf	??_hotList+5
  3130  0ED4  1683               	bsf	3,5	;RP0=1, select bank1
  3131  0ED5  1303               	bcf	3,6	;RP1=0, select bank1
  3132  0ED6  0842               	movf	_cDANGER^(0+128),w
  3133  0ED7  1283               	bcf	3,5	;RP0=0, select bank0
  3134  0ED8  1303               	bcf	3,6	;RP1=0, select bank0
  3135  0ED9  0424               	iorwf	??_hotList+4,w
  3136  0EDA  1683               	bsf	3,5	;RP0=1, select bank1
  3137  0EDB  1303               	bcf	3,6	;RP1=0, select bank1
  3138  0EDC  00C0               	movwf	_danger^(0+128)
  3139  0EDD  0843               	movf	(_cDANGER+1)^(0+128),w
  3140  0EDE  1283               	bcf	3,5	;RP0=0, select bank0
  3141  0EDF  1303               	bcf	3,6	;RP1=0, select bank0
  3142  0EE0  0425               	iorwf	??_hotList+5,w
  3143  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  3144  0EE2  1303               	bcf	3,6	;RP1=0, select bank1
  3145  0EE3  00C1               	movwf	(_danger+1)^(0+128)
  3146  0EE4                     l3189:	
  3147                           
  3148                           ;main.c: 154:     Lcd_Clear();
  3149  0EE4  160A  118A  2337  120A  158A  	fcall	_Lcd_Clear
  3150  0EE9                     l3191:	
  3151                           
  3152                           ;main.c: 155:     if(danger==7)nextState=off;
  3153  0EE9  3007               	movlw	7
  3154  0EEA  1683               	bsf	3,5	;RP0=1, select bank1
  3155  0EEB  1303               	bcf	3,6	;RP1=0, select bank1
  3156  0EEC  0640               	xorwf	_danger^(0+128),w
  3157  0EED  0441               	iorwf	(_danger+1)^(0+128),w
  3158  0EEE  1D03               	btfss	3,2
  3159  0EEF  2EF1               	goto	u4361
  3160  0EF0  2EF2               	goto	u4360
  3161  0EF1                     u4361:	
  3162  0EF1  2EFB               	goto	l202
  3163  0EF2                     u4360:	
  3164  0EF2                     l3193:	
  3165  0EF2  300B               	movlw	11
  3166  0EF3  1283               	bcf	3,5	;RP0=0, select bank0
  3167  0EF4  1303               	bcf	3,6	;RP1=0, select bank0
  3168  0EF5  00A0               	movwf	??_hotList
  3169  0EF6  0820               	movf	??_hotList,w
  3170  0EF7  1683               	bsf	3,5	;RP0=1, select bank1
  3171  0EF8  1303               	bcf	3,6	;RP1=0, select bank1
  3172  0EF9  00CE               	movwf	_nextState^(0+128)
  3173  0EFA  2FFF               	goto	l231
  3174  0EFB                     l202:	
  3175                           ;main.c: 156:     else{
  3176                           
  3177                           
  3178                           ;main.c: 157:        if(RB7==1){
  3179  0EFB  1283               	bcf	3,5	;RP0=0, select bank0
  3180  0EFC  1303               	bcf	3,6	;RP1=0, select bank0
  3181  0EFD  1F86               	btfss	6,7	;volatile
  3182  0EFE  2F00               	goto	u4371
  3183  0EFF  2F01               	goto	u4370
  3184  0F00                     u4371:	
  3185  0F00  2F5F               	goto	l204
  3186  0F01                     u4370:	
  3187  0F01                     l3195:	
  3188                           
  3189                           ;main.c: 158:            Lcd_Set_Cursor(1,1);
  3190  0F01  01F4               	clrf	Lcd_Set_Cursor@b
  3191  0F02  0AF4               	incf	Lcd_Set_Cursor@b,f
  3192  0F03  3001               	movlw	1
  3193  0F04  160A  118A  256C  120A  158A  	fcall	_Lcd_Set_Cursor
  3194  0F09                     l3197:	
  3195                           
  3196                           ;main.c: 159:            Lcd_Write_String("pS");
  3197  0F09  3032               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  3198  0F0A  00F5               	movwf	Lcd_Write_String@a
  3199  0F0B  3080               	movlw	128
  3200  0F0C  00F6               	movwf	Lcd_Write_String@a+1
  3201  0F0D  160A  118A  24E6  120A  158A  	fcall	_Lcd_Write_String
  3202  0F12                     l3199:	
  3203                           
  3204                           ;main.c: 160:            if(danger==0)nextState=pS3;
  3205  0F12  1683               	bsf	3,5	;RP0=1, select bank1
  3206  0F13  1303               	bcf	3,6	;RP1=0, select bank1
  3207  0F14  0840               	movf	_danger^(0+128),w
  3208  0F15  0441               	iorwf	(_danger+1)^(0+128),w
  3209  0F16  1D03               	btfss	3,2
  3210  0F17  2F19               	goto	u4381
  3211  0F18  2F1A               	goto	u4380
  3212  0F19                     u4381:	
  3213  0F19  2F23               	goto	l3203
  3214  0F1A                     u4380:	
  3215  0F1A                     l3201:	
  3216  0F1A  3002               	movlw	2
  3217  0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  3218  0F1C  1303               	bcf	3,6	;RP1=0, select bank0
  3219  0F1D  00A0               	movwf	??_hotList
  3220  0F1E  0820               	movf	??_hotList,w
  3221  0F1F  1683               	bsf	3,5	;RP0=1, select bank1
  3222  0F20  1303               	bcf	3,6	;RP1=0, select bank1
  3223  0F21  00CE               	movwf	_nextState^(0+128)
  3224  0F22  2FFF               	goto	l231
  3225  0F23                     l3203:	
  3226  0F23  0340               	decf	_danger^(0+128),w
  3227  0F24  0441               	iorwf	(_danger+1)^(0+128),w
  3228  0F25  1903               	btfsc	3,2
  3229  0F26  2F28               	goto	u4391
  3230  0F27  2F29               	goto	u4390
  3231  0F28                     u4391:	
  3232  0F28  2F37               	goto	l3209
  3233  0F29                     u4390:	
  3234  0F29                     l3205:	
  3235  0F29  3002               	movlw	2
  3236  0F2A  0640               	xorwf	_danger^(0+128),w
  3237  0F2B  0441               	iorwf	(_danger+1)^(0+128),w
  3238  0F2C  1903               	btfsc	3,2
  3239  0F2D  2F2F               	goto	u4401
  3240  0F2E  2F30               	goto	u4400
  3241  0F2F                     u4401:	
  3242  0F2F  2F37               	goto	l3209
  3243  0F30                     u4400:	
  3244  0F30                     l3207:	
  3245  0F30  3004               	movlw	4
  3246  0F31  0640               	xorwf	_danger^(0+128),w
  3247  0F32  0441               	iorwf	(_danger+1)^(0+128),w
  3248  0F33  1D03               	btfss	3,2
  3249  0F34  2F36               	goto	u4411
  3250  0F35  2F37               	goto	u4410
  3251  0F36                     u4411:	
  3252  0F36  2F40               	goto	l3211
  3253  0F37                     u4410:	
  3254  0F37                     l3209:	
  3255  0F37  3003               	movlw	3
  3256  0F38  1283               	bcf	3,5	;RP0=0, select bank0
  3257  0F39  1303               	bcf	3,6	;RP1=0, select bank0
  3258  0F3A  00A0               	movwf	??_hotList
  3259  0F3B  0820               	movf	??_hotList,w
  3260  0F3C  1683               	bsf	3,5	;RP0=1, select bank1
  3261  0F3D  1303               	bcf	3,6	;RP1=0, select bank1
  3262  0F3E  00CE               	movwf	_nextState^(0+128)
  3263  0F3F  2FFF               	goto	l231
  3264  0F40                     l3211:	
  3265  0F40  3003               	movlw	3
  3266  0F41  0640               	xorwf	_danger^(0+128),w
  3267  0F42  0441               	iorwf	(_danger+1)^(0+128),w
  3268  0F43  1903               	btfsc	3,2
  3269  0F44  2F46               	goto	u4421
  3270  0F45  2F47               	goto	u4420
  3271  0F46                     u4421:	
  3272  0F46  2F55               	goto	l3217
  3273  0F47                     u4420:	
  3274  0F47                     l3213:	
  3275  0F47  3006               	movlw	6
  3276  0F48  0640               	xorwf	_danger^(0+128),w
  3277  0F49  0441               	iorwf	(_danger+1)^(0+128),w
  3278  0F4A  1903               	btfsc	3,2
  3279  0F4B  2F4D               	goto	u4431
  3280  0F4C  2F4E               	goto	u4430
  3281  0F4D                     u4431:	
  3282  0F4D  2F55               	goto	l3217
  3283  0F4E                     u4430:	
  3284  0F4E                     l3215:	
  3285  0F4E  3005               	movlw	5
  3286  0F4F  0640               	xorwf	_danger^(0+128),w
  3287  0F50  0441               	iorwf	(_danger+1)^(0+128),w
  3288  0F51  1D03               	btfss	3,2
  3289  0F52  2F54               	goto	u4441
  3290  0F53  2F55               	goto	u4440
  3291  0F54                     u4441:	
  3292  0F54  2F5E               	goto	l206
  3293  0F55                     u4440:	
  3294  0F55                     l3217:	
  3295  0F55  3004               	movlw	4
  3296  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  3297  0F57  1303               	bcf	3,6	;RP1=0, select bank0
  3298  0F58  00A0               	movwf	??_hotList
  3299  0F59  0820               	movf	??_hotList,w
  3300  0F5A  1683               	bsf	3,5	;RP0=1, select bank1
  3301  0F5B  1303               	bcf	3,6	;RP1=0, select bank1
  3302  0F5C  00CE               	movwf	_nextState^(0+128)
  3303  0F5D  2FFF               	goto	l231
  3304  0F5E                     l206:	
  3305                           
  3306                           ;main.c: 163:        }else if(RB6==1){
  3307  0F5E  2FFF               	goto	l231
  3308  0F5F                     l204:	
  3309  0F5F  1F06               	btfss	6,6	;volatile
  3310  0F60  2F62               	goto	u4451
  3311  0F61  2F63               	goto	u4450
  3312  0F62                     u4451:	
  3313  0F62  2FC0               	goto	l3243
  3314  0F63                     u4450:	
  3315  0F63                     l3219:	
  3316                           
  3317                           ;main.c: 164:            Lcd_Set_Cursor(1,1);
  3318  0F63  01F4               	clrf	Lcd_Set_Cursor@b
  3319  0F64  0AF4               	incf	Lcd_Set_Cursor@b,f
  3320  0F65  3001               	movlw	1
  3321  0F66  160A  118A  256C  120A  158A  	fcall	_Lcd_Set_Cursor
  3322  0F6B                     l3221:	
  3323                           
  3324                           ;main.c: 165:            Lcd_Write_String("mP");
  3325  0F6B  302F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  3326  0F6C  00F5               	movwf	Lcd_Write_String@a
  3327  0F6D  3080               	movlw	128
  3328  0F6E  00F6               	movwf	Lcd_Write_String@a+1
  3329  0F6F  160A  118A  24E6  120A  158A  	fcall	_Lcd_Write_String
  3330  0F74                     l3223:	
  3331                           
  3332                           ;main.c: 166:            if(danger==0)nextState=mP3;
  3333  0F74  1683               	bsf	3,5	;RP0=1, select bank1
  3334  0F75  1303               	bcf	3,6	;RP1=0, select bank1
  3335  0F76  0840               	movf	_danger^(0+128),w
  3336  0F77  0441               	iorwf	(_danger+1)^(0+128),w
  3337  0F78  1D03               	btfss	3,2
  3338  0F79  2F7B               	goto	u4461
  3339  0F7A  2F7C               	goto	u4460
  3340  0F7B                     u4461:	
  3341  0F7B  2F85               	goto	l3227
  3342  0F7C                     u4460:	
  3343  0F7C                     l3225:	
  3344  0F7C  3005               	movlw	5
  3345  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  3346  0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  3347  0F7F  00A0               	movwf	??_hotList
  3348  0F80  0820               	movf	??_hotList,w
  3349  0F81  1683               	bsf	3,5	;RP0=1, select bank1
  3350  0F82  1303               	bcf	3,6	;RP1=0, select bank1
  3351  0F83  00CE               	movwf	_nextState^(0+128)
  3352  0F84  2FFF               	goto	l231
  3353  0F85                     l3227:	
  3354  0F85  0340               	decf	_danger^(0+128),w
  3355  0F86  0441               	iorwf	(_danger+1)^(0+128),w
  3356  0F87  1903               	btfsc	3,2
  3357  0F88  2F8A               	goto	u4471
  3358  0F89  2F8B               	goto	u4470
  3359  0F8A                     u4471:	
  3360  0F8A  2F99               	goto	l3233
  3361  0F8B                     u4470:	
  3362  0F8B                     l3229:	
  3363  0F8B  3002               	movlw	2
  3364  0F8C  0640               	xorwf	_danger^(0+128),w
  3365  0F8D  0441               	iorwf	(_danger+1)^(0+128),w
  3366  0F8E  1903               	btfsc	3,2
  3367  0F8F  2F91               	goto	u4481
  3368  0F90  2F92               	goto	u4480
  3369  0F91                     u4481:	
  3370  0F91  2F99               	goto	l3233
  3371  0F92                     u4480:	
  3372  0F92                     l3231:	
  3373  0F92  3004               	movlw	4
  3374  0F93  0640               	xorwf	_danger^(0+128),w
  3375  0F94  0441               	iorwf	(_danger+1)^(0+128),w
  3376  0F95  1D03               	btfss	3,2
  3377  0F96  2F98               	goto	u4491
  3378  0F97  2F99               	goto	u4490
  3379  0F98                     u4491:	
  3380  0F98  2FA2               	goto	l3235
  3381  0F99                     u4490:	
  3382  0F99                     l3233:	
  3383  0F99  3006               	movlw	6
  3384  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  3385  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  3386  0F9C  00A0               	movwf	??_hotList
  3387  0F9D  0820               	movf	??_hotList,w
  3388  0F9E  1683               	bsf	3,5	;RP0=1, select bank1
  3389  0F9F  1303               	bcf	3,6	;RP1=0, select bank1
  3390  0FA0  00CE               	movwf	_nextState^(0+128)
  3391  0FA1  2FFF               	goto	l231
  3392  0FA2                     l3235:	
  3393  0FA2  3003               	movlw	3
  3394  0FA3  0640               	xorwf	_danger^(0+128),w
  3395  0FA4  0441               	iorwf	(_danger+1)^(0+128),w
  3396  0FA5  1903               	btfsc	3,2
  3397  0FA6  2FA8               	goto	u4501
  3398  0FA7  2FA9               	goto	u4500
  3399  0FA8                     u4501:	
  3400  0FA8  2FB7               	goto	l3241
  3401  0FA9                     u4500:	
  3402  0FA9                     l3237:	
  3403  0FA9  3006               	movlw	6
  3404  0FAA  0640               	xorwf	_danger^(0+128),w
  3405  0FAB  0441               	iorwf	(_danger+1)^(0+128),w
  3406  0FAC  1903               	btfsc	3,2
  3407  0FAD  2FAF               	goto	u4511
  3408  0FAE  2FB0               	goto	u4510
  3409  0FAF                     u4511:	
  3410  0FAF  2FB7               	goto	l3241
  3411  0FB0                     u4510:	
  3412  0FB0                     l3239:	
  3413  0FB0  3005               	movlw	5
  3414  0FB1  0640               	xorwf	_danger^(0+128),w
  3415  0FB2  0441               	iorwf	(_danger+1)^(0+128),w
  3416  0FB3  1D03               	btfss	3,2
  3417  0FB4  2FB6               	goto	u4521
  3418  0FB5  2FB7               	goto	u4520
  3419  0FB6                     u4521:	
  3420  0FB6  2F5E               	goto	l206
  3421  0FB7                     u4520:	
  3422  0FB7                     l3241:	
  3423  0FB7  3007               	movlw	7
  3424  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  3425  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  3426  0FBA  00A0               	movwf	??_hotList
  3427  0FBB  0820               	movf	??_hotList,w
  3428  0FBC  1683               	bsf	3,5	;RP0=1, select bank1
  3429  0FBD  1303               	bcf	3,6	;RP1=0, select bank1
  3430  0FBE  00CE               	movwf	_nextState^(0+128)
  3431  0FBF  2FFF               	goto	l231
  3432  0FC0                     l3243:	
  3433                           
  3434                           ;main.c: 170:            Lcd_Set_Cursor(1,1);
  3435  0FC0  01F4               	clrf	Lcd_Set_Cursor@b
  3436  0FC1  0AF4               	incf	Lcd_Set_Cursor@b,f
  3437  0FC2  3001               	movlw	1
  3438  0FC3  160A  118A  256C  120A  158A  	fcall	_Lcd_Set_Cursor
  3439  0FC8                     l3245:	
  3440                           
  3441                           ;main.c: 171:            Lcd_Write_String("p ");
  3442  0FC8  302C               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  3443  0FC9  00F5               	movwf	Lcd_Write_String@a
  3444  0FCA  3080               	movlw	128
  3445  0FCB  00F6               	movwf	Lcd_Write_String@a+1
  3446  0FCC  160A  118A  24E6  120A  158A  	fcall	_Lcd_Write_String
  3447  0FD1                     l3247:	
  3448                           
  3449                           ;main.c: 172:            if(aDANGER==0)nextState=aP;
  3450  0FD1  1683               	bsf	3,5	;RP0=1, select bank1
  3451  0FD2  1303               	bcf	3,6	;RP1=0, select bank1
  3452  0FD3  0846               	movf	_aDANGER^(0+128),w
  3453  0FD4  0447               	iorwf	(_aDANGER+1)^(0+128),w
  3454  0FD5  1D03               	btfss	3,2
  3455  0FD6  2FD8               	goto	u4531
  3456  0FD7  2FD9               	goto	u4530
  3457  0FD8                     u4531:	
  3458  0FD8  2FE2               	goto	l3251
  3459  0FD9                     u4530:	
  3460  0FD9                     l3249:	
  3461  0FD9  3008               	movlw	8
  3462  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  3463  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  3464  0FDC  00A0               	movwf	??_hotList
  3465  0FDD  0820               	movf	??_hotList,w
  3466  0FDE  1683               	bsf	3,5	;RP0=1, select bank1
  3467  0FDF  1303               	bcf	3,6	;RP1=0, select bank1
  3468  0FE0  00CE               	movwf	_nextState^(0+128)
  3469  0FE1  2FFF               	goto	l231
  3470  0FE2                     l3251:	
  3471  0FE2  0846               	movf	_aDANGER^(0+128),w
  3472  0FE3  0447               	iorwf	(_aDANGER+1)^(0+128),w
  3473  0FE4  1D03               	btfss	3,2
  3474  0FE5  2FE7               	goto	u4541
  3475  0FE6  2FE8               	goto	u4540
  3476  0FE7                     u4541:	
  3477  0FE7  2FF1               	goto	l3255
  3478  0FE8                     u4540:	
  3479  0FE8                     l3253:	
  3480  0FE8  3009               	movlw	9
  3481  0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  3482  0FEA  1303               	bcf	3,6	;RP1=0, select bank0
  3483  0FEB  00A0               	movwf	??_hotList
  3484  0FEC  0820               	movf	??_hotList,w
  3485  0FED  1683               	bsf	3,5	;RP0=1, select bank1
  3486  0FEE  1303               	bcf	3,6	;RP1=0, select bank1
  3487  0FEF  00CE               	movwf	_nextState^(0+128)
  3488  0FF0  2FFF               	goto	l231
  3489  0FF1                     l3255:	
  3490  0FF1  0842               	movf	_cDANGER^(0+128),w
  3491  0FF2  0443               	iorwf	(_cDANGER+1)^(0+128),w
  3492  0FF3  1D03               	btfss	3,2
  3493  0FF4  2FF6               	goto	u4551
  3494  0FF5  2FF7               	goto	u4550
  3495  0FF6                     u4551:	
  3496  0FF6  2F5E               	goto	l206
  3497  0FF7                     u4550:	
  3498  0FF7                     l3257:	
  3499  0FF7  300A               	movlw	10
  3500  0FF8  1283               	bcf	3,5	;RP0=0, select bank0
  3501  0FF9  1303               	bcf	3,6	;RP1=0, select bank0
  3502  0FFA  00A0               	movwf	??_hotList
  3503  0FFB  0820               	movf	??_hotList,w
  3504  0FFC  1683               	bsf	3,5	;RP0=1, select bank1
  3505  0FFD  1303               	bcf	3,6	;RP1=0, select bank1
  3506  0FFE  00CE               	movwf	_nextState^(0+128)
  3507  0FFF                     l231:	
  3508  0FFF  0008               	return
  3509  1000                     __end_of_hotList:	
  3510                           
  3511                           	psect	text11
  3512  1337                     __ptext11:	
  3513 ;; *************** function _Lcd_Clear *****************
  3514 ;; Defined at:
  3515 ;;		line 36 in file "./lcd.h"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;		None
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;		None
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  2   92[None  ] int 
  3522 ;; Registers used:
  3523 ;;		wreg, status,2, status,0, pclath, cstack
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3529 ;;      Params:         0       0       0       0       0
  3530 ;;      Locals:         0       0       0       0       0
  3531 ;;      Temps:          0       0       0       0       0
  3532 ;;      Totals:         0       0       0       0       0
  3533 ;;Total ram usage:        0 bytes
  3534 ;; Hardware stack levels used:    1
  3535 ;; Hardware stack levels required when called:    2
  3536 ;; This function calls:
  3537 ;;		_Lcd_Cmd
  3538 ;; This function is called by:
  3539 ;;		_main
  3540 ;;		_hotList
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           
  3545                           ;psect for function _Lcd_Clear
  3546  1337                     _Lcd_Clear:	
  3547  1337                     l2695:	
  3548                           ;incstack = 0
  3549                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3550                           
  3551                           
  3552                           ;./lcd.h: 38:  Lcd_Cmd(0);
  3553  1337  3000               	movlw	0
  3554  1338  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  3555                           
  3556                           ;./lcd.h: 39:  Lcd_Cmd(1);
  3557  133D  3001               	movlw	1
  3558  133E  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  3559  1343                     l93:	
  3560  1343  0008               	return
  3561  1344                     __end_of_Lcd_Clear:	
  3562                           
  3563                           	psect	text12
  3564  0B6A                     __ptext12:	
  3565 ;; *************** function _currentMeasurement *****************
  3566 ;; Defined at:
  3567 ;;		line 307 in file "main.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;		None
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;		None
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  1    wreg      void 
  3574 ;; Registers used:
  3575 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3581 ;;      Params:         0       0       0       0       0
  3582 ;;      Locals:         0       0       0       0       0
  3583 ;;      Temps:          0       0       1       0       0
  3584 ;;      Totals:         0       0       1       0       0
  3585 ;;Total ram usage:        1 bytes
  3586 ;; Hardware stack levels used:    1
  3587 ;; Hardware stack levels required when called:    2
  3588 ;; This function calls:
  3589 ;;		___fladd
  3590 ;;		___fldiv
  3591 ;;		___flmul
  3592 ;;		___flsub
  3593 ;;		___fltol
  3594 ;;		___xxtofl
  3595 ;; This function is called by:
  3596 ;;		_main
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           
  3601                           ;psect for function _currentMeasurement
  3602  0B6A                     _currentMeasurement:	
  3603  0B6A                     l3461:	
  3604                           ;incstack = 0
  3605                           ; Regs used in _currentMeasurement: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3606                           
  3607                           
  3608                           ;main.c: 308:     ADCON0bits.CHS=3;
  3609  0B6A  1283               	bcf	3,5	;RP0=0, select bank0
  3610  0B6B  1303               	bcf	3,6	;RP1=0, select bank0
  3611  0B6C  081F               	movf	31,w	;volatile
  3612  0B6D  39C7               	andlw	-57
  3613  0B6E  3818               	iorlw	24
  3614  0B6F  009F               	movwf	31	;volatile
  3615  0B70                     l3463:	
  3616                           
  3617                           ;main.c: 309:     ADCON0bits.GO_nDONE=1;
  3618  0B70  151F               	bsf	31,2	;volatile
  3619  0B71                     l330:	
  3620                           ;main.c: 310:     while(ADCON0bits.GO_nDONE==1);
  3621                           
  3622  0B71  191F               	btfsc	31,2	;volatile
  3623  0B72  2B74               	goto	u4861
  3624  0B73  2B75               	goto	u4860
  3625  0B74                     u4861:	
  3626  0B74  2B71               	goto	l330
  3627  0B75                     u4860:	
  3628  0B75                     l3465:	
  3629                           
  3630                           ;main.c: 311:     current=(ADRESH<<8)+ADRESL;
  3631  0B75  081E               	movf	30,w	;volatile
  3632  0B76  1683               	bsf	3,5	;RP0=1, select bank1
  3633  0B77  1303               	bcf	3,6	;RP1=0, select bank1
  3634  0B78  00D0               	movwf	(_current+1)^(0+128)
  3635  0B79  081E               	movf	30,w	;volatile
  3636  0B7A  00CF               	movwf	_current^(0+128)
  3637                           
  3638                           ;main.c: 312:     if(current>=512)current=((0.005*current)-2.5)/0.066;
  3639  0B7B  3002               	movlw	2
  3640  0B7C  0250               	subwf	(_current+1)^(0+128),w
  3641  0B7D  3000               	movlw	0
  3642  0B7E  1903               	skipnz
  3643  0B7F  024F               	subwf	_current^(0+128),w
  3644  0B80  1C03               	skipc
  3645  0B81  2B83               	goto	u4871
  3646  0B82  2B84               	goto	u4870
  3647  0B83                     u4871:	
  3648  0B83  2BF9               	goto	l3469
  3649  0B84                     u4870:	
  3650  0B84                     l3467:	
  3651  0B84  084F               	movf	_current^(0+128),w
  3652  0B85  00F0               	movwf	___xxtofl@val
  3653  0B86  0850               	movf	(_current+1)^(0+128),w
  3654  0B87  00F1               	movwf	___xxtofl@val+1
  3655  0B88  01F2               	clrf	___xxtofl@val+2
  3656  0B89  01F3               	clrf	___xxtofl@val+3
  3657  0B8A  3000               	movlw	0
  3658  0B8B  120A  158A  203C  120A  158A  	fcall	___xxtofl
  3659  0B90  0873               	movf	?___xxtofl+3,w
  3660  0B91  1283               	bcf	3,5	;RP0=0, select bank0
  3661  0B92  1303               	bcf	3,6	;RP1=0, select bank0
  3662  0B93  00A7               	movwf	___flmul@a+3
  3663  0B94  0872               	movf	?___xxtofl+2,w
  3664  0B95  00A6               	movwf	___flmul@a+2
  3665  0B96  0871               	movf	?___xxtofl+1,w
  3666  0B97  00A5               	movwf	___flmul@a+1
  3667  0B98  0870               	movf	?___xxtofl,w
  3668  0B99  00A4               	movwf	___flmul@a
  3669  0B9A  303B               	movlw	59
  3670  0B9B  00A3               	movwf	___flmul@b+3
  3671  0B9C  30A3               	movlw	163
  3672  0B9D  00A2               	movwf	___flmul@b+2
  3673  0B9E  30D7               	movlw	215
  3674  0B9F  00A1               	movwf	___flmul@b+1
  3675  0BA0  300A               	movlw	10
  3676  0BA1  00A0               	movwf	___flmul@b
  3677  0BA2  120A  118A  2492  120A  158A  	fcall	___flmul
  3678  0BA7  1283               	bcf	3,5	;RP0=0, select bank0
  3679  0BA8  1303               	bcf	3,6	;RP1=0, select bank0
  3680  0BA9  0823               	movf	?___flmul+3,w
  3681  0BAA  00C1               	movwf	___fladd@a+3
  3682  0BAB  0822               	movf	?___flmul+2,w
  3683  0BAC  00C0               	movwf	___fladd@a+2
  3684  0BAD  0821               	movf	?___flmul+1,w
  3685  0BAE  00BF               	movwf	___fladd@a+1
  3686  0BAF  0820               	movf	?___flmul,w
  3687  0BB0  00BE               	movwf	___fladd@a
  3688  0BB1  30C0               	movlw	192
  3689  0BB2  00BD               	movwf	___fladd@b+3
  3690  0BB3  3020               	movlw	32
  3691  0BB4  00BC               	movwf	___fladd@b+2
  3692  0BB5  3000               	movlw	0
  3693  0BB6  00BB               	movwf	___fladd@b+1
  3694  0BB7  3000               	movlw	0
  3695  0BB8  00BA               	movwf	___fladd@b
  3696  0BB9  120A  118A  220A  120A  158A  	fcall	___fladd
  3697  0BBE  1283               	bcf	3,5	;RP0=0, select bank0
  3698  0BBF  1303               	bcf	3,6	;RP1=0, select bank0
  3699  0BC0  083D               	movf	?___fladd+3,w
  3700  0BC1  00DD               	movwf	___fldiv@b+3
  3701  0BC2  083C               	movf	?___fladd+2,w
  3702  0BC3  00DC               	movwf	___fldiv@b+2
  3703  0BC4  083B               	movf	?___fladd+1,w
  3704  0BC5  00DB               	movwf	___fldiv@b+1
  3705  0BC6  083A               	movf	?___fladd,w
  3706  0BC7  00DA               	movwf	___fldiv@b
  3707  0BC8  303D               	movlw	61
  3708  0BC9  00D9               	movwf	___fldiv@a+3
  3709  0BCA  3087               	movlw	135
  3710  0BCB  00D8               	movwf	___fldiv@a+2
  3711  0BCC  302B               	movlw	43
  3712  0BCD  00D7               	movwf	___fldiv@a+1
  3713  0BCE  3002               	movlw	2
  3714  0BCF  00D6               	movwf	___fldiv@a
  3715  0BD0  120A  118A  202D  120A  158A  	fcall	___fldiv
  3716  0BD5  1283               	bcf	3,5	;RP0=0, select bank0
  3717  0BD6  1303               	bcf	3,6	;RP1=0, select bank0
  3718  0BD7  0859               	movf	?___fldiv+3,w
  3719  0BD8  1683               	bsf	3,5	;RP0=1, select bank1
  3720  0BD9  1303               	bcf	3,6	;RP1=0, select bank1
  3721  0BDA  00A3               	movwf	(___fltol@f1+3)^(0+128)
  3722  0BDB  1283               	bcf	3,5	;RP0=0, select bank0
  3723  0BDC  1303               	bcf	3,6	;RP1=0, select bank0
  3724  0BDD  0858               	movf	?___fldiv+2,w
  3725  0BDE  1683               	bsf	3,5	;RP0=1, select bank1
  3726  0BDF  1303               	bcf	3,6	;RP1=0, select bank1
  3727  0BE0  00A2               	movwf	(___fltol@f1+2)^(0+128)
  3728  0BE1  1283               	bcf	3,5	;RP0=0, select bank0
  3729  0BE2  1303               	bcf	3,6	;RP1=0, select bank0
  3730  0BE3  0857               	movf	?___fldiv+1,w
  3731  0BE4  1683               	bsf	3,5	;RP0=1, select bank1
  3732  0BE5  1303               	bcf	3,6	;RP1=0, select bank1
  3733  0BE6  00A1               	movwf	(___fltol@f1+1)^(0+128)
  3734  0BE7  1283               	bcf	3,5	;RP0=0, select bank0
  3735  0BE8  1303               	bcf	3,6	;RP1=0, select bank0
  3736  0BE9  0856               	movf	?___fldiv,w
  3737  0BEA  1683               	bsf	3,5	;RP0=1, select bank1
  3738  0BEB  1303               	bcf	3,6	;RP1=0, select bank1
  3739  0BEC  00A0               	movwf	___fltol@f1^(0+128)
  3740  0BED  160A  118A  26CC  120A  158A  	fcall	___fltol
  3741  0BF2  1683               	bsf	3,5	;RP0=1, select bank1
  3742  0BF3  1303               	bcf	3,6	;RP1=0, select bank1
  3743  0BF4  0821               	movf	(?___fltol+1)^(0+128),w
  3744  0BF5  00D0               	movwf	(_current+1)^(0+128)
  3745  0BF6  0820               	movf	?___fltol^(0+128),w
  3746  0BF7  00CF               	movwf	_current^(0+128)
  3747  0BF8  2C71               	goto	l3471
  3748  0BF9                     l3469:	
  3749  0BF9  3040               	movlw	64
  3750  0BFA  1283               	bcf	3,5	;RP0=0, select bank0
  3751  0BFB  1303               	bcf	3,6	;RP1=0, select bank0
  3752  0BFC  00D5               	movwf	___flsub@b+3
  3753  0BFD  3020               	movlw	32
  3754  0BFE  00D4               	movwf	___flsub@b+2
  3755  0BFF  3000               	movlw	0
  3756  0C00  00D3               	movwf	___flsub@b+1
  3757  0C01  3000               	movlw	0
  3758  0C02  00D2               	movwf	___flsub@b
  3759  0C03  1683               	bsf	3,5	;RP0=1, select bank1
  3760  0C04  1303               	bcf	3,6	;RP1=0, select bank1
  3761  0C05  084F               	movf	_current^(0+128),w
  3762  0C06  00F0               	movwf	___xxtofl@val
  3763  0C07  0850               	movf	(_current+1)^(0+128),w
  3764  0C08  00F1               	movwf	___xxtofl@val+1
  3765  0C09  01F2               	clrf	___xxtofl@val+2
  3766  0C0A  01F3               	clrf	___xxtofl@val+3
  3767  0C0B  3000               	movlw	0
  3768  0C0C  120A  158A  203C  120A  158A  	fcall	___xxtofl
  3769  0C11  0873               	movf	?___xxtofl+3,w
  3770  0C12  1283               	bcf	3,5	;RP0=0, select bank0
  3771  0C13  1303               	bcf	3,6	;RP1=0, select bank0
  3772  0C14  00A7               	movwf	___flmul@a+3
  3773  0C15  0872               	movf	?___xxtofl+2,w
  3774  0C16  00A6               	movwf	___flmul@a+2
  3775  0C17  0871               	movf	?___xxtofl+1,w
  3776  0C18  00A5               	movwf	___flmul@a+1
  3777  0C19  0870               	movf	?___xxtofl,w
  3778  0C1A  00A4               	movwf	___flmul@a
  3779  0C1B  303B               	movlw	59
  3780  0C1C  00A3               	movwf	___flmul@b+3
  3781  0C1D  30A3               	movlw	163
  3782  0C1E  00A2               	movwf	___flmul@b+2
  3783  0C1F  30D7               	movlw	215
  3784  0C20  00A1               	movwf	___flmul@b+1
  3785  0C21  300A               	movlw	10
  3786  0C22  00A0               	movwf	___flmul@b
  3787  0C23  120A  118A  2492  120A  158A  	fcall	___flmul
  3788  0C28  1283               	bcf	3,5	;RP0=0, select bank0
  3789  0C29  1303               	bcf	3,6	;RP1=0, select bank0
  3790  0C2A  0823               	movf	?___flmul+3,w
  3791  0C2B  00D1               	movwf	___flsub@a+3
  3792  0C2C  0822               	movf	?___flmul+2,w
  3793  0C2D  00D0               	movwf	___flsub@a+2
  3794  0C2E  0821               	movf	?___flmul+1,w
  3795  0C2F  00CF               	movwf	___flsub@a+1
  3796  0C30  0820               	movf	?___flmul,w
  3797  0C31  00CE               	movwf	___flsub@a
  3798  0C32  160A  118A  240C  120A  158A  	fcall	___flsub
  3799  0C37  1283               	bcf	3,5	;RP0=0, select bank0
  3800  0C38  1303               	bcf	3,6	;RP1=0, select bank0
  3801  0C39  0851               	movf	?___flsub+3,w
  3802  0C3A  00DD               	movwf	___fldiv@b+3
  3803  0C3B  0850               	movf	?___flsub+2,w
  3804  0C3C  00DC               	movwf	___fldiv@b+2
  3805  0C3D  084F               	movf	?___flsub+1,w
  3806  0C3E  00DB               	movwf	___fldiv@b+1
  3807  0C3F  084E               	movf	?___flsub,w
  3808  0C40  00DA               	movwf	___fldiv@b
  3809  0C41  303D               	movlw	61
  3810  0C42  00D9               	movwf	___fldiv@a+3
  3811  0C43  3087               	movlw	135
  3812  0C44  00D8               	movwf	___fldiv@a+2
  3813  0C45  302B               	movlw	43
  3814  0C46  00D7               	movwf	___fldiv@a+1
  3815  0C47  3002               	movlw	2
  3816  0C48  00D6               	movwf	___fldiv@a
  3817  0C49  120A  118A  202D  120A  158A  	fcall	___fldiv
  3818  0C4E  1283               	bcf	3,5	;RP0=0, select bank0
  3819  0C4F  1303               	bcf	3,6	;RP1=0, select bank0
  3820  0C50  0859               	movf	?___fldiv+3,w
  3821  0C51  1683               	bsf	3,5	;RP0=1, select bank1
  3822  0C52  1303               	bcf	3,6	;RP1=0, select bank1
  3823  0C53  00A3               	movwf	(___fltol@f1+3)^(0+128)
  3824  0C54  1283               	bcf	3,5	;RP0=0, select bank0
  3825  0C55  1303               	bcf	3,6	;RP1=0, select bank0
  3826  0C56  0858               	movf	?___fldiv+2,w
  3827  0C57  1683               	bsf	3,5	;RP0=1, select bank1
  3828  0C58  1303               	bcf	3,6	;RP1=0, select bank1
  3829  0C59  00A2               	movwf	(___fltol@f1+2)^(0+128)
  3830  0C5A  1283               	bcf	3,5	;RP0=0, select bank0
  3831  0C5B  1303               	bcf	3,6	;RP1=0, select bank0
  3832  0C5C  0857               	movf	?___fldiv+1,w
  3833  0C5D  1683               	bsf	3,5	;RP0=1, select bank1
  3834  0C5E  1303               	bcf	3,6	;RP1=0, select bank1
  3835  0C5F  00A1               	movwf	(___fltol@f1+1)^(0+128)
  3836  0C60  1283               	bcf	3,5	;RP0=0, select bank0
  3837  0C61  1303               	bcf	3,6	;RP1=0, select bank0
  3838  0C62  0856               	movf	?___fldiv,w
  3839  0C63  1683               	bsf	3,5	;RP0=1, select bank1
  3840  0C64  1303               	bcf	3,6	;RP1=0, select bank1
  3841  0C65  00A0               	movwf	___fltol@f1^(0+128)
  3842  0C66  160A  118A  26CC  120A  158A  	fcall	___fltol
  3843  0C6B  1683               	bsf	3,5	;RP0=1, select bank1
  3844  0C6C  1303               	bcf	3,6	;RP1=0, select bank1
  3845  0C6D  0821               	movf	(?___fltol+1)^(0+128),w
  3846  0C6E  00D0               	movwf	(_current+1)^(0+128)
  3847  0C6F  0820               	movf	?___fltol^(0+128),w
  3848  0C70  00CF               	movwf	_current^(0+128)
  3849  0C71                     l3471:	
  3850                           
  3851                           ;main.c: 314:     nextState=pC;
  3852  0C71  300D               	movlw	13
  3853  0C72  00AB               	movwf	??_currentMeasurement^(0+128)
  3854  0C73  082B               	movf	??_currentMeasurement^(0+128),w
  3855  0C74  00CE               	movwf	_nextState^(0+128)
  3856  0C75                     l335:	
  3857  0C75  0008               	return
  3858  0C76                     __end_of_currentMeasurement:	
  3859                           
  3860                           	psect	text13
  3861  140C                     __ptext13:	
  3862 ;; *************** function ___flsub *****************
  3863 ;; Defined at:
  3864 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;  a               4   46[BANK0 ] void 
  3867 ;;  b               4   50[BANK0 ] void 
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;		None
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  4   46[BANK0 ] void 
  3872 ;; Registers used:
  3873 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3879 ;;      Params:         0       8       0       0       0
  3880 ;;      Locals:         0       0       0       0       0
  3881 ;;      Temps:          0       0       0       0       0
  3882 ;;      Totals:         0       8       0       0       0
  3883 ;;Total ram usage:        8 bytes
  3884 ;; Hardware stack levels used:    1
  3885 ;; Hardware stack levels required when called:    1
  3886 ;; This function calls:
  3887 ;;		___fladd
  3888 ;; This function is called by:
  3889 ;;		_currentMeasurement
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           
  3894                           ;psect for function ___flsub
  3895  140C                     ___flsub:	
  3896  140C                     l2793:	
  3897                           ;incstack = 0
  3898                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3899                           
  3900  140C  3080               	movlw	128
  3901  140D  1283               	bcf	3,5	;RP0=0, select bank0
  3902  140E  1303               	bcf	3,6	;RP1=0, select bank0
  3903  140F  06D1               	xorwf	___flsub@a+3,f
  3904  1410                     l2795:	
  3905  1410  0855               	movf	___flsub@b+3,w
  3906  1411  00BD               	movwf	___fladd@b+3
  3907  1412  0854               	movf	___flsub@b+2,w
  3908  1413  00BC               	movwf	___fladd@b+2
  3909  1414  0853               	movf	___flsub@b+1,w
  3910  1415  00BB               	movwf	___fladd@b+1
  3911  1416  0852               	movf	___flsub@b,w
  3912  1417  00BA               	movwf	___fladd@b
  3913  1418  0851               	movf	___flsub@a+3,w
  3914  1419  00C1               	movwf	___fladd@a+3
  3915  141A  0850               	movf	___flsub@a+2,w
  3916  141B  00C0               	movwf	___fladd@a+2
  3917  141C  084F               	movf	___flsub@a+1,w
  3918  141D  00BF               	movwf	___fladd@a+1
  3919  141E  084E               	movf	___flsub@a,w
  3920  141F  00BE               	movwf	___fladd@a
  3921  1420  120A  118A  220A  160A  118A  	fcall	___fladd
  3922  1425  1283               	bcf	3,5	;RP0=0, select bank0
  3923  1426  1303               	bcf	3,6	;RP1=0, select bank0
  3924  1427  083D               	movf	?___fladd+3,w
  3925  1428  00D1               	movwf	?___flsub+3
  3926  1429  083C               	movf	?___fladd+2,w
  3927  142A  00D0               	movwf	?___flsub+2
  3928  142B  083B               	movf	?___fladd+1,w
  3929  142C  00CF               	movwf	?___flsub+1
  3930  142D  083A               	movf	?___fladd,w
  3931  142E  00CE               	movwf	?___flsub
  3932  142F                     l794:	
  3933  142F  0008               	return
  3934  1430                     __end_of___flsub:	
  3935                           
  3936                           	psect	text14
  3937  020A                     __ptext14:	
  3938 ;; *************** function ___fladd *****************
  3939 ;; Defined at:
  3940 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;  b               4   26[BANK0 ] void 
  3943 ;;  a               4   30[BANK0 ] void 
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;  grs             1   45[BANK0 ] unsigned char 
  3946 ;;  bexp            1   44[BANK0 ] unsigned char 
  3947 ;;  aexp            1   43[BANK0 ] unsigned char 
  3948 ;;  signs           1   42[BANK0 ] unsigned char 
  3949 ;; Return value:  Size  Location     Type
  3950 ;;                  4   26[BANK0 ] unsigned char 
  3951 ;; Registers used:
  3952 ;;		wreg, status,2, status,0, btemp+1
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3958 ;;      Params:         0       8       0       0       0
  3959 ;;      Locals:         0       4       0       0       0
  3960 ;;      Temps:          0       8       0       0       0
  3961 ;;      Totals:         0      20       0       0       0
  3962 ;;Total ram usage:       20 bytes
  3963 ;; Hardware stack levels used:    1
  3964 ;; This function calls:
  3965 ;;		Nothing
  3966 ;; This function is called by:
  3967 ;;		_currentMeasurement
  3968 ;;		___flsub
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           
  3973                           ;psect for function ___fladd
  3974  020A                     ___fladd:	
  3975  020A                     l2487:	
  3976                           ;incstack = 0
  3977                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3978                           
  3979  020A  1283               	bcf	3,5	;RP0=0, select bank0
  3980  020B  1303               	bcf	3,6	;RP1=0, select bank0
  3981  020C  083D               	movf	___fladd@b+3,w
  3982  020D  3980               	andlw	128
  3983  020E  00C2               	movwf	??___fladd
  3984  020F  0842               	movf	??___fladd,w
  3985  0210  00CA               	movwf	___fladd@signs
  3986  0211                     l2489:	
  3987  0211  083D               	movf	___fladd@b+3,w
  3988  0212  00C2               	movwf	??___fladd
  3989  0213  0742               	addwf	??___fladd,w
  3990  0214  00C3               	movwf	??___fladd+1
  3991  0215  0843               	movf	??___fladd+1,w
  3992  0216  00CC               	movwf	___fladd@bexp
  3993  0217                     l2491:	
  3994  0217  1FBC               	btfss	___fladd@b+2,7
  3995  0218  2A1A               	goto	u2801
  3996  0219  2A1B               	goto	u2800
  3997  021A                     u2801:	
  3998  021A  2A1C               	goto	l2495
  3999  021B                     u2800:	
  4000  021B                     l2493:	
  4001  021B  144C               	bsf	___fladd@bexp,0
  4002  021C                     l2495:	
  4003  021C  084C               	movf	___fladd@bexp,w
  4004  021D  1903               	btfsc	3,2
  4005  021E  2A20               	goto	u2811
  4006  021F  2A21               	goto	u2810
  4007  0220                     u2811:	
  4008  0220  2A31               	goto	l2505
  4009  0221                     u2810:	
  4010  0221                     l2497:	
  4011  0221  0A4C               	incf	___fladd@bexp,w
  4012  0222  1D03               	btfss	3,2
  4013  0223  2A25               	goto	u2821
  4014  0224  2A26               	goto	u2820
  4015  0225                     u2821:	
  4016  0225  2A2E               	goto	l2501
  4017  0226                     u2820:	
  4018  0226                     l2499:	
  4019  0226  3000               	movlw	0
  4020  0227  00BD               	movwf	___fladd@b+3
  4021  0228  3000               	movlw	0
  4022  0229  00BC               	movwf	___fladd@b+2
  4023  022A  3000               	movlw	0
  4024  022B  00BB               	movwf	___fladd@b+1
  4025  022C  3000               	movlw	0
  4026  022D  00BA               	movwf	___fladd@b
  4027  022E                     l2501:	
  4028  022E  17BC               	bsf	___fladd@b+2,7
  4029  022F                     l2503:	
  4030  022F  01BD               	clrf	___fladd@b+3
  4031  0230  2A39               	goto	l2507
  4032  0231                     l2505:	
  4033  0231  3000               	movlw	0
  4034  0232  00BD               	movwf	___fladd@b+3
  4035  0233  3000               	movlw	0
  4036  0234  00BC               	movwf	___fladd@b+2
  4037  0235  3000               	movlw	0
  4038  0236  00BB               	movwf	___fladd@b+1
  4039  0237  3000               	movlw	0
  4040  0238  00BA               	movwf	___fladd@b
  4041  0239                     l2507:	
  4042  0239  0841               	movf	___fladd@a+3,w
  4043  023A  3980               	andlw	128
  4044  023B  00C2               	movwf	??___fladd
  4045  023C  0842               	movf	??___fladd,w
  4046  023D  00CB               	movwf	___fladd@aexp
  4047  023E                     l2509:	
  4048  023E  084B               	movf	___fladd@aexp,w
  4049  023F  064A               	xorwf	___fladd@signs,w
  4050  0240  1903               	skipnz
  4051  0241  2A43               	goto	u2831
  4052  0242  2A44               	goto	u2830
  4053  0243                     u2831:	
  4054  0243  2A45               	goto	l2513
  4055  0244                     u2830:	
  4056  0244                     l2511:	
  4057  0244  174A               	bsf	___fladd@signs,6
  4058  0245                     l2513:	
  4059  0245  0841               	movf	___fladd@a+3,w
  4060  0246  00C2               	movwf	??___fladd
  4061  0247  0742               	addwf	??___fladd,w
  4062  0248  00C3               	movwf	??___fladd+1
  4063  0249  0843               	movf	??___fladd+1,w
  4064  024A  00CB               	movwf	___fladd@aexp
  4065  024B                     l2515:	
  4066  024B  1FC0               	btfss	___fladd@a+2,7
  4067  024C  2A4E               	goto	u2841
  4068  024D  2A4F               	goto	u2840
  4069  024E                     u2841:	
  4070  024E  2A50               	goto	l2519
  4071  024F                     u2840:	
  4072  024F                     l2517:	
  4073  024F  144B               	bsf	___fladd@aexp,0
  4074  0250                     l2519:	
  4075  0250  084B               	movf	___fladd@aexp,w
  4076  0251  1903               	btfsc	3,2
  4077  0252  2A54               	goto	u2851
  4078  0253  2A55               	goto	u2850
  4079  0254                     u2851:	
  4080  0254  2A65               	goto	l2529
  4081  0255                     u2850:	
  4082  0255                     l2521:	
  4083  0255  0A4B               	incf	___fladd@aexp,w
  4084  0256  1D03               	btfss	3,2
  4085  0257  2A59               	goto	u2861
  4086  0258  2A5A               	goto	u2860
  4087  0259                     u2861:	
  4088  0259  2A62               	goto	l2525
  4089  025A                     u2860:	
  4090  025A                     l2523:	
  4091  025A  3000               	movlw	0
  4092  025B  00C1               	movwf	___fladd@a+3
  4093  025C  3000               	movlw	0
  4094  025D  00C0               	movwf	___fladd@a+2
  4095  025E  3000               	movlw	0
  4096  025F  00BF               	movwf	___fladd@a+1
  4097  0260  3000               	movlw	0
  4098  0261  00BE               	movwf	___fladd@a
  4099  0262                     l2525:	
  4100  0262  17C0               	bsf	___fladd@a+2,7
  4101  0263                     l2527:	
  4102  0263  01C1               	clrf	___fladd@a+3
  4103  0264  2A6D               	goto	l748
  4104  0265                     l2529:	
  4105  0265  3000               	movlw	0
  4106  0266  00C1               	movwf	___fladd@a+3
  4107  0267  3000               	movlw	0
  4108  0268  00C0               	movwf	___fladd@a+2
  4109  0269  3000               	movlw	0
  4110  026A  00BF               	movwf	___fladd@a+1
  4111  026B  3000               	movlw	0
  4112  026C  00BE               	movwf	___fladd@a
  4113  026D                     l748:	
  4114  026D  084C               	movf	___fladd@bexp,w
  4115  026E  024B               	subwf	___fladd@aexp,w
  4116  026F  1803               	skipnc
  4117  0270  2A72               	goto	u2871
  4118  0271  2A73               	goto	u2870
  4119  0272                     u2871:	
  4120  0272  2AB7               	goto	l2565
  4121  0273                     u2870:	
  4122  0273                     l2531:	
  4123  0273  1F4A               	btfss	___fladd@signs,6
  4124  0274  2A76               	goto	u2881
  4125  0275  2A77               	goto	u2880
  4126  0276                     u2881:	
  4127  0276  2A7B               	goto	l2535
  4128  0277                     u2880:	
  4129  0277                     l2533:	
  4130  0277  3080               	movlw	128
  4131  0278  00C2               	movwf	??___fladd
  4132  0279  0842               	movf	??___fladd,w
  4133  027A  06CA               	xorwf	___fladd@signs,f
  4134  027B                     l2535:	
  4135  027B  084C               	movf	___fladd@bexp,w
  4136  027C  00C2               	movwf	??___fladd
  4137  027D  0842               	movf	??___fladd,w
  4138  027E  00CD               	movwf	___fladd@grs
  4139  027F                     l2537:	
  4140  027F  084B               	movf	___fladd@aexp,w
  4141  0280  00C2               	movwf	??___fladd
  4142  0281  0842               	movf	??___fladd,w
  4143  0282  00CC               	movwf	___fladd@bexp
  4144  0283                     l2539:	
  4145  0283  084D               	movf	___fladd@grs,w
  4146  0284  00C2               	movwf	??___fladd
  4147  0285  0842               	movf	??___fladd,w
  4148  0286  00CB               	movwf	___fladd@aexp
  4149  0287                     l2541:	
  4150  0287  083A               	movf	___fladd@b,w
  4151  0288  00C2               	movwf	??___fladd
  4152  0289  0842               	movf	??___fladd,w
  4153  028A  00CD               	movwf	___fladd@grs
  4154  028B                     l2543:	
  4155  028B  083E               	movf	___fladd@a,w
  4156  028C  00C2               	movwf	??___fladd
  4157  028D  0842               	movf	??___fladd,w
  4158  028E  00BA               	movwf	___fladd@b
  4159  028F                     l2545:	
  4160  028F  084D               	movf	___fladd@grs,w
  4161  0290  00C2               	movwf	??___fladd
  4162  0291  0842               	movf	??___fladd,w
  4163  0292  00BE               	movwf	___fladd@a
  4164  0293                     l2547:	
  4165  0293  083B               	movf	___fladd@b+1,w
  4166  0294  00C2               	movwf	??___fladd
  4167  0295  0842               	movf	??___fladd,w
  4168  0296  00CD               	movwf	___fladd@grs
  4169  0297                     l2549:	
  4170  0297  083F               	movf	___fladd@a+1,w
  4171  0298  00C2               	movwf	??___fladd
  4172  0299  0842               	movf	??___fladd,w
  4173  029A  00BB               	movwf	___fladd@b+1
  4174  029B                     l2551:	
  4175  029B  084D               	movf	___fladd@grs,w
  4176  029C  00C2               	movwf	??___fladd
  4177  029D  0842               	movf	??___fladd,w
  4178  029E  00BF               	movwf	___fladd@a+1
  4179  029F                     l2553:	
  4180  029F  083C               	movf	___fladd@b+2,w
  4181  02A0  00C2               	movwf	??___fladd
  4182  02A1  0842               	movf	??___fladd,w
  4183  02A2  00CD               	movwf	___fladd@grs
  4184  02A3                     l2555:	
  4185  02A3  0840               	movf	___fladd@a+2,w
  4186  02A4  00C2               	movwf	??___fladd
  4187  02A5  0842               	movf	??___fladd,w
  4188  02A6  00BC               	movwf	___fladd@b+2
  4189  02A7                     l2557:	
  4190  02A7  084D               	movf	___fladd@grs,w
  4191  02A8  00C2               	movwf	??___fladd
  4192  02A9  0842               	movf	??___fladd,w
  4193  02AA  00C0               	movwf	___fladd@a+2
  4194  02AB                     l2559:	
  4195  02AB  083D               	movf	___fladd@b+3,w
  4196  02AC  00C2               	movwf	??___fladd
  4197  02AD  0842               	movf	??___fladd,w
  4198  02AE  00CD               	movwf	___fladd@grs
  4199  02AF                     l2561:	
  4200  02AF  0841               	movf	___fladd@a+3,w
  4201  02B0  00C2               	movwf	??___fladd
  4202  02B1  0842               	movf	??___fladd,w
  4203  02B2  00BD               	movwf	___fladd@b+3
  4204  02B3                     l2563:	
  4205  02B3  084D               	movf	___fladd@grs,w
  4206  02B4  00C2               	movwf	??___fladd
  4207  02B5  0842               	movf	??___fladd,w
  4208  02B6  00C1               	movwf	___fladd@a+3
  4209  02B7                     l2565:	
  4210  02B7  01CD               	clrf	___fladd@grs
  4211  02B8                     l2567:	
  4212  02B8  084B               	movf	___fladd@aexp,w
  4213  02B9  00C2               	movwf	??___fladd
  4214  02BA  01C3               	clrf	??___fladd+1
  4215  02BB  0843               	movf	??___fladd+1,w
  4216  02BC  00C5               	movwf	??___fladd+3
  4217  02BD  084C               	movf	___fladd@bexp,w
  4218  02BE  0242               	subwf	??___fladd,w
  4219  02BF  00C4               	movwf	??___fladd+2
  4220  02C0  1C03               	skipc
  4221  02C1  03C5               	decf	??___fladd+3,f
  4222  02C2  0845               	movf	??___fladd+3,w
  4223  02C3  3A80               	xorlw	128
  4224  02C4  00FF               	movwf	btemp+1
  4225  02C5  3080               	movlw	128
  4226  02C6  027F               	subwf	btemp+1,w
  4227  02C7  1D03               	skipz
  4228  02C8  2ACB               	goto	u2895
  4229  02C9  301A               	movlw	26
  4230  02CA  0244               	subwf	??___fladd+2,w
  4231  02CB                     u2895:	
  4232  02CB  1C03               	skipc
  4233  02CC  2ACE               	goto	u2891
  4234  02CD  2ACF               	goto	u2890
  4235  02CE                     u2891:	
  4236  02CE  2B0C               	goto	l2583
  4237  02CF                     u2890:	
  4238  02CF                     l2569:	
  4239  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  4240  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  4241  02D1  083D               	movf	___fladd@b+3,w
  4242  02D2  043C               	iorwf	___fladd@b+2,w
  4243  02D3  043B               	iorwf	___fladd@b+1,w
  4244  02D4  043A               	iorwf	___fladd@b,w
  4245  02D5  1D03               	skipz
  4246  02D6  2AD8               	goto	u2901
  4247  02D7  2ADA               	goto	u2900
  4248  02D8                     u2901:	
  4249  02D8  3001               	movlw	1
  4250  02D9  2ADB               	goto	u2910
  4251  02DA                     u2900:	
  4252  02DA  3000               	movlw	0
  4253  02DB                     u2910:	
  4254  02DB  00C2               	movwf	??___fladd
  4255  02DC  0842               	movf	??___fladd,w
  4256  02DD  00CD               	movwf	___fladd@grs
  4257  02DE  3000               	movlw	0
  4258  02DF  00BD               	movwf	___fladd@b+3
  4259  02E0  3000               	movlw	0
  4260  02E1  00BC               	movwf	___fladd@b+2
  4261  02E2  3000               	movlw	0
  4262  02E3  00BB               	movwf	___fladd@b+1
  4263  02E4  3000               	movlw	0
  4264  02E5  00BA               	movwf	___fladd@b
  4265  02E6  084B               	movf	___fladd@aexp,w
  4266  02E7  00C2               	movwf	??___fladd
  4267  02E8  0842               	movf	??___fladd,w
  4268  02E9  00CC               	movwf	___fladd@bexp
  4269  02EA  2B14               	goto	l752
  4270  02EB                     l754:	
  4271  02EB  1C4D               	btfss	___fladd@grs,0
  4272  02EC  2AEE               	goto	u2921
  4273  02ED  2AEF               	goto	u2920
  4274  02EE                     u2921:	
  4275  02EE  2AF8               	goto	l2573
  4276  02EF                     u2920:	
  4277  02EF                     l2571:	
  4278  02EF  084D               	movf	___fladd@grs,w
  4279  02F0  00C2               	movwf	??___fladd
  4280  02F1  1003               	clrc
  4281  02F2  0C42               	rrf	??___fladd,w
  4282  02F3  3801               	iorlw	1
  4283  02F4  00C3               	movwf	??___fladd+1
  4284  02F5  0843               	movf	??___fladd+1,w
  4285  02F6  00CD               	movwf	___fladd@grs
  4286  02F7  2AFA               	goto	l2575
  4287  02F8                     l2573:	
  4288  02F8  1003               	clrc
  4289  02F9  0CCD               	rrf	___fladd@grs,f
  4290  02FA                     l2575:	
  4291  02FA  1C3A               	btfss	___fladd@b,0
  4292  02FB  2AFD               	goto	u2931
  4293  02FC  2AFE               	goto	u2930
  4294  02FD                     u2931:	
  4295  02FD  2AFF               	goto	l2579
  4296  02FE                     u2930:	
  4297  02FE                     l2577:	
  4298  02FE  17CD               	bsf	___fladd@grs,7
  4299  02FF                     l2579:	
  4300  02FF  3001               	movlw	1
  4301  0300  00C2               	movwf	??___fladd
  4302  0301                     u2945:	
  4303  0301  0D3D               	rlf	___fladd@b+3,w
  4304  0302  0CBD               	rrf	___fladd@b+3,f
  4305  0303  0CBC               	rrf	___fladd@b+2,f
  4306  0304  0CBB               	rrf	___fladd@b+1,f
  4307  0305  0CBA               	rrf	___fladd@b,f
  4308  0306  0BC2               	decfsz	??___fladd& (0+127),f
  4309  0307  2B01               	goto	u2945
  4310  0308                     l2581:	
  4311  0308  3001               	movlw	1
  4312  0309  00C2               	movwf	??___fladd
  4313  030A  0842               	movf	??___fladd,w
  4314  030B  07CC               	addwf	___fladd@bexp,f
  4315  030C                     l2583:	
  4316  030C  1283               	bcf	3,5	;RP0=0, select bank0
  4317  030D  1303               	bcf	3,6	;RP1=0, select bank0
  4318  030E  084B               	movf	___fladd@aexp,w
  4319  030F  024C               	subwf	___fladd@bexp,w
  4320  0310  1C03               	skipc
  4321  0311  2B13               	goto	u2951
  4322  0312  2B14               	goto	u2950
  4323  0313                     u2951:	
  4324  0313  2AEB               	goto	l754
  4325  0314                     u2950:	
  4326  0314                     l752:	
  4327  0314  1B4A               	btfsc	___fladd@signs,6
  4328  0315  2B17               	goto	u2961
  4329  0316  2B18               	goto	u2960
  4330  0317                     u2961:	
  4331  0317  2B63               	goto	l2609
  4332  0318                     u2960:	
  4333  0318                     l2585:	
  4334  0318  084C               	movf	___fladd@bexp,w
  4335  0319  1D03               	btfss	3,2
  4336  031A  2B1C               	goto	u2971
  4337  031B  2B1D               	goto	u2970
  4338  031C                     u2971:	
  4339  031C  2B26               	goto	l2591
  4340  031D                     u2970:	
  4341  031D                     l2587:	
  4342  031D  3000               	movlw	0
  4343  031E  00BD               	movwf	?___fladd+3
  4344  031F  3000               	movlw	0
  4345  0320  00BC               	movwf	?___fladd+2
  4346  0321  3000               	movlw	0
  4347  0322  00BB               	movwf	?___fladd+1
  4348  0323  3000               	movlw	0
  4349  0324  00BA               	movwf	?___fladd
  4350  0325  2C91               	goto	l761
  4351  0326                     l2591:	
  4352  0326  083E               	movf	___fladd@a,w
  4353  0327  07BA               	addwf	___fladd@b,f
  4354  0328  083F               	movf	___fladd@a+1,w
  4355  0329  1103               	clrz
  4356  032A  1803               	skipnc
  4357  032B  3E01               	addlw	1
  4358  032C  1903               	skipnz
  4359  032D  2B2F               	goto	u2981
  4360  032E  07BB               	addwf	___fladd@b+1,f
  4361  032F                     u2981:	
  4362  032F  0840               	movf	___fladd@a+2,w
  4363  0330  1103               	clrz
  4364  0331  1803               	skipnc
  4365  0332  3E01               	addlw	1
  4366  0333  1903               	skipnz
  4367  0334  2B36               	goto	u2982
  4368  0335  07BC               	addwf	___fladd@b+2,f
  4369  0336                     u2982:	
  4370  0336  0841               	movf	___fladd@a+3,w
  4371  0337  1103               	clrz
  4372  0338  1803               	skipnc
  4373  0339  3E01               	addlw	1
  4374  033A  1903               	skipnz
  4375  033B  2B3D               	goto	u2983
  4376  033C  07BD               	addwf	___fladd@b+3,f
  4377  033D                     u2983:	
  4378  033D                     l2593:	
  4379  033D  1C3D               	btfss	___fladd@b+3,0
  4380  033E  2B40               	goto	u2991
  4381  033F  2B41               	goto	u2990
  4382  0340                     u2991:	
  4383  0340  2C17               	goto	l2643
  4384  0341                     u2990:	
  4385  0341                     l2595:	
  4386  0341  1C4D               	btfss	___fladd@grs,0
  4387  0342  2B44               	goto	u3001
  4388  0343  2B45               	goto	u3000
  4389  0344                     u3001:	
  4390  0344  2B4E               	goto	l2599
  4391  0345                     u3000:	
  4392  0345                     l2597:	
  4393  0345  084D               	movf	___fladd@grs,w
  4394  0346  00C2               	movwf	??___fladd
  4395  0347  1003               	clrc
  4396  0348  0C42               	rrf	??___fladd,w
  4397  0349  3801               	iorlw	1
  4398  034A  00C3               	movwf	??___fladd+1
  4399  034B  0843               	movf	??___fladd+1,w
  4400  034C  00CD               	movwf	___fladd@grs
  4401  034D  2B50               	goto	l2601
  4402  034E                     l2599:	
  4403  034E  1003               	clrc
  4404  034F  0CCD               	rrf	___fladd@grs,f
  4405  0350                     l2601:	
  4406  0350  1C3A               	btfss	___fladd@b,0
  4407  0351  2B53               	goto	u3011
  4408  0352  2B54               	goto	u3010
  4409  0353                     u3011:	
  4410  0353  2B55               	goto	l2605
  4411  0354                     u3010:	
  4412  0354                     l2603:	
  4413  0354  17CD               	bsf	___fladd@grs,7
  4414  0355                     l2605:	
  4415  0355  3001               	movlw	1
  4416  0356  00C2               	movwf	??___fladd
  4417  0357                     u3025:	
  4418  0357  0D3D               	rlf	___fladd@b+3,w
  4419  0358  0CBD               	rrf	___fladd@b+3,f
  4420  0359  0CBC               	rrf	___fladd@b+2,f
  4421  035A  0CBB               	rrf	___fladd@b+1,f
  4422  035B  0CBA               	rrf	___fladd@b,f
  4423  035C  0BC2               	decfsz	??___fladd& (0+127),f
  4424  035D  2B57               	goto	u3025
  4425  035E                     l2607:	
  4426  035E  3001               	movlw	1
  4427  035F  00C2               	movwf	??___fladd
  4428  0360  0842               	movf	??___fladd,w
  4429  0361  07CC               	addwf	___fladd@bexp,f
  4430  0362  2C17               	goto	l2643
  4431  0363                     l2609:	
  4432  0363  083D               	movf	___fladd@b+3,w
  4433  0364  3A80               	xorlw	128
  4434  0365  00FF               	movwf	btemp+1
  4435  0366  0841               	movf	___fladd@a+3,w
  4436  0367  3A80               	xorlw	128
  4437  0368  027F               	subwf	btemp+1,w
  4438  0369  1D03               	skipz
  4439  036A  2B75               	goto	u3033
  4440  036B  0840               	movf	___fladd@a+2,w
  4441  036C  023C               	subwf	___fladd@b+2,w
  4442  036D  1D03               	skipz
  4443  036E  2B75               	goto	u3033
  4444  036F  083F               	movf	___fladd@a+1,w
  4445  0370  023B               	subwf	___fladd@b+1,w
  4446  0371  1D03               	skipz
  4447  0372  2B75               	goto	u3033
  4448  0373  083E               	movf	___fladd@a,w
  4449  0374  023A               	subwf	___fladd@b,w
  4450  0375                     u3033:	
  4451  0375  1803               	skipnc
  4452  0376  2B78               	goto	u3031
  4453  0377  2B79               	goto	u3030
  4454  0378                     u3031:	
  4455  0378  2BD1               	goto	l2619
  4456  0379                     u3030:	
  4457  0379                     l2611:	
  4458  0379  30FF               	movlw	255
  4459  037A  00C2               	movwf	??___fladd
  4460  037B  30FF               	movlw	255
  4461  037C  00C3               	movwf	??___fladd+1
  4462  037D  30FF               	movlw	255
  4463  037E  00C4               	movwf	??___fladd+2
  4464  037F  30FF               	movlw	255
  4465  0380  00C5               	movwf	??___fladd+3
  4466  0381  083E               	movf	___fladd@a,w
  4467  0382  00C6               	movwf	??___fladd+4
  4468  0383  083F               	movf	___fladd@a+1,w
  4469  0384  00C7               	movwf	??___fladd+5
  4470  0385  0840               	movf	___fladd@a+2,w
  4471  0386  00C8               	movwf	??___fladd+6
  4472  0387  0841               	movf	___fladd@a+3,w
  4473  0388  00C9               	movwf	??___fladd+7
  4474  0389  083A               	movf	___fladd@b,w
  4475  038A  02C6               	subwf	??___fladd+4,f
  4476  038B  083B               	movf	___fladd@b+1,w
  4477  038C  1C03               	skipc
  4478  038D  0F3B               	incfsz	___fladd@b+1,w
  4479  038E  2B90               	goto	u3041
  4480  038F  2B91               	goto	u3042
  4481  0390                     u3041:	
  4482  0390  02C7               	subwf	??___fladd+5,f
  4483  0391                     u3042:	
  4484  0391  083C               	movf	___fladd@b+2,w
  4485  0392  1C03               	skipc
  4486  0393  0F3C               	incfsz	___fladd@b+2,w
  4487  0394  2B96               	goto	u3043
  4488  0395  2B97               	goto	u3044
  4489  0396                     u3043:	
  4490  0396  02C8               	subwf	??___fladd+6,f
  4491  0397                     u3044:	
  4492  0397  083D               	movf	___fladd@b+3,w
  4493  0398  1C03               	skipc
  4494  0399  0F3D               	incfsz	___fladd@b+3,w
  4495  039A  2B9C               	goto	u3045
  4496  039B  2B9D               	goto	u3046
  4497  039C                     u3045:	
  4498  039C  02C9               	subwf	??___fladd+7,f
  4499  039D                     u3046:	
  4500  039D  0846               	movf	??___fladd+4,w
  4501  039E  07C2               	addwf	??___fladd,f
  4502  039F  0847               	movf	??___fladd+5,w
  4503  03A0  1803               	skipnc
  4504  03A1  0F47               	incfsz	??___fladd+5,w
  4505  03A2  2BA4               	goto	u3050
  4506  03A3  2BA5               	goto	u3051
  4507  03A4                     u3050:	
  4508  03A4  07C3               	addwf	??___fladd+1,f
  4509  03A5                     u3051:	
  4510  03A5  0848               	movf	??___fladd+6,w
  4511  03A6  1803               	skipnc
  4512  03A7  0F48               	incfsz	??___fladd+6,w
  4513  03A8  2BAA               	goto	u3052
  4514  03A9  2BAB               	goto	u3053
  4515  03AA                     u3052:	
  4516  03AA  07C4               	addwf	??___fladd+2,f
  4517  03AB                     u3053:	
  4518  03AB  0849               	movf	??___fladd+7,w
  4519  03AC  1803               	skipnc
  4520  03AD  0A49               	incf	??___fladd+7,w
  4521  03AE  07C5               	addwf	??___fladd+3,f
  4522  03AF  0845               	movf	??___fladd+3,w
  4523  03B0  00BD               	movwf	___fladd@b+3
  4524  03B1  0844               	movf	??___fladd+2,w
  4525  03B2  00BC               	movwf	___fladd@b+2
  4526  03B3  0843               	movf	??___fladd+1,w
  4527  03B4  00BB               	movwf	___fladd@b+1
  4528  03B5  0842               	movf	??___fladd,w
  4529  03B6  00BA               	movwf	___fladd@b
  4530  03B7                     l2613:	
  4531  03B7  3080               	movlw	128
  4532  03B8  00C2               	movwf	??___fladd
  4533  03B9  0842               	movf	??___fladd,w
  4534  03BA  06CA               	xorwf	___fladd@signs,f
  4535  03BB  09CD               	comf	___fladd@grs,f
  4536  03BC  0ACD               	incf	___fladd@grs,f
  4537  03BD                     l2615:	
  4538  03BD  084D               	movf	___fladd@grs,w
  4539  03BE  1D03               	btfss	3,2
  4540  03BF  2BC1               	goto	u3061
  4541  03C0  2BC2               	goto	u3060
  4542  03C1                     u3061:	
  4543  03C1  2BDF               	goto	l769
  4544  03C2                     u3060:	
  4545  03C2                     l2617:	
  4546  03C2  3001               	movlw	1
  4547  03C3  07BA               	addwf	___fladd@b,f
  4548  03C4  3000               	movlw	0
  4549  03C5  1803               	skipnc
  4550  03C6  3001               	movlw	1
  4551  03C7  07BB               	addwf	___fladd@b+1,f
  4552  03C8  3000               	movlw	0
  4553  03C9  1803               	skipnc
  4554  03CA  3001               	movlw	1
  4555  03CB  07BC               	addwf	___fladd@b+2,f
  4556  03CC  3000               	movlw	0
  4557  03CD  1803               	skipnc
  4558  03CE  3001               	movlw	1
  4559  03CF  07BD               	addwf	___fladd@b+3,f
  4560  03D0  2BDF               	goto	l769
  4561  03D1                     l2619:	
  4562  03D1  083E               	movf	___fladd@a,w
  4563  03D2  02BA               	subwf	___fladd@b,f
  4564  03D3  083F               	movf	___fladd@a+1,w
  4565  03D4  1C03               	skipc
  4566  03D5  0F3F               	incfsz	___fladd@a+1,w
  4567  03D6  02BB               	subwf	___fladd@b+1,f
  4568  03D7  0840               	movf	___fladd@a+2,w
  4569  03D8  1C03               	skipc
  4570  03D9  0F40               	incfsz	___fladd@a+2,w
  4571  03DA  02BC               	subwf	___fladd@b+2,f
  4572  03DB  0841               	movf	___fladd@a+3,w
  4573  03DC  1C03               	skipc
  4574  03DD  0F41               	incfsz	___fladd@a+3,w
  4575  03DE  02BD               	subwf	___fladd@b+3,f
  4576  03DF                     l769:	
  4577  03DF  083D               	movf	___fladd@b+3,w
  4578  03E0  043C               	iorwf	___fladd@b+2,w
  4579  03E1  043B               	iorwf	___fladd@b+1,w
  4580  03E2  043A               	iorwf	___fladd@b,w
  4581  03E3  1D03               	skipz
  4582  03E4  2BE6               	goto	u3071
  4583  03E5  2BE7               	goto	u3070
  4584  03E6                     u3071:	
  4585  03E6  2C13               	goto	l2641
  4586  03E7                     u3070:	
  4587  03E7                     l2621:	
  4588  03E7  084D               	movf	___fladd@grs,w
  4589  03E8  1D03               	btfss	3,2
  4590  03E9  2BEB               	goto	u3081
  4591  03EA  2BEC               	goto	u3080
  4592  03EB                     u3081:	
  4593  03EB  2C13               	goto	l2641
  4594  03EC                     u3080:	
  4595  03EC                     l2623:	
  4596  03EC  3000               	movlw	0
  4597  03ED  00BD               	movwf	?___fladd+3
  4598  03EE  3000               	movlw	0
  4599  03EF  00BC               	movwf	?___fladd+2
  4600  03F0  3000               	movlw	0
  4601  03F1  00BB               	movwf	?___fladd+1
  4602  03F2  3000               	movlw	0
  4603  03F3  00BA               	movwf	?___fladd
  4604  03F4  2C91               	goto	l761
  4605  03F5                     l2627:	
  4606  03F5  3001               	movlw	1
  4607  03F6  00C2               	movwf	??___fladd
  4608  03F7                     u3095:	
  4609  03F7  1003               	clrc
  4610  03F8  0DBA               	rlf	___fladd@b,f
  4611  03F9  0DBB               	rlf	___fladd@b+1,f
  4612  03FA  0DBC               	rlf	___fladd@b+2,f
  4613  03FB  0DBD               	rlf	___fladd@b+3,f
  4614  03FC  0BC2               	decfsz	??___fladd,f
  4615  03FD  2BF7               	goto	u3095
  4616  03FE                     l2629:	
  4617  03FE  1FCD               	btfss	___fladd@grs,7
  4618  03FF  2C01               	goto	u3101
  4619  0400  2C02               	goto	u3100
  4620  0401                     u3101:	
  4621  0401  2C03               	goto	l773
  4622  0402                     u3100:	
  4623  0402                     l2631:	
  4624  0402  143A               	bsf	___fladd@b,0
  4625  0403                     l773:	
  4626  0403  1C4D               	btfss	___fladd@grs,0
  4627  0404  2C06               	goto	u3111
  4628  0405  2C07               	goto	u3110
  4629  0406                     u3111:	
  4630  0406  2C0A               	goto	l2635
  4631  0407                     u3110:	
  4632  0407                     l2633:	
  4633  0407  1403               	setc
  4634  0408  0DCD               	rlf	___fladd@grs,f
  4635  0409  2C0C               	goto	l2637
  4636  040A                     l2635:	
  4637  040A  1003               	clrc
  4638  040B  0DCD               	rlf	___fladd@grs,f
  4639  040C                     l2637:	
  4640  040C  084C               	movf	___fladd@bexp,w
  4641  040D  1903               	btfsc	3,2
  4642  040E  2C10               	goto	u3121
  4643  040F  2C11               	goto	u3120
  4644  0410                     u3121:	
  4645  0410  2C13               	goto	l2641
  4646  0411                     u3120:	
  4647  0411                     l2639:	
  4648  0411  3001               	movlw	1
  4649  0412  02CC               	subwf	___fladd@bexp,f
  4650  0413                     l2641:	
  4651  0413  1FBC               	btfss	___fladd@b+2,7
  4652  0414  2C16               	goto	u3131
  4653  0415  2C17               	goto	u3130
  4654  0416                     u3131:	
  4655  0416  2BF5               	goto	l2627
  4656  0417                     u3130:	
  4657  0417                     l2643:	
  4658  0417  01CB               	clrf	___fladd@aexp
  4659  0418                     l2645:	
  4660  0418  1FCD               	btfss	___fladd@grs,7
  4661  0419  2C1B               	goto	u3141
  4662  041A  2C1C               	goto	u3140
  4663  041B                     u3141:	
  4664  041B  2C2A               	goto	l2653
  4665  041C                     u3140:	
  4666  041C                     l2647:	
  4667  041C  084D               	movf	___fladd@grs,w
  4668  041D  397F               	andlw	127
  4669  041E  1903               	btfsc	3,2
  4670  041F  2C21               	goto	u3151
  4671  0420  2C22               	goto	u3150
  4672  0421                     u3151:	
  4673  0421  2C25               	goto	l779
  4674  0422                     u3150:	
  4675  0422                     l2649:	
  4676  0422  01CB               	clrf	___fladd@aexp
  4677  0423  0ACB               	incf	___fladd@aexp,f
  4678  0424  2C2A               	goto	l2653
  4679  0425                     l779:	
  4680  0425  1C3A               	btfss	___fladd@b,0
  4681  0426  2C28               	goto	u3161
  4682  0427  2C29               	goto	u3160
  4683  0428                     u3161:	
  4684  0428  2C2A               	goto	l2653
  4685  0429                     u3160:	
  4686  0429  2C22               	goto	l2649
  4687  042A                     l2653:	
  4688  042A  084B               	movf	___fladd@aexp,w
  4689  042B  1903               	btfsc	3,2
  4690  042C  2C2E               	goto	u3171
  4691  042D  2C2F               	goto	u3170
  4692  042E                     u3171:	
  4693  042E  2C63               	goto	l782
  4694  042F                     u3170:	
  4695  042F                     l2655:	
  4696  042F  3001               	movlw	1
  4697  0430  07BA               	addwf	___fladd@b,f
  4698  0431  3000               	movlw	0
  4699  0432  1803               	skipnc
  4700  0433  3001               	movlw	1
  4701  0434  07BB               	addwf	___fladd@b+1,f
  4702  0435  3000               	movlw	0
  4703  0436  1803               	skipnc
  4704  0437  3001               	movlw	1
  4705  0438  07BC               	addwf	___fladd@b+2,f
  4706  0439  3000               	movlw	0
  4707  043A  1803               	skipnc
  4708  043B  3001               	movlw	1
  4709  043C  07BD               	addwf	___fladd@b+3,f
  4710  043D                     l2657:	
  4711  043D  1C3D               	btfss	___fladd@b+3,0
  4712  043E  2C40               	goto	u3181
  4713  043F  2C41               	goto	u3180
  4714  0440                     u3181:	
  4715  0440  2C63               	goto	l782
  4716  0441                     u3180:	
  4717  0441                     l2659:	
  4718  0441  083A               	movf	___fladd@b,w
  4719  0442  00C2               	movwf	??___fladd
  4720  0443  083B               	movf	___fladd@b+1,w
  4721  0444  00C3               	movwf	??___fladd+1
  4722  0445  083C               	movf	___fladd@b+2,w
  4723  0446  00C4               	movwf	??___fladd+2
  4724  0447  083D               	movf	___fladd@b+3,w
  4725  0448  00C5               	movwf	??___fladd+3
  4726  0449  3001               	movlw	1
  4727  044A  00C6               	movwf	??___fladd+4
  4728  044B                     u3195:	
  4729  044B  0D45               	rlf	??___fladd+3,w
  4730  044C  0CC5               	rrf	??___fladd+3,f
  4731  044D  0CC4               	rrf	??___fladd+2,f
  4732  044E  0CC3               	rrf	??___fladd+1,f
  4733  044F  0CC2               	rrf	??___fladd,f
  4734  0450                     u3190:	
  4735  0450  0BC6               	decfsz	??___fladd+4,f
  4736  0451  2C4B               	goto	u3195
  4737  0452  0845               	movf	??___fladd+3,w
  4738  0453  00BD               	movwf	___fladd@b+3
  4739  0454  0844               	movf	??___fladd+2,w
  4740  0455  00BC               	movwf	___fladd@b+2
  4741  0456  0843               	movf	??___fladd+1,w
  4742  0457  00BB               	movwf	___fladd@b+1
  4743  0458  0842               	movf	??___fladd,w
  4744  0459  00BA               	movwf	___fladd@b
  4745  045A  0A4C               	incf	___fladd@bexp,w
  4746  045B  1903               	btfsc	3,2
  4747  045C  2C5E               	goto	u3201
  4748  045D  2C5F               	goto	u3200
  4749  045E                     u3201:	
  4750  045E  2C63               	goto	l782
  4751  045F                     u3200:	
  4752  045F                     l2661:	
  4753  045F  3001               	movlw	1
  4754  0460  00C2               	movwf	??___fladd
  4755  0461  0842               	movf	??___fladd,w
  4756  0462  07CC               	addwf	___fladd@bexp,f
  4757  0463                     l782:	
  4758  0463  0A4C               	incf	___fladd@bexp,w
  4759  0464  1903               	btfsc	3,2
  4760  0465  2C67               	goto	u3211
  4761  0466  2C68               	goto	u3210
  4762  0467                     u3211:	
  4763  0467  2C6D               	goto	l2665
  4764  0468                     u3210:	
  4765  0468                     l2663:	
  4766  0468  084C               	movf	___fladd@bexp,w
  4767  0469  1D03               	btfss	3,2
  4768  046A  2C6C               	goto	u3221
  4769  046B  2C6D               	goto	u3220
  4770  046C                     u3221:	
  4771  046C  2C7B               	goto	l2671
  4772  046D                     u3220:	
  4773  046D                     l2665:	
  4774  046D  3000               	movlw	0
  4775  046E  00BD               	movwf	___fladd@b+3
  4776  046F  3000               	movlw	0
  4777  0470  00BC               	movwf	___fladd@b+2
  4778  0471  3000               	movlw	0
  4779  0472  00BB               	movwf	___fladd@b+1
  4780  0473  3000               	movlw	0
  4781  0474  00BA               	movwf	___fladd@b
  4782  0475                     l2667:	
  4783  0475  084C               	movf	___fladd@bexp,w
  4784  0476  1D03               	btfss	3,2
  4785  0477  2C79               	goto	u3231
  4786  0478  2C7A               	goto	u3230
  4787  0479                     u3231:	
  4788  0479  2C7B               	goto	l2671
  4789  047A                     u3230:	
  4790  047A                     l2669:	
  4791  047A  01CA               	clrf	___fladd@signs
  4792  047B                     l2671:	
  4793  047B  1C4C               	btfss	___fladd@bexp,0
  4794  047C  2C7E               	goto	u3241
  4795  047D  2C7F               	goto	u3240
  4796  047E                     u3241:	
  4797  047E  2C81               	goto	l2675
  4798  047F                     u3240:	
  4799  047F                     l2673:	
  4800  047F  17BC               	bsf	___fladd@b+2,7
  4801  0480  2C85               	goto	l790
  4802  0481                     l2675:	
  4803  0481  307F               	movlw	127
  4804  0482  00C2               	movwf	??___fladd
  4805  0483  0842               	movf	??___fladd,w
  4806  0484  05BC               	andwf	___fladd@b+2,f
  4807  0485                     l790:	
  4808  0485  084C               	movf	___fladd@bexp,w
  4809  0486  00C2               	movwf	??___fladd
  4810  0487  1003               	clrc
  4811  0488  0C42               	rrf	??___fladd,w
  4812  0489  00C3               	movwf	??___fladd+1
  4813  048A  0843               	movf	??___fladd+1,w
  4814  048B  00BD               	movwf	___fladd@b+3
  4815  048C                     l2677:	
  4816  048C  1FCA               	btfss	___fladd@signs,7
  4817  048D  2C8F               	goto	u3251
  4818  048E  2C90               	goto	u3250
  4819  048F                     u3251:	
  4820  048F  2C91               	goto	l791
  4821  0490                     u3250:	
  4822  0490                     l2679:	
  4823  0490  17BD               	bsf	___fladd@b+3,7
  4824  0491                     l791:	
  4825  0491                     l761:	
  4826  0491  0008               	return
  4827  0492                     __end_of___fladd:	
  4828                           
  4829                           	psect	text15
  4830  002D                     __ptext15:	
  4831 ;; *************** function ___fldiv *****************
  4832 ;; Defined at:
  4833 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  4834 ;; Parameters:    Size  Location     Type
  4835 ;;  a               4   54[BANK0 ] unsigned char 
  4836 ;;  b               4   58[BANK0 ] unsigned char 
  4837 ;; Auto vars:     Size  Location     Type
  4838 ;;  grs             4   74[BANK0 ] unsigned long 
  4839 ;;  rem             4   67[BANK0 ] unsigned long 
  4840 ;;  new_exp         2   72[BANK0 ] int 
  4841 ;;  aexp            1   79[BANK0 ] unsigned char 
  4842 ;;  bexp            1   78[BANK0 ] unsigned char 
  4843 ;;  sign            1   71[BANK0 ] unsigned char 
  4844 ;; Return value:  Size  Location     Type
  4845 ;;                  4   54[BANK0 ] unsigned char 
  4846 ;; Registers used:
  4847 ;;		wreg, status,2, status,0, btemp+1
  4848 ;; Tracked objects:
  4849 ;;		On entry : 0/0
  4850 ;;		On exit  : 0/0
  4851 ;;		Unchanged: 0/0
  4852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4853 ;;      Params:         0       8       0       0       0
  4854 ;;      Locals:         0      13       0       0       0
  4855 ;;      Temps:          0       5       0       0       0
  4856 ;;      Totals:         0      26       0       0       0
  4857 ;;Total ram usage:       26 bytes
  4858 ;; Hardware stack levels used:    1
  4859 ;; This function calls:
  4860 ;;		Nothing
  4861 ;; This function is called by:
  4862 ;;		_currentMeasurement
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           
  4866                           
  4867                           ;psect for function ___fldiv
  4868  002D                     ___fldiv:	
  4869  002D                     l2799:	
  4870                           ;incstack = 0
  4871                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4872                           
  4873  002D  1283               	bcf	3,5	;RP0=0, select bank0
  4874  002E  1303               	bcf	3,6	;RP1=0, select bank0
  4875  002F  085D               	movf	___fldiv@b+3,w
  4876  0030  3980               	andlw	128
  4877  0031  00DE               	movwf	??___fldiv
  4878  0032  085E               	movf	??___fldiv,w
  4879  0033  00E7               	movwf	___fldiv@sign
  4880  0034                     l2801:	
  4881  0034  085D               	movf	___fldiv@b+3,w
  4882  0035  00DE               	movwf	??___fldiv
  4883  0036  075E               	addwf	??___fldiv,w
  4884  0037  00DF               	movwf	??___fldiv+1
  4885  0038  085F               	movf	??___fldiv+1,w
  4886  0039  00EE               	movwf	___fldiv@bexp
  4887  003A                     l2803:	
  4888  003A  1FDC               	btfss	___fldiv@b+2,7
  4889  003B  283D               	goto	u3471
  4890  003C  283E               	goto	u3470
  4891  003D                     u3471:	
  4892  003D  283F               	goto	l2807
  4893  003E                     u3470:	
  4894  003E                     l2805:	
  4895  003E  146E               	bsf	___fldiv@bexp,0
  4896  003F                     l2807:	
  4897  003F  086E               	movf	___fldiv@bexp,w
  4898  0040  1903               	btfsc	3,2
  4899  0041  2843               	goto	u3481
  4900  0042  2844               	goto	u3480
  4901  0043                     u3481:	
  4902  0043  2854               	goto	l2817
  4903  0044                     u3480:	
  4904  0044                     l2809:	
  4905  0044  0A6E               	incf	___fldiv@bexp,w
  4906  0045  1D03               	btfss	3,2
  4907  0046  2848               	goto	u3491
  4908  0047  2849               	goto	u3490
  4909  0048                     u3491:	
  4910  0048  2851               	goto	l2813
  4911  0049                     u3490:	
  4912  0049                     l2811:	
  4913  0049  3000               	movlw	0
  4914  004A  00DD               	movwf	___fldiv@b+3
  4915  004B  3000               	movlw	0
  4916  004C  00DC               	movwf	___fldiv@b+2
  4917  004D  3000               	movlw	0
  4918  004E  00DB               	movwf	___fldiv@b+1
  4919  004F  3000               	movlw	0
  4920  0050  00DA               	movwf	___fldiv@b
  4921  0051                     l2813:	
  4922  0051  17DC               	bsf	___fldiv@b+2,7
  4923  0052                     l2815:	
  4924  0052  01DD               	clrf	___fldiv@b+3
  4925  0053  285C               	goto	l2819
  4926  0054                     l2817:	
  4927  0054  3000               	movlw	0
  4928  0055  00DD               	movwf	___fldiv@b+3
  4929  0056  3000               	movlw	0
  4930  0057  00DC               	movwf	___fldiv@b+2
  4931  0058  3000               	movlw	0
  4932  0059  00DB               	movwf	___fldiv@b+1
  4933  005A  3000               	movlw	0
  4934  005B  00DA               	movwf	___fldiv@b
  4935  005C                     l2819:	
  4936  005C  0859               	movf	___fldiv@a+3,w
  4937  005D  3980               	andlw	128
  4938  005E  00DE               	movwf	??___fldiv
  4939  005F  085E               	movf	??___fldiv,w
  4940  0060  06E7               	xorwf	___fldiv@sign,f
  4941  0061                     l2821:	
  4942  0061  0859               	movf	___fldiv@a+3,w
  4943  0062  00DE               	movwf	??___fldiv
  4944  0063  075E               	addwf	??___fldiv,w
  4945  0064  00DF               	movwf	??___fldiv+1
  4946  0065  085F               	movf	??___fldiv+1,w
  4947  0066  00EF               	movwf	___fldiv@aexp
  4948  0067                     l2823:	
  4949  0067  1FD8               	btfss	___fldiv@a+2,7
  4950  0068  286A               	goto	u3501
  4951  0069  286B               	goto	u3500
  4952  006A                     u3501:	
  4953  006A  286C               	goto	l2827
  4954  006B                     u3500:	
  4955  006B                     l2825:	
  4956  006B  146F               	bsf	___fldiv@aexp,0
  4957  006C                     l2827:	
  4958  006C  086F               	movf	___fldiv@aexp,w
  4959  006D  1903               	btfsc	3,2
  4960  006E  2870               	goto	u3511
  4961  006F  2871               	goto	u3510
  4962  0070                     u3511:	
  4963  0070  2881               	goto	l2837
  4964  0071                     u3510:	
  4965  0071                     l2829:	
  4966  0071  0A6F               	incf	___fldiv@aexp,w
  4967  0072  1D03               	btfss	3,2
  4968  0073  2875               	goto	u3521
  4969  0074  2876               	goto	u3520
  4970  0075                     u3521:	
  4971  0075  287E               	goto	l2833
  4972  0076                     u3520:	
  4973  0076                     l2831:	
  4974  0076  3000               	movlw	0
  4975  0077  00D9               	movwf	___fldiv@a+3
  4976  0078  3000               	movlw	0
  4977  0079  00D8               	movwf	___fldiv@a+2
  4978  007A  3000               	movlw	0
  4979  007B  00D7               	movwf	___fldiv@a+1
  4980  007C  3000               	movlw	0
  4981  007D  00D6               	movwf	___fldiv@a
  4982  007E                     l2833:	
  4983  007E  17D8               	bsf	___fldiv@a+2,7
  4984  007F                     l2835:	
  4985  007F  01D9               	clrf	___fldiv@a+3
  4986  0080  2889               	goto	l804
  4987  0081                     l2837:	
  4988  0081  3000               	movlw	0
  4989  0082  00D9               	movwf	___fldiv@a+3
  4990  0083  3000               	movlw	0
  4991  0084  00D8               	movwf	___fldiv@a+2
  4992  0085  3000               	movlw	0
  4993  0086  00D7               	movwf	___fldiv@a+1
  4994  0087  3000               	movlw	0
  4995  0088  00D6               	movwf	___fldiv@a
  4996  0089                     l804:	
  4997  0089  0859               	movf	___fldiv@a+3,w
  4998  008A  0458               	iorwf	___fldiv@a+2,w
  4999  008B  0457               	iorwf	___fldiv@a+1,w
  5000  008C  0456               	iorwf	___fldiv@a,w
  5001  008D  1D03               	skipz
  5002  008E  2890               	goto	u3531
  5003  008F  2891               	goto	u3530
  5004  0090                     u3531:	
  5005  0090  28AA               	goto	l2847
  5006  0091                     u3530:	
  5007  0091                     l2839:	
  5008  0091  3000               	movlw	0
  5009  0092  00DD               	movwf	___fldiv@b+3
  5010  0093  3000               	movlw	0
  5011  0094  00DC               	movwf	___fldiv@b+2
  5012  0095  3000               	movlw	0
  5013  0096  00DB               	movwf	___fldiv@b+1
  5014  0097  3000               	movlw	0
  5015  0098  00DA               	movwf	___fldiv@b
  5016  0099  3080               	movlw	128
  5017  009A  04DC               	iorwf	___fldiv@b+2,f
  5018  009B  307F               	movlw	127
  5019  009C  04DD               	iorwf	___fldiv@b+3,f
  5020  009D                     l2841:	
  5021  009D  0867               	movf	___fldiv@sign,w
  5022  009E  00DE               	movwf	??___fldiv
  5023  009F  085E               	movf	??___fldiv,w
  5024  00A0  04DD               	iorwf	___fldiv@b+3,f
  5025  00A1                     l2843:	
  5026  00A1  085D               	movf	___fldiv@b+3,w
  5027  00A2  00D9               	movwf	?___fldiv+3
  5028  00A3  085C               	movf	___fldiv@b+2,w
  5029  00A4  00D8               	movwf	?___fldiv+2
  5030  00A5  085B               	movf	___fldiv@b+1,w
  5031  00A6  00D7               	movwf	?___fldiv+1
  5032  00A7  085A               	movf	___fldiv@b,w
  5033  00A8  00D6               	movwf	?___fldiv
  5034  00A9  2A09               	goto	l806
  5035  00AA                     l2847:	
  5036  00AA  086E               	movf	___fldiv@bexp,w
  5037  00AB  1D03               	btfss	3,2
  5038  00AC  28AE               	goto	u3541
  5039  00AD  28AF               	goto	u3540
  5040  00AE                     u3541:	
  5041  00AE  28B8               	goto	l2853
  5042  00AF                     u3540:	
  5043  00AF                     l2849:	
  5044  00AF  3000               	movlw	0
  5045  00B0  00D9               	movwf	?___fldiv+3
  5046  00B1  3000               	movlw	0
  5047  00B2  00D8               	movwf	?___fldiv+2
  5048  00B3  3000               	movlw	0
  5049  00B4  00D7               	movwf	?___fldiv+1
  5050  00B5  3000               	movlw	0
  5051  00B6  00D6               	movwf	?___fldiv
  5052  00B7  2A09               	goto	l806
  5053  00B8                     l2853:	
  5054  00B8  086E               	movf	___fldiv@bexp,w
  5055  00B9  00DE               	movwf	??___fldiv
  5056  00BA  01DF               	clrf	??___fldiv+1
  5057  00BB  085F               	movf	??___fldiv+1,w
  5058  00BC  00E1               	movwf	??___fldiv+3
  5059  00BD  086F               	movf	___fldiv@aexp,w
  5060  00BE  025E               	subwf	??___fldiv,w
  5061  00BF  00E0               	movwf	??___fldiv+2
  5062  00C0  1C03               	skipc
  5063  00C1  03E1               	decf	??___fldiv+3,f
  5064  00C2  0860               	movf	??___fldiv+2,w
  5065  00C3  3E7F               	addlw	127
  5066  00C4  00E8               	movwf	___fldiv@new_exp
  5067  00C5  0861               	movf	??___fldiv+3,w
  5068  00C6  1803               	skipnc
  5069  00C7  3E01               	addlw	1
  5070  00C8  3E00               	addlw	0
  5071  00C9  00E9               	movwf	___fldiv@new_exp+1
  5072  00CA                     l2855:	
  5073  00CA  085D               	movf	___fldiv@b+3,w
  5074  00CB  00E6               	movwf	___fldiv@rem+3
  5075  00CC  085C               	movf	___fldiv@b+2,w
  5076  00CD  00E5               	movwf	___fldiv@rem+2
  5077  00CE  085B               	movf	___fldiv@b+1,w
  5078  00CF  00E4               	movwf	___fldiv@rem+1
  5079  00D0  085A               	movf	___fldiv@b,w
  5080  00D1  00E3               	movwf	___fldiv@rem
  5081  00D2                     l2857:	
  5082  00D2  3000               	movlw	0
  5083  00D3  00DD               	movwf	___fldiv@b+3
  5084  00D4  3000               	movlw	0
  5085  00D5  00DC               	movwf	___fldiv@b+2
  5086  00D6  3000               	movlw	0
  5087  00D7  00DB               	movwf	___fldiv@b+1
  5088  00D8  3000               	movlw	0
  5089  00D9  00DA               	movwf	___fldiv@b
  5090  00DA                     l2859:	
  5091  00DA  3000               	movlw	0
  5092  00DB  00ED               	movwf	___fldiv@grs+3
  5093  00DC  3000               	movlw	0
  5094  00DD  00EC               	movwf	___fldiv@grs+2
  5095  00DE  3000               	movlw	0
  5096  00DF  00EB               	movwf	___fldiv@grs+1
  5097  00E0  3000               	movlw	0
  5098  00E1  00EA               	movwf	___fldiv@grs
  5099  00E2                     l2861:	
  5100  00E2  01EF               	clrf	___fldiv@aexp
  5101  00E3  292E               	goto	l2881
  5102  00E4                     l2863:	
  5103  00E4  086F               	movf	___fldiv@aexp,w
  5104  00E5  1903               	btfsc	3,2
  5105  00E6  28E8               	goto	u3551
  5106  00E7  28E9               	goto	u3550
  5107  00E8                     u3551:	
  5108  00E8  2909               	goto	l2873
  5109  00E9                     u3550:	
  5110  00E9                     l2865:	
  5111  00E9  3001               	movlw	1
  5112  00EA  00DE               	movwf	??___fldiv
  5113  00EB                     u3565:	
  5114  00EB  1003               	clrc
  5115  00EC  0DE3               	rlf	___fldiv@rem,f
  5116  00ED  0DE4               	rlf	___fldiv@rem+1,f
  5117  00EE  0DE5               	rlf	___fldiv@rem+2,f
  5118  00EF  0DE6               	rlf	___fldiv@rem+3,f
  5119  00F0  0BDE               	decfsz	??___fldiv,f
  5120  00F1  28EB               	goto	u3565
  5121  00F2  3001               	movlw	1
  5122  00F3  00DE               	movwf	??___fldiv
  5123  00F4                     u3575:	
  5124  00F4  1003               	clrc
  5125  00F5  0DDA               	rlf	___fldiv@b,f
  5126  00F6  0DDB               	rlf	___fldiv@b+1,f
  5127  00F7  0DDC               	rlf	___fldiv@b+2,f
  5128  00F8  0DDD               	rlf	___fldiv@b+3,f
  5129  00F9  0BDE               	decfsz	??___fldiv,f
  5130  00FA  28F4               	goto	u3575
  5131  00FB                     l2867:	
  5132  00FB  1FED               	btfss	___fldiv@grs+3,7
  5133  00FC  28FE               	goto	u3581
  5134  00FD  28FF               	goto	u3580
  5135  00FE                     u3581:	
  5136  00FE  2900               	goto	l2871
  5137  00FF                     u3580:	
  5138  00FF                     l2869:	
  5139  00FF  145A               	bsf	___fldiv@b,0
  5140  0100                     l2871:	
  5141  0100  3001               	movlw	1
  5142  0101  00DE               	movwf	??___fldiv
  5143  0102                     u3595:	
  5144  0102  1003               	clrc
  5145  0103  0DEA               	rlf	___fldiv@grs,f
  5146  0104  0DEB               	rlf	___fldiv@grs+1,f
  5147  0105  0DEC               	rlf	___fldiv@grs+2,f
  5148  0106  0DED               	rlf	___fldiv@grs+3,f
  5149  0107  0BDE               	decfsz	??___fldiv,f
  5150  0108  2902               	goto	u3595
  5151  0109                     l2873:	
  5152  0109  0859               	movf	___fldiv@a+3,w
  5153  010A  0266               	subwf	___fldiv@rem+3,w
  5154  010B  1D03               	skipz
  5155  010C  2917               	goto	u3605
  5156  010D  0858               	movf	___fldiv@a+2,w
  5157  010E  0265               	subwf	___fldiv@rem+2,w
  5158  010F  1D03               	skipz
  5159  0110  2917               	goto	u3605
  5160  0111  0857               	movf	___fldiv@a+1,w
  5161  0112  0264               	subwf	___fldiv@rem+1,w
  5162  0113  1D03               	skipz
  5163  0114  2917               	goto	u3605
  5164  0115  0856               	movf	___fldiv@a,w
  5165  0116  0263               	subwf	___fldiv@rem,w
  5166  0117                     u3605:	
  5167  0117  1C03               	skipc
  5168  0118  291A               	goto	u3601
  5169  0119  291B               	goto	u3600
  5170  011A                     u3601:	
  5171  011A  292A               	goto	l2879
  5172  011B                     u3600:	
  5173  011B                     l2875:	
  5174  011B  176D               	bsf	___fldiv@grs+3,6
  5175  011C                     l2877:	
  5176  011C  0856               	movf	___fldiv@a,w
  5177  011D  02E3               	subwf	___fldiv@rem,f
  5178  011E  0857               	movf	___fldiv@a+1,w
  5179  011F  1C03               	skipc
  5180  0120  0F57               	incfsz	___fldiv@a+1,w
  5181  0121  02E4               	subwf	___fldiv@rem+1,f
  5182  0122  0858               	movf	___fldiv@a+2,w
  5183  0123  1C03               	skipc
  5184  0124  0F58               	incfsz	___fldiv@a+2,w
  5185  0125  02E5               	subwf	___fldiv@rem+2,f
  5186  0126  0859               	movf	___fldiv@a+3,w
  5187  0127  1C03               	skipc
  5188  0128  0F59               	incfsz	___fldiv@a+3,w
  5189  0129  02E6               	subwf	___fldiv@rem+3,f
  5190  012A                     l2879:	
  5191  012A  3001               	movlw	1
  5192  012B  00DE               	movwf	??___fldiv
  5193  012C  085E               	movf	??___fldiv,w
  5194  012D  07EF               	addwf	___fldiv@aexp,f
  5195  012E                     l2881:	
  5196  012E  301A               	movlw	26
  5197  012F  026F               	subwf	___fldiv@aexp,w
  5198  0130  1C03               	skipc
  5199  0131  2933               	goto	u3611
  5200  0132  2934               	goto	u3610
  5201  0133                     u3611:	
  5202  0133  28E4               	goto	l2863
  5203  0134                     u3610:	
  5204  0134                     l2883:	
  5205  0134  0866               	movf	___fldiv@rem+3,w
  5206  0135  0465               	iorwf	___fldiv@rem+2,w
  5207  0136  0464               	iorwf	___fldiv@rem+1,w
  5208  0137  0463               	iorwf	___fldiv@rem,w
  5209  0138  1903               	skipnz
  5210  0139  293B               	goto	u3621
  5211  013A  293C               	goto	u3620
  5212  013B                     u3621:	
  5213  013B  295B               	goto	l2897
  5214  013C                     u3620:	
  5215  013C                     l2885:	
  5216  013C  146A               	bsf	___fldiv@grs,0
  5217  013D  295B               	goto	l2897
  5218  013E                     l2887:	
  5219  013E  3001               	movlw	1
  5220  013F  00DE               	movwf	??___fldiv
  5221  0140                     u3635:	
  5222  0140  1003               	clrc
  5223  0141  0DDA               	rlf	___fldiv@b,f
  5224  0142  0DDB               	rlf	___fldiv@b+1,f
  5225  0143  0DDC               	rlf	___fldiv@b+2,f
  5226  0144  0DDD               	rlf	___fldiv@b+3,f
  5227  0145  0BDE               	decfsz	??___fldiv,f
  5228  0146  2940               	goto	u3635
  5229  0147                     l2889:	
  5230  0147  1FED               	btfss	___fldiv@grs+3,7
  5231  0148  294A               	goto	u3641
  5232  0149  294B               	goto	u3640
  5233  014A                     u3641:	
  5234  014A  294C               	goto	l2893
  5235  014B                     u3640:	
  5236  014B                     l2891:	
  5237  014B  145A               	bsf	___fldiv@b,0
  5238  014C                     l2893:	
  5239  014C  3001               	movlw	1
  5240  014D  00DE               	movwf	??___fldiv
  5241  014E                     u3655:	
  5242  014E  1003               	clrc
  5243  014F  0DEA               	rlf	___fldiv@grs,f
  5244  0150  0DEB               	rlf	___fldiv@grs+1,f
  5245  0151  0DEC               	rlf	___fldiv@grs+2,f
  5246  0152  0DED               	rlf	___fldiv@grs+3,f
  5247  0153  0BDE               	decfsz	??___fldiv,f
  5248  0154  294E               	goto	u3655
  5249  0155                     l2895:	
  5250  0155  30FF               	movlw	255
  5251  0156  07E8               	addwf	___fldiv@new_exp,f
  5252  0157  1803               	skipnc
  5253  0158  0AE9               	incf	___fldiv@new_exp+1,f
  5254  0159  30FF               	movlw	255
  5255  015A  07E9               	addwf	___fldiv@new_exp+1,f
  5256  015B                     l2897:	
  5257  015B  1FDC               	btfss	___fldiv@b+2,7
  5258  015C  295E               	goto	u3661
  5259  015D  295F               	goto	u3660
  5260  015E                     u3661:	
  5261  015E  293E               	goto	l2887
  5262  015F                     u3660:	
  5263  015F                     l2899:	
  5264  015F  01EF               	clrf	___fldiv@aexp
  5265  0160                     l2901:	
  5266  0160  1FED               	btfss	___fldiv@grs+3,7
  5267  0161  2963               	goto	u3671
  5268  0162  2964               	goto	u3670
  5269  0163                     u3671:	
  5270  0163  2980               	goto	l2909
  5271  0164                     u3670:	
  5272  0164                     l2903:	
  5273  0164  30FF               	movlw	255
  5274  0165  056A               	andwf	___fldiv@grs,w
  5275  0166  00DE               	movwf	??___fldiv
  5276  0167  30FF               	movlw	255
  5277  0168  056B               	andwf	___fldiv@grs+1,w
  5278  0169  00DF               	movwf	??___fldiv+1
  5279  016A  30FF               	movlw	255
  5280  016B  056C               	andwf	___fldiv@grs+2,w
  5281  016C  00E0               	movwf	??___fldiv+2
  5282  016D  307F               	movlw	127
  5283  016E  056D               	andwf	___fldiv@grs+3,w
  5284  016F  00E1               	movwf	??___fldiv+3
  5285  0170  0861               	movf	??___fldiv+3,w
  5286  0171  0460               	iorwf	??___fldiv+2,w
  5287  0172  045F               	iorwf	??___fldiv+1,w
  5288  0173  045E               	iorwf	??___fldiv,w
  5289  0174  1903               	skipnz
  5290  0175  2977               	goto	u3681
  5291  0176  2978               	goto	u3680
  5292  0177                     u3681:	
  5293  0177  297B               	goto	l820
  5294  0178                     u3680:	
  5295  0178                     l2905:	
  5296  0178  01EF               	clrf	___fldiv@aexp
  5297  0179  0AEF               	incf	___fldiv@aexp,f
  5298  017A  2980               	goto	l2909
  5299  017B                     l820:	
  5300  017B  1C5A               	btfss	___fldiv@b,0
  5301  017C  297E               	goto	u3691
  5302  017D  297F               	goto	u3690
  5303  017E                     u3691:	
  5304  017E  2980               	goto	l2909
  5305  017F                     u3690:	
  5306  017F  2978               	goto	l2905
  5307  0180                     l2909:	
  5308  0180  086F               	movf	___fldiv@aexp,w
  5309  0181  1903               	btfsc	3,2
  5310  0182  2984               	goto	u3701
  5311  0183  2985               	goto	u3700
  5312  0184                     u3701:	
  5313  0184  29B6               	goto	l2919
  5314  0185                     u3700:	
  5315  0185                     l2911:	
  5316  0185  3001               	movlw	1
  5317  0186  07DA               	addwf	___fldiv@b,f
  5318  0187  3000               	movlw	0
  5319  0188  1803               	skipnc
  5320  0189  3001               	movlw	1
  5321  018A  07DB               	addwf	___fldiv@b+1,f
  5322  018B  3000               	movlw	0
  5323  018C  1803               	skipnc
  5324  018D  3001               	movlw	1
  5325  018E  07DC               	addwf	___fldiv@b+2,f
  5326  018F  3000               	movlw	0
  5327  0190  1803               	skipnc
  5328  0191  3001               	movlw	1
  5329  0192  07DD               	addwf	___fldiv@b+3,f
  5330  0193                     l2913:	
  5331  0193  1C5D               	btfss	___fldiv@b+3,0
  5332  0194  2996               	goto	u3711
  5333  0195  2997               	goto	u3710
  5334  0196                     u3711:	
  5335  0196  29B6               	goto	l2919
  5336  0197                     u3710:	
  5337  0197                     l2915:	
  5338  0197  085A               	movf	___fldiv@b,w
  5339  0198  00DE               	movwf	??___fldiv
  5340  0199  085B               	movf	___fldiv@b+1,w
  5341  019A  00DF               	movwf	??___fldiv+1
  5342  019B  085C               	movf	___fldiv@b+2,w
  5343  019C  00E0               	movwf	??___fldiv+2
  5344  019D  085D               	movf	___fldiv@b+3,w
  5345  019E  00E1               	movwf	??___fldiv+3
  5346  019F  3001               	movlw	1
  5347  01A0  00E2               	movwf	??___fldiv+4
  5348  01A1                     u3725:	
  5349  01A1  0D61               	rlf	??___fldiv+3,w
  5350  01A2  0CE1               	rrf	??___fldiv+3,f
  5351  01A3  0CE0               	rrf	??___fldiv+2,f
  5352  01A4  0CDF               	rrf	??___fldiv+1,f
  5353  01A5  0CDE               	rrf	??___fldiv,f
  5354  01A6                     u3720:	
  5355  01A6  0BE2               	decfsz	??___fldiv+4,f
  5356  01A7  29A1               	goto	u3725
  5357  01A8  0861               	movf	??___fldiv+3,w
  5358  01A9  00DD               	movwf	___fldiv@b+3
  5359  01AA  0860               	movf	??___fldiv+2,w
  5360  01AB  00DC               	movwf	___fldiv@b+2
  5361  01AC  085F               	movf	??___fldiv+1,w
  5362  01AD  00DB               	movwf	___fldiv@b+1
  5363  01AE  085E               	movf	??___fldiv,w
  5364  01AF  00DA               	movwf	___fldiv@b
  5365  01B0                     l2917:	
  5366  01B0  3001               	movlw	1
  5367  01B1  07E8               	addwf	___fldiv@new_exp,f
  5368  01B2  1803               	skipnc
  5369  01B3  0AE9               	incf	___fldiv@new_exp+1,f
  5370  01B4  3000               	movlw	0
  5371  01B5  07E9               	addwf	___fldiv@new_exp+1,f
  5372  01B6                     l2919:	
  5373  01B6  0869               	movf	___fldiv@new_exp+1,w
  5374  01B7  3A80               	xorlw	128
  5375  01B8  00FF               	movwf	btemp+1
  5376  01B9  3080               	movlw	128
  5377  01BA  027F               	subwf	btemp+1,w
  5378  01BB  1D03               	skipz
  5379  01BC  29BF               	goto	u3735
  5380  01BD  30FF               	movlw	255
  5381  01BE  0268               	subwf	___fldiv@new_exp,w
  5382  01BF                     u3735:	
  5383  01BF  1C03               	skipc
  5384  01C0  29C2               	goto	u3731
  5385  01C1  29C3               	goto	u3730
  5386  01C2                     u3731:	
  5387  01C2  29D1               	goto	l2923
  5388  01C3                     u3730:	
  5389  01C3                     l2921:	
  5390  01C3  30FF               	movlw	255
  5391  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  5392  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  5393  01C6  00E8               	movwf	___fldiv@new_exp
  5394  01C7  3000               	movlw	0
  5395  01C8  00E9               	movwf	___fldiv@new_exp+1
  5396  01C9  3000               	movlw	0
  5397  01CA  00DD               	movwf	___fldiv@b+3
  5398  01CB  3000               	movlw	0
  5399  01CC  00DC               	movwf	___fldiv@b+2
  5400  01CD  3000               	movlw	0
  5401  01CE  00DB               	movwf	___fldiv@b+1
  5402  01CF  3000               	movlw	0
  5403  01D0  00DA               	movwf	___fldiv@b
  5404  01D1                     l2923:	
  5405  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  5406  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  5407  01D3  0869               	movf	___fldiv@new_exp+1,w
  5408  01D4  3A80               	xorlw	128
  5409  01D5  00FF               	movwf	btemp+1
  5410  01D6  3080               	movlw	128
  5411  01D7  027F               	subwf	btemp+1,w
  5412  01D8  1D03               	skipz
  5413  01D9  29DC               	goto	u3745
  5414  01DA  3001               	movlw	1
  5415  01DB  0268               	subwf	___fldiv@new_exp,w
  5416  01DC                     u3745:	
  5417  01DC  1803               	skipnc
  5418  01DD  29DF               	goto	u3741
  5419  01DE  29E0               	goto	u3740
  5420  01DF                     u3741:	
  5421  01DF  29ED               	goto	l826
  5422  01E0                     u3740:	
  5423  01E0                     l2925:	
  5424  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  5425  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  5426  01E2  01E8               	clrf	___fldiv@new_exp
  5427  01E3  01E9               	clrf	___fldiv@new_exp+1
  5428  01E4                     l2927:	
  5429  01E4  3000               	movlw	0
  5430  01E5  00DD               	movwf	___fldiv@b+3
  5431  01E6  3000               	movlw	0
  5432  01E7  00DC               	movwf	___fldiv@b+2
  5433  01E8  3000               	movlw	0
  5434  01E9  00DB               	movwf	___fldiv@b+1
  5435  01EA  3000               	movlw	0
  5436  01EB  00DA               	movwf	___fldiv@b
  5437  01EC                     l2929:	
  5438  01EC  01E7               	clrf	___fldiv@sign
  5439  01ED                     l826:	
  5440  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  5441  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  5442  01EF  0868               	movf	___fldiv@new_exp,w
  5443  01F0  00DE               	movwf	??___fldiv
  5444  01F1  085E               	movf	??___fldiv,w
  5445  01F2  00EE               	movwf	___fldiv@bexp
  5446  01F3                     l2931:	
  5447  01F3  1C6E               	btfss	___fldiv@bexp,0
  5448  01F4  29F6               	goto	u3751
  5449  01F5  29F7               	goto	u3750
  5450  01F6                     u3751:	
  5451  01F6  29F9               	goto	l2935
  5452  01F7                     u3750:	
  5453  01F7                     l2933:	
  5454  01F7  17DC               	bsf	___fldiv@b+2,7
  5455  01F8  29FD               	goto	l828
  5456  01F9                     l2935:	
  5457  01F9  307F               	movlw	127
  5458  01FA  00DE               	movwf	??___fldiv
  5459  01FB  085E               	movf	??___fldiv,w
  5460  01FC  05DC               	andwf	___fldiv@b+2,f
  5461  01FD                     l828:	
  5462  01FD  086E               	movf	___fldiv@bexp,w
  5463  01FE  00DE               	movwf	??___fldiv
  5464  01FF  1003               	clrc
  5465  0200  0C5E               	rrf	??___fldiv,w
  5466  0201  00DF               	movwf	??___fldiv+1
  5467  0202  085F               	movf	??___fldiv+1,w
  5468  0203  00DD               	movwf	___fldiv@b+3
  5469  0204  0867               	movf	___fldiv@sign,w
  5470  0205  00DE               	movwf	??___fldiv
  5471  0206  085E               	movf	??___fldiv,w
  5472  0207  04DD               	iorwf	___fldiv@b+3,f
  5473  0208  28A1               	goto	l2843
  5474  0209                     l806:	
  5475  0209  0008               	return
  5476  020A                     __end_of___fldiv:	
  5477                           
  5478                           	psect	text16
  5479  132A                     __ptext16:	
  5480 ;; *************** function _ble *****************
  5481 ;; Defined at:
  5482 ;;		line 329 in file "main.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;		None
  5485 ;; Auto vars:     Size  Location     Type
  5486 ;;		None
  5487 ;; Return value:  Size  Location     Type
  5488 ;;                  1    wreg      void 
  5489 ;; Registers used:
  5490 ;;		None
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/0
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5496 ;;      Params:         0       0       0       0       0
  5497 ;;      Locals:         0       0       0       0       0
  5498 ;;      Temps:          0       0       0       0       0
  5499 ;;      Totals:         0       0       0       0       0
  5500 ;;Total ram usage:        0 bytes
  5501 ;; Hardware stack levels used:    1
  5502 ;; This function calls:
  5503 ;;		Nothing
  5504 ;; This function is called by:
  5505 ;;		_main
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           
  5510                           ;psect for function _ble
  5511  132A                     _ble:	
  5512  132A                     l3489:	
  5513                           ;incstack = 0
  5514                           ; Regs used in _ble: []
  5515                           
  5516                           
  5517                           ;main.c: 330:     nextState=hL;
  5518  132A  1683               	bsf	3,5	;RP0=1, select bank1
  5519  132B  1303               	bcf	3,6	;RP1=0, select bank1
  5520  132C  01CE               	clrf	_nextState^(0+128)
  5521  132D  0ACE               	incf	_nextState^(0+128),f
  5522  132E                     l341:	
  5523  132E  0008               	return
  5524  132F                     __end_of_ble:	
  5525                           
  5526                           	psect	text17
  5527  13A6                     __ptext17:	
  5528 ;; *************** function _OFF *****************
  5529 ;; Defined at:
  5530 ;;		line 298 in file "main.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;		None
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;		None
  5535 ;; Return value:  Size  Location     Type
  5536 ;;                  1    wreg      void 
  5537 ;; Registers used:
  5538 ;;		wreg, status,2, status,0, pclath, cstack
  5539 ;; Tracked objects:
  5540 ;;		On entry : 0/0
  5541 ;;		On exit  : 0/0
  5542 ;;		Unchanged: 0/0
  5543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5544 ;;      Params:         0       0       0       0       0
  5545 ;;      Locals:         0       0       0       0       0
  5546 ;;      Temps:          1       0       0       0       0
  5547 ;;      Totals:         1       0       0       0       0
  5548 ;;Total ram usage:        1 bytes
  5549 ;; Hardware stack levels used:    1
  5550 ;; Hardware stack levels required when called:    3
  5551 ;; This function calls:
  5552 ;;		_Lcd_Set_Cursor
  5553 ;;		_Lcd_Write_Char
  5554 ;; This function is called by:
  5555 ;;		_main
  5556 ;; This function uses a non-reentrant model
  5557 ;;
  5558                           
  5559                           
  5560                           ;psect for function _OFF
  5561  13A6                     _OFF:	
  5562  13A6                     l3451:	
  5563                           ;incstack = 0
  5564                           ; Regs used in _OFF: [wreg+status,2+status,0+pclath+cstack]
  5565                           
  5566                           
  5567                           ;main.c: 299:     RB3=0;
  5568  13A6  1283               	bcf	3,5	;RP0=0, select bank0
  5569  13A7  1303               	bcf	3,6	;RP1=0, select bank0
  5570  13A8  1186               	bcf	6,3	;volatile
  5571                           
  5572                           ;main.c: 300:     RB4=0;
  5573  13A9  1206               	bcf	6,4	;volatile
  5574                           
  5575                           ;main.c: 301:     RB5=0;
  5576  13AA  1286               	bcf	6,5	;volatile
  5577  13AB                     l3453:	
  5578                           
  5579                           ;main.c: 302:     voltage=0;
  5580  13AB  1683               	bsf	3,5	;RP0=1, select bank1
  5581  13AC  1303               	bcf	3,6	;RP1=0, select bank1
  5582  13AD  01BE               	clrf	_voltage^(0+128)
  5583  13AE  01BF               	clrf	(_voltage+1)^(0+128)
  5584  13AF                     l3455:	
  5585                           
  5586                           ;main.c: 303:     Lcd_Set_Cursor(1,16);
  5587  13AF  3010               	movlw	16
  5588  13B0  00FB               	movwf	??_OFF
  5589  13B1  087B               	movf	??_OFF,w
  5590  13B2  00F4               	movwf	Lcd_Set_Cursor@b
  5591  13B3  3001               	movlw	1
  5592  13B4  160A  118A  256C  160A  118A  	fcall	_Lcd_Set_Cursor
  5593  13B9                     l3457:	
  5594                           
  5595                           ;main.c: 304:     Lcd_Write_Char('-');
  5596  13B9  302D               	movlw	45
  5597  13BA  160A  118A  24AD  160A  118A  	fcall	_Lcd_Write_Char
  5598  13BF                     l3459:	
  5599                           
  5600                           ;main.c: 305:     nextState=cM;
  5601  13BF  300C               	movlw	12
  5602  13C0  00FB               	movwf	??_OFF
  5603  13C1  087B               	movf	??_OFF,w
  5604  13C2  1683               	bsf	3,5	;RP0=1, select bank1
  5605  13C3  1303               	bcf	3,6	;RP1=0, select bank1
  5606  13C4  00CE               	movwf	_nextState^(0+128)
  5607  13C5                     l327:	
  5608  13C5  0008               	return
  5609  13C6                     __end_of_OFF:	
  5610                           
  5611                           	psect	text18
  5612  166E                     __ptext18:	
  5613 ;; *************** function _Lcd_Init *****************
  5614 ;; Defined at:
  5615 ;;		line 63 in file "./lcd.h"
  5616 ;; Parameters:    Size  Location     Type
  5617 ;;		None
  5618 ;; Auto vars:     Size  Location     Type
  5619 ;;		None
  5620 ;; Return value:  Size  Location     Type
  5621 ;;                  1    wreg      void 
  5622 ;; Registers used:
  5623 ;;		wreg, status,2, status,0, pclath, cstack
  5624 ;; Tracked objects:
  5625 ;;		On entry : 0/0
  5626 ;;		On exit  : 0/0
  5627 ;;		Unchanged: 0/0
  5628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5629 ;;      Params:         0       0       0       0       0
  5630 ;;      Locals:         0       0       0       0       0
  5631 ;;      Temps:          2       0       0       0       0
  5632 ;;      Totals:         2       0       0       0       0
  5633 ;;Total ram usage:        2 bytes
  5634 ;; Hardware stack levels used:    1
  5635 ;; Hardware stack levels required when called:    2
  5636 ;; This function calls:
  5637 ;;		_Lcd_Cmd
  5638 ;;		_Lcd_Port
  5639 ;; This function is called by:
  5640 ;;		_main
  5641 ;; This function uses a non-reentrant model
  5642 ;;
  5643                           
  5644                           
  5645                           ;psect for function _Lcd_Init
  5646  166E                     _Lcd_Init:	
  5647  166E                     l3125:	
  5648                           ;incstack = 0
  5649                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  5650                           
  5651                           
  5652                           ;./lcd.h: 65:   Lcd_Port(0x00);
  5653  166E  3000               	movlw	0
  5654  166F  160A  118A  23C6  160A  118A  	fcall	_Lcd_Port
  5655  1674                     l3127:	
  5656                           
  5657                           ;./lcd.h: 66:    _delay((unsigned long)((20)*(20000000/4000.0)));
  5658  1674  3082               	movlw	130
  5659  1675  00F5               	movwf	??_Lcd_Init+1
  5660  1676  30DD               	movlw	221
  5661  1677  00F4               	movwf	??_Lcd_Init
  5662  1678                     u5117:	
  5663  1678  0BF4               	decfsz	??_Lcd_Init,f
  5664  1679  2E78               	goto	u5117
  5665  167A  0BF5               	decfsz	??_Lcd_Init+1,f
  5666  167B  2E78               	goto	u5117
  5667  167C  2E7D               	nop2
  5668  167D                     l3129:	
  5669                           
  5670                           ;./lcd.h: 67:   Lcd_Cmd(0x03);
  5671  167D  3003               	movlw	3
  5672  167E  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  5673                           
  5674                           ;./lcd.h: 68:  _delay((unsigned long)((5)*(20000000/4000.0)));
  5675  1683  3021               	movlw	33
  5676  1684  00F5               	movwf	??_Lcd_Init+1
  5677  1685  3076               	movlw	118
  5678  1686  00F4               	movwf	??_Lcd_Init
  5679  1687                     u5127:	
  5680  1687  0BF4               	decfsz	??_Lcd_Init,f
  5681  1688  2E87               	goto	u5127
  5682  1689  0BF5               	decfsz	??_Lcd_Init+1,f
  5683  168A  2E87               	goto	u5127
  5684  168B  0000               	nop
  5685  168C                     l3131:	
  5686                           
  5687                           ;./lcd.h: 69:   Lcd_Cmd(0x03);
  5688  168C  3003               	movlw	3
  5689  168D  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  5690  1692                     l3133:	
  5691                           
  5692                           ;./lcd.h: 70:  _delay((unsigned long)((11)*(20000000/4000.0)));
  5693  1692  3048               	movlw	72
  5694  1693  00F5               	movwf	??_Lcd_Init+1
  5695  1694  306C               	movlw	108
  5696  1695  00F4               	movwf	??_Lcd_Init
  5697  1696                     u5137:	
  5698  1696  0BF4               	decfsz	??_Lcd_Init,f
  5699  1697  2E96               	goto	u5137
  5700  1698  0BF5               	decfsz	??_Lcd_Init+1,f
  5701  1699  2E96               	goto	u5137
  5702  169A  0000               	nop
  5703                           
  5704                           ;./lcd.h: 71:   Lcd_Cmd(0x03);
  5705  169B  3003               	movlw	3
  5706  169C  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  5707                           
  5708                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  5709  16A1  3002               	movlw	2
  5710  16A2  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  5711                           
  5712                           ;./lcd.h: 74:   Lcd_Cmd(0x02);
  5713  16A7  3002               	movlw	2
  5714  16A8  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  5715                           
  5716                           ;./lcd.h: 75:   Lcd_Cmd(0x08);
  5717  16AD  3008               	movlw	8
  5718  16AE  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  5719                           
  5720                           ;./lcd.h: 76:   Lcd_Cmd(0x00);
  5721  16B3  3000               	movlw	0
  5722  16B4  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  5723                           
  5724                           ;./lcd.h: 77:   Lcd_Cmd(0x0C);
  5725  16B9  300C               	movlw	12
  5726  16BA  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  5727                           
  5728                           ;./lcd.h: 78:   Lcd_Cmd(0x00);
  5729  16BF  3000               	movlw	0
  5730  16C0  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  5731                           
  5732                           ;./lcd.h: 79:   Lcd_Cmd(0x06);
  5733  16C5  3006               	movlw	6
  5734  16C6  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  5735  16CB                     l102:	
  5736  16CB  0008               	return
  5737  16CC                     __end_of_Lcd_Init:	
  5738                           
  5739                           	psect	text19
  5740  1748                     __ptext19:	
  5741 ;; *************** function _LCD *****************
  5742 ;; Defined at:
  5743 ;;		line 316 in file "main.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;		None
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;		None
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  1    wreg      void 
  5750 ;; Registers used:
  5751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5757 ;;      Params:         0       0       0       0       0
  5758 ;;      Locals:         0       0       0       0       0
  5759 ;;      Temps:          0       0       1       0       0
  5760 ;;      Totals:         0       0       1       0       0
  5761 ;;Total ram usage:        1 bytes
  5762 ;; Hardware stack levels used:    1
  5763 ;; Hardware stack levels required when called:    4
  5764 ;; This function calls:
  5765 ;;		_Lcd_Set_Cursor
  5766 ;;		_Lcd_Write_Int
  5767 ;;		_Lcd_Write_String
  5768 ;;		___flmul
  5769 ;;		___fltol
  5770 ;;		___wmul
  5771 ;;		___xxtofl
  5772 ;; This function is called by:
  5773 ;;		_main
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776                           
  5777                           
  5778                           ;psect for function _LCD
  5779  1748                     _LCD:	
  5780  1748                     l3473:	
  5781                           ;incstack = 0
  5782                           ; Regs used in _LCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5783                           
  5784                           
  5785                           ;main.c: 317:     Lcd_Set_Cursor(2,1);
  5786  1748  01F4               	clrf	Lcd_Set_Cursor@b
  5787  1749  0AF4               	incf	Lcd_Set_Cursor@b,f
  5788  174A  3002               	movlw	2
  5789  174B  160A  118A  256C  160A  118A  	fcall	_Lcd_Set_Cursor
  5790  1750                     l3475:	
  5791                           
  5792                           ;main.c: 318:     Lcd_Write_Int(0.5*voltage);
  5793  1750  1683               	bsf	3,5	;RP0=1, select bank1
  5794  1751  1303               	bcf	3,6	;RP1=0, select bank1
  5795  1752  083E               	movf	_voltage^(0+128),w
  5796  1753  00F0               	movwf	___xxtofl@val
  5797  1754  083F               	movf	(_voltage+1)^(0+128),w
  5798  1755  00F1               	movwf	___xxtofl@val+1
  5799  1756  01F2               	clrf	___xxtofl@val+2
  5800  1757  01F3               	clrf	___xxtofl@val+3
  5801  1758  3000               	movlw	0
  5802  1759  120A  158A  203C  160A  118A  	fcall	___xxtofl
  5803  175E  0873               	movf	?___xxtofl+3,w
  5804  175F  1283               	bcf	3,5	;RP0=0, select bank0
  5805  1760  1303               	bcf	3,6	;RP1=0, select bank0
  5806  1761  00A7               	movwf	___flmul@a+3
  5807  1762  0872               	movf	?___xxtofl+2,w
  5808  1763  00A6               	movwf	___flmul@a+2
  5809  1764  0871               	movf	?___xxtofl+1,w
  5810  1765  00A5               	movwf	___flmul@a+1
  5811  1766  0870               	movf	?___xxtofl,w
  5812  1767  00A4               	movwf	___flmul@a
  5813  1768  303F               	movlw	63
  5814  1769  00A3               	movwf	___flmul@b+3
  5815  176A  3000               	movlw	0
  5816  176B  00A2               	movwf	___flmul@b+2
  5817  176C  3000               	movlw	0
  5818  176D  00A1               	movwf	___flmul@b+1
  5819  176E  3000               	movlw	0
  5820  176F  00A0               	movwf	___flmul@b
  5821  1770  120A  118A  2492  160A  118A  	fcall	___flmul
  5822  1775  1283               	bcf	3,5	;RP0=0, select bank0
  5823  1776  1303               	bcf	3,6	;RP1=0, select bank0
  5824  1777  0823               	movf	?___flmul+3,w
  5825  1778  1683               	bsf	3,5	;RP0=1, select bank1
  5826  1779  1303               	bcf	3,6	;RP1=0, select bank1
  5827  177A  00A3               	movwf	(___fltol@f1+3)^(0+128)
  5828  177B  1283               	bcf	3,5	;RP0=0, select bank0
  5829  177C  1303               	bcf	3,6	;RP1=0, select bank0
  5830  177D  0822               	movf	?___flmul+2,w
  5831  177E  1683               	bsf	3,5	;RP0=1, select bank1
  5832  177F  1303               	bcf	3,6	;RP1=0, select bank1
  5833  1780  00A2               	movwf	(___fltol@f1+2)^(0+128)
  5834  1781  1283               	bcf	3,5	;RP0=0, select bank0
  5835  1782  1303               	bcf	3,6	;RP1=0, select bank0
  5836  1783  0821               	movf	?___flmul+1,w
  5837  1784  1683               	bsf	3,5	;RP0=1, select bank1
  5838  1785  1303               	bcf	3,6	;RP1=0, select bank1
  5839  1786  00A1               	movwf	(___fltol@f1+1)^(0+128)
  5840  1787  1283               	bcf	3,5	;RP0=0, select bank0
  5841  1788  1303               	bcf	3,6	;RP1=0, select bank0
  5842  1789  0820               	movf	?___flmul,w
  5843  178A  1683               	bsf	3,5	;RP0=1, select bank1
  5844  178B  1303               	bcf	3,6	;RP1=0, select bank1
  5845  178C  00A0               	movwf	___fltol@f1^(0+128)
  5846  178D  160A  118A  26CC  160A  118A  	fcall	___fltol
  5847  1792  1683               	bsf	3,5	;RP0=1, select bank1
  5848  1793  1303               	bcf	3,6	;RP1=0, select bank1
  5849  1794  0821               	movf	(?___fltol+1)^(0+128),w
  5850  1795  00AC               	movwf	(Lcd_Write_Int@num+1)^(0+128)
  5851  1796  0820               	movf	?___fltol^(0+128),w
  5852  1797  00AB               	movwf	Lcd_Write_Int@num^(0+128)
  5853  1798  160A  118A  23E8  160A  118A  	fcall	_Lcd_Write_Int
  5854  179D                     l3477:	
  5855                           
  5856                           ;main.c: 319:     Lcd_Write_String("V");
  5857  179D  303A               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  5858  179E  00F5               	movwf	Lcd_Write_String@a
  5859  179F  3080               	movlw	128
  5860  17A0  00F6               	movwf	Lcd_Write_String@a+1
  5861  17A1  160A  118A  24E6  160A  118A  	fcall	_Lcd_Write_String
  5862                           
  5863                           ;main.c: 320:     Lcd_Set_Cursor(2,7);
  5864  17A6  3007               	movlw	7
  5865  17A7  1683               	bsf	3,5	;RP0=1, select bank1
  5866  17A8  1303               	bcf	3,6	;RP1=0, select bank1
  5867  17A9  00B6               	movwf	??_LCD^(0+128)
  5868  17AA  0836               	movf	??_LCD^(0+128),w
  5869  17AB  00F4               	movwf	Lcd_Set_Cursor@b
  5870  17AC  3002               	movlw	2
  5871  17AD  160A  118A  256C  160A  118A  	fcall	_Lcd_Set_Cursor
  5872  17B2                     l3479:	
  5873                           
  5874                           ;main.c: 321:     Lcd_Write_Int(current);
  5875  17B2  1683               	bsf	3,5	;RP0=1, select bank1
  5876  17B3  1303               	bcf	3,6	;RP1=0, select bank1
  5877  17B4  0850               	movf	(_current+1)^(0+128),w
  5878  17B5  00AC               	movwf	(Lcd_Write_Int@num+1)^(0+128)
  5879  17B6  084F               	movf	_current^(0+128),w
  5880  17B7  00AB               	movwf	Lcd_Write_Int@num^(0+128)
  5881  17B8  160A  118A  23E8  160A  118A  	fcall	_Lcd_Write_Int
  5882  17BD                     l3481:	
  5883                           
  5884                           ;main.c: 322:     Lcd_Write_String("A");
  5885  17BD  3038               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  5886  17BE  00F5               	movwf	Lcd_Write_String@a
  5887  17BF  3080               	movlw	128
  5888  17C0  00F6               	movwf	Lcd_Write_String@a+1
  5889  17C1  160A  118A  24E6  160A  118A  	fcall	_Lcd_Write_String
  5890                           
  5891                           ;main.c: 323:     Lcd_Set_Cursor(2,11);
  5892  17C6  300B               	movlw	11
  5893  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  5894  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  5895  17C9  00B6               	movwf	??_LCD^(0+128)
  5896  17CA  0836               	movf	??_LCD^(0+128),w
  5897  17CB  00F4               	movwf	Lcd_Set_Cursor@b
  5898  17CC  3002               	movlw	2
  5899  17CD  160A  118A  256C  160A  118A  	fcall	_Lcd_Set_Cursor
  5900                           
  5901                           ;main.c: 324:     power=current*voltage;
  5902  17D2  1683               	bsf	3,5	;RP0=1, select bank1
  5903  17D3  1303               	bcf	3,6	;RP1=0, select bank1
  5904  17D4  0850               	movf	(_current+1)^(0+128),w
  5905  17D5  00F1               	movwf	___wmul@multiplier+1
  5906  17D6  084F               	movf	_current^(0+128),w
  5907  17D7  00F0               	movwf	___wmul@multiplier
  5908  17D8  083F               	movf	(_voltage+1)^(0+128),w
  5909  17D9  00F3               	movwf	___wmul@multiplicand+1
  5910  17DA  083E               	movf	_voltage^(0+128),w
  5911  17DB  00F2               	movwf	___wmul@multiplicand
  5912  17DC  160A  118A  2430  160A  118A  	fcall	___wmul
  5913  17E1  0871               	movf	?___wmul+1,w
  5914  17E2  1683               	bsf	3,5	;RP0=1, select bank1
  5915  17E3  1303               	bcf	3,6	;RP1=0, select bank1
  5916  17E4  00BD               	movwf	(_power+1)^(0+128)
  5917  17E5  0870               	movf	?___wmul,w
  5918  17E6  00BC               	movwf	_power^(0+128)
  5919  17E7                     l3483:	
  5920                           
  5921                           ;main.c: 325:     Lcd_Write_Int(power);
  5922  17E7  083D               	movf	(_power+1)^(0+128),w
  5923  17E8  00AC               	movwf	(Lcd_Write_Int@num+1)^(0+128)
  5924  17E9  083C               	movf	_power^(0+128),w
  5925  17EA  00AB               	movwf	Lcd_Write_Int@num^(0+128)
  5926  17EB  160A  118A  23E8  160A  118A  	fcall	_Lcd_Write_Int
  5927  17F0                     l3485:	
  5928                           
  5929                           ;main.c: 326:     Lcd_Write_String("W");
  5930  17F0  303C               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  5931  17F1  00F5               	movwf	Lcd_Write_String@a
  5932  17F2  3080               	movlw	128
  5933  17F3  00F6               	movwf	Lcd_Write_String@a+1
  5934  17F4  160A  118A  24E6  160A  118A  	fcall	_Lcd_Write_String
  5935  17F9                     l3487:	
  5936                           
  5937                           ;main.c: 327:     nextState=BLE;
  5938  17F9  300F               	movlw	15
  5939  17FA  1683               	bsf	3,5	;RP0=1, select bank1
  5940  17FB  1303               	bcf	3,6	;RP1=0, select bank1
  5941  17FC  00B6               	movwf	??_LCD^(0+128)
  5942  17FD  0836               	movf	??_LCD^(0+128),w
  5943  17FE  00CE               	movwf	_nextState^(0+128)
  5944  17FF                     l338:	
  5945  17FF  0008               	return
  5946  1800                     __end_of_LCD:	
  5947                           
  5948                           	psect	text20
  5949  083C                     __ptext20:	
  5950 ;; *************** function ___xxtofl *****************
  5951 ;; Defined at:
  5952 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  5953 ;; Parameters:    Size  Location     Type
  5954 ;;  sign            1    wreg     unsigned char 
  5955 ;;  val             4    0[COMMON] long 
  5956 ;; Auto vars:     Size  Location     Type
  5957 ;;  sign            1    8[COMMON] unsigned char 
  5958 ;;  arg             4   10[COMMON] unsigned long 
  5959 ;;  exp             1    9[COMMON] unsigned char 
  5960 ;; Return value:  Size  Location     Type
  5961 ;;                  4    0[COMMON] unsigned char 
  5962 ;; Registers used:
  5963 ;;		wreg, status,2, status,0
  5964 ;; Tracked objects:
  5965 ;;		On entry : 0/0
  5966 ;;		On exit  : 0/0
  5967 ;;		Unchanged: 0/0
  5968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5969 ;;      Params:         4       0       0       0       0
  5970 ;;      Locals:         6       0       0       0       0
  5971 ;;      Temps:          4       0       0       0       0
  5972 ;;      Totals:        14       0       0       0       0
  5973 ;;Total ram usage:       14 bytes
  5974 ;; Hardware stack levels used:    1
  5975 ;; This function calls:
  5976 ;;		Nothing
  5977 ;; This function is called by:
  5978 ;;		_currentMeasurement
  5979 ;;		_LCD
  5980 ;; This function uses a non-reentrant model
  5981 ;;
  5982                           
  5983                           
  5984                           ;psect for function ___xxtofl
  5985  083C                     ___xxtofl:	
  5986                           
  5987                           ;incstack = 0
  5988                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5989                           ;___xxtofl@sign stored from wreg
  5990  083C  00F8               	movwf	___xxtofl@sign
  5991  083D                     l3081:	
  5992  083D  0878               	movf	___xxtofl@sign,w
  5993  083E  1903               	btfsc	3,2
  5994  083F  2841               	goto	u4131
  5995  0840  2842               	goto	u4130
  5996  0841                     u4131:	
  5997  0841  2856               	goto	l3087
  5998  0842                     u4130:	
  5999  0842                     l3083:	
  6000  0842  1FF3               	btfss	___xxtofl@val+3,7
  6001  0843  2845               	goto	u4141
  6002  0844  2846               	goto	u4140
  6003  0845                     u4141:	
  6004  0845  2856               	goto	l3087
  6005  0846                     u4140:	
  6006  0846                     l3085:	
  6007  0846  0970               	comf	___xxtofl@val,w
  6008  0847  00FA               	movwf	___xxtofl@arg
  6009  0848  0971               	comf	___xxtofl@val+1,w
  6010  0849  00FB               	movwf	___xxtofl@arg+1
  6011  084A  0972               	comf	___xxtofl@val+2,w
  6012  084B  00FC               	movwf	___xxtofl@arg+2
  6013  084C  0973               	comf	___xxtofl@val+3,w
  6014  084D  00FD               	movwf	___xxtofl@arg+3
  6015  084E  0AFA               	incf	___xxtofl@arg,f
  6016  084F  1903               	skipnz
  6017  0850  0AFB               	incf	___xxtofl@arg+1,f
  6018  0851  1903               	skipnz
  6019  0852  0AFC               	incf	___xxtofl@arg+2,f
  6020  0853  1903               	skipnz
  6021  0854  0AFD               	incf	___xxtofl@arg+3,f
  6022  0855  285E               	goto	l882
  6023  0856                     l3087:	
  6024  0856  0873               	movf	___xxtofl@val+3,w
  6025  0857  00FD               	movwf	___xxtofl@arg+3
  6026  0858  0872               	movf	___xxtofl@val+2,w
  6027  0859  00FC               	movwf	___xxtofl@arg+2
  6028  085A  0871               	movf	___xxtofl@val+1,w
  6029  085B  00FB               	movwf	___xxtofl@arg+1
  6030  085C  0870               	movf	___xxtofl@val,w
  6031  085D  00FA               	movwf	___xxtofl@arg
  6032  085E                     l882:	
  6033  085E  0873               	movf	___xxtofl@val+3,w
  6034  085F  0472               	iorwf	___xxtofl@val+2,w
  6035  0860  0471               	iorwf	___xxtofl@val+1,w
  6036  0861  0470               	iorwf	___xxtofl@val,w
  6037  0862  1D03               	skipz
  6038  0863  2865               	goto	u4151
  6039  0864  2866               	goto	u4150
  6040  0865                     u4151:	
  6041  0865  286F               	goto	l3093
  6042  0866                     u4150:	
  6043  0866                     l3089:	
  6044  0866  3000               	movlw	0
  6045  0867  00F3               	movwf	?___xxtofl+3
  6046  0868  3000               	movlw	0
  6047  0869  00F2               	movwf	?___xxtofl+2
  6048  086A  3000               	movlw	0
  6049  086B  00F1               	movwf	?___xxtofl+1
  6050  086C  3000               	movlw	0
  6051  086D  00F0               	movwf	?___xxtofl
  6052  086E  28F5               	goto	l884
  6053  086F                     l3093:	
  6054  086F  3096               	movlw	150
  6055  0870  00F4               	movwf	??___xxtofl
  6056  0871  0874               	movf	??___xxtofl,w
  6057  0872  00F9               	movwf	___xxtofl@exp
  6058  0873  2881               	goto	l3097
  6059  0874                     l3095:	
  6060  0874  3001               	movlw	1
  6061  0875  00F4               	movwf	??___xxtofl
  6062  0876  0874               	movf	??___xxtofl,w
  6063  0877  07F9               	addwf	___xxtofl@exp,f
  6064  0878  3001               	movlw	1
  6065  0879                     u4165:	
  6066  0879  1003               	clrc
  6067  087A  0CFD               	rrf	___xxtofl@arg+3,f
  6068  087B  0CFC               	rrf	___xxtofl@arg+2,f
  6069  087C  0CFB               	rrf	___xxtofl@arg+1,f
  6070  087D  0CFA               	rrf	___xxtofl@arg,f
  6071  087E  3EFF               	addlw	-1
  6072  087F  1D03               	skipz
  6073  0880  2879               	goto	u4165
  6074  0881                     l3097:	
  6075  0881  30FE               	movlw	254
  6076  0882  057D               	andwf	___xxtofl@arg+3,w
  6077  0883  1D03               	btfss	3,2
  6078  0884  2886               	goto	u4171
  6079  0885  2887               	goto	u4170
  6080  0886                     u4171:	
  6081  0886  2874               	goto	l3095
  6082  0887                     u4170:	
  6083  0887  28A3               	goto	l888
  6084  0888                     l3099:	
  6085  0888  3001               	movlw	1
  6086  0889  00F4               	movwf	??___xxtofl
  6087  088A  0874               	movf	??___xxtofl,w
  6088  088B  07F9               	addwf	___xxtofl@exp,f
  6089  088C                     l3101:	
  6090  088C  3001               	movlw	1
  6091  088D  07FA               	addwf	___xxtofl@arg,f
  6092  088E  3000               	movlw	0
  6093  088F  1803               	skipnc
  6094  0890  3001               	movlw	1
  6095  0891  07FB               	addwf	___xxtofl@arg+1,f
  6096  0892  3000               	movlw	0
  6097  0893  1803               	skipnc
  6098  0894  3001               	movlw	1
  6099  0895  07FC               	addwf	___xxtofl@arg+2,f
  6100  0896  3000               	movlw	0
  6101  0897  1803               	skipnc
  6102  0898  3001               	movlw	1
  6103  0899  07FD               	addwf	___xxtofl@arg+3,f
  6104  089A                     l3103:	
  6105  089A  3001               	movlw	1
  6106  089B                     u4185:	
  6107  089B  1003               	clrc
  6108  089C  0CFD               	rrf	___xxtofl@arg+3,f
  6109  089D  0CFC               	rrf	___xxtofl@arg+2,f
  6110  089E  0CFB               	rrf	___xxtofl@arg+1,f
  6111  089F  0CFA               	rrf	___xxtofl@arg,f
  6112  08A0  3EFF               	addlw	-1
  6113  08A1  1D03               	skipz
  6114  08A2  289B               	goto	u4185
  6115  08A3                     l888:	
  6116  08A3  30FF               	movlw	255
  6117  08A4  057D               	andwf	___xxtofl@arg+3,w
  6118  08A5  1D03               	btfss	3,2
  6119  08A6  28A8               	goto	u4191
  6120  08A7  28A9               	goto	u4190
  6121  08A8                     u4191:	
  6122  08A8  2888               	goto	l3099
  6123  08A9                     u4190:	
  6124  08A9  28B5               	goto	l3107
  6125  08AA                     l3105:	
  6126  08AA  3001               	movlw	1
  6127  08AB  02F9               	subwf	___xxtofl@exp,f
  6128  08AC  3001               	movlw	1
  6129  08AD  00F4               	movwf	??___xxtofl
  6130  08AE                     u4205:	
  6131  08AE  1003               	clrc
  6132  08AF  0DFA               	rlf	___xxtofl@arg,f
  6133  08B0  0DFB               	rlf	___xxtofl@arg+1,f
  6134  08B1  0DFC               	rlf	___xxtofl@arg+2,f
  6135  08B2  0DFD               	rlf	___xxtofl@arg+3,f
  6136  08B3  0BF4               	decfsz	??___xxtofl,f
  6137  08B4  28AE               	goto	u4205
  6138  08B5                     l3107:	
  6139  08B5  1BFC               	btfsc	___xxtofl@arg+2,7
  6140  08B6  28B8               	goto	u4211
  6141  08B7  28B9               	goto	u4210
  6142  08B8                     u4211:	
  6143  08B8  28BF               	goto	l895
  6144  08B9                     u4210:	
  6145  08B9                     l3109:	
  6146  08B9  3002               	movlw	2
  6147  08BA  0279               	subwf	___xxtofl@exp,w
  6148  08BB  1803               	skipnc
  6149  08BC  28BE               	goto	u4221
  6150  08BD  28BF               	goto	u4220
  6151  08BE                     u4221:	
  6152  08BE  28AA               	goto	l3105
  6153  08BF                     u4220:	
  6154  08BF                     l895:	
  6155  08BF  1879               	btfsc	___xxtofl@exp,0
  6156  08C0  28C2               	goto	u4231
  6157  08C1  28C3               	goto	u4230
  6158  08C2                     u4231:	
  6159  08C2  28CB               	goto	l896
  6160  08C3                     u4230:	
  6161  08C3                     l3111:	
  6162  08C3  30FF               	movlw	255
  6163  08C4  05FA               	andwf	___xxtofl@arg,f
  6164  08C5  30FF               	movlw	255
  6165  08C6  05FB               	andwf	___xxtofl@arg+1,f
  6166  08C7  307F               	movlw	127
  6167  08C8  05FC               	andwf	___xxtofl@arg+2,f
  6168  08C9  30FF               	movlw	255
  6169  08CA  05FD               	andwf	___xxtofl@arg+3,f
  6170  08CB                     l896:	
  6171  08CB  1003               	clrc
  6172  08CC  0CF9               	rrf	___xxtofl@exp,f
  6173  08CD                     l3113:	
  6174  08CD  0879               	movf	___xxtofl@exp,w
  6175  08CE  00F4               	movwf	??___xxtofl
  6176  08CF  01F5               	clrf	??___xxtofl+1
  6177  08D0  01F6               	clrf	??___xxtofl+2
  6178  08D1  01F7               	clrf	??___xxtofl+3
  6179  08D2  3018               	movlw	24
  6180  08D3                     u4245:	
  6181  08D3  1003               	clrc
  6182  08D4  0DF4               	rlf	??___xxtofl,f
  6183  08D5  0DF5               	rlf	??___xxtofl+1,f
  6184  08D6  0DF6               	rlf	??___xxtofl+2,f
  6185  08D7  0DF7               	rlf	??___xxtofl+3,f
  6186  08D8                     u4240:	
  6187  08D8  3EFF               	addlw	-1
  6188  08D9  1D03               	skipz
  6189  08DA  28D3               	goto	u4245
  6190  08DB  0874               	movf	??___xxtofl,w
  6191  08DC  04FA               	iorwf	___xxtofl@arg,f
  6192  08DD  0875               	movf	??___xxtofl+1,w
  6193  08DE  04FB               	iorwf	___xxtofl@arg+1,f
  6194  08DF  0876               	movf	??___xxtofl+2,w
  6195  08E0  04FC               	iorwf	___xxtofl@arg+2,f
  6196  08E1  0877               	movf	??___xxtofl+3,w
  6197  08E2  04FD               	iorwf	___xxtofl@arg+3,f
  6198  08E3                     l3115:	
  6199  08E3  0878               	movf	___xxtofl@sign,w
  6200  08E4  1903               	btfsc	3,2
  6201  08E5  28E7               	goto	u4251
  6202  08E6  28E8               	goto	u4250
  6203  08E7                     u4251:	
  6204  08E7  28ED               	goto	l3121
  6205  08E8                     u4250:	
  6206  08E8                     l3117:	
  6207  08E8  1FF3               	btfss	___xxtofl@val+3,7
  6208  08E9  28EB               	goto	u4261
  6209  08EA  28EC               	goto	u4260
  6210  08EB                     u4261:	
  6211  08EB  28ED               	goto	l3121
  6212  08EC                     u4260:	
  6213  08EC                     l3119:	
  6214  08EC  17FD               	bsf	___xxtofl@arg+3,7
  6215  08ED                     l3121:	
  6216  08ED  087D               	movf	___xxtofl@arg+3,w
  6217  08EE  00F3               	movwf	?___xxtofl+3
  6218  08EF  087C               	movf	___xxtofl@arg+2,w
  6219  08F0  00F2               	movwf	?___xxtofl+2
  6220  08F1  087B               	movf	___xxtofl@arg+1,w
  6221  08F2  00F1               	movwf	?___xxtofl+1
  6222  08F3  087A               	movf	___xxtofl@arg,w
  6223  08F4  00F0               	movwf	?___xxtofl
  6224  08F5                     l884:	
  6225  08F5  0008               	return
  6226  08F6                     __end_of___xxtofl:	
  6227                           
  6228                           	psect	text21
  6229  1430                     __ptext21:	
  6230 ;; *************** function ___wmul *****************
  6231 ;; Defined at:
  6232 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;  multiplier      2    0[COMMON] unsigned int 
  6235 ;;  multiplicand    2    2[COMMON] unsigned int 
  6236 ;; Auto vars:     Size  Location     Type
  6237 ;;  product         2    4[COMMON] unsigned int 
  6238 ;; Return value:  Size  Location     Type
  6239 ;;                  2    0[COMMON] unsigned int 
  6240 ;; Registers used:
  6241 ;;		wreg, status,2, status,0
  6242 ;; Tracked objects:
  6243 ;;		On entry : 0/0
  6244 ;;		On exit  : 0/0
  6245 ;;		Unchanged: 0/0
  6246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6247 ;;      Params:         4       0       0       0       0
  6248 ;;      Locals:         2       0       0       0       0
  6249 ;;      Temps:          0       0       0       0       0
  6250 ;;      Totals:         6       0       0       0       0
  6251 ;;Total ram usage:        6 bytes
  6252 ;; Hardware stack levels used:    1
  6253 ;; This function calls:
  6254 ;;		Nothing
  6255 ;; This function is called by:
  6256 ;;		_LCD
  6257 ;; This function uses a non-reentrant model
  6258 ;;
  6259                           
  6260                           
  6261                           ;psect for function ___wmul
  6262  1430                     ___wmul:	
  6263  1430                     l2743:	
  6264                           ;incstack = 0
  6265                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6266                           
  6267  1430  01F4               	clrf	___wmul@product
  6268  1431  01F5               	clrf	___wmul@product+1
  6269  1432                     l2745:	
  6270  1432  1C70               	btfss	___wmul@multiplier,0
  6271  1433  2C35               	goto	u3331
  6272  1434  2C36               	goto	u3330
  6273  1435                     u3331:	
  6274  1435  2C3C               	goto	l455
  6275  1436                     u3330:	
  6276  1436                     l2747:	
  6277  1436  0872               	movf	___wmul@multiplicand,w
  6278  1437  07F4               	addwf	___wmul@product,f
  6279  1438  1803               	skipnc
  6280  1439  0AF5               	incf	___wmul@product+1,f
  6281  143A  0873               	movf	___wmul@multiplicand+1,w
  6282  143B  07F5               	addwf	___wmul@product+1,f
  6283  143C                     l455:	
  6284  143C  3001               	movlw	1
  6285  143D                     u3345:	
  6286  143D  1003               	clrc
  6287  143E  0DF2               	rlf	___wmul@multiplicand,f
  6288  143F  0DF3               	rlf	___wmul@multiplicand+1,f
  6289  1440  3EFF               	addlw	-1
  6290  1441  1D03               	skipz
  6291  1442  2C3D               	goto	u3345
  6292  1443                     l2749:	
  6293  1443  3001               	movlw	1
  6294  1444                     u3355:	
  6295  1444  1003               	clrc
  6296  1445  0CF1               	rrf	___wmul@multiplier+1,f
  6297  1446  0CF0               	rrf	___wmul@multiplier,f
  6298  1447  3EFF               	addlw	-1
  6299  1448  1D03               	skipz
  6300  1449  2C44               	goto	u3355
  6301  144A                     l2751:	
  6302  144A  0870               	movf	___wmul@multiplier,w
  6303  144B  0471               	iorwf	___wmul@multiplier+1,w
  6304  144C  1D03               	btfss	3,2
  6305  144D  2C4F               	goto	u3361
  6306  144E  2C50               	goto	u3360
  6307  144F                     u3361:	
  6308  144F  2C32               	goto	l2745
  6309  1450                     u3360:	
  6310  1450                     l2753:	
  6311  1450  0875               	movf	___wmul@product+1,w
  6312  1451  00F1               	movwf	?___wmul+1
  6313  1452  0874               	movf	___wmul@product,w
  6314  1453  00F0               	movwf	?___wmul
  6315  1454                     l457:	
  6316  1454  0008               	return
  6317  1455                     __end_of___wmul:	
  6318                           
  6319                           	psect	text22
  6320  16CC                     __ptext22:	
  6321 ;; *************** function ___fltol *****************
  6322 ;; Defined at:
  6323 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  6324 ;; Parameters:    Size  Location     Type
  6325 ;;  f1              4    0[BANK1 ] unsigned int 
  6326 ;; Auto vars:     Size  Location     Type
  6327 ;;  exp1            1   10[BANK1 ] unsigned char 
  6328 ;;  sign1           1    9[BANK1 ] unsigned char 
  6329 ;; Return value:  Size  Location     Type
  6330 ;;                  4    0[BANK1 ] long 
  6331 ;; Registers used:
  6332 ;;		wreg, status,2, status,0
  6333 ;; Tracked objects:
  6334 ;;		On entry : 0/0
  6335 ;;		On exit  : 0/0
  6336 ;;		Unchanged: 0/0
  6337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6338 ;;      Params:         0       0       4       0       0
  6339 ;;      Locals:         0       0       2       0       0
  6340 ;;      Temps:          0       0       5       0       0
  6341 ;;      Totals:         0       0      11       0       0
  6342 ;;Total ram usage:       11 bytes
  6343 ;; Hardware stack levels used:    1
  6344 ;; This function calls:
  6345 ;;		Nothing
  6346 ;; This function is called by:
  6347 ;;		_currentMeasurement
  6348 ;;		_LCD
  6349 ;; This function uses a non-reentrant model
  6350 ;;
  6351                           
  6352                           
  6353                           ;psect for function ___fltol
  6354  16CC                     ___fltol:	
  6355  16CC                     l2757:	
  6356                           ;incstack = 0
  6357                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6358                           
  6359  16CC  1003               	clrc
  6360  16CD  1683               	bsf	3,5	;RP0=1, select bank1
  6361  16CE  1303               	bcf	3,6	;RP1=0, select bank1
  6362  16CF  0D22               	rlf	(___fltol@f1+2)^(0+128),w
  6363  16D0  0D23               	rlf	(___fltol@f1+3)^(0+128),w
  6364  16D1  00A4               	movwf	??___fltol^(0+128)
  6365  16D2  0824               	movf	??___fltol^(0+128),w
  6366  16D3  00AA               	movwf	___fltol@exp1^(0+128)
  6367  16D4  082A               	movf	___fltol@exp1^(0+128),w
  6368  16D5  1D03               	btfss	3,2
  6369  16D6  2ED8               	goto	u3371
  6370  16D7  2ED9               	goto	u3370
  6371  16D8                     u3371:	
  6372  16D8  2EE2               	goto	l2763
  6373  16D9                     u3370:	
  6374  16D9                     l2759:	
  6375  16D9  3000               	movlw	0
  6376  16DA  00A3               	movwf	(?___fltol+3)^(0+128)
  6377  16DB  3000               	movlw	0
  6378  16DC  00A2               	movwf	(?___fltol+2)^(0+128)
  6379  16DD  3000               	movlw	0
  6380  16DE  00A1               	movwf	(?___fltol+1)^(0+128)
  6381  16DF  3000               	movlw	0
  6382  16E0  00A0               	movwf	?___fltol^(0+128)
  6383  16E1  2F47               	goto	l641
  6384  16E2                     l2763:	
  6385  16E2  0820               	movf	___fltol@f1^(0+128),w
  6386  16E3  00A4               	movwf	??___fltol^(0+128)
  6387  16E4  0821               	movf	(___fltol@f1+1)^(0+128),w
  6388  16E5  00A5               	movwf	(??___fltol^(0+128)+1)
  6389  16E6  0822               	movf	(___fltol@f1+2)^(0+128),w
  6390  16E7  00A6               	movwf	(??___fltol^(0+128)+2)
  6391  16E8  0823               	movf	(___fltol@f1+3)^(0+128),w
  6392  16E9  00A7               	movwf	(??___fltol^(0+128)+3)
  6393  16EA  301F               	movlw	31
  6394  16EB                     u3385:	
  6395  16EB  1003               	clrc
  6396  16EC  0CA7               	rrf	(??___fltol^(0+128)+3),f
  6397  16ED  0CA6               	rrf	(??___fltol^(0+128)+2),f
  6398  16EE  0CA5               	rrf	(??___fltol^(0+128)+1),f
  6399  16EF  0CA4               	rrf	??___fltol^(0+128),f
  6400  16F0                     u3380:	
  6401  16F0  3EFF               	addlw	-1
  6402  16F1  1D03               	skipz
  6403  16F2  2EEB               	goto	u3385
  6404  16F3  0824               	movf	??___fltol^(0+128),w
  6405  16F4  00A8               	movwf	(??___fltol+4)^(0+128)
  6406  16F5  0828               	movf	(??___fltol+4)^(0+128),w
  6407  16F6  00A9               	movwf	___fltol@sign1^(0+128)
  6408  16F7                     l2765:	
  6409  16F7  17A2               	bsf	(___fltol@f1^(0+128)+2),7
  6410  16F8                     l2767:	
  6411  16F8  30FF               	movlw	255
  6412  16F9  05A0               	andwf	___fltol@f1^(0+128),f
  6413  16FA  30FF               	movlw	255
  6414  16FB  05A1               	andwf	(___fltol@f1+1)^(0+128),f
  6415  16FC  30FF               	movlw	255
  6416  16FD  05A2               	andwf	(___fltol@f1+2)^(0+128),f
  6417  16FE  3000               	movlw	0
  6418  16FF  05A3               	andwf	(___fltol@f1+3)^(0+128),f
  6419  1700                     l2769:	
  6420  1700  3096               	movlw	150
  6421  1701  02AA               	subwf	___fltol@exp1^(0+128),f
  6422  1702                     l2771:	
  6423  1702  1FAA               	btfss	___fltol@exp1^(0+128),7
  6424  1703  2F05               	goto	u3391
  6425  1704  2F06               	goto	u3390
  6426  1705                     u3391:	
  6427  1705  2F20               	goto	l2781
  6428  1706                     u3390:	
  6429  1706                     l2773:	
  6430  1706  082A               	movf	___fltol@exp1^(0+128),w
  6431  1707  3A80               	xorlw	128
  6432  1708  3E97               	addlw	151
  6433  1709  1803               	skipnc
  6434  170A  2F0C               	goto	u3401
  6435  170B  2F0D               	goto	u3400
  6436  170C                     u3401:	
  6437  170C  2F0E               	goto	l2779
  6438  170D                     u3400:	
  6439  170D  2ED9               	goto	l2759
  6440  170E                     l2779:	
  6441  170E  3001               	movlw	1
  6442  170F                     u3415:	
  6443  170F  1003               	clrc
  6444  1710  0CA3               	rrf	(___fltol@f1+3)^(0+128),f
  6445  1711  0CA2               	rrf	(___fltol@f1+2)^(0+128),f
  6446  1712  0CA1               	rrf	(___fltol@f1+1)^(0+128),f
  6447  1713  0CA0               	rrf	___fltol@f1^(0+128),f
  6448  1714  3EFF               	addlw	-1
  6449  1715  1D03               	skipz
  6450  1716  2F0F               	goto	u3415
  6451  1717  3001               	movlw	1
  6452  1718  00A4               	movwf	??___fltol^(0+128)
  6453  1719  0824               	movf	??___fltol^(0+128),w
  6454  171A  07AA               	addwf	___fltol@exp1^(0+128),f
  6455  171B  1D03               	btfss	3,2
  6456  171C  2F1E               	goto	u3421
  6457  171D  2F1F               	goto	u3420
  6458  171E                     u3421:	
  6459  171E  2F0E               	goto	l2779
  6460  171F                     u3420:	
  6461  171F  2F37               	goto	l2789
  6462  1720                     l2781:	
  6463  1720  3020               	movlw	32
  6464  1721  022A               	subwf	___fltol@exp1^(0+128),w
  6465  1722  1C03               	skipc
  6466  1723  2F25               	goto	u3431
  6467  1724  2F26               	goto	u3430
  6468  1725                     u3431:	
  6469  1725  2F32               	goto	l648
  6470  1726                     u3430:	
  6471  1726  2ED9               	goto	l2759
  6472  1727                     l2787:	
  6473  1727  3001               	movlw	1
  6474  1728  00A4               	movwf	??___fltol^(0+128)
  6475  1729                     u3445:	
  6476  1729  1003               	clrc
  6477  172A  0DA0               	rlf	___fltol@f1^(0+128),f
  6478  172B  0DA1               	rlf	(___fltol@f1+1)^(0+128),f
  6479  172C  0DA2               	rlf	(___fltol@f1+2)^(0+128),f
  6480  172D  0DA3               	rlf	(___fltol@f1+3)^(0+128),f
  6481  172E  0BA4               	decfsz	??___fltol^(0+128),f
  6482  172F  2F29               	goto	u3445
  6483  1730  3001               	movlw	1
  6484  1731  02AA               	subwf	___fltol@exp1^(0+128),f
  6485  1732                     l648:	
  6486  1732  082A               	movf	___fltol@exp1^(0+128),w
  6487  1733  1D03               	btfss	3,2
  6488  1734  2F36               	goto	u3451
  6489  1735  2F37               	goto	u3450
  6490  1736                     u3451:	
  6491  1736  2F27               	goto	l2787
  6492  1737                     u3450:	
  6493  1737                     l2789:	
  6494  1737  0829               	movf	___fltol@sign1^(0+128),w
  6495  1738  1903               	btfsc	3,2
  6496  1739  2F3B               	goto	u3461
  6497  173A  2F3C               	goto	u3460
  6498  173B                     u3461:	
  6499  173B  2F47               	goto	l651
  6500  173C                     u3460:	
  6501  173C                     l2791:	
  6502  173C  09A0               	comf	___fltol@f1^(0+128),f
  6503  173D  09A1               	comf	(___fltol@f1+1)^(0+128),f
  6504  173E  09A2               	comf	(___fltol@f1+2)^(0+128),f
  6505  173F  09A3               	comf	(___fltol@f1+3)^(0+128),f
  6506  1740  0AA0               	incf	___fltol@f1^(0+128),f
  6507  1741  1903               	skipnz
  6508  1742  0AA1               	incf	(___fltol@f1+1)^(0+128),f
  6509  1743  1903               	skipnz
  6510  1744  0AA2               	incf	(___fltol@f1+2)^(0+128),f
  6511  1745  1903               	skipnz
  6512  1746  0AA3               	incf	(___fltol@f1+3)^(0+128),f
  6513  1747                     l651:	
  6514  1747                     l641:	
  6515  1747  0008               	return
  6516  1748                     __end_of___fltol:	
  6517                           
  6518                           	psect	text23
  6519  0492                     __ptext23:	
  6520 ;; *************** function ___flmul *****************
  6521 ;; Defined at:
  6522 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  6523 ;; Parameters:    Size  Location     Type
  6524 ;;  b               4    0[BANK0 ] long 
  6525 ;;  a               4    4[BANK0 ] long 
  6526 ;; Auto vars:     Size  Location     Type
  6527 ;;  prod            4   20[BANK0 ] struct .
  6528 ;;  grs             4   14[BANK0 ] unsigned long 
  6529 ;;  temp            2   24[BANK0 ] struct .
  6530 ;;  bexp            1   19[BANK0 ] unsigned char 
  6531 ;;  aexp            1   18[BANK0 ] unsigned char 
  6532 ;;  sign            1   13[BANK0 ] unsigned char 
  6533 ;; Return value:  Size  Location     Type
  6534 ;;                  4    0[BANK0 ] unsigned char 
  6535 ;; Registers used:
  6536 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6537 ;; Tracked objects:
  6538 ;;		On entry : 0/0
  6539 ;;		On exit  : 0/0
  6540 ;;		Unchanged: 0/0
  6541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6542 ;;      Params:         0       8       0       0       0
  6543 ;;      Locals:         0      13       0       0       0
  6544 ;;      Temps:          0       5       0       0       0
  6545 ;;      Totals:         0      26       0       0       0
  6546 ;;Total ram usage:       26 bytes
  6547 ;; Hardware stack levels used:    1
  6548 ;; Hardware stack levels required when called:    1
  6549 ;; This function calls:
  6550 ;;		__Umul8_16
  6551 ;; This function is called by:
  6552 ;;		_currentMeasurement
  6553 ;;		_LCD
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           
  6558                           ;psect for function ___flmul
  6559  0492                     ___flmul:	
  6560  0492                     l2941:	
  6561                           ;incstack = 0
  6562                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6563                           
  6564  0492  1283               	bcf	3,5	;RP0=0, select bank0
  6565  0493  1303               	bcf	3,6	;RP1=0, select bank0
  6566  0494  0823               	movf	___flmul@b+3,w
  6567  0495  3980               	andlw	128
  6568  0496  00A8               	movwf	??___flmul
  6569  0497  0828               	movf	??___flmul,w
  6570  0498  00AD               	movwf	___flmul@sign
  6571  0499                     l2943:	
  6572  0499  0823               	movf	___flmul@b+3,w
  6573  049A  00A8               	movwf	??___flmul
  6574  049B  0728               	addwf	??___flmul,w
  6575  049C  00A9               	movwf	??___flmul+1
  6576  049D  0829               	movf	??___flmul+1,w
  6577  049E  00B3               	movwf	___flmul@bexp
  6578  049F                     l2945:	
  6579  049F  1FA2               	btfss	___flmul@b+2,7
  6580  04A0  2CA2               	goto	u3761
  6581  04A1  2CA3               	goto	u3760
  6582  04A2                     u3761:	
  6583  04A2  2CA4               	goto	l2949
  6584  04A3                     u3760:	
  6585  04A3                     l2947:	
  6586  04A3  1433               	bsf	___flmul@bexp,0
  6587  04A4                     l2949:	
  6588  04A4  0833               	movf	___flmul@bexp,w
  6589  04A5  1903               	btfsc	3,2
  6590  04A6  2CA8               	goto	u3771
  6591  04A7  2CA9               	goto	u3770
  6592  04A8                     u3771:	
  6593  04A8  2CB8               	goto	l2957
  6594  04A9                     u3770:	
  6595  04A9                     l2951:	
  6596  04A9  0A33               	incf	___flmul@bexp,w
  6597  04AA  1D03               	btfss	3,2
  6598  04AB  2CAD               	goto	u3781
  6599  04AC  2CAE               	goto	u3780
  6600  04AD                     u3781:	
  6601  04AD  2CB6               	goto	l2955
  6602  04AE                     u3780:	
  6603  04AE                     l2953:	
  6604  04AE  3000               	movlw	0
  6605  04AF  00A3               	movwf	___flmul@b+3
  6606  04B0  3000               	movlw	0
  6607  04B1  00A2               	movwf	___flmul@b+2
  6608  04B2  3000               	movlw	0
  6609  04B3  00A1               	movwf	___flmul@b+1
  6610  04B4  3000               	movlw	0
  6611  04B5  00A0               	movwf	___flmul@b
  6612  04B6                     l2955:	
  6613  04B6  17A2               	bsf	___flmul@b+2,7
  6614  04B7  2CC0               	goto	l2959
  6615  04B8                     l2957:	
  6616  04B8  3000               	movlw	0
  6617  04B9  00A3               	movwf	___flmul@b+3
  6618  04BA  3000               	movlw	0
  6619  04BB  00A2               	movwf	___flmul@b+2
  6620  04BC  3000               	movlw	0
  6621  04BD  00A1               	movwf	___flmul@b+1
  6622  04BE  3000               	movlw	0
  6623  04BF  00A0               	movwf	___flmul@b
  6624  04C0                     l2959:	
  6625  04C0  0827               	movf	___flmul@a+3,w
  6626  04C1  3980               	andlw	128
  6627  04C2  00A8               	movwf	??___flmul
  6628  04C3  0828               	movf	??___flmul,w
  6629  04C4  06AD               	xorwf	___flmul@sign,f
  6630  04C5                     l2961:	
  6631  04C5  0827               	movf	___flmul@a+3,w
  6632  04C6  00A8               	movwf	??___flmul
  6633  04C7  0728               	addwf	??___flmul,w
  6634  04C8  00A9               	movwf	??___flmul+1
  6635  04C9  0829               	movf	??___flmul+1,w
  6636  04CA  00B2               	movwf	___flmul@aexp
  6637  04CB                     l2963:	
  6638  04CB  1FA6               	btfss	___flmul@a+2,7
  6639  04CC  2CCE               	goto	u3791
  6640  04CD  2CCF               	goto	u3790
  6641  04CE                     u3791:	
  6642  04CE  2CD0               	goto	l2967
  6643  04CF                     u3790:	
  6644  04CF                     l2965:	
  6645  04CF  1432               	bsf	___flmul@aexp,0
  6646  04D0                     l2967:	
  6647  04D0  0832               	movf	___flmul@aexp,w
  6648  04D1  1903               	btfsc	3,2
  6649  04D2  2CD4               	goto	u3801
  6650  04D3  2CD5               	goto	u3800
  6651  04D4                     u3801:	
  6652  04D4  2CE4               	goto	l2975
  6653  04D5                     u3800:	
  6654  04D5                     l2969:	
  6655  04D5  0A32               	incf	___flmul@aexp,w
  6656  04D6  1D03               	btfss	3,2
  6657  04D7  2CD9               	goto	u3811
  6658  04D8  2CDA               	goto	u3810
  6659  04D9                     u3811:	
  6660  04D9  2CE2               	goto	l2973
  6661  04DA                     u3810:	
  6662  04DA                     l2971:	
  6663  04DA  3000               	movlw	0
  6664  04DB  00A7               	movwf	___flmul@a+3
  6665  04DC  3000               	movlw	0
  6666  04DD  00A6               	movwf	___flmul@a+2
  6667  04DE  3000               	movlw	0
  6668  04DF  00A5               	movwf	___flmul@a+1
  6669  04E0  3000               	movlw	0
  6670  04E1  00A4               	movwf	___flmul@a
  6671  04E2                     l2973:	
  6672  04E2  17A6               	bsf	___flmul@a+2,7
  6673  04E3  2CEC               	goto	l2977
  6674  04E4                     l2975:	
  6675  04E4  3000               	movlw	0
  6676  04E5  00A7               	movwf	___flmul@a+3
  6677  04E6  3000               	movlw	0
  6678  04E7  00A6               	movwf	___flmul@a+2
  6679  04E8  3000               	movlw	0
  6680  04E9  00A5               	movwf	___flmul@a+1
  6681  04EA  3000               	movlw	0
  6682  04EB  00A4               	movwf	___flmul@a
  6683  04EC                     l2977:	
  6684  04EC  0832               	movf	___flmul@aexp,w
  6685  04ED  1903               	btfsc	3,2
  6686  04EE  2CF0               	goto	u3821
  6687  04EF  2CF1               	goto	u3820
  6688  04F0                     u3821:	
  6689  04F0  2CF6               	goto	l2981
  6690  04F1                     u3820:	
  6691  04F1                     l2979:	
  6692  04F1  0833               	movf	___flmul@bexp,w
  6693  04F2  1D03               	btfss	3,2
  6694  04F3  2CF5               	goto	u3831
  6695  04F4  2CF6               	goto	u3830
  6696  04F5                     u3831:	
  6697  04F5  2CFF               	goto	l2985
  6698  04F6                     u3830:	
  6699  04F6                     l2981:	
  6700  04F6  3000               	movlw	0
  6701  04F7  00A3               	movwf	?___flmul+3
  6702  04F8  3000               	movlw	0
  6703  04F9  00A2               	movwf	?___flmul+2
  6704  04FA  3000               	movlw	0
  6705  04FB  00A1               	movwf	?___flmul+1
  6706  04FC  3000               	movlw	0
  6707  04FD  00A0               	movwf	?___flmul
  6708  04FE  2FF2               	goto	l844
  6709  04FF                     l2985:	
  6710  04FF  0820               	movf	___flmul@b,w
  6711  0500  00A8               	movwf	??___flmul
  6712  0501  0828               	movf	??___flmul,w
  6713  0502  00F0               	movwf	__Umul8_16@multiplicand
  6714  0503  0826               	movf	___flmul@a+2,w
  6715  0504  120A  118A  2006  120A  118A  	fcall	__Umul8_16
  6716  0509  0871               	movf	?__Umul8_16+1,w
  6717  050A  1283               	bcf	3,5	;RP0=0, select bank0
  6718  050B  1303               	bcf	3,6	;RP1=0, select bank0
  6719  050C  00B9               	movwf	___flmul@temp+1
  6720  050D  0870               	movf	?__Umul8_16,w
  6721  050E  00B8               	movwf	___flmul@temp
  6722  050F                     l2987:	
  6723  050F  0838               	movf	___flmul@temp,w
  6724  0510  00A8               	movwf	??___flmul
  6725  0511  01A9               	clrf	??___flmul+1
  6726  0512  01AA               	clrf	??___flmul+2
  6727  0513  01AB               	clrf	??___flmul+3
  6728  0514  082B               	movf	??___flmul+3,w
  6729  0515  00B1               	movwf	___flmul@grs+3
  6730  0516  082A               	movf	??___flmul+2,w
  6731  0517  00B0               	movwf	___flmul@grs+2
  6732  0518  0829               	movf	??___flmul+1,w
  6733  0519  00AF               	movwf	___flmul@grs+1
  6734  051A  0828               	movf	??___flmul,w
  6735  051B  00AE               	movwf	___flmul@grs
  6736  051C                     l2989:	
  6737  051C  0839               	movf	___flmul@temp+1,w
  6738  051D  00A8               	movwf	??___flmul
  6739  051E  01A9               	clrf	??___flmul+1
  6740  051F  01AA               	clrf	??___flmul+2
  6741  0520  01AB               	clrf	??___flmul+3
  6742  0521  082B               	movf	??___flmul+3,w
  6743  0522  00B7               	movwf	___flmul@prod+3
  6744  0523  082A               	movf	??___flmul+2,w
  6745  0524  00B6               	movwf	___flmul@prod+2
  6746  0525  0829               	movf	??___flmul+1,w
  6747  0526  00B5               	movwf	___flmul@prod+1
  6748  0527  0828               	movf	??___flmul,w
  6749  0528  00B4               	movwf	___flmul@prod
  6750  0529  0821               	movf	___flmul@b+1,w
  6751  052A  00A8               	movwf	??___flmul
  6752  052B  0828               	movf	??___flmul,w
  6753  052C  00F0               	movwf	__Umul8_16@multiplicand
  6754  052D  0825               	movf	___flmul@a+1,w
  6755  052E  120A  118A  2006  120A  118A  	fcall	__Umul8_16
  6756  0533  0871               	movf	?__Umul8_16+1,w
  6757  0534  1283               	bcf	3,5	;RP0=0, select bank0
  6758  0535  1303               	bcf	3,6	;RP1=0, select bank0
  6759  0536  00B9               	movwf	___flmul@temp+1
  6760  0537  0870               	movf	?__Umul8_16,w
  6761  0538  00B8               	movwf	___flmul@temp
  6762  0539                     l2991:	
  6763  0539  0838               	movf	___flmul@temp,w
  6764  053A  00A8               	movwf	??___flmul
  6765  053B  01A9               	clrf	??___flmul+1
  6766  053C  01AA               	clrf	??___flmul+2
  6767  053D  01AB               	clrf	??___flmul+3
  6768  053E  0828               	movf	??___flmul,w
  6769  053F  07AE               	addwf	___flmul@grs,f
  6770  0540  0829               	movf	??___flmul+1,w
  6771  0541  1103               	clrz
  6772  0542  1803               	skipnc
  6773  0543  3E01               	addlw	1
  6774  0544  1903               	skipnz
  6775  0545  2D47               	goto	u3841
  6776  0546  07AF               	addwf	___flmul@grs+1,f
  6777  0547                     u3841:	
  6778  0547  082A               	movf	??___flmul+2,w
  6779  0548  1103               	clrz
  6780  0549  1803               	skipnc
  6781  054A  3E01               	addlw	1
  6782  054B  1903               	skipnz
  6783  054C  2D4E               	goto	u3842
  6784  054D  07B0               	addwf	___flmul@grs+2,f
  6785  054E                     u3842:	
  6786  054E  082B               	movf	??___flmul+3,w
  6787  054F  1103               	clrz
  6788  0550  1803               	skipnc
  6789  0551  3E01               	addlw	1
  6790  0552  1903               	skipnz
  6791  0553  2D55               	goto	u3843
  6792  0554  07B1               	addwf	___flmul@grs+3,f
  6793  0555                     u3843:	
  6794  0555                     l2993:	
  6795  0555  0839               	movf	___flmul@temp+1,w
  6796  0556  00A8               	movwf	??___flmul
  6797  0557  01A9               	clrf	??___flmul+1
  6798  0558  01AA               	clrf	??___flmul+2
  6799  0559  01AB               	clrf	??___flmul+3
  6800  055A  0828               	movf	??___flmul,w
  6801  055B  07B4               	addwf	___flmul@prod,f
  6802  055C  0829               	movf	??___flmul+1,w
  6803  055D  1103               	clrz
  6804  055E  1803               	skipnc
  6805  055F  3E01               	addlw	1
  6806  0560  1903               	skipnz
  6807  0561  2D63               	goto	u3851
  6808  0562  07B5               	addwf	___flmul@prod+1,f
  6809  0563                     u3851:	
  6810  0563  082A               	movf	??___flmul+2,w
  6811  0564  1103               	clrz
  6812  0565  1803               	skipnc
  6813  0566  3E01               	addlw	1
  6814  0567  1903               	skipnz
  6815  0568  2D6A               	goto	u3852
  6816  0569  07B6               	addwf	___flmul@prod+2,f
  6817  056A                     u3852:	
  6818  056A  082B               	movf	??___flmul+3,w
  6819  056B  1103               	clrz
  6820  056C  1803               	skipnc
  6821  056D  3E01               	addlw	1
  6822  056E  1903               	skipnz
  6823  056F  2D71               	goto	u3853
  6824  0570  07B7               	addwf	___flmul@prod+3,f
  6825  0571                     u3853:	
  6826  0571  0822               	movf	___flmul@b+2,w
  6827  0572  00A8               	movwf	??___flmul
  6828  0573  0828               	movf	??___flmul,w
  6829  0574  00F0               	movwf	__Umul8_16@multiplicand
  6830  0575  0824               	movf	___flmul@a,w
  6831  0576  120A  118A  2006  120A  118A  	fcall	__Umul8_16
  6832  057B  0871               	movf	?__Umul8_16+1,w
  6833  057C  1283               	bcf	3,5	;RP0=0, select bank0
  6834  057D  1303               	bcf	3,6	;RP1=0, select bank0
  6835  057E  00B9               	movwf	___flmul@temp+1
  6836  057F  0870               	movf	?__Umul8_16,w
  6837  0580  00B8               	movwf	___flmul@temp
  6838  0581                     l2995:	
  6839  0581  0838               	movf	___flmul@temp,w
  6840  0582  00A8               	movwf	??___flmul
  6841  0583  01A9               	clrf	??___flmul+1
  6842  0584  01AA               	clrf	??___flmul+2
  6843  0585  01AB               	clrf	??___flmul+3
  6844  0586  0828               	movf	??___flmul,w
  6845  0587  07AE               	addwf	___flmul@grs,f
  6846  0588  0829               	movf	??___flmul+1,w
  6847  0589  1103               	clrz
  6848  058A  1803               	skipnc
  6849  058B  3E01               	addlw	1
  6850  058C  1903               	skipnz
  6851  058D  2D8F               	goto	u3861
  6852  058E  07AF               	addwf	___flmul@grs+1,f
  6853  058F                     u3861:	
  6854  058F  082A               	movf	??___flmul+2,w
  6855  0590  1103               	clrz
  6856  0591  1803               	skipnc
  6857  0592  3E01               	addlw	1
  6858  0593  1903               	skipnz
  6859  0594  2D96               	goto	u3862
  6860  0595  07B0               	addwf	___flmul@grs+2,f
  6861  0596                     u3862:	
  6862  0596  082B               	movf	??___flmul+3,w
  6863  0597  1103               	clrz
  6864  0598  1803               	skipnc
  6865  0599  3E01               	addlw	1
  6866  059A  1903               	skipnz
  6867  059B  2D9D               	goto	u3863
  6868  059C  07B1               	addwf	___flmul@grs+3,f
  6869  059D                     u3863:	
  6870  059D                     l2997:	
  6871  059D  0839               	movf	___flmul@temp+1,w
  6872  059E  00A8               	movwf	??___flmul
  6873  059F  01A9               	clrf	??___flmul+1
  6874  05A0  01AA               	clrf	??___flmul+2
  6875  05A1  01AB               	clrf	??___flmul+3
  6876  05A2  0828               	movf	??___flmul,w
  6877  05A3  07B4               	addwf	___flmul@prod,f
  6878  05A4  0829               	movf	??___flmul+1,w
  6879  05A5  1103               	clrz
  6880  05A6  1803               	skipnc
  6881  05A7  3E01               	addlw	1
  6882  05A8  1903               	skipnz
  6883  05A9  2DAB               	goto	u3871
  6884  05AA  07B5               	addwf	___flmul@prod+1,f
  6885  05AB                     u3871:	
  6886  05AB  082A               	movf	??___flmul+2,w
  6887  05AC  1103               	clrz
  6888  05AD  1803               	skipnc
  6889  05AE  3E01               	addlw	1
  6890  05AF  1903               	skipnz
  6891  05B0  2DB2               	goto	u3872
  6892  05B1  07B6               	addwf	___flmul@prod+2,f
  6893  05B2                     u3872:	
  6894  05B2  082B               	movf	??___flmul+3,w
  6895  05B3  1103               	clrz
  6896  05B4  1803               	skipnc
  6897  05B5  3E01               	addlw	1
  6898  05B6  1903               	skipnz
  6899  05B7  2DB9               	goto	u3873
  6900  05B8  07B7               	addwf	___flmul@prod+3,f
  6901  05B9                     u3873:	
  6902  05B9                     l2999:	
  6903  05B9  3008               	movlw	8
  6904  05BA  00A8               	movwf	??___flmul
  6905  05BB                     u3885:	
  6906  05BB  1003               	clrc
  6907  05BC  0DAE               	rlf	___flmul@grs,f
  6908  05BD  0DAF               	rlf	___flmul@grs+1,f
  6909  05BE  0DB0               	rlf	___flmul@grs+2,f
  6910  05BF  0DB1               	rlf	___flmul@grs+3,f
  6911  05C0  0BA8               	decfsz	??___flmul,f
  6912  05C1  2DBB               	goto	u3885
  6913  05C2                     l3001:	
  6914  05C2  0821               	movf	___flmul@b+1,w
  6915  05C3  00A8               	movwf	??___flmul
  6916  05C4  0828               	movf	??___flmul,w
  6917  05C5  00F0               	movwf	__Umul8_16@multiplicand
  6918  05C6  0824               	movf	___flmul@a,w
  6919  05C7  120A  118A  2006  120A  118A  	fcall	__Umul8_16
  6920  05CC  0871               	movf	?__Umul8_16+1,w
  6921  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  6922  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  6923  05CF  00B9               	movwf	___flmul@temp+1
  6924  05D0  0870               	movf	?__Umul8_16,w
  6925  05D1  00B8               	movwf	___flmul@temp
  6926  05D2                     l3003:	
  6927  05D2  0838               	movf	___flmul@temp,w
  6928  05D3  00A8               	movwf	??___flmul
  6929  05D4  0839               	movf	___flmul@temp+1,w
  6930  05D5  00A9               	movwf	??___flmul+1
  6931  05D6  01AA               	clrf	??___flmul+2
  6932  05D7  01AB               	clrf	??___flmul+3
  6933  05D8  0828               	movf	??___flmul,w
  6934  05D9  07AE               	addwf	___flmul@grs,f
  6935  05DA  0829               	movf	??___flmul+1,w
  6936  05DB  1103               	clrz
  6937  05DC  1803               	skipnc
  6938  05DD  3E01               	addlw	1
  6939  05DE  1903               	skipnz
  6940  05DF  2DE1               	goto	u3891
  6941  05E0  07AF               	addwf	___flmul@grs+1,f
  6942  05E1                     u3891:	
  6943  05E1  082A               	movf	??___flmul+2,w
  6944  05E2  1103               	clrz
  6945  05E3  1803               	skipnc
  6946  05E4  3E01               	addlw	1
  6947  05E5  1903               	skipnz
  6948  05E6  2DE8               	goto	u3892
  6949  05E7  07B0               	addwf	___flmul@grs+2,f
  6950  05E8                     u3892:	
  6951  05E8  082B               	movf	??___flmul+3,w
  6952  05E9  1103               	clrz
  6953  05EA  1803               	skipnc
  6954  05EB  3E01               	addlw	1
  6955  05EC  1903               	skipnz
  6956  05ED  2DEF               	goto	u3893
  6957  05EE  07B1               	addwf	___flmul@grs+3,f
  6958  05EF                     u3893:	
  6959  05EF                     l3005:	
  6960  05EF  0820               	movf	___flmul@b,w
  6961  05F0  00A8               	movwf	??___flmul
  6962  05F1  0828               	movf	??___flmul,w
  6963  05F2  00F0               	movwf	__Umul8_16@multiplicand
  6964  05F3  0825               	movf	___flmul@a+1,w
  6965  05F4  120A  118A  2006  120A  118A  	fcall	__Umul8_16
  6966  05F9  0871               	movf	?__Umul8_16+1,w
  6967  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  6968  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  6969  05FC  00B9               	movwf	___flmul@temp+1
  6970  05FD  0870               	movf	?__Umul8_16,w
  6971  05FE  00B8               	movwf	___flmul@temp
  6972  05FF                     l3007:	
  6973  05FF  0838               	movf	___flmul@temp,w
  6974  0600  00A8               	movwf	??___flmul
  6975  0601  0839               	movf	___flmul@temp+1,w
  6976  0602  00A9               	movwf	??___flmul+1
  6977  0603  01AA               	clrf	??___flmul+2
  6978  0604  01AB               	clrf	??___flmul+3
  6979  0605  0828               	movf	??___flmul,w
  6980  0606  07AE               	addwf	___flmul@grs,f
  6981  0607  0829               	movf	??___flmul+1,w
  6982  0608  1103               	clrz
  6983  0609  1803               	skipnc
  6984  060A  3E01               	addlw	1
  6985  060B  1903               	skipnz
  6986  060C  2E0E               	goto	u3901
  6987  060D  07AF               	addwf	___flmul@grs+1,f
  6988  060E                     u3901:	
  6989  060E  082A               	movf	??___flmul+2,w
  6990  060F  1103               	clrz
  6991  0610  1803               	skipnc
  6992  0611  3E01               	addlw	1
  6993  0612  1903               	skipnz
  6994  0613  2E15               	goto	u3902
  6995  0614  07B0               	addwf	___flmul@grs+2,f
  6996  0615                     u3902:	
  6997  0615  082B               	movf	??___flmul+3,w
  6998  0616  1103               	clrz
  6999  0617  1803               	skipnc
  7000  0618  3E01               	addlw	1
  7001  0619  1903               	skipnz
  7002  061A  2E1C               	goto	u3903
  7003  061B  07B1               	addwf	___flmul@grs+3,f
  7004  061C                     u3903:	
  7005  061C                     l3009:	
  7006  061C  3008               	movlw	8
  7007  061D  00A8               	movwf	??___flmul
  7008  061E                     u3915:	
  7009  061E  1003               	clrc
  7010  061F  0DAE               	rlf	___flmul@grs,f
  7011  0620  0DAF               	rlf	___flmul@grs+1,f
  7012  0621  0DB0               	rlf	___flmul@grs+2,f
  7013  0622  0DB1               	rlf	___flmul@grs+3,f
  7014  0623  0BA8               	decfsz	??___flmul,f
  7015  0624  2E1E               	goto	u3915
  7016  0625  0820               	movf	___flmul@b,w
  7017  0626  00A8               	movwf	??___flmul
  7018  0627  0828               	movf	??___flmul,w
  7019  0628  00F0               	movwf	__Umul8_16@multiplicand
  7020  0629  0824               	movf	___flmul@a,w
  7021  062A  120A  118A  2006  120A  118A  	fcall	__Umul8_16
  7022  062F  0871               	movf	?__Umul8_16+1,w
  7023  0630  1283               	bcf	3,5	;RP0=0, select bank0
  7024  0631  1303               	bcf	3,6	;RP1=0, select bank0
  7025  0632  00B9               	movwf	___flmul@temp+1
  7026  0633  0870               	movf	?__Umul8_16,w
  7027  0634  00B8               	movwf	___flmul@temp
  7028  0635                     l3011:	
  7029  0635  0838               	movf	___flmul@temp,w
  7030  0636  00A8               	movwf	??___flmul
  7031  0637  0839               	movf	___flmul@temp+1,w
  7032  0638  00A9               	movwf	??___flmul+1
  7033  0639  01AA               	clrf	??___flmul+2
  7034  063A  01AB               	clrf	??___flmul+3
  7035  063B  0828               	movf	??___flmul,w
  7036  063C  07AE               	addwf	___flmul@grs,f
  7037  063D  0829               	movf	??___flmul+1,w
  7038  063E  1103               	clrz
  7039  063F  1803               	skipnc
  7040  0640  3E01               	addlw	1
  7041  0641  1903               	skipnz
  7042  0642  2E44               	goto	u3921
  7043  0643  07AF               	addwf	___flmul@grs+1,f
  7044  0644                     u3921:	
  7045  0644  082A               	movf	??___flmul+2,w
  7046  0645  1103               	clrz
  7047  0646  1803               	skipnc
  7048  0647  3E01               	addlw	1
  7049  0648  1903               	skipnz
  7050  0649  2E4B               	goto	u3922
  7051  064A  07B0               	addwf	___flmul@grs+2,f
  7052  064B                     u3922:	
  7053  064B  082B               	movf	??___flmul+3,w
  7054  064C  1103               	clrz
  7055  064D  1803               	skipnc
  7056  064E  3E01               	addlw	1
  7057  064F  1903               	skipnz
  7058  0650  2E52               	goto	u3923
  7059  0651  07B1               	addwf	___flmul@grs+3,f
  7060  0652                     u3923:	
  7061  0652                     l3013:	
  7062  0652  0821               	movf	___flmul@b+1,w
  7063  0653  00A8               	movwf	??___flmul
  7064  0654  0828               	movf	??___flmul,w
  7065  0655  00F0               	movwf	__Umul8_16@multiplicand
  7066  0656  0826               	movf	___flmul@a+2,w
  7067  0657  120A  118A  2006  120A  118A  	fcall	__Umul8_16
  7068  065C  0871               	movf	?__Umul8_16+1,w
  7069  065D  1283               	bcf	3,5	;RP0=0, select bank0
  7070  065E  1303               	bcf	3,6	;RP1=0, select bank0
  7071  065F  00B9               	movwf	___flmul@temp+1
  7072  0660  0870               	movf	?__Umul8_16,w
  7073  0661  00B8               	movwf	___flmul@temp
  7074  0662  0838               	movf	___flmul@temp,w
  7075  0663  00A8               	movwf	??___flmul
  7076  0664  0839               	movf	___flmul@temp+1,w
  7077  0665  00A9               	movwf	??___flmul+1
  7078  0666  01AA               	clrf	??___flmul+2
  7079  0667  01AB               	clrf	??___flmul+3
  7080  0668  0828               	movf	??___flmul,w
  7081  0669  07B4               	addwf	___flmul@prod,f
  7082  066A  0829               	movf	??___flmul+1,w
  7083  066B  1103               	clrz
  7084  066C  1803               	skipnc
  7085  066D  3E01               	addlw	1
  7086  066E  1903               	skipnz
  7087  066F  2E71               	goto	u3931
  7088  0670  07B5               	addwf	___flmul@prod+1,f
  7089  0671                     u3931:	
  7090  0671  082A               	movf	??___flmul+2,w
  7091  0672  1103               	clrz
  7092  0673  1803               	skipnc
  7093  0674  3E01               	addlw	1
  7094  0675  1903               	skipnz
  7095  0676  2E78               	goto	u3932
  7096  0677  07B6               	addwf	___flmul@prod+2,f
  7097  0678                     u3932:	
  7098  0678  082B               	movf	??___flmul+3,w
  7099  0679  1103               	clrz
  7100  067A  1803               	skipnc
  7101  067B  3E01               	addlw	1
  7102  067C  1903               	skipnz
  7103  067D  2E7F               	goto	u3933
  7104  067E  07B7               	addwf	___flmul@prod+3,f
  7105  067F                     u3933:	
  7106  067F                     l3015:	
  7107  067F  0822               	movf	___flmul@b+2,w
  7108  0680  00A8               	movwf	??___flmul
  7109  0681  0828               	movf	??___flmul,w
  7110  0682  00F0               	movwf	__Umul8_16@multiplicand
  7111  0683  0825               	movf	___flmul@a+1,w
  7112  0684  120A  118A  2006  120A  118A  	fcall	__Umul8_16
  7113  0689  0871               	movf	?__Umul8_16+1,w
  7114  068A  1283               	bcf	3,5	;RP0=0, select bank0
  7115  068B  1303               	bcf	3,6	;RP1=0, select bank0
  7116  068C  00B9               	movwf	___flmul@temp+1
  7117  068D  0870               	movf	?__Umul8_16,w
  7118  068E  00B8               	movwf	___flmul@temp
  7119  068F                     l3017:	
  7120  068F  0838               	movf	___flmul@temp,w
  7121  0690  00A8               	movwf	??___flmul
  7122  0691  0839               	movf	___flmul@temp+1,w
  7123  0692  00A9               	movwf	??___flmul+1
  7124  0693  01AA               	clrf	??___flmul+2
  7125  0694  01AB               	clrf	??___flmul+3
  7126  0695  0828               	movf	??___flmul,w
  7127  0696  07B4               	addwf	___flmul@prod,f
  7128  0697  0829               	movf	??___flmul+1,w
  7129  0698  1103               	clrz
  7130  0699  1803               	skipnc
  7131  069A  3E01               	addlw	1
  7132  069B  1903               	skipnz
  7133  069C  2E9E               	goto	u3941
  7134  069D  07B5               	addwf	___flmul@prod+1,f
  7135  069E                     u3941:	
  7136  069E  082A               	movf	??___flmul+2,w
  7137  069F  1103               	clrz
  7138  06A0  1803               	skipnc
  7139  06A1  3E01               	addlw	1
  7140  06A2  1903               	skipnz
  7141  06A3  2EA5               	goto	u3942
  7142  06A4  07B6               	addwf	___flmul@prod+2,f
  7143  06A5                     u3942:	
  7144  06A5  082B               	movf	??___flmul+3,w
  7145  06A6  1103               	clrz
  7146  06A7  1803               	skipnc
  7147  06A8  3E01               	addlw	1
  7148  06A9  1903               	skipnz
  7149  06AA  2EAC               	goto	u3943
  7150  06AB  07B7               	addwf	___flmul@prod+3,f
  7151  06AC                     u3943:	
  7152  06AC  0822               	movf	___flmul@b+2,w
  7153  06AD  00A8               	movwf	??___flmul
  7154  06AE  0828               	movf	??___flmul,w
  7155  06AF  00F0               	movwf	__Umul8_16@multiplicand
  7156  06B0  0826               	movf	___flmul@a+2,w
  7157  06B1  120A  118A  2006  120A  118A  	fcall	__Umul8_16
  7158  06B6  0871               	movf	?__Umul8_16+1,w
  7159  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  7160  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  7161  06B9  00B9               	movwf	___flmul@temp+1
  7162  06BA  0870               	movf	?__Umul8_16,w
  7163  06BB  00B8               	movwf	___flmul@temp
  7164  06BC                     l3019:	
  7165  06BC  0838               	movf	___flmul@temp,w
  7166  06BD  00A8               	movwf	??___flmul
  7167  06BE  0839               	movf	___flmul@temp+1,w
  7168  06BF  00A9               	movwf	??___flmul+1
  7169  06C0  01AA               	clrf	??___flmul+2
  7170  06C1  01AB               	clrf	??___flmul+3
  7171  06C2  3008               	movlw	8
  7172  06C3                     u3955:	
  7173  06C3  1003               	clrc
  7174  06C4  0DA8               	rlf	??___flmul,f
  7175  06C5  0DA9               	rlf	??___flmul+1,f
  7176  06C6  0DAA               	rlf	??___flmul+2,f
  7177  06C7  0DAB               	rlf	??___flmul+3,f
  7178  06C8                     u3950:	
  7179  06C8  3EFF               	addlw	-1
  7180  06C9  1D03               	skipz
  7181  06CA  2EC3               	goto	u3955
  7182  06CB  0828               	movf	??___flmul,w
  7183  06CC  07B4               	addwf	___flmul@prod,f
  7184  06CD  0829               	movf	??___flmul+1,w
  7185  06CE  1103               	clrz
  7186  06CF  1803               	skipnc
  7187  06D0  3E01               	addlw	1
  7188  06D1  1903               	skipnz
  7189  06D2  2ED4               	goto	u3961
  7190  06D3  07B5               	addwf	___flmul@prod+1,f
  7191  06D4                     u3961:	
  7192  06D4  082A               	movf	??___flmul+2,w
  7193  06D5  1103               	clrz
  7194  06D6  1803               	skipnc
  7195  06D7  3E01               	addlw	1
  7196  06D8  1903               	skipnz
  7197  06D9  2EDB               	goto	u3962
  7198  06DA  07B6               	addwf	___flmul@prod+2,f
  7199  06DB                     u3962:	
  7200  06DB  082B               	movf	??___flmul+3,w
  7201  06DC  1103               	clrz
  7202  06DD  1803               	skipnc
  7203  06DE  3E01               	addlw	1
  7204  06DF  1903               	skipnz
  7205  06E0  2EE2               	goto	u3963
  7206  06E1  07B7               	addwf	___flmul@prod+3,f
  7207  06E2                     u3963:	
  7208  06E2                     l3021:	
  7209  06E2  082E               	movf	___flmul@grs,w
  7210  06E3  00A8               	movwf	??___flmul
  7211  06E4  082F               	movf	___flmul@grs+1,w
  7212  06E5  00A9               	movwf	??___flmul+1
  7213  06E6  0830               	movf	___flmul@grs+2,w
  7214  06E7  00AA               	movwf	??___flmul+2
  7215  06E8  0831               	movf	___flmul@grs+3,w
  7216  06E9  00AB               	movwf	??___flmul+3
  7217  06EA  3018               	movlw	24
  7218  06EB                     u3975:	
  7219  06EB  1003               	clrc
  7220  06EC  0CAB               	rrf	??___flmul+3,f
  7221  06ED  0CAA               	rrf	??___flmul+2,f
  7222  06EE  0CA9               	rrf	??___flmul+1,f
  7223  06EF  0CA8               	rrf	??___flmul,f
  7224  06F0                     u3970:	
  7225  06F0  3EFF               	addlw	-1
  7226  06F1  1D03               	skipz
  7227  06F2  2EEB               	goto	u3975
  7228  06F3  0828               	movf	??___flmul,w
  7229  06F4  07B4               	addwf	___flmul@prod,f
  7230  06F5  0829               	movf	??___flmul+1,w
  7231  06F6  1103               	clrz
  7232  06F7  1803               	skipnc
  7233  06F8  3E01               	addlw	1
  7234  06F9  1903               	skipnz
  7235  06FA  2EFC               	goto	u3981
  7236  06FB  07B5               	addwf	___flmul@prod+1,f
  7237  06FC                     u3981:	
  7238  06FC  082A               	movf	??___flmul+2,w
  7239  06FD  1103               	clrz
  7240  06FE  1803               	skipnc
  7241  06FF  3E01               	addlw	1
  7242  0700  1903               	skipnz
  7243  0701  2F03               	goto	u3982
  7244  0702  07B6               	addwf	___flmul@prod+2,f
  7245  0703                     u3982:	
  7246  0703  082B               	movf	??___flmul+3,w
  7247  0704  1103               	clrz
  7248  0705  1803               	skipnc
  7249  0706  3E01               	addlw	1
  7250  0707  1903               	skipnz
  7251  0708  2F0A               	goto	u3983
  7252  0709  07B7               	addwf	___flmul@prod+3,f
  7253  070A                     u3983:	
  7254  070A                     l3023:	
  7255  070A  3008               	movlw	8
  7256  070B  00A8               	movwf	??___flmul
  7257  070C                     u3995:	
  7258  070C  1003               	clrc
  7259  070D  0DAE               	rlf	___flmul@grs,f
  7260  070E  0DAF               	rlf	___flmul@grs+1,f
  7261  070F  0DB0               	rlf	___flmul@grs+2,f
  7262  0710  0DB1               	rlf	___flmul@grs+3,f
  7263  0711  0BA8               	decfsz	??___flmul,f
  7264  0712  2F0C               	goto	u3995
  7265  0713                     l3025:	
  7266  0713  0833               	movf	___flmul@bexp,w
  7267  0714  0732               	addwf	___flmul@aexp,w
  7268  0715  00A8               	movwf	??___flmul
  7269  0716  01A9               	clrf	??___flmul+1
  7270  0717  0DA9               	rlf	??___flmul+1,f
  7271  0718  0828               	movf	??___flmul,w
  7272  0719  3E82               	addlw	130
  7273  071A  00B8               	movwf	___flmul@temp
  7274  071B  0829               	movf	??___flmul+1,w
  7275  071C  1803               	skipnc
  7276  071D  3E01               	addlw	1
  7277  071E  3EFF               	addlw	255
  7278  071F  00B9               	movwf	___flmul@temp+1
  7279  0720  2F3E               	goto	l3037
  7280  0721                     l3027:	
  7281  0721  3001               	movlw	1
  7282  0722  00A8               	movwf	??___flmul
  7283  0723                     u4005:	
  7284  0723  1003               	clrc
  7285  0724  0DB4               	rlf	___flmul@prod,f
  7286  0725  0DB5               	rlf	___flmul@prod+1,f
  7287  0726  0DB6               	rlf	___flmul@prod+2,f
  7288  0727  0DB7               	rlf	___flmul@prod+3,f
  7289  0728  0BA8               	decfsz	??___flmul,f
  7290  0729  2F23               	goto	u4005
  7291  072A                     l3029:	
  7292  072A  1FB1               	btfss	___flmul@grs+3,7
  7293  072B  2F2D               	goto	u4011
  7294  072C  2F2E               	goto	u4010
  7295  072D                     u4011:	
  7296  072D  2F2F               	goto	l3033
  7297  072E                     u4010:	
  7298  072E                     l3031:	
  7299  072E  1434               	bsf	___flmul@prod,0
  7300  072F                     l3033:	
  7301  072F  3001               	movlw	1
  7302  0730  00A8               	movwf	??___flmul
  7303  0731                     u4025:	
  7304  0731  1003               	clrc
  7305  0732  0DAE               	rlf	___flmul@grs,f
  7306  0733  0DAF               	rlf	___flmul@grs+1,f
  7307  0734  0DB0               	rlf	___flmul@grs+2,f
  7308  0735  0DB1               	rlf	___flmul@grs+3,f
  7309  0736  0BA8               	decfsz	??___flmul,f
  7310  0737  2F31               	goto	u4025
  7311  0738                     l3035:	
  7312  0738  30FF               	movlw	255
  7313  0739  07B8               	addwf	___flmul@temp,f
  7314  073A  1803               	skipnc
  7315  073B  0AB9               	incf	___flmul@temp+1,f
  7316  073C  30FF               	movlw	255
  7317  073D  07B9               	addwf	___flmul@temp+1,f
  7318  073E                     l3037:	
  7319  073E  1FB6               	btfss	___flmul@prod+2,7
  7320  073F  2F41               	goto	u4031
  7321  0740  2F42               	goto	u4030
  7322  0741                     u4031:	
  7323  0741  2F21               	goto	l3027
  7324  0742                     u4030:	
  7325  0742                     l3039:	
  7326  0742  01B2               	clrf	___flmul@aexp
  7327  0743                     l3041:	
  7328  0743  1FB1               	btfss	___flmul@grs+3,7
  7329  0744  2F46               	goto	u4041
  7330  0745  2F47               	goto	u4040
  7331  0746                     u4041:	
  7332  0746  2F63               	goto	l3049
  7333  0747                     u4040:	
  7334  0747                     l3043:	
  7335  0747  30FF               	movlw	255
  7336  0748  052E               	andwf	___flmul@grs,w
  7337  0749  00A8               	movwf	??___flmul
  7338  074A  30FF               	movlw	255
  7339  074B  052F               	andwf	___flmul@grs+1,w
  7340  074C  00A9               	movwf	??___flmul+1
  7341  074D  30FF               	movlw	255
  7342  074E  0530               	andwf	___flmul@grs+2,w
  7343  074F  00AA               	movwf	??___flmul+2
  7344  0750  307F               	movlw	127
  7345  0751  0531               	andwf	___flmul@grs+3,w
  7346  0752  00AB               	movwf	??___flmul+3
  7347  0753  082B               	movf	??___flmul+3,w
  7348  0754  042A               	iorwf	??___flmul+2,w
  7349  0755  0429               	iorwf	??___flmul+1,w
  7350  0756  0428               	iorwf	??___flmul,w
  7351  0757  1903               	skipnz
  7352  0758  2F5A               	goto	u4051
  7353  0759  2F5B               	goto	u4050
  7354  075A                     u4051:	
  7355  075A  2F5E               	goto	l850
  7356  075B                     u4050:	
  7357  075B                     l3045:	
  7358  075B  01B2               	clrf	___flmul@aexp
  7359  075C  0AB2               	incf	___flmul@aexp,f
  7360  075D  2F63               	goto	l3049
  7361  075E                     l850:	
  7362  075E  1C34               	btfss	___flmul@prod,0
  7363  075F  2F61               	goto	u4061
  7364  0760  2F62               	goto	u4060
  7365  0761                     u4061:	
  7366  0761  2F63               	goto	l3049
  7367  0762                     u4060:	
  7368  0762  2F5B               	goto	l3045
  7369  0763                     l3049:	
  7370  0763  0832               	movf	___flmul@aexp,w
  7371  0764  1903               	btfsc	3,2
  7372  0765  2F67               	goto	u4071
  7373  0766  2F68               	goto	u4070
  7374  0767                     u4071:	
  7375  0767  2F99               	goto	l3059
  7376  0768                     u4070:	
  7377  0768                     l3051:	
  7378  0768  3001               	movlw	1
  7379  0769  07B4               	addwf	___flmul@prod,f
  7380  076A  3000               	movlw	0
  7381  076B  1803               	skipnc
  7382  076C  3001               	movlw	1
  7383  076D  07B5               	addwf	___flmul@prod+1,f
  7384  076E  3000               	movlw	0
  7385  076F  1803               	skipnc
  7386  0770  3001               	movlw	1
  7387  0771  07B6               	addwf	___flmul@prod+2,f
  7388  0772  3000               	movlw	0
  7389  0773  1803               	skipnc
  7390  0774  3001               	movlw	1
  7391  0775  07B7               	addwf	___flmul@prod+3,f
  7392  0776                     l3053:	
  7393  0776  1C37               	btfss	___flmul@prod+3,0
  7394  0777  2F79               	goto	u4081
  7395  0778  2F7A               	goto	u4080
  7396  0779                     u4081:	
  7397  0779  2F99               	goto	l3059
  7398  077A                     u4080:	
  7399  077A                     l3055:	
  7400  077A  0834               	movf	___flmul@prod,w
  7401  077B  00A8               	movwf	??___flmul
  7402  077C  0835               	movf	___flmul@prod+1,w
  7403  077D  00A9               	movwf	??___flmul+1
  7404  077E  0836               	movf	___flmul@prod+2,w
  7405  077F  00AA               	movwf	??___flmul+2
  7406  0780  0837               	movf	___flmul@prod+3,w
  7407  0781  00AB               	movwf	??___flmul+3
  7408  0782  3001               	movlw	1
  7409  0783  00AC               	movwf	??___flmul+4
  7410  0784                     u4095:	
  7411  0784  0D2B               	rlf	??___flmul+3,w
  7412  0785  0CAB               	rrf	??___flmul+3,f
  7413  0786  0CAA               	rrf	??___flmul+2,f
  7414  0787  0CA9               	rrf	??___flmul+1,f
  7415  0788  0CA8               	rrf	??___flmul,f
  7416  0789                     u4090:	
  7417  0789  0BAC               	decfsz	??___flmul+4,f
  7418  078A  2F84               	goto	u4095
  7419  078B  082B               	movf	??___flmul+3,w
  7420  078C  00B7               	movwf	___flmul@prod+3
  7421  078D  082A               	movf	??___flmul+2,w
  7422  078E  00B6               	movwf	___flmul@prod+2
  7423  078F  0829               	movf	??___flmul+1,w
  7424  0790  00B5               	movwf	___flmul@prod+1
  7425  0791  0828               	movf	??___flmul,w
  7426  0792  00B4               	movwf	___flmul@prod
  7427  0793                     l3057:	
  7428  0793  3001               	movlw	1
  7429  0794  07B8               	addwf	___flmul@temp,f
  7430  0795  1803               	skipnc
  7431  0796  0AB9               	incf	___flmul@temp+1,f
  7432  0797  3000               	movlw	0
  7433  0798  07B9               	addwf	___flmul@temp+1,f
  7434  0799                     l3059:	
  7435  0799  0839               	movf	___flmul@temp+1,w
  7436  079A  3A80               	xorlw	128
  7437  079B  00FF               	movwf	btemp+1
  7438  079C  3080               	movlw	128
  7439  079D  027F               	subwf	btemp+1,w
  7440  079E  1D03               	skipz
  7441  079F  2FA2               	goto	u4105
  7442  07A0  30FF               	movlw	255
  7443  07A1  0238               	subwf	___flmul@temp,w
  7444  07A2                     u4105:	
  7445  07A2  1C03               	skipc
  7446  07A3  2FA5               	goto	u4101
  7447  07A4  2FA6               	goto	u4100
  7448  07A5                     u4101:	
  7449  07A5  2FB1               	goto	l3063
  7450  07A6                     u4100:	
  7451  07A6                     l3061:	
  7452  07A6  307F               	movlw	127
  7453  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  7454  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  7455  07A9  00B7               	movwf	___flmul@prod+3
  7456  07AA  3080               	movlw	128
  7457  07AB  00B6               	movwf	___flmul@prod+2
  7458  07AC  3000               	movlw	0
  7459  07AD  00B5               	movwf	___flmul@prod+1
  7460  07AE  3000               	movlw	0
  7461  07AF  00B4               	movwf	___flmul@prod
  7462  07B0  2FE6               	goto	l856
  7463  07B1                     l3063:	
  7464  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  7465  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  7466  07B3  0839               	movf	___flmul@temp+1,w
  7467  07B4  3A80               	xorlw	128
  7468  07B5  00FF               	movwf	btemp+1
  7469  07B6  3080               	movlw	128
  7470  07B7  027F               	subwf	btemp+1,w
  7471  07B8  1D03               	skipz
  7472  07B9  2FBC               	goto	u4115
  7473  07BA  3001               	movlw	1
  7474  07BB  0238               	subwf	___flmul@temp,w
  7475  07BC                     u4115:	
  7476  07BC  1803               	skipnc
  7477  07BD  2FBF               	goto	u4111
  7478  07BE  2FC0               	goto	u4110
  7479  07BF                     u4111:	
  7480  07BF  2FCC               	goto	l3069
  7481  07C0                     u4110:	
  7482  07C0                     l3065:	
  7483  07C0  3000               	movlw	0
  7484  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  7485  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  7486  07C3  00B7               	movwf	___flmul@prod+3
  7487  07C4  3000               	movlw	0
  7488  07C5  00B6               	movwf	___flmul@prod+2
  7489  07C6  3000               	movlw	0
  7490  07C7  00B5               	movwf	___flmul@prod+1
  7491  07C8  3000               	movlw	0
  7492  07C9  00B4               	movwf	___flmul@prod
  7493  07CA                     l3067:	
  7494  07CA  01AD               	clrf	___flmul@sign
  7495  07CB  2FE6               	goto	l856
  7496  07CC                     l3069:	
  7497  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  7498  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  7499  07CE  0838               	movf	___flmul@temp,w
  7500  07CF  00A8               	movwf	??___flmul
  7501  07D0  0828               	movf	??___flmul,w
  7502  07D1  00B3               	movwf	___flmul@bexp
  7503  07D2  30FF               	movlw	255
  7504  07D3  05B4               	andwf	___flmul@prod,f
  7505  07D4  30FF               	movlw	255
  7506  07D5  05B5               	andwf	___flmul@prod+1,f
  7507  07D6  307F               	movlw	127
  7508  07D7  05B6               	andwf	___flmul@prod+2,f
  7509  07D8  3000               	movlw	0
  7510  07D9  05B7               	andwf	___flmul@prod+3,f
  7511  07DA                     l3071:	
  7512  07DA  1C33               	btfss	___flmul@bexp,0
  7513  07DB  2FDD               	goto	u4121
  7514  07DC  2FDE               	goto	u4120
  7515  07DD                     u4121:	
  7516  07DD  2FDF               	goto	l3075
  7517  07DE                     u4120:	
  7518  07DE                     l3073:	
  7519  07DE  17B6               	bsf	___flmul@prod+2,7
  7520  07DF                     l3075:	
  7521  07DF  0833               	movf	___flmul@bexp,w
  7522  07E0  00A8               	movwf	??___flmul
  7523  07E1  1003               	clrc
  7524  07E2  0C28               	rrf	??___flmul,w
  7525  07E3  00A9               	movwf	??___flmul+1
  7526  07E4  0829               	movf	??___flmul+1,w
  7527  07E5  00B7               	movwf	___flmul@prod+3
  7528  07E6                     l856:	
  7529  07E6  082D               	movf	___flmul@sign,w
  7530  07E7  00A8               	movwf	??___flmul
  7531  07E8  0828               	movf	??___flmul,w
  7532  07E9  04B7               	iorwf	___flmul@prod+3,f
  7533  07EA                     l3077:	
  7534  07EA  0837               	movf	___flmul@prod+3,w
  7535  07EB  00A3               	movwf	?___flmul+3
  7536  07EC  0836               	movf	___flmul@prod+2,w
  7537  07ED  00A2               	movwf	?___flmul+2
  7538  07EE  0835               	movf	___flmul@prod+1,w
  7539  07EF  00A1               	movwf	?___flmul+1
  7540  07F0  0834               	movf	___flmul@prod,w
  7541  07F1  00A0               	movwf	?___flmul
  7542  07F2                     l844:	
  7543  07F2  0008               	return
  7544  07F3                     __end_of___flmul:	
  7545                           
  7546                           	psect	text24
  7547  0006                     __ptext24:	
  7548 ;; *************** function __Umul8_16 *****************
  7549 ;; Defined at:
  7550 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  7551 ;; Parameters:    Size  Location     Type
  7552 ;;  multiplier      1    wreg     unsigned char 
  7553 ;;  multiplicand    1    0[COMMON] unsigned char 
  7554 ;; Auto vars:     Size  Location     Type
  7555 ;;  multiplier      1    8[COMMON] unsigned char 
  7556 ;;  word_mpld       2    6[COMMON] unsigned int 
  7557 ;;  product         2    4[COMMON] unsigned int 
  7558 ;; Return value:  Size  Location     Type
  7559 ;;                  2    0[COMMON] unsigned int 
  7560 ;; Registers used:
  7561 ;;		wreg, status,2, status,0
  7562 ;; Tracked objects:
  7563 ;;		On entry : 0/0
  7564 ;;		On exit  : 0/0
  7565 ;;		Unchanged: 0/0
  7566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7567 ;;      Params:         2       0       0       0       0
  7568 ;;      Locals:         5       0       0       0       0
  7569 ;;      Temps:          2       0       0       0       0
  7570 ;;      Totals:         9       0       0       0       0
  7571 ;;Total ram usage:        9 bytes
  7572 ;; Hardware stack levels used:    1
  7573 ;; This function calls:
  7574 ;;		Nothing
  7575 ;; This function is called by:
  7576 ;;		___flmul
  7577 ;; This function uses a non-reentrant model
  7578 ;;
  7579                           
  7580                           
  7581                           ;psect for function __Umul8_16
  7582  0006                     __Umul8_16:	
  7583                           
  7584                           ;incstack = 0
  7585                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7586                           ;__Umul8_16@multiplier stored from wreg
  7587  0006  00F8               	movwf	__Umul8_16@multiplier
  7588  0007                     l2681:	
  7589  0007  01F4               	clrf	__Umul8_16@product
  7590  0008  01F5               	clrf	__Umul8_16@product+1
  7591  0009                     l2683:	
  7592  0009  0870               	movf	__Umul8_16@multiplicand,w
  7593  000A  00F2               	movwf	??__Umul8_16
  7594  000B  01F3               	clrf	??__Umul8_16+1
  7595  000C  0872               	movf	??__Umul8_16,w
  7596  000D  00F6               	movwf	__Umul8_16@word_mpld
  7597  000E  0873               	movf	??__Umul8_16+1,w
  7598  000F  00F7               	movwf	__Umul8_16@word_mpld+1
  7599  0010                     l2685:	
  7600  0010  1C78               	btfss	__Umul8_16@multiplier,0
  7601  0011  2813               	goto	u3261
  7602  0012  2814               	goto	u3260
  7603  0013                     u3261:	
  7604  0013  281A               	goto	l901
  7605  0014                     u3260:	
  7606  0014                     l2687:	
  7607  0014  0876               	movf	__Umul8_16@word_mpld,w
  7608  0015  07F4               	addwf	__Umul8_16@product,f
  7609  0016  1803               	skipnc
  7610  0017  0AF5               	incf	__Umul8_16@product+1,f
  7611  0018  0877               	movf	__Umul8_16@word_mpld+1,w
  7612  0019  07F5               	addwf	__Umul8_16@product+1,f
  7613  001A                     l901:	
  7614  001A  3001               	movlw	1
  7615  001B                     u3275:	
  7616  001B  1003               	clrc
  7617  001C  0DF6               	rlf	__Umul8_16@word_mpld,f
  7618  001D  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  7619  001E  3EFF               	addlw	-1
  7620  001F  1D03               	skipz
  7621  0020  281B               	goto	u3275
  7622  0021  1003               	clrc
  7623  0022  0CF8               	rrf	__Umul8_16@multiplier,f
  7624  0023                     l2689:	
  7625  0023  0878               	movf	__Umul8_16@multiplier,w
  7626  0024  1D03               	btfss	3,2
  7627  0025  2827               	goto	u3281
  7628  0026  2828               	goto	u3280
  7629  0027                     u3281:	
  7630  0027  2810               	goto	l2685
  7631  0028                     u3280:	
  7632  0028                     l2691:	
  7633  0028  0875               	movf	__Umul8_16@product+1,w
  7634  0029  00F1               	movwf	?__Umul8_16+1
  7635  002A  0874               	movf	__Umul8_16@product,w
  7636  002B  00F0               	movwf	?__Umul8_16
  7637  002C                     l903:	
  7638  002C  0008               	return
  7639  002D                     __end_of__Umul8_16:	
  7640                           
  7641                           	psect	text25
  7642  13E8                     __ptext25:	
  7643 ;; *************** function _Lcd_Write_Int *****************
  7644 ;; Defined at:
  7645 ;;		line 117 in file "./lcd.h"
  7646 ;; Parameters:    Size  Location     Type
  7647 ;;  num             2   11[BANK1 ] int 
  7648 ;; Auto vars:     Size  Location     Type
  7649 ;;  number          8   14[BANK1 ] unsigned char [8]
  7650 ;; Return value:  Size  Location     Type
  7651 ;;                  1    wreg      void 
  7652 ;; Registers used:
  7653 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7654 ;; Tracked objects:
  7655 ;;		On entry : 0/0
  7656 ;;		On exit  : 0/0
  7657 ;;		Unchanged: 0/0
  7658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7659 ;;      Params:         0       0       2       0       0
  7660 ;;      Locals:         0       0       8       0       0
  7661 ;;      Temps:          0       0       1       0       0
  7662 ;;      Totals:         0       0      11       0       0
  7663 ;;Total ram usage:       11 bytes
  7664 ;; Hardware stack levels used:    1
  7665 ;; Hardware stack levels required when called:    3
  7666 ;; This function calls:
  7667 ;;		_Lcd_Write_String
  7668 ;;		_sprintf
  7669 ;; This function is called by:
  7670 ;;		_LCD
  7671 ;; This function uses a non-reentrant model
  7672 ;;
  7673                           
  7674                           
  7675                           ;psect for function _Lcd_Write_Int
  7676  13E8                     _Lcd_Write_Int:	
  7677  13E8                     l2717:	
  7678                           ;incstack = 0
  7679                           ; Regs used in _Lcd_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7680                           
  7681                           
  7682                           ;./lcd.h: 118:     char number[8];;./lcd.h: 119:     sprintf(number,"%d",num);
  7683  13E8  3035               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  7684  13E9  1683               	bsf	3,5	;RP0=1, select bank1
  7685  13EA  1303               	bcf	3,6	;RP1=0, select bank1
  7686  13EB  00AD               	movwf	??_Lcd_Write_Int^(0+128)
  7687  13EC  082D               	movf	??_Lcd_Write_Int^(0+128),w
  7688  13ED  1283               	bcf	3,5	;RP0=0, select bank0
  7689  13EE  1303               	bcf	3,6	;RP1=0, select bank0
  7690  13EF  00A0               	movwf	sprintf@f
  7691  13F0  1683               	bsf	3,5	;RP0=1, select bank1
  7692  13F1  1303               	bcf	3,6	;RP1=0, select bank1
  7693  13F2  082C               	movf	(Lcd_Write_Int@num+1)^(0+128),w
  7694  13F3  1283               	bcf	3,5	;RP0=0, select bank0
  7695  13F4  1303               	bcf	3,6	;RP1=0, select bank0
  7696  13F5  00A2               	movwf	?_sprintf+2
  7697  13F6  1683               	bsf	3,5	;RP0=1, select bank1
  7698  13F7  1303               	bcf	3,6	;RP1=0, select bank1
  7699  13F8  082B               	movf	Lcd_Write_Int@num^(0+128),w
  7700  13F9  1283               	bcf	3,5	;RP0=0, select bank0
  7701  13FA  1303               	bcf	3,6	;RP1=0, select bank0
  7702  13FB  00A1               	movwf	?_sprintf+1
  7703  13FC  30AE               	movlw	(low (Lcd_Write_Int@number| 0))& (0+255)
  7704  13FD  120A  158A  2282  160A  118A  	fcall	_sprintf
  7705                           
  7706                           ;./lcd.h: 120:     Lcd_Write_String(number);
  7707  1402  30AE               	movlw	(low (Lcd_Write_Int@number| 0))& (0+255)
  7708  1403  00F5               	movwf	Lcd_Write_String@a
  7709  1404  3000               	movlw	0
  7710  1405  00F6               	movwf	Lcd_Write_String@a+1
  7711  1406  160A  118A  24E6  160A  118A  	fcall	_Lcd_Write_String
  7712  140B                     l120:	
  7713  140B  0008               	return
  7714  140C                     __end_of_Lcd_Write_Int:	
  7715                           
  7716                           	psect	text26
  7717  0A82                     __ptext26:	
  7718 ;; *************** function _sprintf *****************
  7719 ;; Defined at:
  7720 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  7721 ;; Parameters:    Size  Location     Type
  7722 ;;  sp              1    wreg     PTR unsigned char 
  7723 ;;		 -> Lcd_Write_Int@number(8), 
  7724 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  7725 ;;		 -> STR_1(3), 
  7726 ;; Auto vars:     Size  Location     Type
  7727 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  7728 ;;		 -> Lcd_Write_Int@number(8), 
  7729 ;;  tmpval          4    0        struct .
  7730 ;;  val             2    9[BANK0 ] unsigned int 
  7731 ;;  cp              2    0        PTR const unsigned char 
  7732 ;;  len             2    0        unsigned int 
  7733 ;;  c               1   12[BANK0 ] unsigned char 
  7734 ;;  prec            1    8[BANK0 ] char 
  7735 ;;  flag            1    7[BANK0 ] unsigned char 
  7736 ;;  ap              1    6[BANK0 ] PTR void [1]
  7737 ;;		 -> ?_sprintf(2), 
  7738 ;; Return value:  Size  Location     Type
  7739 ;;                  2    0[BANK0 ] int 
  7740 ;; Registers used:
  7741 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7742 ;; Tracked objects:
  7743 ;;		On entry : 0/0
  7744 ;;		On exit  : 0/0
  7745 ;;		Unchanged: 0/0
  7746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7747 ;;      Params:         0       3       0       0       0
  7748 ;;      Locals:         0       7       0       0       0
  7749 ;;      Temps:          0       3       0       0       0
  7750 ;;      Totals:         0      13       0       0       0
  7751 ;;Total ram usage:       13 bytes
  7752 ;; Hardware stack levels used:    1
  7753 ;; Hardware stack levels required when called:    1
  7754 ;; This function calls:
  7755 ;;		___lwdiv
  7756 ;;		___lwmod
  7757 ;; This function is called by:
  7758 ;;		_Lcd_Write_Int
  7759 ;; This function uses a non-reentrant model
  7760 ;;
  7761                           
  7762                           
  7763                           ;psect for function _sprintf
  7764  0A82                     _sprintf:	
  7765                           
  7766                           ;incstack = 0
  7767                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7768                           ;sprintf@sp stored from wreg
  7769  0A82  1283               	bcf	3,5	;RP0=0, select bank0
  7770  0A83  1303               	bcf	3,6	;RP1=0, select bank0
  7771  0A84  00AB               	movwf	sprintf@sp
  7772  0A85                     l2425:	
  7773                           
  7774                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .10\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;
  7775  0A85  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  7776  0A86  00A3               	movwf	??_sprintf
  7777  0A87  0823               	movf	??_sprintf,w
  7778  0A88  00A6               	movwf	sprintf@ap
  7779                           
  7780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  7781  0A89  2B53               	goto	l2477
  7782  0A8A                     l2427:	
  7783                           
  7784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  7785  0A8A  3025               	movlw	37
  7786  0A8B  062C               	xorwf	sprintf@c,w
  7787  0A8C  1903               	btfsc	3,2
  7788  0A8D  2A8F               	goto	u2731
  7789  0A8E  2A90               	goto	u2730
  7790  0A8F                     u2731:	
  7791  0A8F  2A9C               	goto	l2433
  7792  0A90                     u2730:	
  7793  0A90                     l2429:	
  7794                           
  7795                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  7796  0A90  082C               	movf	sprintf@c,w
  7797  0A91  00A3               	movwf	??_sprintf
  7798  0A92  082B               	movf	sprintf@sp,w
  7799  0A93  0084               	movwf	4
  7800  0A94  0823               	movf	??_sprintf,w
  7801  0A95  1383               	bcf	3,7	;select IRP bank0
  7802  0A96  0080               	movwf	0
  7803  0A97                     l2431:	
  7804  0A97  3001               	movlw	1
  7805  0A98  00A3               	movwf	??_sprintf
  7806  0A99  0823               	movf	??_sprintf,w
  7807  0A9A  07AB               	addwf	sprintf@sp,f
  7808                           
  7809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  7810  0A9B  2B53               	goto	l2477
  7811  0A9C                     l2433:	
  7812                           
  7813                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  7814  0A9C  01A7               	clrf	sprintf@flag
  7815  0A9D                     l2437:	
  7816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 661:   swit
      +                          ch(c = *f++) {
  7817                           
  7818  0A9D  3001               	movlw	1
  7819  0A9E  07A0               	addwf	sprintf@f,f
  7820  0A9F  30FF               	movlw	-1
  7821  0AA0  0720               	addwf	sprintf@f,w
  7822  0AA1  0084               	movwf	4
  7823  0AA2  160A  118A  200A  120A  158A  	fcall	stringdir
  7824  0AA7  00AC               	movwf	sprintf@c
  7825  0AA8  00A3               	movwf	??_sprintf
  7826  0AA9  01A4               	clrf	??_sprintf+1
  7827                           
  7828                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7829                           ; Switch size 1, requested type "simple"
  7830                           ; Number of cases is 1, Range of values is 0 to 0
  7831                           ; switch strategies available:
  7832                           ; Name         Instructions Cycles
  7833                           ; simple_byte            4     3 (average)
  7834                           ; direct_byte           11     8 (fixed)
  7835                           ; jumptable            260     6 (fixed)
  7836                           ;	Chosen strategy is simple_byte
  7837  0AAA  0824               	movf	??_sprintf+1,w
  7838  0AAB  3A00               	xorlw	0	; case 0
  7839  0AAC  1903               	skipnz
  7840  0AAD  2AAF               	goto	l3753
  7841  0AAE  2B53               	goto	l2477
  7842  0AAF                     l3753:	
  7843                           
  7844                           ; Switch size 1, requested type "simple"
  7845                           ; Number of cases is 3, Range of values is 0 to 105
  7846                           ; switch strategies available:
  7847                           ; Name         Instructions Cycles
  7848                           ; simple_byte           10     6 (average)
  7849                           ; jumptable            260     6 (fixed)
  7850                           ;	Chosen strategy is simple_byte
  7851  0AAF  0823               	movf	??_sprintf,w
  7852  0AB0  3A00               	xorlw	0	; case 0
  7853  0AB1  1903               	skipnz
  7854  0AB2  2B65               	goto	l2479
  7855  0AB3  3A64               	xorlw	100	; case 100
  7856  0AB4  1903               	skipnz
  7857  0AB5  2ABA               	goto	l2439
  7858  0AB6  3A0D               	xorlw	13	; case 105
  7859  0AB7  1903               	skipnz
  7860  0AB8  2ABA               	goto	l2439
  7861  0AB9  2B53               	goto	l2477
  7862  0ABA                     l2439:	
  7863                           
  7864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1279:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
  7865  0ABA  0826               	movf	sprintf@ap,w
  7866  0ABB  0084               	movwf	4
  7867  0ABC  1383               	bcf	3,7	;select IRP bank0
  7868  0ABD  0800               	movf	0,w
  7869  0ABE  00A9               	movwf	sprintf@val
  7870  0ABF  0A84               	incf	4,f
  7871  0AC0  0800               	movf	0,w
  7872  0AC1  00AA               	movwf	sprintf@val+1
  7873  0AC2                     l2441:	
  7874  0AC2  3002               	movlw	2
  7875  0AC3  00A3               	movwf	??_sprintf
  7876  0AC4  0823               	movf	??_sprintf,w
  7877  0AC5  07A6               	addwf	sprintf@ap,f
  7878  0AC6                     l2443:	
  7879                           
  7880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((int)val < 0) {
  7881  0AC6  1FAA               	btfss	sprintf@val+1,7
  7882  0AC7  2AC9               	goto	u2741
  7883  0AC8  2ACA               	goto	u2740
  7884  0AC9                     u2741:	
  7885  0AC9  2AD3               	goto	l2449
  7886  0ACA                     u2740:	
  7887  0ACA                     l2445:	
  7888                           
  7889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
  7890  0ACA  3003               	movlw	3
  7891  0ACB  00A3               	movwf	??_sprintf
  7892  0ACC  0823               	movf	??_sprintf,w
  7893  0ACD  04A7               	iorwf	sprintf@flag,f
  7894  0ACE                     l2447:	
  7895                           
  7896                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
  7897  0ACE  09A9               	comf	sprintf@val,f
  7898  0ACF  09AA               	comf	sprintf@val+1,f
  7899  0AD0  0AA9               	incf	sprintf@val,f
  7900  0AD1  1903               	skipnz
  7901  0AD2  0AAA               	incf	sprintf@val+1,f
  7902  0AD3                     l2449:	
  7903                           
  7904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1292:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7905  0AD3  01AC               	clrf	sprintf@c
  7906  0AD4  0AAC               	incf	sprintf@c,f
  7907  0AD5                     l2455:	
  7908                           
  7909                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
  7910  0AD5  082C               	movf	sprintf@c,w
  7911  0AD6  00A3               	movwf	??_sprintf
  7912  0AD7  0723               	addwf	??_sprintf,w
  7913  0AD8  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  7914  0AD9  0084               	movwf	4
  7915  0ADA  160A  118A  200A  120A  158A  	fcall	stringdir
  7916  0ADF  00A4               	movwf	??_sprintf+1
  7917  0AE0  160A  118A  200A  120A  158A  	fcall	stringdir
  7918  0AE5  00A5               	movwf	??_sprintf+2
  7919  0AE6  0825               	movf	??_sprintf+2,w
  7920  0AE7  022A               	subwf	sprintf@val+1,w
  7921  0AE8  1D03               	skipz
  7922  0AE9  2AEC               	goto	u2755
  7923  0AEA  0824               	movf	??_sprintf+1,w
  7924  0AEB  0229               	subwf	sprintf@val,w
  7925  0AEC                     u2755:	
  7926  0AEC  1803               	skipnc
  7927  0AED  2AEF               	goto	u2751
  7928  0AEE  2AF0               	goto	u2750
  7929  0AEF                     u2751:	
  7930  0AEF  2AF1               	goto	l2459
  7931  0AF0                     u2750:	
  7932  0AF0  2AFB               	goto	l2461
  7933  0AF1                     l2459:	
  7934  0AF1  3001               	movlw	1
  7935  0AF2  00A3               	movwf	??_sprintf
  7936  0AF3  0823               	movf	??_sprintf,w
  7937  0AF4  07AC               	addwf	sprintf@c,f
  7938  0AF5  3005               	movlw	5
  7939  0AF6  062C               	xorwf	sprintf@c,w
  7940  0AF7  1D03               	btfss	3,2
  7941  0AF8  2AFA               	goto	u2761
  7942  0AF9  2AFB               	goto	u2760
  7943  0AFA                     u2761:	
  7944  0AFA  2AD5               	goto	l2455
  7945  0AFB                     u2760:	
  7946  0AFB                     l2461:	
  7947                           
  7948                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
  7949  0AFB  0827               	movf	sprintf@flag,w
  7950  0AFC  3903               	andlw	3
  7951  0AFD  1903               	btfsc	3,2
  7952  0AFE  2B00               	goto	u2771
  7953  0AFF  2B01               	goto	u2770
  7954  0B00                     u2771:	
  7955  0B00  2B0C               	goto	l2467
  7956  0B01                     u2770:	
  7957  0B01                     l2463:	
  7958                           
  7959                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  7960  0B01  302D               	movlw	45
  7961  0B02  00A3               	movwf	??_sprintf
  7962  0B03  082B               	movf	sprintf@sp,w
  7963  0B04  0084               	movwf	4
  7964  0B05  0823               	movf	??_sprintf,w
  7965  0B06  1383               	bcf	3,7	;select IRP bank0
  7966  0B07  0080               	movwf	0
  7967  0B08                     l2465:	
  7968  0B08  3001               	movlw	1
  7969  0B09  00A3               	movwf	??_sprintf
  7970  0B0A  0823               	movf	??_sprintf,w
  7971  0B0B  07AB               	addwf	sprintf@sp,f
  7972  0B0C                     l2467:	
  7973                           
  7974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1495:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1498:   prec 
      +                          = c;
  7975  0B0C  082C               	movf	sprintf@c,w
  7976  0B0D  00A3               	movwf	??_sprintf
  7977  0B0E  0823               	movf	??_sprintf,w
  7978  0B0F  00A8               	movwf	sprintf@prec
  7979                           
  7980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  7981  0B10  2B4A               	goto	l2475
  7982  0B11                     l2469:	
  7983                           
  7984                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  7985  0B11  300A               	movlw	10
  7986  0B12  00F8               	movwf	___lwmod@divisor
  7987  0B13  3000               	movlw	0
  7988  0B14  00F9               	movwf	___lwmod@divisor+1
  7989  0B15  0828               	movf	sprintf@prec,w
  7990  0B16  00A3               	movwf	??_sprintf
  7991  0B17  0723               	addwf	??_sprintf,w
  7992  0B18  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  7993  0B19  0084               	movwf	4
  7994  0B1A  160A  118A  200A  120A  158A  	fcall	stringdir
  7995  0B1F  00F0               	movwf	___lwdiv@divisor
  7996  0B20  160A  118A  200A  120A  158A  	fcall	stringdir
  7997  0B25  00F1               	movwf	___lwdiv@divisor+1
  7998  0B26  082A               	movf	sprintf@val+1,w
  7999  0B27  00F3               	movwf	___lwdiv@dividend+1
  8000  0B28  0829               	movf	sprintf@val,w
  8001  0B29  00F2               	movwf	___lwdiv@dividend
  8002  0B2A  160A  118A  2528  120A  158A  	fcall	___lwdiv
  8003  0B2F  0871               	movf	?___lwdiv+1,w
  8004  0B30  00FB               	movwf	___lwmod@dividend+1
  8005  0B31  0870               	movf	?___lwdiv,w
  8006  0B32  00FA               	movwf	___lwmod@dividend
  8007  0B33  120A  158A  2002  120A  158A  	fcall	___lwmod
  8008  0B38  0878               	movf	?___lwmod,w
  8009  0B39  3E30               	addlw	48
  8010  0B3A  1283               	bcf	3,5	;RP0=0, select bank0
  8011  0B3B  1303               	bcf	3,6	;RP1=0, select bank0
  8012  0B3C  00A4               	movwf	??_sprintf+1
  8013  0B3D  0824               	movf	??_sprintf+1,w
  8014  0B3E  00AC               	movwf	sprintf@c
  8015  0B3F                     l2471:	
  8016                           
  8017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
  8018  0B3F  082C               	movf	sprintf@c,w
  8019  0B40  00A3               	movwf	??_sprintf
  8020  0B41  082B               	movf	sprintf@sp,w
  8021  0B42  0084               	movwf	4
  8022  0B43  0823               	movf	??_sprintf,w
  8023  0B44  1383               	bcf	3,7	;select IRP bank0
  8024  0B45  0080               	movwf	0
  8025  0B46                     l2473:	
  8026  0B46  3001               	movlw	1
  8027  0B47  00A3               	movwf	??_sprintf
  8028  0B48  0823               	movf	??_sprintf,w
  8029  0B49  07AB               	addwf	sprintf@sp,f
  8030  0B4A                     l2475:	
  8031                           
  8032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  8033  0B4A  30FF               	movlw	255
  8034  0B4B  00A3               	movwf	??_sprintf
  8035  0B4C  0823               	movf	??_sprintf,w
  8036  0B4D  07A8               	addwf	sprintf@prec,f
  8037  0B4E  0A28               	incf	sprintf@prec,w
  8038  0B4F  1D03               	btfss	3,2
  8039  0B50  2B52               	goto	u2781
  8040  0B51  2B53               	goto	u2780
  8041  0B52                     u2781:	
  8042  0B52  2B11               	goto	l2469
  8043  0B53                     u2780:	
  8044  0B53                     l2477:	
  8045                           
  8046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  8047  0B53  3001               	movlw	1
  8048  0B54  07A0               	addwf	sprintf@f,f
  8049  0B55  30FF               	movlw	-1
  8050  0B56  0720               	addwf	sprintf@f,w
  8051  0B57  0084               	movwf	4
  8052  0B58  160A  118A  200A  120A  158A  	fcall	stringdir
  8053  0B5D  00A3               	movwf	??_sprintf
  8054  0B5E  0823               	movf	??_sprintf,w
  8055  0B5F  00AC               	movwf	sprintf@c
  8056  0B60  082C               	movf	sprintf@c,w
  8057  0B61  1D03               	btfss	3,2
  8058  0B62  2B64               	goto	u2791
  8059  0B63  2B65               	goto	u2790
  8060  0B64                     u2791:	
  8061  0B64  2A8A               	goto	l2427
  8062  0B65                     u2790:	
  8063  0B65                     l2479:	
  8064                           
  8065                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  8066  0B65  082B               	movf	sprintf@sp,w
  8067  0B66  0084               	movwf	4
  8068  0B67  1383               	bcf	3,7	;select IRP bank0
  8069  0B68  0180               	clrf	0
  8070  0B69                     l451:	
  8071  0B69  0008               	return
  8072  0B6A                     __end_of_sprintf:	
  8073                           
  8074                           	psect	text27
  8075  0802                     __ptext27:	
  8076 ;; *************** function ___lwmod *****************
  8077 ;; Defined at:
  8078 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  8079 ;; Parameters:    Size  Location     Type
  8080 ;;  divisor         2    8[COMMON] unsigned int 
  8081 ;;  dividend        2   10[COMMON] unsigned int 
  8082 ;; Auto vars:     Size  Location     Type
  8083 ;;  counter         1   13[COMMON] unsigned char 
  8084 ;; Return value:  Size  Location     Type
  8085 ;;                  2    8[COMMON] unsigned int 
  8086 ;; Registers used:
  8087 ;;		wreg, status,2, status,0
  8088 ;; Tracked objects:
  8089 ;;		On entry : 0/0
  8090 ;;		On exit  : 0/0
  8091 ;;		Unchanged: 0/0
  8092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8093 ;;      Params:         4       0       0       0       0
  8094 ;;      Locals:         1       0       0       0       0
  8095 ;;      Temps:          1       0       0       0       0
  8096 ;;      Totals:         6       0       0       0       0
  8097 ;;Total ram usage:        6 bytes
  8098 ;; Hardware stack levels used:    1
  8099 ;; This function calls:
  8100 ;;		Nothing
  8101 ;; This function is called by:
  8102 ;;		_sprintf
  8103 ;; This function uses a non-reentrant model
  8104 ;;
  8105                           
  8106                           
  8107                           ;psect for function ___lwmod
  8108  0802                     ___lwmod:	
  8109  0802                     l2385:	
  8110                           ;incstack = 0
  8111                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8112                           
  8113  0802  0878               	movf	___lwmod@divisor,w
  8114  0803  0479               	iorwf	___lwmod@divisor+1,w
  8115  0804  1903               	btfsc	3,2
  8116  0805  2807               	goto	u2641
  8117  0806  2808               	goto	u2640
  8118  0807                     u2641:	
  8119  0807  2837               	goto	l2403
  8120  0808                     u2640:	
  8121  0808                     l2387:	
  8122  0808  01FD               	clrf	___lwmod@counter
  8123  0809  0AFD               	incf	___lwmod@counter,f
  8124  080A  2816               	goto	l2393
  8125  080B                     l2389:	
  8126  080B  3001               	movlw	1
  8127  080C                     u2655:	
  8128  080C  1003               	clrc
  8129  080D  0DF8               	rlf	___lwmod@divisor,f
  8130  080E  0DF9               	rlf	___lwmod@divisor+1,f
  8131  080F  3EFF               	addlw	-1
  8132  0810  1D03               	skipz
  8133  0811  280C               	goto	u2655
  8134  0812                     l2391:	
  8135  0812  3001               	movlw	1
  8136  0813  00FC               	movwf	??___lwmod
  8137  0814  087C               	movf	??___lwmod,w
  8138  0815  07FD               	addwf	___lwmod@counter,f
  8139  0816                     l2393:	
  8140  0816  1FF9               	btfss	___lwmod@divisor+1,7
  8141  0817  2819               	goto	u2661
  8142  0818  281A               	goto	u2660
  8143  0819                     u2661:	
  8144  0819  280B               	goto	l2389
  8145  081A                     u2660:	
  8146  081A                     l2395:	
  8147  081A  0879               	movf	___lwmod@divisor+1,w
  8148  081B  027B               	subwf	___lwmod@dividend+1,w
  8149  081C  1D03               	skipz
  8150  081D  2820               	goto	u2675
  8151  081E  0878               	movf	___lwmod@divisor,w
  8152  081F  027A               	subwf	___lwmod@dividend,w
  8153  0820                     u2675:	
  8154  0820  1C03               	skipc
  8155  0821  2823               	goto	u2671
  8156  0822  2824               	goto	u2670
  8157  0823                     u2671:	
  8158  0823  282A               	goto	l2399
  8159  0824                     u2670:	
  8160  0824                     l2397:	
  8161  0824  0878               	movf	___lwmod@divisor,w
  8162  0825  02FA               	subwf	___lwmod@dividend,f
  8163  0826  0879               	movf	___lwmod@divisor+1,w
  8164  0827  1C03               	skipc
  8165  0828  03FB               	decf	___lwmod@dividend+1,f
  8166  0829  02FB               	subwf	___lwmod@dividend+1,f
  8167  082A                     l2399:	
  8168  082A  3001               	movlw	1
  8169  082B                     u2685:	
  8170  082B  1003               	clrc
  8171  082C  0CF9               	rrf	___lwmod@divisor+1,f
  8172  082D  0CF8               	rrf	___lwmod@divisor,f
  8173  082E  3EFF               	addlw	-1
  8174  082F  1D03               	skipz
  8175  0830  282B               	goto	u2685
  8176  0831                     l2401:	
  8177  0831  3001               	movlw	1
  8178  0832  02FD               	subwf	___lwmod@counter,f
  8179  0833  1D03               	btfss	3,2
  8180  0834  2836               	goto	u2691
  8181  0835  2837               	goto	u2690
  8182  0836                     u2691:	
  8183  0836  281A               	goto	l2395
  8184  0837                     u2690:	
  8185  0837                     l2403:	
  8186  0837  087B               	movf	___lwmod@dividend+1,w
  8187  0838  00F9               	movwf	?___lwmod+1
  8188  0839  087A               	movf	___lwmod@dividend,w
  8189  083A  00F8               	movwf	?___lwmod
  8190  083B                     l737:	
  8191  083B  0008               	return
  8192  083C                     __end_of___lwmod:	
  8193                           
  8194                           	psect	text28
  8195  1528                     __ptext28:	
  8196 ;; *************** function ___lwdiv *****************
  8197 ;; Defined at:
  8198 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  8199 ;; Parameters:    Size  Location     Type
  8200 ;;  divisor         2    0[COMMON] unsigned int 
  8201 ;;  dividend        2    2[COMMON] unsigned int 
  8202 ;; Auto vars:     Size  Location     Type
  8203 ;;  quotient        2    5[COMMON] unsigned int 
  8204 ;;  counter         1    7[COMMON] unsigned char 
  8205 ;; Return value:  Size  Location     Type
  8206 ;;                  2    0[COMMON] unsigned int 
  8207 ;; Registers used:
  8208 ;;		wreg, status,2, status,0
  8209 ;; Tracked objects:
  8210 ;;		On entry : 0/0
  8211 ;;		On exit  : 0/0
  8212 ;;		Unchanged: 0/0
  8213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8214 ;;      Params:         4       0       0       0       0
  8215 ;;      Locals:         3       0       0       0       0
  8216 ;;      Temps:          1       0       0       0       0
  8217 ;;      Totals:         8       0       0       0       0
  8218 ;;Total ram usage:        8 bytes
  8219 ;; Hardware stack levels used:    1
  8220 ;; This function calls:
  8221 ;;		Nothing
  8222 ;; This function is called by:
  8223 ;;		_sprintf
  8224 ;; This function uses a non-reentrant model
  8225 ;;
  8226                           
  8227                           
  8228                           ;psect for function ___lwdiv
  8229  1528                     ___lwdiv:	
  8230  1528                     l2359:	
  8231                           ;incstack = 0
  8232                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8233                           
  8234  1528  01F5               	clrf	___lwdiv@quotient
  8235  1529  01F6               	clrf	___lwdiv@quotient+1
  8236  152A                     l2361:	
  8237  152A  0870               	movf	___lwdiv@divisor,w
  8238  152B  0471               	iorwf	___lwdiv@divisor+1,w
  8239  152C  1903               	btfsc	3,2
  8240  152D  2D2F               	goto	u2571
  8241  152E  2D30               	goto	u2570
  8242  152F                     u2571:	
  8243  152F  2D67               	goto	l2381
  8244  1530                     u2570:	
  8245  1530                     l2363:	
  8246  1530  01F7               	clrf	___lwdiv@counter
  8247  1531  0AF7               	incf	___lwdiv@counter,f
  8248  1532  2D3E               	goto	l2369
  8249  1533                     l2365:	
  8250  1533  3001               	movlw	1
  8251  1534                     u2585:	
  8252  1534  1003               	clrc
  8253  1535  0DF0               	rlf	___lwdiv@divisor,f
  8254  1536  0DF1               	rlf	___lwdiv@divisor+1,f
  8255  1537  3EFF               	addlw	-1
  8256  1538  1D03               	skipz
  8257  1539  2D34               	goto	u2585
  8258  153A                     l2367:	
  8259  153A  3001               	movlw	1
  8260  153B  00F4               	movwf	??___lwdiv
  8261  153C  0874               	movf	??___lwdiv,w
  8262  153D  07F7               	addwf	___lwdiv@counter,f
  8263  153E                     l2369:	
  8264  153E  1FF1               	btfss	___lwdiv@divisor+1,7
  8265  153F  2D41               	goto	u2591
  8266  1540  2D42               	goto	u2590
  8267  1541                     u2591:	
  8268  1541  2D33               	goto	l2365
  8269  1542                     u2590:	
  8270  1542                     l2371:	
  8271  1542  3001               	movlw	1
  8272  1543                     u2605:	
  8273  1543  1003               	clrc
  8274  1544  0DF5               	rlf	___lwdiv@quotient,f
  8275  1545  0DF6               	rlf	___lwdiv@quotient+1,f
  8276  1546  3EFF               	addlw	-1
  8277  1547  1D03               	skipz
  8278  1548  2D43               	goto	u2605
  8279  1549  0871               	movf	___lwdiv@divisor+1,w
  8280  154A  0273               	subwf	___lwdiv@dividend+1,w
  8281  154B  1D03               	skipz
  8282  154C  2D4F               	goto	u2615
  8283  154D  0870               	movf	___lwdiv@divisor,w
  8284  154E  0272               	subwf	___lwdiv@dividend,w
  8285  154F                     u2615:	
  8286  154F  1C03               	skipc
  8287  1550  2D52               	goto	u2611
  8288  1551  2D53               	goto	u2610
  8289  1552                     u2611:	
  8290  1552  2D5A               	goto	l2377
  8291  1553                     u2610:	
  8292  1553                     l2373:	
  8293  1553  0870               	movf	___lwdiv@divisor,w
  8294  1554  02F2               	subwf	___lwdiv@dividend,f
  8295  1555  0871               	movf	___lwdiv@divisor+1,w
  8296  1556  1C03               	skipc
  8297  1557  03F3               	decf	___lwdiv@dividend+1,f
  8298  1558  02F3               	subwf	___lwdiv@dividend+1,f
  8299  1559                     l2375:	
  8300  1559  1475               	bsf	___lwdiv@quotient,0
  8301  155A                     l2377:	
  8302  155A  3001               	movlw	1
  8303  155B                     u2625:	
  8304  155B  1003               	clrc
  8305  155C  0CF1               	rrf	___lwdiv@divisor+1,f
  8306  155D  0CF0               	rrf	___lwdiv@divisor,f
  8307  155E  3EFF               	addlw	-1
  8308  155F  1D03               	skipz
  8309  1560  2D5B               	goto	u2625
  8310  1561                     l2379:	
  8311  1561  3001               	movlw	1
  8312  1562  02F7               	subwf	___lwdiv@counter,f
  8313  1563  1D03               	btfss	3,2
  8314  1564  2D66               	goto	u2631
  8315  1565  2D67               	goto	u2630
  8316  1566                     u2631:	
  8317  1566  2D42               	goto	l2371
  8318  1567                     u2630:	
  8319  1567                     l2381:	
  8320  1567  0876               	movf	___lwdiv@quotient+1,w
  8321  1568  00F1               	movwf	?___lwdiv+1
  8322  1569  0875               	movf	___lwdiv@quotient,w
  8323  156A  00F0               	movwf	?___lwdiv
  8324  156B                     l727:	
  8325  156B  0008               	return
  8326  156C                     __end_of___lwdiv:	
  8327                           
  8328                           	psect	text29
  8329  14E6                     __ptext29:	
  8330 ;; *************** function _Lcd_Write_String *****************
  8331 ;; Defined at:
  8332 ;;		line 98 in file "./lcd.h"
  8333 ;; Parameters:    Size  Location     Type
  8334 ;;  a               2    5[COMMON] PTR unsigned char 
  8335 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(3), 
  8336 ;;		 -> STR_6(3), STR_5(3), STR_4(8), STR_3(16), 
  8337 ;;		 -> STR_2(9), Lcd_Write_Int@number(8), 
  8338 ;; Auto vars:     Size  Location     Type
  8339 ;;  i               2   10[COMMON] int 
  8340 ;; Return value:  Size  Location     Type
  8341 ;;                  1    wreg      void 
  8342 ;; Registers used:
  8343 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8344 ;; Tracked objects:
  8345 ;;		On entry : 0/0
  8346 ;;		On exit  : 0/0
  8347 ;;		Unchanged: 0/0
  8348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8349 ;;      Params:         2       0       0       0       0
  8350 ;;      Locals:         2       0       0       0       0
  8351 ;;      Temps:          3       0       0       0       0
  8352 ;;      Totals:         7       0       0       0       0
  8353 ;;Total ram usage:        7 bytes
  8354 ;; Hardware stack levels used:    1
  8355 ;; Hardware stack levels required when called:    2
  8356 ;; This function calls:
  8357 ;;		_Lcd_Write_Char
  8358 ;; This function is called by:
  8359 ;;		_Lcd_Write_Int
  8360 ;;		_main
  8361 ;;		_hotList
  8362 ;;		_LCD
  8363 ;; This function uses a non-reentrant model
  8364 ;;
  8365                           
  8366                           
  8367                           ;psect for function _Lcd_Write_String
  8368  14E6                     _Lcd_Write_String:	
  8369  14E6                     l2417:	
  8370                           ;incstack = 0
  8371                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8372                           
  8373                           
  8374                           ;./lcd.h: 98: void Lcd_Write_String(char *a);./lcd.h: 99: {;./lcd.h: 100:  int i;;./lcd.
      +                          h: 101:  for(i=0;a[i]!='\0';i++)
  8375  14E6  01FA               	clrf	Lcd_Write_String@i
  8376  14E7  01FB               	clrf	Lcd_Write_String@i+1
  8377  14E8  2D0B               	goto	l2423
  8378  14E9                     l2419:	
  8379                           
  8380                           ;./lcd.h: 102:     Lcd_Write_Char(a[i]);
  8381  14E9  087A               	movf	Lcd_Write_String@i,w
  8382  14EA  0775               	addwf	Lcd_Write_String@a,w
  8383  14EB  00F8               	movwf	??_Lcd_Write_String+1
  8384  14EC  0876               	movf	Lcd_Write_String@a+1,w
  8385  14ED  00F7               	movwf	??_Lcd_Write_String
  8386  14EE  1803               	skipnc
  8387  14EF  0AF7               	incf	??_Lcd_Write_String,f
  8388  14F0  1FFA               	btfss	Lcd_Write_String@i,7
  8389  14F1  2CF3               	goto	u2700
  8390  14F2  03F7               	decf	??_Lcd_Write_String,f
  8391  14F3                     u2700:	
  8392  14F3  0877               	movf	??_Lcd_Write_String,w
  8393  14F4  00F9               	movwf	??_Lcd_Write_String+2
  8394  14F5  0879               	movf	??_Lcd_Write_String+2,w
  8395  14F6  1283               	bcf	3,5	;RP0=0, select bank0
  8396  14F7  1303               	bcf	3,6	;RP1=0, select bank0
  8397  14F8  00FF               	movwf	btemp+1
  8398  14F9  0878               	movf	??_Lcd_Write_String+1,w
  8399  14FA  0084               	movwf	4
  8400  14FB  160A  118A  2000  160A  118A  	fcall	stringtab
  8401  1500  160A  118A  24AD  160A  118A  	fcall	_Lcd_Write_Char
  8402  1505                     l2421:	
  8403  1505  3001               	movlw	1
  8404  1506  07FA               	addwf	Lcd_Write_String@i,f
  8405  1507  1803               	skipnc
  8406  1508  0AFB               	incf	Lcd_Write_String@i+1,f
  8407  1509  3000               	movlw	0
  8408  150A  07FB               	addwf	Lcd_Write_String@i+1,f
  8409  150B                     l2423:	
  8410  150B  087A               	movf	Lcd_Write_String@i,w
  8411  150C  0775               	addwf	Lcd_Write_String@a,w
  8412  150D  00F8               	movwf	??_Lcd_Write_String+1
  8413  150E  0876               	movf	Lcd_Write_String@a+1,w
  8414  150F  00F7               	movwf	??_Lcd_Write_String
  8415  1510  1803               	skipnc
  8416  1511  0AF7               	incf	??_Lcd_Write_String,f
  8417  1512  1FFA               	btfss	Lcd_Write_String@i,7
  8418  1513  2D15               	goto	u2710
  8419  1514  03F7               	decf	??_Lcd_Write_String,f
  8420  1515                     u2710:	
  8421  1515  0877               	movf	??_Lcd_Write_String,w
  8422  1516  00F9               	movwf	??_Lcd_Write_String+2
  8423  1517  0879               	movf	??_Lcd_Write_String+2,w
  8424  1518  1283               	bcf	3,5	;RP0=0, select bank0
  8425  1519  1303               	bcf	3,6	;RP1=0, select bank0
  8426  151A  00FF               	movwf	btemp+1
  8427  151B  0878               	movf	??_Lcd_Write_String+1,w
  8428  151C  0084               	movwf	4
  8429  151D  160A  118A  2000  160A  118A  	fcall	stringtab
  8430  1522  3A00               	xorlw	0
  8431  1523  1D03               	skipz
  8432  1524  2D26               	goto	u2721
  8433  1525  2D27               	goto	u2720
  8434  1526                     u2721:	
  8435  1526  2CE9               	goto	l2419
  8436  1527                     u2720:	
  8437  1527                     l111:	
  8438  1527  0008               	return
  8439  1528                     __end_of_Lcd_Write_String:	
  8440                           
  8441                           	psect	text30
  8442  14AD                     __ptext30:	
  8443 ;; *************** function _Lcd_Write_Char *****************
  8444 ;; Defined at:
  8445 ;;		line 82 in file "./lcd.h"
  8446 ;; Parameters:    Size  Location     Type
  8447 ;;  a               1    wreg     unsigned char 
  8448 ;; Auto vars:     Size  Location     Type
  8449 ;;  a               1    4[COMMON] unsigned char 
  8450 ;;  y               1    3[COMMON] unsigned char 
  8451 ;;  temp            1    2[COMMON] unsigned char 
  8452 ;; Return value:  Size  Location     Type
  8453 ;;                  1    wreg      void 
  8454 ;; Registers used:
  8455 ;;		wreg, status,2, status,0, pclath, cstack
  8456 ;; Tracked objects:
  8457 ;;		On entry : 0/0
  8458 ;;		On exit  : 0/0
  8459 ;;		Unchanged: 0/0
  8460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8461 ;;      Params:         0       0       0       0       0
  8462 ;;      Locals:         3       0       0       0       0
  8463 ;;      Temps:          1       0       0       0       0
  8464 ;;      Totals:         4       0       0       0       0
  8465 ;;Total ram usage:        4 bytes
  8466 ;; Hardware stack levels used:    1
  8467 ;; Hardware stack levels required when called:    1
  8468 ;; This function calls:
  8469 ;;		_Lcd_Port
  8470 ;; This function is called by:
  8471 ;;		_Lcd_Write_String
  8472 ;;		_aON
  8473 ;;		_bON
  8474 ;;		_cON
  8475 ;;		_OFF
  8476 ;; This function uses a non-reentrant model
  8477 ;;
  8478                           
  8479                           
  8480                           ;psect for function _Lcd_Write_Char
  8481  14AD                     _Lcd_Write_Char:	
  8482                           
  8483                           ;incstack = 0
  8484                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  8485                           ;Lcd_Write_Char@a stored from wreg
  8486  14AD  00F4               	movwf	Lcd_Write_Char@a
  8487  14AE                     l2339:	
  8488                           
  8489                           ;./lcd.h: 82: void Lcd_Write_Char(char a);./lcd.h: 83: {;./lcd.h: 84:    char temp,y;;./
      +                          lcd.h: 85:    temp = a&0x0F;
  8490  14AE  0874               	movf	Lcd_Write_Char@a,w
  8491  14AF  390F               	andlw	15
  8492  14B0  00F1               	movwf	??_Lcd_Write_Char
  8493  14B1  0871               	movf	??_Lcd_Write_Char,w
  8494  14B2  00F2               	movwf	Lcd_Write_Char@temp
  8495                           
  8496                           ;./lcd.h: 86:    y = a&0xF0;
  8497  14B3  0874               	movf	Lcd_Write_Char@a,w
  8498  14B4  39F0               	andlw	240
  8499  14B5  00F1               	movwf	??_Lcd_Write_Char
  8500  14B6  0871               	movf	??_Lcd_Write_Char,w
  8501  14B7  00F3               	movwf	Lcd_Write_Char@y
  8502  14B8                     l2341:	
  8503                           
  8504                           ;./lcd.h: 87:    RD1 = 1;
  8505  14B8  1283               	bcf	3,5	;RP0=0, select bank0
  8506  14B9  1303               	bcf	3,6	;RP1=0, select bank0
  8507  14BA  1488               	bsf	8,1	;volatile
  8508  14BB                     l2343:	
  8509                           
  8510                           ;./lcd.h: 88:    Lcd_Port(y>>4);
  8511  14BB  0873               	movf	Lcd_Write_Char@y,w
  8512  14BC  00F1               	movwf	??_Lcd_Write_Char
  8513  14BD  3004               	movlw	4
  8514  14BE                     u2565:	
  8515  14BE  1003               	clrc
  8516  14BF  0CF1               	rrf	??_Lcd_Write_Char,f
  8517  14C0  3EFF               	addlw	-1
  8518  14C1  1D03               	skipz
  8519  14C2  2CBE               	goto	u2565
  8520  14C3  0871               	movf	??_Lcd_Write_Char,w
  8521  14C4  160A  118A  23C6  160A  118A  	fcall	_Lcd_Port
  8522  14C9                     l2345:	
  8523                           
  8524                           ;./lcd.h: 89:    RD3 = 1;
  8525  14C9  1283               	bcf	3,5	;RP0=0, select bank0
  8526  14CA  1303               	bcf	3,6	;RP1=0, select bank0
  8527  14CB  1588               	bsf	8,3	;volatile
  8528  14CC                     l2347:	
  8529                           
  8530                           ;./lcd.h: 90:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  8531  14CC  3042               	movlw	66
  8532  14CD  00F1               	movwf	??_Lcd_Write_Char
  8533  14CE                     u5147:	
  8534  14CE  0BF1               	decfsz	??_Lcd_Write_Char,f
  8535  14CF  2CCE               	goto	u5147
  8536  14D0  0000               	nop
  8537  14D1                     l2349:	
  8538                           
  8539                           ;./lcd.h: 91:    RD3 = 0;
  8540  14D1  1283               	bcf	3,5	;RP0=0, select bank0
  8541  14D2  1303               	bcf	3,6	;RP1=0, select bank0
  8542  14D3  1188               	bcf	8,3	;volatile
  8543  14D4                     l2351:	
  8544                           
  8545                           ;./lcd.h: 92:    Lcd_Port(temp);
  8546  14D4  0872               	movf	Lcd_Write_Char@temp,w
  8547  14D5  160A  118A  23C6  160A  118A  	fcall	_Lcd_Port
  8548  14DA                     l2353:	
  8549                           
  8550                           ;./lcd.h: 93:    RD3 = 1;
  8551  14DA  1283               	bcf	3,5	;RP0=0, select bank0
  8552  14DB  1303               	bcf	3,6	;RP1=0, select bank0
  8553  14DC  1588               	bsf	8,3	;volatile
  8554  14DD                     l2355:	
  8555                           
  8556                           ;./lcd.h: 94:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  8557  14DD  3042               	movlw	66
  8558  14DE  00F1               	movwf	??_Lcd_Write_Char
  8559  14DF                     u5157:	
  8560  14DF  0BF1               	decfsz	??_Lcd_Write_Char,f
  8561  14E0  2CDF               	goto	u5157
  8562  14E1  0000               	nop
  8563  14E2                     l2357:	
  8564                           
  8565                           ;./lcd.h: 95:    RD3 = 0;
  8566  14E2  1283               	bcf	3,5	;RP0=0, select bank0
  8567  14E3  1303               	bcf	3,6	;RP1=0, select bank0
  8568  14E4  1188               	bcf	8,3	;volatile
  8569  14E5                     l105:	
  8570  14E5  0008               	return
  8571  14E6                     __end_of_Lcd_Write_Char:	
  8572                           
  8573                           	psect	text31
  8574  156C                     __ptext31:	
  8575 ;; *************** function _Lcd_Set_Cursor *****************
  8576 ;; Defined at:
  8577 ;;		line 42 in file "./lcd.h"
  8578 ;; Parameters:    Size  Location     Type
  8579 ;;  a               1    wreg     unsigned char 
  8580 ;;  b               1    4[COMMON] unsigned char 
  8581 ;; Auto vars:     Size  Location     Type
  8582 ;;  a               1    7[COMMON] unsigned char 
  8583 ;;  temp            1   10[COMMON] unsigned char 
  8584 ;;  y               1    9[COMMON] unsigned char 
  8585 ;;  z               1    8[COMMON] unsigned char 
  8586 ;; Return value:  Size  Location     Type
  8587 ;;                  1    wreg      void 
  8588 ;; Registers used:
  8589 ;;		wreg, status,2, status,0, pclath, cstack
  8590 ;; Tracked objects:
  8591 ;;		On entry : 0/0
  8592 ;;		On exit  : 0/0
  8593 ;;		Unchanged: 0/0
  8594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8595 ;;      Params:         1       0       0       0       0
  8596 ;;      Locals:         4       0       0       0       0
  8597 ;;      Temps:          2       0       0       0       0
  8598 ;;      Totals:         7       0       0       0       0
  8599 ;;Total ram usage:        7 bytes
  8600 ;; Hardware stack levels used:    1
  8601 ;; Hardware stack levels required when called:    2
  8602 ;; This function calls:
  8603 ;;		_Lcd_Cmd
  8604 ;; This function is called by:
  8605 ;;		_main
  8606 ;;		_hotList
  8607 ;;		_OFF
  8608 ;;		_LCD
  8609 ;; This function uses a non-reentrant model
  8610 ;;
  8611                           
  8612                           
  8613                           ;psect for function _Lcd_Set_Cursor
  8614  156C                     _Lcd_Set_Cursor:	
  8615                           
  8616                           ;incstack = 0
  8617                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  8618                           ;Lcd_Set_Cursor@a stored from wreg
  8619  156C  00F7               	movwf	Lcd_Set_Cursor@a
  8620  156D                     l2697:	
  8621                           
  8622                           ;./lcd.h: 42: void Lcd_Set_Cursor(char a, char b);./lcd.h: 43: {;./lcd.h: 44:  char temp
      +                          ,z,y;;./lcd.h: 45:  if(a == 1)
  8623  156D  0377               	decf	Lcd_Set_Cursor@a,w
  8624  156E  1D03               	btfss	3,2
  8625  156F  2D71               	goto	u3291
  8626  1570  2D72               	goto	u3290
  8627  1571                     u3291:	
  8628  1571  2D95               	goto	l2707
  8629  1572                     u3290:	
  8630  1572                     l2699:	
  8631                           
  8632                           ;./lcd.h: 46:  {;./lcd.h: 47:    temp = 0x80 + b - 1;
  8633  1572  0874               	movf	Lcd_Set_Cursor@b,w
  8634  1573  3E7F               	addlw	127
  8635  1574  00F5               	movwf	??_Lcd_Set_Cursor
  8636  1575  0875               	movf	??_Lcd_Set_Cursor,w
  8637  1576  00FA               	movwf	Lcd_Set_Cursor@temp
  8638                           
  8639                           ;./lcd.h: 48:   z = temp>>4;
  8640  1577  087A               	movf	Lcd_Set_Cursor@temp,w
  8641  1578  00F5               	movwf	??_Lcd_Set_Cursor
  8642  1579  3004               	movlw	4
  8643  157A                     u3305:	
  8644  157A  1003               	clrc
  8645  157B  0CF5               	rrf	??_Lcd_Set_Cursor,f
  8646  157C  3EFF               	addlw	-1
  8647  157D  1D03               	skipz
  8648  157E  2D7A               	goto	u3305
  8649  157F  0875               	movf	??_Lcd_Set_Cursor,w
  8650  1580  00F6               	movwf	??_Lcd_Set_Cursor+1
  8651  1581  0876               	movf	??_Lcd_Set_Cursor+1,w
  8652  1582  00F8               	movwf	Lcd_Set_Cursor@z
  8653  1583                     l2701:	
  8654                           
  8655                           ;./lcd.h: 49:   y = temp & 0x0F;
  8656  1583  087A               	movf	Lcd_Set_Cursor@temp,w
  8657  1584  390F               	andlw	15
  8658  1585  00F5               	movwf	??_Lcd_Set_Cursor
  8659  1586  0875               	movf	??_Lcd_Set_Cursor,w
  8660  1587  00F9               	movwf	Lcd_Set_Cursor@y
  8661  1588                     l2703:	
  8662                           
  8663                           ;./lcd.h: 50:   Lcd_Cmd(z);
  8664  1588  0878               	movf	Lcd_Set_Cursor@z,w
  8665  1589  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  8666  158E                     l2705:	
  8667                           
  8668                           ;./lcd.h: 51:   Lcd_Cmd(y);
  8669  158E  0879               	movf	Lcd_Set_Cursor@y,w
  8670  158F  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  8671                           
  8672                           ;./lcd.h: 52:  }
  8673  1594  2DBD               	goto	l99
  8674  1595                     l2707:	
  8675  1595  3002               	movlw	2
  8676  1596  0677               	xorwf	Lcd_Set_Cursor@a,w
  8677  1597  1D03               	btfss	3,2
  8678  1598  2D9A               	goto	u3311
  8679  1599  2D9B               	goto	u3310
  8680  159A                     u3311:	
  8681  159A  2DBD               	goto	l99
  8682  159B                     u3310:	
  8683  159B                     l2709:	
  8684                           
  8685                           ;./lcd.h: 54:  {;./lcd.h: 55:   temp = 0xC0 + b - 1;
  8686  159B  0874               	movf	Lcd_Set_Cursor@b,w
  8687  159C  3EBF               	addlw	191
  8688  159D  00F5               	movwf	??_Lcd_Set_Cursor
  8689  159E  0875               	movf	??_Lcd_Set_Cursor,w
  8690  159F  00FA               	movwf	Lcd_Set_Cursor@temp
  8691                           
  8692                           ;./lcd.h: 56:   z = temp>>4;
  8693  15A0  087A               	movf	Lcd_Set_Cursor@temp,w
  8694  15A1  00F5               	movwf	??_Lcd_Set_Cursor
  8695  15A2  3004               	movlw	4
  8696  15A3                     u3325:	
  8697  15A3  1003               	clrc
  8698  15A4  0CF5               	rrf	??_Lcd_Set_Cursor,f
  8699  15A5  3EFF               	addlw	-1
  8700  15A6  1D03               	skipz
  8701  15A7  2DA3               	goto	u3325
  8702  15A8  0875               	movf	??_Lcd_Set_Cursor,w
  8703  15A9  00F6               	movwf	??_Lcd_Set_Cursor+1
  8704  15AA  0876               	movf	??_Lcd_Set_Cursor+1,w
  8705  15AB  00F8               	movwf	Lcd_Set_Cursor@z
  8706  15AC                     l2711:	
  8707                           
  8708                           ;./lcd.h: 57:   y = temp & 0x0F;
  8709  15AC  087A               	movf	Lcd_Set_Cursor@temp,w
  8710  15AD  390F               	andlw	15
  8711  15AE  00F5               	movwf	??_Lcd_Set_Cursor
  8712  15AF  0875               	movf	??_Lcd_Set_Cursor,w
  8713  15B0  00F9               	movwf	Lcd_Set_Cursor@y
  8714  15B1                     l2713:	
  8715                           
  8716                           ;./lcd.h: 58:   Lcd_Cmd(z);
  8717  15B1  0878               	movf	Lcd_Set_Cursor@z,w
  8718  15B2  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  8719  15B7                     l2715:	
  8720                           
  8721                           ;./lcd.h: 59:   Lcd_Cmd(y);
  8722  15B7  0879               	movf	Lcd_Set_Cursor@y,w
  8723  15B8  160A  118A  238C  160A  118A  	fcall	_Lcd_Cmd
  8724  15BD                     l99:	
  8725  15BD  0008               	return
  8726  15BE                     __end_of_Lcd_Set_Cursor:	
  8727                           
  8728                           	psect	text32
  8729  138C                     __ptext32:	
  8730 ;; *************** function _Lcd_Cmd *****************
  8731 ;; Defined at:
  8732 ;;		line 27 in file "./lcd.h"
  8733 ;; Parameters:    Size  Location     Type
  8734 ;;  a               1    wreg     unsigned char 
  8735 ;; Auto vars:     Size  Location     Type
  8736 ;;  a               1    3[COMMON] unsigned char 
  8737 ;; Return value:  Size  Location     Type
  8738 ;;                  1    wreg      void 
  8739 ;; Registers used:
  8740 ;;		wreg, status,2, status,0, pclath, cstack
  8741 ;; Tracked objects:
  8742 ;;		On entry : 0/0
  8743 ;;		On exit  : 0/0
  8744 ;;		Unchanged: 0/0
  8745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8746 ;;      Params:         0       0       0       0       0
  8747 ;;      Locals:         1       0       0       0       0
  8748 ;;      Temps:          2       0       0       0       0
  8749 ;;      Totals:         3       0       0       0       0
  8750 ;;Total ram usage:        3 bytes
  8751 ;; Hardware stack levels used:    1
  8752 ;; Hardware stack levels required when called:    1
  8753 ;; This function calls:
  8754 ;;		_Lcd_Port
  8755 ;; This function is called by:
  8756 ;;		_Lcd_Clear
  8757 ;;		_Lcd_Set_Cursor
  8758 ;;		_Lcd_Init
  8759 ;;		_Lcd_Shift_Right
  8760 ;;		_Lcd_Shift_Left
  8761 ;; This function uses a non-reentrant model
  8762 ;;
  8763                           
  8764                           
  8765                           ;psect for function _Lcd_Cmd
  8766  138C                     _Lcd_Cmd:	
  8767                           
  8768                           ;incstack = 0
  8769                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  8770                           ;Lcd_Cmd@a stored from wreg
  8771  138C  00F3               	movwf	Lcd_Cmd@a
  8772  138D                     l2407:	
  8773                           
  8774                           ;./lcd.h: 27: void Lcd_Cmd(char a);./lcd.h: 28: {;./lcd.h: 29:  RD1 = 0;
  8775  138D  1283               	bcf	3,5	;RP0=0, select bank0
  8776  138E  1303               	bcf	3,6	;RP1=0, select bank0
  8777  138F  1088               	bcf	8,1	;volatile
  8778  1390                     l2409:	
  8779                           
  8780                           ;./lcd.h: 30:  Lcd_Port(a);
  8781  1390  0873               	movf	Lcd_Cmd@a,w
  8782  1391  160A  118A  23C6  160A  118A  	fcall	_Lcd_Port
  8783  1396                     l2411:	
  8784                           
  8785                           ;./lcd.h: 31:  RD3 = 1;
  8786  1396  1283               	bcf	3,5	;RP0=0, select bank0
  8787  1397  1303               	bcf	3,6	;RP1=0, select bank0
  8788  1398  1588               	bsf	8,3	;volatile
  8789  1399                     l2413:	
  8790                           
  8791                           ;./lcd.h: 32:         _delay((unsigned long)((4)*(20000000/4000.0)));
  8792  1399  301A               	movlw	26
  8793  139A  00F2               	movwf	??_Lcd_Cmd+1
  8794  139B  30F8               	movlw	248
  8795  139C  00F1               	movwf	??_Lcd_Cmd
  8796  139D                     u5167:	
  8797  139D  0BF1               	decfsz	??_Lcd_Cmd,f
  8798  139E  2B9D               	goto	u5167
  8799  139F  0BF2               	decfsz	??_Lcd_Cmd+1,f
  8800  13A0  2B9D               	goto	u5167
  8801  13A1  0000               	nop
  8802  13A2                     l2415:	
  8803                           
  8804                           ;./lcd.h: 33:         RD3 = 0;
  8805  13A2  1283               	bcf	3,5	;RP0=0, select bank0
  8806  13A3  1303               	bcf	3,6	;RP1=0, select bank0
  8807  13A4  1188               	bcf	8,3	;volatile
  8808  13A5                     l90:	
  8809  13A5  0008               	return
  8810  13A6                     __end_of_Lcd_Cmd:	
  8811                           
  8812                           	psect	text33
  8813  13C6                     __ptext33:	
  8814 ;; *************** function _Lcd_Port *****************
  8815 ;; Defined at:
  8816 ;;		line 5 in file "./lcd.h"
  8817 ;; Parameters:    Size  Location     Type
  8818 ;;  a               1    wreg     unsigned char 
  8819 ;; Auto vars:     Size  Location     Type
  8820 ;;  a               1    0[COMMON] unsigned char 
  8821 ;; Return value:  Size  Location     Type
  8822 ;;                  1    wreg      void 
  8823 ;; Registers used:
  8824 ;;		wreg
  8825 ;; Tracked objects:
  8826 ;;		On entry : 0/0
  8827 ;;		On exit  : 0/0
  8828 ;;		Unchanged: 0/0
  8829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8830 ;;      Params:         0       0       0       0       0
  8831 ;;      Locals:         1       0       0       0       0
  8832 ;;      Temps:          0       0       0       0       0
  8833 ;;      Totals:         1       0       0       0       0
  8834 ;;Total ram usage:        1 bytes
  8835 ;; Hardware stack levels used:    1
  8836 ;; This function calls:
  8837 ;;		Nothing
  8838 ;; This function is called by:
  8839 ;;		_Lcd_Cmd
  8840 ;;		_Lcd_Init
  8841 ;;		_Lcd_Write_Char
  8842 ;; This function uses a non-reentrant model
  8843 ;;
  8844                           
  8845                           
  8846                           ;psect for function _Lcd_Port
  8847  13C6                     _Lcd_Port:	
  8848                           
  8849                           ;incstack = 0
  8850                           ; Regs used in _Lcd_Port: [wreg]
  8851                           ;Lcd_Port@a stored from wreg
  8852  13C6  00F0               	movwf	Lcd_Port@a
  8853  13C7                     l2329:	
  8854                           
  8855                           ;./lcd.h: 5: void Lcd_Port(char a);./lcd.h: 6: {;./lcd.h: 7:  if(a & 1)
  8856  13C7  1C70               	btfss	Lcd_Port@a,0
  8857  13C8  2BCA               	goto	u2521
  8858  13C9  2BCB               	goto	u2520
  8859  13CA                     u2521:	
  8860  13CA  2BCF               	goto	l79
  8861  13CB                     u2520:	
  8862  13CB                     l2331:	
  8863                           
  8864                           ;./lcd.h: 8:   RD4 = 1;
  8865  13CB  1283               	bcf	3,5	;RP0=0, select bank0
  8866  13CC  1303               	bcf	3,6	;RP1=0, select bank0
  8867  13CD  1608               	bsf	8,4	;volatile
  8868  13CE  2BD2               	goto	l80
  8869  13CF                     l79:	
  8870                           ;./lcd.h: 9:  else
  8871                           
  8872                           
  8873                           ;./lcd.h: 10:   RD4 = 0;
  8874  13CF  1283               	bcf	3,5	;RP0=0, select bank0
  8875  13D0  1303               	bcf	3,6	;RP1=0, select bank0
  8876  13D1  1208               	bcf	8,4	;volatile
  8877  13D2                     l80:	
  8878                           
  8879                           ;./lcd.h: 12:  if(a & 2)
  8880  13D2  1CF0               	btfss	Lcd_Port@a,1
  8881  13D3  2BD5               	goto	u2531
  8882  13D4  2BD6               	goto	u2530
  8883  13D5                     u2531:	
  8884  13D5  2BD8               	goto	l81
  8885  13D6                     u2530:	
  8886  13D6                     l2333:	
  8887                           
  8888                           ;./lcd.h: 13:   RD5 = 1;
  8889  13D6  1688               	bsf	8,5	;volatile
  8890  13D7  2BD9               	goto	l82
  8891  13D8                     l81:	
  8892                           ;./lcd.h: 14:  else
  8893                           
  8894                           
  8895                           ;./lcd.h: 15:   RD5 = 0;
  8896  13D8  1288               	bcf	8,5	;volatile
  8897  13D9                     l82:	
  8898                           
  8899                           ;./lcd.h: 17:  if(a & 4)
  8900  13D9  1D70               	btfss	Lcd_Port@a,2
  8901  13DA  2BDC               	goto	u2541
  8902  13DB  2BDD               	goto	u2540
  8903  13DC                     u2541:	
  8904  13DC  2BDF               	goto	l83
  8905  13DD                     u2540:	
  8906  13DD                     l2335:	
  8907                           
  8908                           ;./lcd.h: 18:   RD6 = 1;
  8909  13DD  1708               	bsf	8,6	;volatile
  8910  13DE  2BE0               	goto	l84
  8911  13DF                     l83:	
  8912                           ;./lcd.h: 19:  else
  8913                           
  8914                           
  8915                           ;./lcd.h: 20:   RD6 = 0;
  8916  13DF  1308               	bcf	8,6	;volatile
  8917  13E0                     l84:	
  8918                           
  8919                           ;./lcd.h: 22:  if(a & 8)
  8920  13E0  1DF0               	btfss	Lcd_Port@a,3
  8921  13E1  2BE3               	goto	u2551
  8922  13E2  2BE4               	goto	u2550
  8923  13E3                     u2551:	
  8924  13E3  2BE6               	goto	l85
  8925  13E4                     u2550:	
  8926  13E4                     l2337:	
  8927                           
  8928                           ;./lcd.h: 23:   RD7 = 1;
  8929  13E4  1788               	bsf	8,7	;volatile
  8930  13E5  2BE7               	goto	l87
  8931  13E6                     l85:	
  8932                           ;./lcd.h: 24:  else
  8933                           
  8934                           
  8935                           ;./lcd.h: 25:   RD7 = 0;
  8936  13E6  1388               	bcf	8,7	;volatile
  8937  13E7                     l87:	
  8938  13E7  0008               	return
  8939  13E8                     __end_of_Lcd_Port:	
  8940  007E                     btemp	set	126	;btemp
  8941  007E                     wtemp0	set	126


Data Sizes:
    Strings     51
    Constant    10
    Data        0
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     26      49
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Int@number(BANK1[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[8]), STR_3(CODE[16]), 
		 -> STR_2(CODE[9]), Lcd_Write_Int@number(BANK1[8]), 


Critical Paths under _main in COMMON

    _powerSaving3->_aON
    _powerSaving3->_bON
    _powerSaving3->_cON
    _powerSaving2->_aON
    _powerSaving2->_bON
    _powerSaving2->_cON
    _powerSaving1->_aON
    _powerSaving1->_bON
    _powerSaving1->_cON
    _maximumPower3->_aON
    _maximumPower3->_bON
    _maximumPower3->_cON
    _maximumPower2->_aON
    _maximumPower2->_bON
    _maximumPower2->_cON
    _maximumPower1->_aON
    _maximumPower1->_bON
    _maximumPower1->_cON
    _cON->_Lcd_Write_Char
    _bON->_Lcd_Write_Char
    _aON->_Lcd_Write_Char
    _hotList->_Lcd_Write_String
    _Lcd_Clear->_Lcd_Cmd
    _currentMeasurement->___xxtofl
    ___flsub->___xxtofl
    ___fladd->___xxtofl
    ___fldiv->___xxtofl
    _OFF->_Lcd_Set_Cursor
    _Lcd_Init->_Lcd_Cmd
    _LCD->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    _Lcd_Write_Int->___xxtofl
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _currentMeasurement->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___fldiv->___flsub
    ___fltol->___fldiv

Critical Paths under _main in BANK1

    _main->_LCD
    _currentMeasurement->___fltol
    _LCD->_Lcd_Write_Int
    _Lcd_Write_Int->___fltol

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   28723
                                             23 BANK1      3     3      0
                                _LCD
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                                _OFF
                                _aON
                                _bON
                                _ble
                                _cON
                 _currentMeasurement
                            _hotList
                      _maximumPower1
                      _maximumPower2
                      _maximumPower3
                       _powerSaving1
                       _powerSaving2
                       _powerSaving3
 ---------------------------------------------------------------------------------
 (1) _powerSaving3                                         1     1      0     534
                                              6 COMMON     1     1      0
                                _aON
                                _bON
                                _cON
 ---------------------------------------------------------------------------------
 (1) _powerSaving2                                         1     1      0     534
                                              6 COMMON     1     1      0
                                _aON
                                _bON
                                _cON
 ---------------------------------------------------------------------------------
 (1) _powerSaving1                                         1     1      0     534
                                              6 COMMON     1     1      0
                                _aON
                                _bON
                                _cON
 ---------------------------------------------------------------------------------
 (1) _maximumPower3                                        1     1      0     534
                                              6 COMMON     1     1      0
                                _aON
                                _bON
                                _cON
 ---------------------------------------------------------------------------------
 (1) _maximumPower2                                        1     1      0     534
                                              6 COMMON     1     1      0
                                _aON
                                _bON
                                _cON
 ---------------------------------------------------------------------------------
 (1) _maximumPower1                                        1     1      0     534
                                              6 COMMON     1     1      0
                                _aON
                                _bON
                                _cON
 ---------------------------------------------------------------------------------
 (2) _cON                                                  1     1      0     178
                                              5 COMMON     1     1      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _bON                                                  1     1      0     178
                                              5 COMMON     1     1      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _aON                                                  1     1      0     178
                                              5 COMMON     1     1      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _hotList                                              6     6      0    2354
                                              0 BANK0      6     6      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _currentMeasurement                                   1     1      0    9926
                                             11 BANK1      1     1      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             46 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             26 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1425
                                             54 BANK0     26    18      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _ble                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OFF                                                  1     1      0    1394
                                             11 COMMON     1     1      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _LCD                                                  1     1      0    8759
                                             22 BANK1      1     1      0
                     _Lcd_Set_Cursor
                      _Lcd_Write_Int
                   _Lcd_Write_String
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                              0 BANK1     11     7      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2721
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Int                                       11     9      2    2543
                                             11 BANK1     11     9      2
                   _Lcd_Write_String
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    1028
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       7     6      1    1216
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Int
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _sprintf (ARG)
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___flsub (ARG)
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___wmul
     ___xxtofl
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _OFF
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
   _aON
     _Lcd_Write_Char
       _Lcd_Port
   _bON
     _Lcd_Write_Char
       _Lcd_Port
   _ble
   _cON
     _Lcd_Write_Char
       _Lcd_Port
   _currentMeasurement
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___fladd (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___flsub (ARG)
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___flsub
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___flsub (ARG)
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _hotList
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _maximumPower1
     _aON
       _Lcd_Write_Char
         _Lcd_Port
     _bON
       _Lcd_Write_Char
         _Lcd_Port
     _cON
       _Lcd_Write_Char
         _Lcd_Port
   _maximumPower2
     _aON
       _Lcd_Write_Char
         _Lcd_Port
     _bON
       _Lcd_Write_Char
         _Lcd_Port
     _cON
       _Lcd_Write_Char
         _Lcd_Port
   _maximumPower3
     _aON
       _Lcd_Write_Char
         _Lcd_Port
     _bON
       _Lcd_Write_Char
         _Lcd_Port
     _cON
       _Lcd_Write_Char
         _Lcd_Port
   _powerSaving1
     _aON
       _Lcd_Write_Char
         _Lcd_Port
     _bON
       _Lcd_Write_Char
         _Lcd_Port
     _cON
       _Lcd_Write_Char
         _Lcd_Port
   _powerSaving2
     _aON
       _Lcd_Write_Char
         _Lcd_Port
     _bON
       _Lcd_Write_Char
         _Lcd_Port
     _cON
       _Lcd_Write_Char
         _Lcd_Port
   _powerSaving3
     _aON
       _Lcd_Write_Char
         _Lcd_Port
     _bON
       _Lcd_Write_Char
         _Lcd_Port
     _cON
       _Lcd_Write_Char
         _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      8F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     1A      31       7       61.3%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      8F      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Dec 28 03:48:45 2020

                 __CFG_CP$ON 0000                 ___fldiv@aexp 006F                 ___fldiv@bexp 006E  
                          pc 0002                 ___fldiv@sign 0067                           l80 13D2  
                         l81 13D8                           l82 13D9                           l90 13A5  
                         l83 13DF                           l84 13E0                           l85 13E6  
                         l93 1343                           l87 13E7                           l79 13CF  
                         l99 15BD                  __CFG_CPD$ON 0000                           fsr 0004  
        ___wmul@multiplicand 0072          __Umul8_16@word_mpld 0076                  __CFG_LVP$ON 0000  
                        l102 16CB                          l111 1527                          l120 140B  
                        l105 14E5                          l202 0EFB                          l204 0F5F  
                        l206 0F5E                          l231 0FFF                          l321 1373  
                        l330 0B71                          l315 1480                          l307 1615  
                        l251 0A81                          l324 138B                          l341 132E  
                        l181 0DF5                          l318 135B                          l166 0D98  
                        l327 13C5                          l335 0C75                          l273 14AC  
                        l265 166D                          l338 17FF                          l451 0B69  
                        l195 0E73                          l188 0E34                          l293 09BB  
                        l455 143C                          l641 1747                          l457 1454  
                        l651 1747                          l820 017B                          l804 0089  
                        l901 001A                          l806 0209                          l727 156B  
                        l903 002C                          l648 1732                          l752 0314  
                        l737 083B                          l761 0491                          l850 075E  
                        l826 01ED                          l754 02EB                          l844 07F2  
                        l828 01FD                          l748 026D                          l773 0403  
                        l790 0485                          l782 0463                          l791 0491  
                        l856 07E6                          l769 03DF                          l882 085E  
                        l794 142F                          l779 0425                          l884 08F5  
                        l895 08BF                          l896 08CB                          l888 08A3  
                        _LCD 1748                          _RB3 0033                          _RB4 0034  
                        _RD1 0041                          _RB5 0035                          _RE0 0048  
                        _RB6 0036                          _RD3 0043                          _RB7 0037  
                        _RD4 0044                          _RD5 0045                          _RD6 0046  
                        _RD7 0047                          _OFF 13A6                          _aON 1344  
                        _bON 135C                          _cON 1374                          _ble 132A  
                        fsr0 0004                          indf 0000                 __CFG_FOSC$HS 0000  
               ___flmul@aexp 0032                 ___flmul@bexp 0033                 ___flmul@sign 002D  
               ___flmul@temp 0038                 ___flmul@prod 0034                         ?_LCD 0070  
                       ?_OFF 0070                         ?_aON 0070                         ?_bON 0070  
                       ?_cON 0070                 ___fltol@exp1 00AA                         l3001 05C2  
                       l3011 0635                         l3003 05D2                         l3021 06E2  
                       l3013 0652                         l3005 05EF                         l3101 088C  
                       ?_ble 0070                         l3031 072E                         l3023 070A  
                       l3015 067F                         l3007 05FF                         l3111 08C3  
                       l3103 089A                         l2401 0831                         l3041 0743  
                       l3033 072F                         l3025 0713                         l3017 068F  
                       l3009 061C                         l3121 08ED                         l3113 08CD  
                       l3105 08AA                         l3201 0F1A                         l2331 13CB  
                       l2411 1396                         l2403 0837                         l3051 0768  
                       l3043 0747                         l3035 0738                         l3027 0721  
                       l3019 06BC                         l3115 08E3                         l3107 08B5  
                       l3131 168C                         l3211 0F40                         l3203 0F23  
                       l2333 13D6                         l2413 1399                         l2341 14B8  
                       l2421 1505                         l3061 07A6                         l3053 0776  
                       l3045 075B                         l3029 072A                         l3037 073E  
                       l3117 08E8                         l3109 08B9                         l3133 1692  
                       l3125 166E                         l2501 022E                         l3221 0F6B  
                       l3213 0F47                         l3205 0F29                         l3141 0DF9  
                       l3301 0A7B                         l2335 13DD                         l2415 13A2  
                       l2407 138D                         l2351 14D4                         l2343 14BB  
                       l2423 150B                         l2431 0A97                         l3071 07DA  
                       l3063 07B1                         l3055 077A                         l3039 0742  
                       l3119 08EC                         l3127 1674                         l2511 0244  
                       l2503 022F                         l3231 0F92                         l3223 0F74  
                       l3215 0F4E                         l3207 0F30                         l3151 0E26  
                       l3143 0DFF                         l3135 0DE9                         l3311 1631  
                       l3303 1616                         l2337 13E4                         l2329 13C7  
                       l2409 1390                         l2353 14DA                         l2345 14C9  
                       l2417 14E6                         l2361 152A                         l2441 0AC2  
                       l2433 0A9C                         l2425 0A85                         l3073 07DE  
                       l3065 07C0                         l3057 0793                         l3049 0763  
                       l3081 083D                         l3129 167D                         l2601 0350  
                       l2521 0255                         l2513 0245                         l2505 0231  
                       l3241 0FB7                         l3233 0F99                         l3225 0F7C  
                       l3217 0F55                         l3209 0F37                         l3161 0E4B  
                       l3153 0E2D                         l3145 0E0C                         l3137 0DF0  
                       l3401 15BF                         l3305 1617                         l2355 14DD  
                       l2347 14CC                         l2339 14AE                         l2419 14E9  
                       l2371 1542                         l2363 1530                         l2443 0AC6  
                       l2427 0A8A                         l3075 07DF                         l3067 07CA  
                       l3059 0799                         l3083 0842                         l2611 0379  
                       l2603 0354                         l2531 0273                         l2523 025A  
                       l2515 024B                         l2507 0239                         l3251 0FE2  
                       l3235 0FA2                         l3227 0F85                         l3219 0F63  
                       l3243 0FC0                         l3171 0E72                         l3163 0E5A  
                       l3155 0E33                         l3147 0E1B                         l3139 0DF4  
                       l3411 15E8                         l3403 15CD                         l3315 1640  
                       l3307 1625                         l2701 1583                         l2357 14E2  
                       l2349 14D1                         l2373 1553                         l2365 1533  
                       l2381 1567                         l2461 0AFB                         l2445 0ACA  
                       l2437 0A9D                         l2429 0A90                         l3077 07EA  
                       l3069 07CC                         l3093 086F                         l3085 0846  
                       l2621 03E7                         l2613 03B7                         l2605 0355  
                       l2541 0287                         l2533 0277                         l2525 0262  
                       l2517 024F                         l2509 023E                         l3253 0FE8  
                       l3245 0FC8                         l3237 0FA9                         l3229 0F8B  
                       l3181 0EA0                         l3173 0E77                         l3165 0E61  
                       l3157 0E38                         l3149 0E22                         l3413 15EE  
                       l3405 15D3                         l3421 15FD                         l3341 148E  
                       l3317 1646                         l3309 162B                         l3325 1655  
                       l3261 09C8                         l3501 0C8D                         l2711 15AC  
                       l2703 1588                         l2375 1559                         l2367 153A  
                       l2359 1528                         l2391 0812                         l2471 0B3F  
                       l2463 0B01                         l2455 0AD5                         l2447 0ACE  
                       l2439 0ABA                         l3095 0874                         l3087 0856  
                       l2631 0402                         l2623 03EC                         l2615 03BD  
                       l2607 035E                         l2551 029B                         l2543 028B  
                       l2535 027B                         l2527 0263                         l2519 0250  
                       l3255 0FF1                         l3247 0FD1                         l3239 0FB0  
                       l3191 0EE9                         l3183 0EA4                         l3175 0E7D  
                       l3167 0E65                         l3159 0E3E                         l3431 1455  
                       l3407 15D9                         l3423 160F                         l3335 1481  
                       l3327 1667                         l3263 09D6                         l3511 0C9C  
                       l3503 0C90                         l2713 15B1                         l2705 158E  
                       l2377 155A                         l2369 153E                         l2393 0816  
                       l2385 0802                         l2473 0B46                         l2465 0B08  
                       l2449 0AD3                         l3097 0881                         l3089 0866  
                       l2801 0034                         l2633 0407                         l2641 0413  
                       l2617 03C2                         l2609 0363                         l2561 02AF  
                       l2553 029F                         l2545 028F                         l2537 027F  
                       l2529 0265                         l3257 0FF7                         l3249 0FD9  
                       l3193 0EF2                         l3185 0EAB                         l3177 0E8A  
                       l3169 0E6C                         l2721 1349                         l3433 1456  
                       l3441 1468                         l3361 0916                         l3337 1482  
                       l3345 1494                         l3273 09FB                         l3265 09DC  
                       l3601 0DD7                         l3521 0CC7                         l3513 0CA1  
                       l3505 0C93                         l2715 15B7                         l2707 1595  
                       l2379 1561                         l2395 081A                         l2387 0808  
                       l2475 0B4A                         l2467 0B0C                         l2459 0AF1  
                       l3099 0888                         l3451 13A6                         l2811 0049  
                       l2803 003A                         l2635 040A                         l2627 03F5  
                       l2619 03D1                         l2643 0417                         l2571 02EF  
                       l2563 02B3                         l2555 02A3                         l2547 0293  
                       l2539 0283                         l2491 0217                         l3195 0F01  
                       l3187 0EAF                         l3179 0E99                         l2723 134F  
                       l2731 1367                         l3435 145C                         l3443 147A  
                       l3371 093B                         l3363 091C                         l3355 08F6  
                       l3339 1488                         l3347 14A6                         l3291 0A49  
                       l3283 0A1A                         l3275 0A01                         l3267 09E2  
                       l3259 09BC                         l3603 0DDA                         l3531 0CFD  
                       l3523 0CD5                         l3515 0CAD                         l3507 0C96  
                       l2709 159B                         l2397 0824                         l2389 080B  
                       l2469 0B11                         l2477 0B53                         l2717 13E8  
                       l3453 13AB                         l2901 0160                         l2821 0061  
                       l2813 0051                         l2805 003E                         l2661 045F  
                       l2653 042A                         l2645 0418                         l2637 040C  
                       l2629 03FE                         l2581 0308                         l2573 02F8  
                       l2557 02A7                         l2549 0297                         l2565 02B7  
                       l2493 021B                         l3461 0B6A                         l3197 0F09  
                       l3189 0EE4                         l2725 1355                         l2733 136D  
                       l2741 1385                         l3437 1462                         l3381 0962  
                       l3373 0945                         l3365 0926                         l3357 0902  
                       l3285 0A28                         l3277 0A0B                         l3269 09EC  
                       l3541 0D1E                         l3533 0D02                         l3525 0CDA  
                       l3517 0CB6                         l3509 0C99                         l2399 082A  
                       l2479 0B65                         l2751 144A                         l2743 1430  
                       l3455 13AF                         l2911 0185                         l2903 0164  
                       l2831 0076                         l2823 0067                         l2815 0052  
                       l2807 003F                         l2671 047B                         l2663 0468  
                       l2655 042F                         l2647 041C                         l2639 0411  
                       l2591 0326                         l2575 02FA                         l2583 030C  
                       l2567 02B8                         l2559 02AB                         l2495 021C  
                       l2487 020A                         l3471 0C71                         l3463 0B70  
                       l3199 0F12                         l2719 1344                         l2727 135C  
                       l2735 1374                         l3391 0994                         l3359 0910  
                       l3295 0A5A                         l3551 0D3E                         l3543 0D26  
                       l3535 0D06                         l3527 0CE6                         l3519 0CBE  
                       l2681 0007                         l2753 1450                         l2745 1432  
                       l3481 17BD                         l3473 1748                         l3457 13B9  
                       l2921 01C3                         l2913 0193                         l2905 0178  
                       l2841 009D                         l2833 007E                         l2825 006B  
                       l2809 0044                         l2817 0054                         l2673 047F  
                       l2665 046D                         l2657 043D                         l2649 0422  
                       l2593 033D                         l2585 0318                         l2577 02FE  
                       l2569 02CF                         l2497 0221                         l2489 0211  
                       l3465 0B75                         l2729 1361                         l2737 1379  
                       l3393 09A4                         l3385 0973                         l3369 0935  
                       l3297 0A6A                         l3289 0A39                         l3561 0D5C  
                       l3553 0D44                         l3545 0D2C                         l3537 0D0D  
                       l3529 0CEF                         l2691 0028                         l2683 0009  
                       l2771 1702                         l2763 16E2                         l2747 1436  
                       l3483 17E7                         l3475 1750                         l3459 13BF  
                       l2931 01F3                         l2923 01D1                         l2915 0197  
                       l2843 00A1                         l2835 007F                         l2827 006C  
                       l2819 005C                         l2675 0481                         l2667 0475  
                       l2659 0441                         l2595 0341                         l2587 031D  
                       l2579 02FF                         l2499 0226                         l3467 0B84  
                       l2739 137F                         l3387 0983                         l3379 0954  
                       l3571 0D7A                         l3563 0D62                         l3555 0D4A  
                       l3547 0D32                         l3539 0D12                         l2685 0010  
                       l2941 0492                         l2773 1706                         l2781 1720  
                       l2765 16F7                         l2757 16CC                         l2749 1443  
                       l3485 17F0                         l3477 179D                         l2933 01F7  
                       l2925 01E0                         l2917 01B0                         l2909 0180  
                       l2861 00E2                         l2853 00B8                         l2829 0071  
                       l2837 0081                         l2677 048C                         l2669 047A  
                       l2597 0345                         l3469 0BF9                         l3397 09B5  
                       l3573 0D80                         l3565 0D68                         l3557 0D50  
                       l3549 0D38                         l3581 0D98                         l2687 0014  
                       l2951 04A9                         l2943 0499                         l2791 173C  
                       l2767 16F8                         l2759 16D9                         l3487 17F9  
                       l3479 17B2                         l2935 01F9                         l2927 01E4  
                       l2919 01B6                         l2871 0100                         l2863 00E4  
                       l2855 00CA                         l2839 0091                         l2847 00AA  
                       l2679 0490                         l2599 034E                         l2695 1337  
                       l3751 146F                         l3399 15BE                         l3591 0DB7  
                       l3583 0DA0                         l3575 0D86                         l3567 0D6E  
                       l3559 0D56                         l3495 0C76                         l2697 156D  
                       l3753 0AAF                         l2689 0023                         l2961 04C5  
                       l2953 04AE                         l2945 049F                         l2769 1700  
                       l3489 132A                         l2929 01EC                         l2865 00E9  
                       l2873 0109                         l2881 012E                         l2857 00D2  
                       l2849 00AF                         l2793 140C                         l3745 165C  
                       l3593 0DBC                         l3585 0DA5                         l3577 0D8C  
                       l3569 0D74                         l3497 0C84                         l2699 1572  
                       l2971 04DA                         l2963 04CB                         l2955 04B6  
                       l2947 04A3                         l2787 1727                         l2779 170E  
                       l2891 014B                         l2883 0134                         l2875 011B  
                       l2867 00FB                         l2859 00DA                         l2795 1410  
                       l3747 149B                         l3595 0DC4                         l3587 0DAD  
                       l3579 0D92                         l3499 0C86                         l2981 04F6  
                       l2973 04E2                         l2965 04CF                         l2957 04B8  
                       l2949 04A4                         l2789 1737                         l2893 014C  
                       l2885 013C                         l2877 011C                         l2869 00FF  
                       l3749 1604                         l3597 0DC9                         l3589 0DB1  
                       l2991 0539                         l2975 04E4                         l2967 04D0  
                       l2959 04C0                         l2895 0155                         l2887 013E  
                       l2879 012A                         l2799 002D                         l3599 0DCC  
                       l2993 0555                         l2985 04FF                         l2977 04EC  
                       l2969 04D5                         l2889 0147                         l2897 015B  
                       l2995 0581                         l2987 050F                         l2979 04F1  
                       l2899 015F                         l2997 059D                         l2989 051C  
                       l2999 05B9                         STR_1 1044                         STR_2 102A  
                       STR_3 101A                         STR_4 1033                         STR_5 1041  
                       STR_6 103E                         STR_7 103B                         STR_8 1049  
                       STR_9 1047                         u3000 0345                         u3001 0344  
                       u3010 0354                         u3011 0353                         u3100 0402  
                       u3101 0401                         u3110 0407                         u3030 0379  
                       u3111 0406                         u3031 0378                         u3200 045F  
                       u3120 0411                         u3201 045E                         u3121 0410  
                       u3041 0390                         u3033 0375                         u3025 0357  
                       u4010 072E                         u3210 0468                         u3130 0417  
                       u3050 03A4                         u3042 0391                         u4011 072D  
                       u3211 0467                         u3131 0416                         u3051 03A5  
                       u3043 0396                         u4100 07A6                         u3220 046D  
                       u3140 041C                         u3060 03C2                         u3052 03AA  
                       u3044 0397                         u4101 07A5                         u4005 0723  
                       u3221 046C                         u3141 041B                         u3061 03C1  
                       u3053 03AB                         u3045 039C                         u3310 159B  
                       u4110 07C0                         u4030 0742                         u3230 047A  
                       u3150 0422                         u3070 03E7                         u3046 039D  
                       u3311 159A                         u4111 07BF                         u4031 0741  
                       u3231 0479                         u3151 0421                         u3071 03E6  
                       u2520 13CB                         u4120 07DE                         u4040 0747  
                       u3400 170D                         u3240 047F                         u3160 0429  
                       u3080 03EC                         u5000 0DAD                         u2521 13CA  
                       u3305 157A                         u4121 07DD                         u4105 07A2  
                       u4041 0746                         u4025 0731                         u3401 170C  
                       u3241 047E                         u3161 0428                         u3081 03EB  
                       u5001 0DAC                         u2530 13D6                         u2610 1553  
                       u4050 075B                         u3330 1436                         u4210 08B9  
                       u4130 0842                         u3250 0490                         u3170 042F  
                       u5010 0DB7                         u2531 13D5                         u2611 1552  
                       u4115 07BC                         u4051 075A                         u3331 1435  
                       u4211 08B8                         u4131 0841                         u3251 048F  
                       u3171 042E                         u5011 0DB6                         u2540 13DD  
                       u2700 14F3                         u3260 0014                         u4060 0762  
                       u3420 171F                         u4220 08BF                         u4140 0846  
                       u3500 006B                         u3180 0441                         u4300 0E38  
                       u5020 0DC4                         u2541 13DC                         u3325 15A3  
                       u2605 1543                         u3261 0013                         u4061 0761  
                       u3421 171E                         u4221 08BE                         u4205 08AE  
                       u4141 0845                         u3501 006A                         u3181 0440  
                       u4301 0E37                         u5021 0DC3                         u2550 13E4  
                       u2710 1515                         u2630 1567                         u4070 0768  
                       u3430 1726                         u4230 08C3                         u4150 0866  
                       u3510 0071                         u3190 0450                         u4310 0E4B  
                       u2551 13E3                         u2631 1566                         u2615 154F  
                       u4071 0767                         u3431 1725                         u3415 170F  
                       u4231 08C2                         u4151 0865                         u3511 0070  
                       u3095 03F7                         u4311 0E4A                         u2720 1527  
                       u2640 0808                         u3280 0028                         u4080 077A  
                       u3360 1450                         u4240 08D8                         u3600 011B  
                       u3520 0076                         u2800 021B                         u4400 0F30  
                       u4320 0E5A                         u2721 1526                         u2625 155B  
                       u2641 0807                         u3281 0027                         u4081 0779  
                       u3361 144F                         u3345 143D                         u3601 011A  
                       u3521 0075                         u2801 021A                         u4401 0F2F  
                       u4321 0E59                         u3290 1572                         u2570 1530  
                       u2730 0A90                         u4090 0789                         u3450 1737  
                       u3370 16D9                         u4250 08E8                         u4170 0887  
                       u3610 0134                         u3530 0091                         u2810 0221  
                       u4410 0F37                         u4330 0E77                         u3291 1571  
                       u2571 152F                         u2731 0A8F                         u3275 001B  
                       u3451 1736                         u3371 16D8                         u3355 1444  
                       u4251 08E7                         u4171 0886                         u3611 0133  
                       u3531 0090                         u3195 044B                         u2811 0220  
                       u4411 0F36                         u5107 0EA8                         u4331 0E76  
                       u4315 0E47                         u2660 081A                         u2740 0ACA  
                       u3460 173C                         u3380 16F0                         u4260 08EC  
                       u3700 0185                         u3620 013C                         u3540 00AF  
                       u2900 02DA                         u2820 0226                         u4500 0FA9  
                       u4420 0F47                         u4340 0E8A                         u2565 14BE  
                       u2661 0819                         u2741 0AC9                         u3461 173B  
                       u3445 1729                         u4261 08EB                         u4245 08D3  
                       u4165 0879                         u5117 1678                         u3701 0184  
                       u3621 013B                         u3605 0117                         u3541 00AE  
                       u2901 02D8                         u2821 0225                         u4501 0FA8  
                       u4421 0F46                         u4341 0E89                         u4325 0E56  
                       u5037 0CCF                         u2590 1542                         u2670 0824  
                       u2750 0AF0                         u3390 1706                         u4190 08A9  
                       u3710 0197                         u3550 00E9                         u3470 003E  
                       u2910 02DB                         u2830 0244                         u4510 0FB0  
                       u4430 0F4E                         u4350 0E99                         u4270 0DF9  
                       u2591 1541                         u2671 0823                         u2655 080C  
                       u2751 0AEF                         u4095 0784                         u3391 1705  
                       u4191 08A8                         u5127 1687                         u3711 0196  
                       u3551 00E8                         u3471 003D                         u2831 0243  
                       u4511 0FAF                         u4431 0F4D                         u4351 0E98  
                       u4271 0DF8                         u5047 0CF7                         u2760 0AFB  
                       u3800 04D5                         u3720 01A6                         u3640 014B  
                       u3480 0044                         u2920 02EF                         u2840 024F  
                       u4520 0FB7                         u4440 0F55                         u4360 0EF2  
                       u4280 0E0C                         u4600 0A0B                         u2585 1534  
                       u2761 0AFA                         u3801 04D4                         u3385 16EB  
                       u4185 089B                         u5137 1696                         u3641 014A  
                       u3481 0043                         u2921 02EE                         u2841 024E  
                       u4521 0FB6                         u4441 0F54                         u4361 0EF1  
                       u4345 0E86                         u4281 0E0B                         u4601 0A0A  
                       u5057 0DD2                         u2690 0837                         u2770 0B01  
                       u3810 04DA                         u3730 01C3                         u3490 0049  
                       u2930 02FE                         u2850 0255                         u4530 0FD9  
                       u4450 0F63                         u4370 0F01                         u4290 0E1B  
                       u4610 0A19                         u5147 14CE                         u2691 0836  
                       u2675 0820                         u2771 0B00                         u2755 0AEC  
                       u3811 04D9                         u3731 01C2                         u3635 0140  
                       u3491 0048                         u2931 02FD                         u2851 0254  
                       u4531 0FD8                         u4451 0F62                         u4371 0F00  
                       u4355 0E95                         u4291 0E1A                         u4611 0A18  
                       u5067 0DE0                         u2780 0B53                         u3820 04F1  
                       u3740 01E0                         u3660 015F                         u3580 00FF  
                       u2860 025A                         u4540 0FE8                         u4460 0F7C  
                       u4380 0F1A                         u4700 1654                         u4620 0A28  
                       u5157 14DF                         u2685 082B                         u2781 0B52  
                       u3901 060E                         u3821 04F0                         u3741 01DF  
                       u3725 01A1                         u3661 015E                         u3581 00FE  
                       u3565 00EB                         u2861 0259                         u4541 0FE7  
                       u4461 0F7B                         u4381 0F19                         u4285 0E08  
                       u5077 0DED                         u4701 1653                         u4621 0A27  
                       u4605 0A07                         u2790 0B65                         u3902 0615  
                       u3830 04F6                         u3750 01F7                         u3670 0164  
                       u2950 0314                         u2870 0273                         u4550 0FF7  
                       u4470 0F8B                         u4390 0F29                         u4710 0902  
                       u4630 0A38                         u5167 139D                         u2791 0B64  
                       u3903 061C                         u3831 04F5                         u3751 01F6  
                       u3735 01BF                         u3671 0163                         u3655 014E  
                       u3575 00F4                         u2951 0313                         u2871 0272  
                       u4551 0FF6                         u4471 0F8A                         u4391 0F28  
                       u5087 0E2A                         u4295 0E17                         u4711 0901  
                       u4631 0A37                         u4615 0A15                         u3760 04A3  
                       u3680 0178                         u2960 0318                         u2880 0277  
                       u4480 0F92                         u4800 0993                         u4720 0910  
                       u4640 0A49                         u4560 09C8                         u3921 0644  
                       u3841 0547                         u3761 04A2                         u3745 01DC  
                       u3681 0177                         u2961 0317                         u2945 0301  
                       u2881 0276                         u4481 0F91                         u5097 0E69  
                       u4801 0992                         u4721 090F                         u4705 1650  
                       u4641 0A48                         u4625 0A24                         u4561 09C7  
                       u3922 064B                         u3842 054E                         u3770 04A9  
                       u3690 017F                         u2970 031D                         u2890 02CF  
                       u4490 0F99                         u4810 09A4                         u4730 0926  
                       u4650 0A59                         u4570 09D6                         u3931 0671  
                       u3923 0652                         u3915 061E                         u3851 0563  
                       u3843 0555                         u3771 04A8                         u3691 017E  
                       u3595 0102                         u2971 031C                         u2891 02CE  
                       u4491 0F98                         u4811 09A3                         u4731 0925  
                       u4715 08FE                         u4651 0A58                         u4635 0A34  
                       u4571 09D5                         u3932 0678                         u3852 056A  
                       u3780 04AE                         u4820 09B4                         u4740 0934  
                       u4660 0A6A                         u4580 09EC                         u4900 0D32  
                       u3941 069E                         u3933 067F                         u3861 058F  
                       u3853 0571                         u3781 04AD                         u2981 032F  
                       u4821 09B3                         u4805 098F                         u4741 0933  
                       u4725 090C                         u4661 0A69                         u4645 0A45  
                       u4581 09EB                         u4565 09C4                         u4901 0D31  
                       u3950 06C8                         u3942 06A5                         u3862 0596  
                       u3790 04CF                         u2990 0341                         u2982 0336  
                       u4830 15CD                         u4750 0945                         u4670 0A7A  
                       u4590 09FA                         u4910 0D3E                         u3943 06AC  
                       u3871 05AB                         u3863 059D                         u3791 04CE  
                       u2991 0340                         u2983 033D                         u2895 02CB  
                       u4831 15CC                         u4815 09A0                         u4751 0944  
                       u4735 0922                         u4671 0A79                         u4655 0A55  
                       u4591 09F9                         u4575 09D2                         u4911 0D3D  
                       u3872 05B2                         u4840 15E7                         u4760 0953  
                       u4680 1625                         u4920 0D4A                         u3961 06D4  
                       u3873 05B9                         u4841 15E6                         u4825 09B0  
                       u4761 0952                         u4745 0930                         u4681 1624  
                       u4665 0A66                         u4585 09E8                         u4921 0D49  
                       u3970 06F0                         u3962 06DB                         u4850 15FC  
                       u4770 0962                         u4690 163F                         u4930 0D56  
                       u3963 06E2                         u3955 06C3                         u3891 05E1  
                       u4851 15FB                         u4835 15C9                         u4771 0961  
                       u4755 0941                         u4691 163E                         u4675 0A76  
                       u4595 09F6                         u4931 0D55                         u3892 05E8  
                       u4860 0B75                         u4780 0972                         u4940 0D62  
                       u3981 06FC                         u3893 05EF                         u3885 05BB  
                       u4861 0B74                         u4845 15E3                         u4781 0971  
                       u4765 094F                         u4685 1621                         u4941 0D61  
                       u3982 0703                         u4870 0B84                         u4790 0983  
                       u4950 0D6E                         u3983 070A                         u3975 06EB  
                       u4871 0B83                         u4855 15F8                         u4791 0982  
                       u4775 095E                         u4695 163B                         u4951 0D6D  
                       u4960 0D7A                         u4880 0D0D                         u4785 096E  
                       u4961 0D79                         u4881 0D0C                         u4970 0D86  
                       u4890 0D26                         u3995 070C                         u4795 097F  
                       u4971 0D85                         u4891 0D25                         u4980 0D92  
                       u4981 0D91                         u4990 0DA0                         u4991 0D9F  
               __CFG_WRT$OFF 0000            ?_Lcd_Write_String 0075                         _main 0C76  
__size_of_currentMeasurement 010C                         btemp 007E                __CFG_BOREN$ON 0000  
                       start 0000           ??_Lcd_Write_String 0077              ___fldiv@new_exp 0068  
            __end_of_Lcd_Cmd 13A6                        ??_LCD 00B6                        ??_OFF 007B  
                      ??_aON 0075                        ??_bON 0075                        ??_cON 0075  
                      ??_ble 0070                ___fltol@sign1 00A9              __end_of___fladd 0492  
                      ?_main 0070              __end_of___fldiv 020A                        STR_10 104B  
              __CFG_WDTE$OFF 0000              __end_of___flmul 07F3              __end_of___flsub 1430  
            __end_of___fltol 1748              __end_of___lwdiv 156C              __end_of___lwmod 083C  
                      _PORTB 0006                        _PORTD 0008      __size_of_Lcd_Set_Cursor 0052  
                      _TRISA 0085                        _TRISB 0086                        _TRISD 0088  
                      _cLoop 00BA              __end_of_hotList 1000              __end_of_dpowers 101A  
                      _power 00BC                        pclath 000A                        status 0003  
                      wtemp0 007E              __end_of_sprintf 0B6A             __end_of_Lcd_Init 16CC  
           __end_of_Lcd_Port 13E8              __initialization 07F3                 __end_of_main 0DE9  
                     ??_main 00B7           __size_of_Lcd_Clear 000D                       _ADRESH 001E  
                     _ADRESL 009E                    ??_Lcd_Cmd 0071      __size_of_Lcd_Write_Char 0039  
                     _TRISE0 0448             __end_of___xxtofl 08F6               __CFG_PWRTE$OFF 0000  
                  ??___fladd 0042                       ___wmul 1430                    ??___fldiv 005E  
                     _danger 00C0                    ??___flmul 0028                    ??___flsub 007E  
                  ??___fltol 00A4                    ??___lwdiv 0074                    ??___lwmod 007C  
      __end_of_Lcd_Write_Int 140C                    ??_hotList 0020           __size_of__Umul8_16 0027  
           Lcd_Write_Int@num 00AB                    ??_sprintf 0023              Lcd_Set_Cursor@a 0077  
            Lcd_Set_Cursor@b 0074              Lcd_Set_Cursor@y 0079              Lcd_Set_Cursor@z 0078  
               ___xxtofl@arg 007A                 ___xxtofl@exp 0079                 ___xxtofl@val 0070  
    __end_of__initialization 07FC            __end_of_Lcd_Clear 1344                   ___fltol@f1 00A0  
             __pcstackCOMMON 0070       __size_of_maximumPower1 002C       __size_of_maximumPower2 0058  
     __size_of_maximumPower3 00C6               _Lcd_Set_Cursor 156C                    ?_Lcd_Init 0070  
                  ?_Lcd_Port 0070                   __pbssBANK1 00BA            __end_of__Umul8_16 002D  
                 __pmaintext 0C76                      ?___wmul 0070    __size_of_Lcd_Write_String 0042  
     __end_of_Lcd_Set_Cursor 15BE                    ?___xxtofl 0070                   ??_Lcd_Init 0074  
                 ??_Lcd_Port 0070                _maximumPower1 1455                _maximumPower2 15BE  
              _maximumPower3 08F6                      _aDANGER 00C6                   __stringtab 1000  
 __end_of_currentMeasurement 0C76                      _bDANGER 00C4                      _cDANGER 00C2  
             _Lcd_Write_Char 14AD                      _Lcd_Cmd 138C                      ___fladd 020A  
                    ___fldiv 002D                      ___flmul 0492                      ___flsub 140C  
                    ___fltol 16CC              __size_of___wmul 0025                      ___lwdiv 1528  
                    ___lwmod 0802              ?_Lcd_Set_Cursor 0074                      __ptext1 09BC  
                    __ptext2 1616                      __ptext3 1481                      __ptext4 08F6  
                    __ptext5 15BE                      __ptext6 1455                      __ptext7 1374  
                    __ptext8 135C                      __ptext9 1344                 __size_of_LCD 00B8  
               __size_of_OFF 0020                      _hotList 0DE9                 __size_of_aON 0018  
               __size_of_bON 0018                 __size_of_cON 0018                      _dpowers 1010  
               __size_of_ble 0005                      _current 00CF                   ??___xxtofl 0074  
             ?_maximumPower1 0070               ?_maximumPower2 0070               ?_maximumPower3 0070  
                    _sprintf 0A82                      clrloop0 1330                      _voltage 00BE  
     __end_of_Lcd_Write_Char 14E6         end_of_initialization 07FC                    Lcd_Port@a 0070  
                ___fladd@grs 004D                ___xxtofl@sign 0078                  ___fldiv@grs 006A  
                ___fldiv@rem 0063                ?_powerSaving1 0070                ?_powerSaving2 0070  
              ?_powerSaving3 0070              ?_Lcd_Write_Char 0070            Lcd_Write_String@a 0075  
          Lcd_Write_String@i 007A                  ___flmul@grs 002E                    _Lcd_Clear 1337  
             __end_of___wmul 1455             _Lcd_Write_String 14E6          start_initialization 07F3  
            ??_maximumPower1 0076              ??_maximumPower2 0076              ??_maximumPower3 0076  
                __end_of_LCD 1800                  __end_of_OFF 13C6                  __end_of_aON 135C  
                __end_of_bON 1374                  __end_of_cON 138C                  __end_of_ble 132F  
             ??_powerSaving1 0076               ??_powerSaving2 0076               ??_powerSaving3 0076  
          __size_of_Lcd_Init 005E            __size_of_Lcd_Port 0022       __size_of_Lcd_Write_Int 0024  
                 ?_Lcd_Clear 0070                     ??___wmul 0074                    __Umul8_16 0006  
            Lcd_Write_Char@a 0074              Lcd_Write_Char@y 0073                    ___fladd@a 003E  
                  ___fladd@b 003A                    ___fldiv@a 0056                    ___fldiv@b 005A  
                  ___flmul@a 0024                    ___flmul@b 0020                    ___flsub@a 004E  
                  ___flsub@b 0052                    ___latbits 0002                __pcstackBANK0 0020  
              __pcstackBANK1 00A0            __size_of___xxtofl 00BA                     ?_Lcd_Cmd 0070  
                sprintf@flag 0027                  sprintf@prec 0028             ___lwdiv@dividend 0072  
           ??_Lcd_Set_Cursor 0075           _currentMeasurement 0B6A                     ?___fladd 003A  
                   ?___fldiv 0056                     ?___flmul 0020                     ?___flsub 004E  
                   ?___fltol 00A0                   ?__Umul8_16 0070                     ?___lwdiv 0070  
                   ?___lwmod 0078                    __pstrings 1000          ?_currentMeasurement 0070  
                   ?_hotList 0070                _Lcd_Write_Int 13E8             ___lwdiv@quotient 0075  
                   ?_sprintf 0020         ??_currentMeasurement 00AB               ___wmul@product 0074  
                  _nextState 00CE                    clear_ram0 132F                     Lcd_Cmd@a 0073  
                ??_Lcd_Clear 0074         __end_of_powerSaving1 14AD         __end_of_powerSaving2 166E  
       __end_of_powerSaving3 0A82                   _ADCON0bits 001F                  __stringbase 100F  
                 _ADCON1bits 009F            ___wmul@multiplier 0070               ?_Lcd_Write_Int 00AB  
           ??_Lcd_Write_Char 0071                     _Lcd_Init 166E                     _Lcd_Port 13C6  
                   _aVOLTAGE 00CC     __end_of_Lcd_Write_String 1528                     _bVOLTAGE 00CA  
                   _cVOLTAGE 00C8             __size_of_Lcd_Cmd 001A                  ??__Umul8_16 0072  
           __size_of___fladd 0288             __size_of___fldiv 01DD             __size_of___flmul 0361  
           __size_of___flsub 0024             __size_of___fltol 007C             __size_of___lwdiv 0044  
           __size_of___lwmod 003A           __end_of__stringtab 1010                   sprintf@val 0029  
                   ___xxtofl 083C             __size_of_hotList 0217              ___lwdiv@divisor 0070  
            ___lwdiv@counter 0077                     __ptext10 0DE9                     __ptext11 1337  
                   __ptext20 083C                     __ptext12 0B6A                     __ptext21 1430  
                   __ptext13 140C                     __ptext30 14AD                     __ptext22 16CC  
                   __ptext14 020A                     __ptext31 156C                     __ptext23 0492  
                   __ptext15 002D                     __ptext32 138C                     __ptext24 0006  
                   __ptext16 132A                     __ptext33 13C6                     __ptext25 13E8  
                   __ptext17 13A6                     __ptext26 0A82                     __ptext18 166E  
                   __ptext27 0802                     __ptext19 1748                     __ptext28 1528  
                   __ptext29 14E6             __size_of_sprintf 00E8                __size_of_main 0173  
            ??_Lcd_Write_Int 00AD        __end_of_maximumPower1 1481        __end_of_maximumPower2 1616  
      __end_of_maximumPower3 09BC          Lcd_Write_Int@number 00AE           Lcd_Write_Char@temp 0072  
                  sprintf@ap 0026                    sprintf@sp 002B             ___lwmod@dividend 007A  
      __size_of_powerSaving1 002C        __size_of_powerSaving2 0058        __size_of_powerSaving3 00C6  
                  stringcode 100A           Lcd_Set_Cursor@temp 007A       __Umul8_16@multiplicand 0070  
                   sprintf@c 002C                     sprintf@f 0020              ___lwmod@divisor 0078  
            ___lwmod@counter 007D                     stringdir 100A                     stringtab 1000  
              ___fladd@signs 004A                 _powerSaving1 1481                 _powerSaving2 1616  
               _powerSaving3 09BC                 ___fladd@aexp 004B                 ___fladd@bexp 004C  
       __Umul8_16@multiplier 0078            __Umul8_16@product 0074  
