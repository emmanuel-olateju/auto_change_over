

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Dec 18 07:52:27 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.10
    32                           ; Generated 31/07/2019 GMT
    33                           ; 
    34                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F877A Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  0091                     	;# 
   170  0092                     	;# 
   171  0093                     	;# 
   172  0094                     	;# 
   173  0098                     	;# 
   174  0099                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009E                     	;# 
   178  009F                     	;# 
   179  010C                     	;# 
   180  010D                     	;# 
   181  010E                     	;# 
   182  010F                     	;# 
   183  018C                     	;# 
   184  018D                     	;# 
   185  001E                     _ADRESH	set	30
   186  0008                     _PORTD	set	8
   187  0006                     _PORTB	set	6
   188  001F                     _ADCON0bits	set	31
   189  0035                     _RB5	set	53
   190  0034                     _RB4	set	52
   191  0033                     _RB3	set	51
   192  0037                     _RB7	set	55
   193  0036                     _RB6	set	54
   194  0032                     _RB2	set	50
   195  0031                     _RB1	set	49
   196  0030                     _RB0	set	48
   197  0048                     _RE0	set	72
   198  0043                     _RD3	set	67
   199  0041                     _RD1	set	65
   200  0047                     _RD7	set	71
   201  0046                     _RD6	set	70
   202  0045                     _RD5	set	69
   203  0044                     _RD4	set	68
   204  009E                     _ADRESL	set	158
   205  0088                     _TRISD	set	136
   206  0086                     _TRISB	set	134
   207  0085                     _TRISA	set	133
   208  009F                     _ADCON1bits	set	159
   209  0448                     _TRISE0	set	1096
   210                           
   211                           	psect	strings
   212  0800                     __pstrings:	
   213  0800                     stringtab:	
   214  0800                     __stringtab:	
   215  0800                     stringcode:	
   216                           ;	String table - string pointers are 1 byte each
   217                           
   218  0800                     stringdir:	
   219  0800  3008               	movlw	high stringdir
   220  0801  008A               	movwf	10
   221  0802  0804               	movf	4,w
   222  0803  0A84               	incf	4,f
   223  0804  0782               	addwf	2,f
   224  0805                     __stringbase:	
   225  0805  3400               	retlw	0
   226  0806                     __end_of__stringtab:	
   227  0806                     STR_2:	
   228  0806  3461               	retlw	97	;'a'
   229  0807  3475               	retlw	117	;'u'
   230  0808  3474               	retlw	116	;'t'
   231  0809  346F               	retlw	111	;'o'
   232  080A  3420               	retlw	32	;' '
   233  080B  3470               	retlw	112	;'p'
   234  080C  3468               	retlw	104	;'h'
   235  080D  3461               	retlw	97	;'a'
   236  080E  3473               	retlw	115	;'s'
   237  080F  3465               	retlw	101	;'e'
   238  0810  3420               	retlw	32	;' '
   239  0811  3473               	retlw	115	;'s'
   240  0812  3479               	retlw	121	;'y'
   241  0813  3473               	retlw	115	;'s'
   242  0814  346D               	retlw	109	;'m'
   243  0815  3400               	retlw	0
   244  0816                     STR_1:	
   245  0816  3441               	retlw	65	;'A'
   246  0817  3465               	retlw	101	;'e'
   247  0818  346F               	retlw	111	;'o'
   248  0819  346E               	retlw	110	;'n'
   249  081A  342D               	retlw	45	;'-'
   250  081B  3441               	retlw	65	;'A'
   251  081C  3474               	retlw	116	;'t'
   252  081D  346B               	retlw	107	;'k'
   253  081E  3400               	retlw	0
   254  081F                     STR_8:	
   255  081F  3476               	retlw	118	;'v'
   256  0820  346F               	retlw	111	;'o'
   257  0821  346C               	retlw	108	;'l'
   258  0822  3474               	retlw	116	;'t'
   259  0823  3473               	retlw	115	;'s'
   260  0824  343A               	retlw	58	;':'
   261  0825  3400               	retlw	0
   262  0826                     STR_7:	
   263  0826  3457               	retlw	87	;'W'
   264  0827  3461               	retlw	97	;'a'
   265  0828  3474               	retlw	116	;'t'
   266  0829  3474               	retlw	116	;'t'
   267  082A  3473               	retlw	115	;'s'
   268  082B  3400               	retlw	0
   269  082C                     STR_6:	
   270  082C  344F               	retlw	79	;'O'
   271  082D  3446               	retlw	70	;'F'
   272  082E  3446               	retlw	70	;'F'
   273  082F  3400               	retlw	0
   274  0830                     STR_3:	
   275  0830  3441               	retlw	65	;'A'
   276  0831  342D               	retlw	45	;'-'
   277  0832  3400               	retlw	0
   278  0833                     STR_4:	
   279  0833  3442               	retlw	66	;'B'
   280  0834  342D               	retlw	45	;'-'
   281  0835  3400               	retlw	0
   282  0836                     STR_5:	
   283  0836  3443               	retlw	67	;'C'
   284  0837  342D               	retlw	45	;'-'
   285  0838  3400               	retlw	0
   286                           
   287                           ; #config settings
   288  0000                     
   289                           	psect	cinit
   290  07F3                     start_initialization:	
   291  07F3                     __initialization:	
   292                           
   293                           ; Clear objects allocated to BANK0
   294  07F3  1383               	bcf	3,7	;select IRP bank0
   295  07F4  304A               	movlw	low __pbssBANK0
   296  07F5  0084               	movwf	4
   297  07F6  3060               	movlw	low (__pbssBANK0+22)
   298  07F7  120A  158A  2462  120A  118A  	fcall	clear_ram0
   299  07FC                     end_of_initialization:	
   300                           ;End of C runtime variable initialization code
   301                           
   302  07FC                     __end_of__initialization:	
   303  07FC  0183               	clrf	3
   304  07FD  120A  118A  2C25   	ljmp	_main	;jump to C main() function
   305                           
   306                           	psect	bssBANK0
   307  004A                     __pbssBANK0:	
   308  004A                     Lcd_Write_Int@F873:	
   309  004A                     	ds	6
   310  0050                     _min_current:	
   311  0050                     	ds	2
   312  0052                     _max_current:	
   313  0052                     	ds	2
   314  0054                     _power:	
   315  0054                     	ds	2
   316  0056                     _current:	
   317  0056                     	ds	2
   318  0058                     _voltage:	
   319  0058                     	ds	2
   320  005A                     _cVOLTAGE:	
   321  005A                     	ds	2
   322  005C                     _bVOLTAGE:	
   323  005C                     	ds	2
   324  005E                     _aVOLTAGE:	
   325  005E                     	ds	2
   326                           
   327                           	psect	clrtext
   328  0C62                     clear_ram0:	
   329                           ;	Called with FSR containing the base address, and
   330                           ;	W with the last address+1
   331                           
   332  0C62  0064               	clrwdt	;clear the watchdog before getting into this loop
   333  0C63                     clrloop0:	
   334  0C63  0180               	clrf	0	;clear RAM location pointed to by FSR
   335  0C64  0A84               	incf	4,f	;increment pointer
   336  0C65  0604               	xorwf	4,w	;XOR with final address
   337  0C66  1903               	btfsc	3,2	;have we reached the end yet?
   338  0C67  3400               	retlw	0	;all done for this memory range, return
   339  0C68  0604               	xorwf	4,w	;XOR again to restore value
   340  0C69  2C63               	goto	clrloop0	;do the next byte
   341                           
   342                           	psect	cstackCOMMON
   343  0070                     __pcstackCOMMON:	
   344  0070                     ?_aON:	
   345  0070                     ??_aON:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ?_cON:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ??_cON:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ?_OFF:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ??_OFF:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ?_bON:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     ??_bON:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0070                     ?_Lcd_Port:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0070                     ??_Lcd_Port:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0070                     ?_Lcd_Cmd:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ?_Lcd_Init:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ?_Lcd_Write_Char:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0070                     ?_Lcd_Write_String:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     ?_main:	
   385                           ; 1 bytes @ 0x0
   386                           
   387  0070                     ?__Umul8_16:	
   388                           ; 1 bytes @ 0x0
   389                           
   390  0070                     ?_Lcd_Clear:	
   391                           ; 2 bytes @ 0x0
   392                           
   393  0070                     ?___wmul:	
   394                           ; 2 bytes @ 0x0
   395                           
   396  0070                     ?___awdiv:	
   397                           ; 2 bytes @ 0x0
   398                           
   399  0070                     ?___xxtofl:	
   400                           ; 2 bytes @ 0x0
   401                           
   402  0070                     Lcd_Port@a:	
   403                           ; 4 bytes @ 0x0
   404                           
   405  0070                     __Umul8_16@multiplicand:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ___wmul@multiplier:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ___awdiv@divisor:	
   412                           ; 2 bytes @ 0x0
   413                           
   414  0070                     ___xxtofl@val:	
   415                           ; 2 bytes @ 0x0
   416                           
   417                           
   418                           ; 4 bytes @ 0x0
   419  0070                     	ds	1
   420  0071                     ??_Lcd_Cmd:	
   421  0071                     ??_Lcd_Write_Char:	
   422                           ; 1 bytes @ 0x1
   423                           
   424                           
   425                           ; 1 bytes @ 0x1
   426  0071                     	ds	1
   427  0072                     ??__Umul8_16:	
   428  0072                     Lcd_Write_Char@temp:	
   429                           ; 1 bytes @ 0x2
   430                           
   431  0072                     ___wmul@multiplicand:	
   432                           ; 1 bytes @ 0x2
   433                           
   434  0072                     ___awdiv@dividend:	
   435                           ; 2 bytes @ 0x2
   436                           
   437                           
   438                           ; 2 bytes @ 0x2
   439  0072                     	ds	1
   440  0073                     Lcd_Cmd@a:	
   441  0073                     Lcd_Write_Char@y:	
   442                           ; 1 bytes @ 0x3
   443                           
   444                           
   445                           ; 1 bytes @ 0x3
   446  0073                     	ds	1
   447  0074                     ??_Lcd_Clear:	
   448  0074                     ?_Lcd_Set_Cursor:	
   449                           ; 1 bytes @ 0x4
   450                           
   451  0074                     ??_Lcd_Init:	
   452                           ; 1 bytes @ 0x4
   453                           
   454  0074                     ??___wmul:	
   455                           ; 1 bytes @ 0x4
   456                           
   457  0074                     ??___awdiv:	
   458                           ; 1 bytes @ 0x4
   459                           
   460  0074                     ??___xxtofl:	
   461                           ; 1 bytes @ 0x4
   462                           
   463  0074                     Lcd_Set_Cursor@b:	
   464                           ; 1 bytes @ 0x4
   465                           
   466  0074                     Lcd_Write_Char@a:	
   467                           ; 1 bytes @ 0x4
   468                           
   469  0074                     ___wmul@product:	
   470                           ; 1 bytes @ 0x4
   471                           
   472  0074                     __Umul8_16@product:	
   473                           ; 2 bytes @ 0x4
   474                           
   475                           
   476                           ; 2 bytes @ 0x4
   477  0074                     	ds	1
   478  0075                     ??_Lcd_Set_Cursor:	
   479  0075                     ??_Lcd_Write_String:	
   480                           ; 1 bytes @ 0x5
   481                           
   482  0075                     ___awdiv@counter:	
   483                           ; 1 bytes @ 0x5
   484                           
   485  0075                     Lcd_Write_String@i:	
   486                           ; 1 bytes @ 0x5
   487                           
   488                           
   489                           ; 2 bytes @ 0x5
   490  0075                     	ds	1
   491  0076                     ___awdiv@sign:	
   492  0076                     __Umul8_16@word_mpld:	
   493                           ; 1 bytes @ 0x6
   494                           
   495                           
   496                           ; 2 bytes @ 0x6
   497  0076                     	ds	1
   498  0077                     Lcd_Set_Cursor@a:	
   499  0077                     Lcd_Write_String@a:	
   500                           ; 1 bytes @ 0x7
   501                           
   502  0077                     ___awdiv@quotient:	
   503                           ; 1 bytes @ 0x7
   504                           
   505                           
   506                           ; 2 bytes @ 0x7
   507  0077                     	ds	1
   508  0078                     Lcd_Set_Cursor@z:	
   509  0078                     ___xxtofl@sign:	
   510                           ; 1 bytes @ 0x8
   511                           
   512  0078                     __Umul8_16@multiplier:	
   513                           ; 1 bytes @ 0x8
   514                           
   515                           
   516                           ; 1 bytes @ 0x8
   517  0078                     	ds	1
   518  0079                     ?_Lcd_Write_Int:	
   519  0079                     Lcd_Set_Cursor@y:	
   520                           ; 2 bytes @ 0x9
   521                           
   522  0079                     ___xxtofl@exp:	
   523                           ; 1 bytes @ 0x9
   524                           
   525  0079                     Lcd_Write_Int@a:	
   526                           ; 1 bytes @ 0x9
   527                           
   528                           
   529                           ; 2 bytes @ 0x9
   530  0079                     	ds	1
   531  007A                     Lcd_Set_Cursor@temp:	
   532  007A                     ___xxtofl@arg:	
   533                           ; 1 bytes @ 0xA
   534                           
   535                           
   536                           ; 4 bytes @ 0xA
   537  007A                     	ds	1
   538  007B                     ??_Lcd_Write_Int:	
   539                           
   540                           ; 1 bytes @ 0xB
   541  007B                     	ds	3
   542                           
   543                           	psect	cstackBANK0
   544  0020                     __pcstackBANK0:	
   545  0020                     ?___flmul:	
   546  0020                     ___flmul@b:	
   547                           ; 4 bytes @ 0x0
   548                           
   549                           
   550                           ; 4 bytes @ 0x0
   551  0020                     	ds	2
   552  0022                     Lcd_Write_Int@rem:	
   553                           
   554                           ; 6 bytes @ 0x2
   555  0022                     	ds	2
   556  0024                     ___flmul@a:	
   557                           
   558                           ; 4 bytes @ 0x4
   559  0024                     	ds	4
   560  0028                     ??___flmul:	
   561  0028                     Lcd_Write_Int@d:	
   562                           ; 1 bytes @ 0x8
   563                           
   564                           
   565                           ; 2 bytes @ 0x8
   566  0028                     	ds	5
   567  002D                     ___flmul@sign:	
   568                           
   569                           ; 1 bytes @ 0xD
   570  002D                     	ds	1
   571  002E                     ___flmul@grs:	
   572                           
   573                           ; 4 bytes @ 0xE
   574  002E                     	ds	4
   575  0032                     ___flmul@aexp:	
   576                           
   577                           ; 1 bytes @ 0x12
   578  0032                     	ds	1
   579  0033                     ___flmul@bexp:	
   580                           
   581                           ; 1 bytes @ 0x13
   582  0033                     	ds	1
   583  0034                     ___flmul@prod:	
   584                           
   585                           ; 4 bytes @ 0x14
   586  0034                     	ds	4
   587  0038                     ___flmul@temp:	
   588                           
   589                           ; 2 bytes @ 0x18
   590  0038                     	ds	2
   591  003A                     ?___fltol:	
   592  003A                     ___fltol@f1:	
   593                           ; 4 bytes @ 0x1A
   594                           
   595                           
   596                           ; 4 bytes @ 0x1A
   597  003A                     	ds	4
   598  003E                     ??___fltol:	
   599                           
   600                           ; 1 bytes @ 0x1E
   601  003E                     	ds	5
   602  0043                     ___fltol@sign1:	
   603                           
   604                           ; 1 bytes @ 0x23
   605  0043                     	ds	1
   606  0044                     ___fltol@exp1:	
   607                           
   608                           ; 1 bytes @ 0x24
   609  0044                     	ds	1
   610  0045                     ??_main:	
   611                           
   612                           ; 1 bytes @ 0x25
   613  0045                     	ds	3
   614  0048                     main@i:	
   615                           
   616                           ; 2 bytes @ 0x28
   617  0048                     	ds	2
   618                           
   619                           	psect	maintext
   620  0425                     __pmaintext:	
   621 ;;
   622 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   623 ;;
   624 ;; *************** function _main *****************
   625 ;; Defined at:
   626 ;;		line 53 in file "main.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;		None
   629 ;; Auto vars:     Size  Location     Type
   630 ;;  i               2   40[BANK0 ] int 
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   635 ;; Tracked objects:
   636 ;;		On entry : B00/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   640 ;;      Params:         0       0       0       0       0
   641 ;;      Locals:         0       2       0       0       0
   642 ;;      Temps:          0       3       0       0       0
   643 ;;      Totals:         0       5       0       0       0
   644 ;;Total ram usage:        5 bytes
   645 ;; Hardware stack levels required when called:    3
   646 ;; This function calls:
   647 ;;		_Lcd_Clear
   648 ;;		_Lcd_Init
   649 ;;		_Lcd_Set_Cursor
   650 ;;		_Lcd_Write_Char
   651 ;;		_Lcd_Write_Int
   652 ;;		_Lcd_Write_String
   653 ;;		_OFF
   654 ;;		___awdiv
   655 ;;		___flmul
   656 ;;		___fltol
   657 ;;		___wmul
   658 ;;		___xxtofl
   659 ;;		_aON
   660 ;;		_bON
   661 ;;		_cON
   662 ;; This function is called by:
   663 ;;		Startup code after reset
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           
   668                           ;psect for function _main
   669  0425                     _main:	
   670  0425                     l1852:	
   671                           ;incstack = 0
   672                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   673                           
   674                           
   675                           ;main.c: 54:     ADCON1bits.ADFM=1;
   676  0425  1683               	bsf	3,5	;RP0=1, select bank1
   677  0426  1303               	bcf	3,6	;RP1=0, select bank1
   678  0427  179F               	bsf	31,7	;volatile
   679                           
   680                           ;main.c: 55:     ADCON1bits.ADCS2=0;
   681  0428  131F               	bcf	31,6	;volatile
   682                           
   683                           ;main.c: 56:     ADCON0bits.ADCS1=1;
   684  0429  1283               	bcf	3,5	;RP0=0, select bank0
   685  042A  1303               	bcf	3,6	;RP1=0, select bank0
   686  042B  179F               	bsf	31,7	;volatile
   687                           
   688                           ;main.c: 57:     ADCON0bits.ADCS0=0;
   689  042C  131F               	bcf	31,6	;volatile
   690                           
   691                           ;main.c: 58:     ADCON1bits.PCFG3=0;
   692  042D  1683               	bsf	3,5	;RP0=1, select bank1
   693  042E  1303               	bcf	3,6	;RP1=0, select bank1
   694  042F  119F               	bcf	31,3	;volatile
   695                           
   696                           ;main.c: 59:     ADCON1bits.PCFG2=0;
   697  0430  111F               	bcf	31,2	;volatile
   698                           
   699                           ;main.c: 60:     ADCON1bits.PCFG1=1;
   700  0431  149F               	bsf	31,1	;volatile
   701                           
   702                           ;main.c: 61:     ADCON1bits.PCFG0=0;
   703  0432  101F               	bcf	31,0	;volatile
   704  0433                     l1854:	
   705                           
   706                           ;main.c: 62:     TRISA=0x0F;
   707  0433  300F               	movlw	15
   708  0434  0085               	movwf	5	;volatile
   709  0435                     l1856:	
   710                           
   711                           ;main.c: 63:     ADCON0bits.ADON=1;
   712  0435  1283               	bcf	3,5	;RP0=0, select bank0
   713  0436  1303               	bcf	3,6	;RP1=0, select bank0
   714  0437  141F               	bsf	31,0	;volatile
   715                           
   716                           ;main.c: 64:     TRISB=0xc0;
   717  0438  30C0               	movlw	192
   718  0439  1683               	bsf	3,5	;RP0=1, select bank1
   719  043A  1303               	bcf	3,6	;RP1=0, select bank1
   720  043B  0086               	movwf	6	;volatile
   721  043C                     l1858:	
   722                           
   723                           ;main.c: 65:     PORTB=0x00;
   724  043C  1283               	bcf	3,5	;RP0=0, select bank0
   725  043D  1303               	bcf	3,6	;RP1=0, select bank0
   726  043E  0186               	clrf	6	;volatile
   727  043F                     l1860:	
   728                           
   729                           ;main.c: 66:     TRISE0=0;
   730  043F  1683               	bsf	3,5	;RP0=1, select bank1
   731  0440  1303               	bcf	3,6	;RP1=0, select bank1
   732  0441  1009               	bcf	9,0	;volatile
   733  0442                     l1862:	
   734                           
   735                           ;main.c: 67:     RE0=0;
   736  0442  1283               	bcf	3,5	;RP0=0, select bank0
   737  0443  1303               	bcf	3,6	;RP1=0, select bank0
   738  0444  1009               	bcf	9,0	;volatile
   739  0445                     l1864:	
   740                           
   741                           ;main.c: 68:     TRISD=0x00;
   742  0445  1683               	bsf	3,5	;RP0=1, select bank1
   743  0446  1303               	bcf	3,6	;RP1=0, select bank1
   744  0447  0188               	clrf	8	;volatile
   745  0448                     l1866:	
   746                           
   747                           ;main.c: 69:     PORTD=0x00;
   748  0448  1283               	bcf	3,5	;RP0=0, select bank0
   749  0449  1303               	bcf	3,6	;RP1=0, select bank0
   750  044A  0188               	clrf	8	;volatile
   751  044B                     l1868:	
   752                           
   753                           ;main.c: 70:     Lcd_Init();
   754  044B  120A  158A  25AF  120A  118A  	fcall	_Lcd_Init
   755  0450                     l1870:	
   756                           
   757                           ;main.c: 71:     Lcd_Set_Cursor(1,5);
   758  0450  3005               	movlw	5
   759  0451  1283               	bcf	3,5	;RP0=0, select bank0
   760  0452  1303               	bcf	3,6	;RP1=0, select bank0
   761  0453  00C5               	movwf	??_main
   762  0454  0845               	movf	??_main,w
   763  0455  00F4               	movwf	Lcd_Set_Cursor@b
   764  0456  3001               	movlw	1
   765  0457  120A  158A  255D  120A  118A  	fcall	_Lcd_Set_Cursor
   766  045C                     l1872:	
   767                           
   768                           ;main.c: 72:     Lcd_Write_String("Aeon-Atk");
   769  045C  3011               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   770  045D  120A  158A  24D8  120A  118A  	fcall	_Lcd_Write_String
   771  0462                     l1874:	
   772                           
   773                           ;main.c: 73:     Lcd_Set_Cursor(2,1);
   774  0462  01F4               	clrf	Lcd_Set_Cursor@b
   775  0463  0AF4               	incf	Lcd_Set_Cursor@b,f
   776  0464  3002               	movlw	2
   777  0465  120A  158A  255D  120A  118A  	fcall	_Lcd_Set_Cursor
   778  046A                     l1876:	
   779                           
   780                           ;main.c: 74:     _delay((unsigned long)((200)*(20000000/4000.0)));
   781  046A  3006               	movlw	6
   782  046B  1283               	bcf	3,5	;RP0=0, select bank0
   783  046C  1303               	bcf	3,6	;RP1=0, select bank0
   784  046D  00C7               	movwf	??_main+2
   785  046E  3013               	movlw	19
   786  046F  00C6               	movwf	??_main+1
   787  0470  30AD               	movlw	173
   788  0471  00C5               	movwf	??_main
   789  0472                     u2597:	
   790  0472  0BC5               	decfsz	??_main,f
   791  0473  2C72               	goto	u2597
   792  0474  0BC6               	decfsz	??_main+1,f
   793  0475  2C72               	goto	u2597
   794  0476  0BC7               	decfsz	??_main+2,f
   795  0477  2C72               	goto	u2597
   796  0478                     l1878:	
   797                           
   798                           ;main.c: 75:     Lcd_Write_String("auto phase sysm");
   799  0478  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   800  0479  120A  158A  24D8  120A  118A  	fcall	_Lcd_Write_String
   801  047E                     l1880:	
   802                           
   803                           ;main.c: 76:     _delay((unsigned long)((400)*(20000000/4000.0)));
   804  047E  300B               	movlw	11
   805  047F  1283               	bcf	3,5	;RP0=0, select bank0
   806  0480  1303               	bcf	3,6	;RP1=0, select bank0
   807  0481  00C7               	movwf	??_main+2
   808  0482  3026               	movlw	38
   809  0483  00C6               	movwf	??_main+1
   810  0484  305D               	movlw	93
   811  0485  00C5               	movwf	??_main
   812  0486                     u2607:	
   813  0486  0BC5               	decfsz	??_main,f
   814  0487  2C86               	goto	u2607
   815  0488  0BC6               	decfsz	??_main+1,f
   816  0489  2C86               	goto	u2607
   817  048A  0BC7               	decfsz	??_main+2,f
   818  048B  2C86               	goto	u2607
   819  048C                     l1882:	
   820                           
   821                           ;main.c: 80:         _delay((unsigned long)((20)*(20000000/4000000.0)));
   822  048C  3020               	movlw	32
   823  048D  1283               	bcf	3,5	;RP0=0, select bank0
   824  048E  1303               	bcf	3,6	;RP1=0, select bank0
   825  048F  00C5               	movwf	??_main
   826  0490                     u2617:	
   827  0490  0BC5               	decfsz	??_main,f
   828  0491  2C90               	goto	u2617
   829  0492  0000               	nop
   830  0493                     l1884:	
   831                           
   832                           ;main.c: 81:         ADCON0bits.CHS=0;
   833  0493  30C7               	movlw	-57
   834  0494  1283               	bcf	3,5	;RP0=0, select bank0
   835  0495  1303               	bcf	3,6	;RP1=0, select bank0
   836  0496  059F               	andwf	31,f	;volatile
   837  0497                     l1886:	
   838                           
   839                           ;main.c: 82:         ADCON0bits.GO_nDONE=1;
   840  0497  151F               	bsf	31,2	;volatile
   841  0498                     l134:	
   842                           ;main.c: 83:         while(ADCON0bits.GO_nDONE);
   843                           
   844  0498  191F               	btfsc	31,2	;volatile
   845  0499  2C9B               	goto	u2221
   846  049A  2C9C               	goto	u2220
   847  049B                     u2221:	
   848  049B  2C98               	goto	l134
   849  049C                     u2220:	
   850  049C                     l1888:	
   851                           
   852                           ;main.c: 84:         aVOLTAGE=(ADRESH<<8)+ADRESL;
   853  049C  081E               	movf	30,w	;volatile
   854  049D  00DF               	movwf	_aVOLTAGE+1
   855  049E  1683               	bsf	3,5	;RP0=1, select bank1
   856  049F  1303               	bcf	3,6	;RP1=0, select bank1
   857  04A0  081E               	movf	30,w	;volatile
   858  04A1  1283               	bcf	3,5	;RP0=0, select bank0
   859  04A2  1303               	bcf	3,6	;RP1=0, select bank0
   860  04A3  00DE               	movwf	_aVOLTAGE
   861  04A4                     l1890:	
   862                           
   863                           ;main.c: 85:         if((aVOLTAGE>=614)||(aVOLTAGE<=368))RB0=1;
   864  04A4  085F               	movf	_aVOLTAGE+1,w
   865  04A5  3A80               	xorlw	128
   866  04A6  00FF               	movwf	btemp+1
   867  04A7  3082               	movlw	130
   868  04A8  027F               	subwf	btemp+1,w
   869  04A9  1D03               	skipz
   870  04AA  2CAD               	goto	u2235
   871  04AB  3066               	movlw	102
   872  04AC  025E               	subwf	_aVOLTAGE,w
   873  04AD                     u2235:	
   874  04AD  1803               	skipnc
   875  04AE  2CB0               	goto	u2231
   876  04AF  2CB1               	goto	u2230
   877  04B0                     u2231:	
   878  04B0  2CC0               	goto	l139
   879  04B1                     u2230:	
   880  04B1                     l1892:	
   881  04B1  1283               	bcf	3,5	;RP0=0, select bank0
   882  04B2  1303               	bcf	3,6	;RP1=0, select bank0
   883  04B3  085F               	movf	_aVOLTAGE+1,w
   884  04B4  3A80               	xorlw	128
   885  04B5  00FF               	movwf	btemp+1
   886  04B6  3081               	movlw	129
   887  04B7  027F               	subwf	btemp+1,w
   888  04B8  1D03               	skipz
   889  04B9  2CBC               	goto	u2245
   890  04BA  3071               	movlw	113
   891  04BB  025E               	subwf	_aVOLTAGE,w
   892  04BC                     u2245:	
   893  04BC  1803               	skipnc
   894  04BD  2CBF               	goto	u2241
   895  04BE  2CC0               	goto	u2240
   896  04BF                     u2241:	
   897  04BF  2CC4               	goto	l137
   898  04C0                     u2240:	
   899  04C0                     l139:	
   900  04C0  1283               	bcf	3,5	;RP0=0, select bank0
   901  04C1  1303               	bcf	3,6	;RP1=0, select bank0
   902  04C2  1406               	bsf	6,0	;volatile
   903  04C3  2CC7               	goto	l1894
   904  04C4                     l137:	
   905                           ;main.c: 86:         else RB0=0;
   906                           
   907  04C4  1283               	bcf	3,5	;RP0=0, select bank0
   908  04C5  1303               	bcf	3,6	;RP1=0, select bank0
   909  04C6  1006               	bcf	6,0	;volatile
   910  04C7                     l1894:	
   911                           
   912                           ;main.c: 87:         _delay((unsigned long)((20)*(20000000/4000000.0)));
   913  04C7  3020               	movlw	32
   914  04C8  1283               	bcf	3,5	;RP0=0, select bank0
   915  04C9  1303               	bcf	3,6	;RP1=0, select bank0
   916  04CA  00C5               	movwf	??_main
   917  04CB                     u2627:	
   918  04CB  0BC5               	decfsz	??_main,f
   919  04CC  2CCB               	goto	u2627
   920  04CD  0000               	nop
   921  04CE                     l1896:	
   922                           
   923                           ;main.c: 88:         ADCON0bits.CHS=1;
   924  04CE  1283               	bcf	3,5	;RP0=0, select bank0
   925  04CF  1303               	bcf	3,6	;RP1=0, select bank0
   926  04D0  081F               	movf	31,w	;volatile
   927  04D1  39C7               	andlw	-57
   928  04D2  3808               	iorlw	8
   929  04D3  009F               	movwf	31	;volatile
   930  04D4                     l1898:	
   931                           
   932                           ;main.c: 89:         ADCON0bits.GO_nDONE=1;
   933  04D4  151F               	bsf	31,2	;volatile
   934  04D5                     l141:	
   935                           ;main.c: 90:         while(ADCON0bits.GO_nDONE);
   936                           
   937  04D5  191F               	btfsc	31,2	;volatile
   938  04D6  2CD8               	goto	u2251
   939  04D7  2CD9               	goto	u2250
   940  04D8                     u2251:	
   941  04D8  2CD5               	goto	l141
   942  04D9                     u2250:	
   943  04D9                     l1900:	
   944                           
   945                           ;main.c: 91:         bVOLTAGE=(ADRESH<<8)+ADRESL;
   946  04D9  081E               	movf	30,w	;volatile
   947  04DA  00DD               	movwf	_bVOLTAGE+1
   948  04DB  1683               	bsf	3,5	;RP0=1, select bank1
   949  04DC  1303               	bcf	3,6	;RP1=0, select bank1
   950  04DD  081E               	movf	30,w	;volatile
   951  04DE  1283               	bcf	3,5	;RP0=0, select bank0
   952  04DF  1303               	bcf	3,6	;RP1=0, select bank0
   953  04E0  00DC               	movwf	_bVOLTAGE
   954  04E1                     l1902:	
   955                           
   956                           ;main.c: 92:         if((bVOLTAGE>=614)||(bVOLTAGE<=368))RB1=1;
   957  04E1  085D               	movf	_bVOLTAGE+1,w
   958  04E2  3A80               	xorlw	128
   959  04E3  00FF               	movwf	btemp+1
   960  04E4  3082               	movlw	130
   961  04E5  027F               	subwf	btemp+1,w
   962  04E6  1D03               	skipz
   963  04E7  2CEA               	goto	u2265
   964  04E8  3066               	movlw	102
   965  04E9  025C               	subwf	_bVOLTAGE,w
   966  04EA                     u2265:	
   967  04EA  1803               	skipnc
   968  04EB  2CED               	goto	u2261
   969  04EC  2CEE               	goto	u2260
   970  04ED                     u2261:	
   971  04ED  2CFD               	goto	l146
   972  04EE                     u2260:	
   973  04EE                     l1904:	
   974  04EE  1283               	bcf	3,5	;RP0=0, select bank0
   975  04EF  1303               	bcf	3,6	;RP1=0, select bank0
   976  04F0  085D               	movf	_bVOLTAGE+1,w
   977  04F1  3A80               	xorlw	128
   978  04F2  00FF               	movwf	btemp+1
   979  04F3  3081               	movlw	129
   980  04F4  027F               	subwf	btemp+1,w
   981  04F5  1D03               	skipz
   982  04F6  2CF9               	goto	u2275
   983  04F7  3071               	movlw	113
   984  04F8  025C               	subwf	_bVOLTAGE,w
   985  04F9                     u2275:	
   986  04F9  1803               	skipnc
   987  04FA  2CFC               	goto	u2271
   988  04FB  2CFD               	goto	u2270
   989  04FC                     u2271:	
   990  04FC  2D01               	goto	l144
   991  04FD                     u2270:	
   992  04FD                     l146:	
   993  04FD  1283               	bcf	3,5	;RP0=0, select bank0
   994  04FE  1303               	bcf	3,6	;RP1=0, select bank0
   995  04FF  1486               	bsf	6,1	;volatile
   996  0500  2D04               	goto	l1906
   997  0501                     l144:	
   998                           ;main.c: 93:         else RB1=0;
   999                           
  1000  0501  1283               	bcf	3,5	;RP0=0, select bank0
  1001  0502  1303               	bcf	3,6	;RP1=0, select bank0
  1002  0503  1086               	bcf	6,1	;volatile
  1003  0504                     l1906:	
  1004                           
  1005                           ;main.c: 94:         _delay((unsigned long)((20)*(20000000/4000000.0)));
  1006  0504  3020               	movlw	32
  1007  0505  1283               	bcf	3,5	;RP0=0, select bank0
  1008  0506  1303               	bcf	3,6	;RP1=0, select bank0
  1009  0507  00C5               	movwf	??_main
  1010  0508                     u2637:	
  1011  0508  0BC5               	decfsz	??_main,f
  1012  0509  2D08               	goto	u2637
  1013  050A  0000               	nop
  1014  050B                     l1908:	
  1015                           
  1016                           ;main.c: 95:         ADCON0bits.CHS=2;
  1017  050B  1283               	bcf	3,5	;RP0=0, select bank0
  1018  050C  1303               	bcf	3,6	;RP1=0, select bank0
  1019  050D  081F               	movf	31,w	;volatile
  1020  050E  39C7               	andlw	-57
  1021  050F  3810               	iorlw	16
  1022  0510  009F               	movwf	31	;volatile
  1023  0511                     l1910:	
  1024                           
  1025                           ;main.c: 96:         ADCON0bits.GO_nDONE=1;
  1026  0511  151F               	bsf	31,2	;volatile
  1027  0512                     l148:	
  1028                           ;main.c: 97:         while(ADCON0bits.GO_nDONE);
  1029                           
  1030  0512  191F               	btfsc	31,2	;volatile
  1031  0513  2D15               	goto	u2281
  1032  0514  2D16               	goto	u2280
  1033  0515                     u2281:	
  1034  0515  2D12               	goto	l148
  1035  0516                     u2280:	
  1036  0516                     l1912:	
  1037                           
  1038                           ;main.c: 98:         cVOLTAGE=(ADRESH<<8)+ADRESL;
  1039  0516  081E               	movf	30,w	;volatile
  1040  0517  00DB               	movwf	_cVOLTAGE+1
  1041  0518  1683               	bsf	3,5	;RP0=1, select bank1
  1042  0519  1303               	bcf	3,6	;RP1=0, select bank1
  1043  051A  081E               	movf	30,w	;volatile
  1044  051B  1283               	bcf	3,5	;RP0=0, select bank0
  1045  051C  1303               	bcf	3,6	;RP1=0, select bank0
  1046  051D  00DA               	movwf	_cVOLTAGE
  1047  051E                     l1914:	
  1048                           
  1049                           ;main.c: 99:         if((cVOLTAGE>=720)||(cVOLTAGE<=368))RB2=1;
  1050  051E  085B               	movf	_cVOLTAGE+1,w
  1051  051F  3A80               	xorlw	128
  1052  0520  00FF               	movwf	btemp+1
  1053  0521  3082               	movlw	130
  1054  0522  027F               	subwf	btemp+1,w
  1055  0523  1D03               	skipz
  1056  0524  2D27               	goto	u2295
  1057  0525  30D0               	movlw	208
  1058  0526  025A               	subwf	_cVOLTAGE,w
  1059  0527                     u2295:	
  1060  0527  1803               	skipnc
  1061  0528  2D2A               	goto	u2291
  1062  0529  2D2B               	goto	u2290
  1063  052A                     u2291:	
  1064  052A  2D3A               	goto	l153
  1065  052B                     u2290:	
  1066  052B                     l1916:	
  1067  052B  1283               	bcf	3,5	;RP0=0, select bank0
  1068  052C  1303               	bcf	3,6	;RP1=0, select bank0
  1069  052D  085B               	movf	_cVOLTAGE+1,w
  1070  052E  3A80               	xorlw	128
  1071  052F  00FF               	movwf	btemp+1
  1072  0530  3081               	movlw	129
  1073  0531  027F               	subwf	btemp+1,w
  1074  0532  1D03               	skipz
  1075  0533  2D36               	goto	u2305
  1076  0534  3071               	movlw	113
  1077  0535  025A               	subwf	_cVOLTAGE,w
  1078  0536                     u2305:	
  1079  0536  1803               	skipnc
  1080  0537  2D39               	goto	u2301
  1081  0538  2D3A               	goto	u2300
  1082  0539                     u2301:	
  1083  0539  2D3E               	goto	l151
  1084  053A                     u2300:	
  1085  053A                     l153:	
  1086  053A  1283               	bcf	3,5	;RP0=0, select bank0
  1087  053B  1303               	bcf	3,6	;RP1=0, select bank0
  1088  053C  1506               	bsf	6,2	;volatile
  1089  053D  2D41               	goto	l1918
  1090  053E                     l151:	
  1091                           ;main.c: 100:         else RB2=0;
  1092                           
  1093  053E  1283               	bcf	3,5	;RP0=0, select bank0
  1094  053F  1303               	bcf	3,6	;RP1=0, select bank0
  1095  0540  1106               	bcf	6,2	;volatile
  1096  0541                     l1918:	
  1097                           
  1098                           ;main.c: 101:         _delay((unsigned long)((20)*(20000000/4000000.0)));
  1099  0541  3020               	movlw	32
  1100  0542  1283               	bcf	3,5	;RP0=0, select bank0
  1101  0543  1303               	bcf	3,6	;RP1=0, select bank0
  1102  0544  00C5               	movwf	??_main
  1103  0545                     u2647:	
  1104  0545  0BC5               	decfsz	??_main,f
  1105  0546  2D45               	goto	u2647
  1106  0547  0000               	nop
  1107  0548                     l1920:	
  1108                           
  1109                           ;main.c: 104:         if(RB6){
  1110  0548  1283               	bcf	3,5	;RP0=0, select bank0
  1111  0549  1303               	bcf	3,6	;RP1=0, select bank0
  1112  054A  1F06               	btfss	6,6	;volatile
  1113  054B  2D4D               	goto	u2311
  1114  054C  2D4E               	goto	u2310
  1115  054D                     u2311:	
  1116  054D  2DB9               	goto	l155
  1117  054E                     u2310:	
  1118  054E                     l1922:	
  1119                           
  1120                           ;main.c: 105:             if((aVOLTAGE>=bVOLTAGE)&&(RB0==0)){
  1121  054E  085F               	movf	_aVOLTAGE+1,w
  1122  054F  3A80               	xorlw	128
  1123  0550  00C5               	movwf	??_main
  1124  0551  085D               	movf	_bVOLTAGE+1,w
  1125  0552  3A80               	xorlw	128
  1126  0553  0245               	subwf	??_main,w
  1127  0554  1D03               	skipz
  1128  0555  2D58               	goto	u2325
  1129  0556  085C               	movf	_bVOLTAGE,w
  1130  0557  025E               	subwf	_aVOLTAGE,w
  1131  0558                     u2325:	
  1132  0558  1C03               	skipc
  1133  0559  2D5B               	goto	u2321
  1134  055A  2D5C               	goto	u2320
  1135  055B                     u2321:	
  1136  055B  2D88               	goto	l1934
  1137  055C                     u2320:	
  1138  055C                     l1924:	
  1139  055C  1283               	bcf	3,5	;RP0=0, select bank0
  1140  055D  1303               	bcf	3,6	;RP1=0, select bank0
  1141  055E  1806               	btfsc	6,0	;volatile
  1142  055F  2D61               	goto	u2331
  1143  0560  2D62               	goto	u2330
  1144  0561                     u2331:	
  1145  0561  2D88               	goto	l1934
  1146  0562                     u2330:	
  1147  0562                     l1926:	
  1148                           
  1149                           ;main.c: 106:                 if(aVOLTAGE>cVOLTAGE)aON();
  1150  0562  085B               	movf	_cVOLTAGE+1,w
  1151  0563  3A80               	xorlw	128
  1152  0564  00C5               	movwf	??_main
  1153  0565  085F               	movf	_aVOLTAGE+1,w
  1154  0566  3A80               	xorlw	128
  1155  0567  0245               	subwf	??_main,w
  1156  0568  1D03               	skipz
  1157  0569  2D6C               	goto	u2345
  1158  056A  085E               	movf	_aVOLTAGE,w
  1159  056B  025A               	subwf	_cVOLTAGE,w
  1160  056C                     u2345:	
  1161  056C  1803               	skipnc
  1162  056D  2D6F               	goto	u2341
  1163  056E  2D70               	goto	u2340
  1164  056F                     u2341:	
  1165  056F  2D76               	goto	l157
  1166  0570                     u2340:	
  1167  0570                     l1928:	
  1168  0570  120A  158A  2456  120A  118A  	fcall	_aON
  1169  0575  2E22               	goto	l1978
  1170  0576                     l157:	
  1171                           ;main.c: 107:                 else if(RB2==0)cON();
  1172                           
  1173  0576  1283               	bcf	3,5	;RP0=0, select bank0
  1174  0577  1303               	bcf	3,6	;RP1=0, select bank0
  1175  0578  1906               	btfsc	6,2	;volatile
  1176  0579  2D7B               	goto	u2351
  1177  057A  2D7C               	goto	u2350
  1178  057B                     u2351:	
  1179  057B  2D82               	goto	l1932
  1180  057C                     u2350:	
  1181  057C                     l1930:	
  1182  057C  120A  118A  2004  120A  118A  	fcall	_cON
  1183  0581  2E22               	goto	l1978
  1184  0582                     l1932:	
  1185  0582  120A  158A  2450  120A  118A  	fcall	_OFF
  1186  0587  2E22               	goto	l1978
  1187  0588                     l1934:	
  1188  0588  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0589  1303               	bcf	3,6	;RP1=0, select bank0
  1190  058A  085D               	movf	_bVOLTAGE+1,w
  1191  058B  3A80               	xorlw	128
  1192  058C  00C5               	movwf	??_main
  1193  058D  085F               	movf	_aVOLTAGE+1,w
  1194  058E  3A80               	xorlw	128
  1195  058F  0245               	subwf	??_main,w
  1196  0590  1D03               	skipz
  1197  0591  2D94               	goto	u2365
  1198  0592  085E               	movf	_aVOLTAGE,w
  1199  0593  025C               	subwf	_bVOLTAGE,w
  1200  0594                     u2365:	
  1201  0594  1C03               	skipc
  1202  0595  2D97               	goto	u2361
  1203  0596  2D98               	goto	u2360
  1204  0597                     u2361:	
  1205  0597  2E22               	goto	l1978
  1206  0598                     u2360:	
  1207  0598                     l1936:	
  1208  0598  1283               	bcf	3,5	;RP0=0, select bank0
  1209  0599  1303               	bcf	3,6	;RP1=0, select bank0
  1210  059A  1886               	btfsc	6,1	;volatile
  1211  059B  2D9D               	goto	u2371
  1212  059C  2D9E               	goto	u2370
  1213  059D                     u2371:	
  1214  059D  2E22               	goto	l1978
  1215  059E                     u2370:	
  1216  059E                     l1938:	
  1217                           
  1218                           ;main.c: 110:                 if(bVOLTAGE>cVOLTAGE)bON();
  1219  059E  085B               	movf	_cVOLTAGE+1,w
  1220  059F  3A80               	xorlw	128
  1221  05A0  00C5               	movwf	??_main
  1222  05A1  085D               	movf	_bVOLTAGE+1,w
  1223  05A2  3A80               	xorlw	128
  1224  05A3  0245               	subwf	??_main,w
  1225  05A4  1D03               	skipz
  1226  05A5  2DA8               	goto	u2385
  1227  05A6  085C               	movf	_bVOLTAGE,w
  1228  05A7  025A               	subwf	_cVOLTAGE,w
  1229  05A8                     u2385:	
  1230  05A8  1803               	skipnc
  1231  05A9  2DAB               	goto	u2381
  1232  05AA  2DAC               	goto	u2380
  1233  05AB                     u2381:	
  1234  05AB  2DB2               	goto	l163
  1235  05AC                     u2380:	
  1236  05AC                     l1940:	
  1237  05AC  120A  158A  245C  120A  118A  	fcall	_bON
  1238  05B1  2E22               	goto	l1978
  1239  05B2                     l163:	
  1240                           ;main.c: 111:                 else if(RB2==0)cON();
  1241                           
  1242  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  1243  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  1244  05B4  1906               	btfsc	6,2	;volatile
  1245  05B5  2DB7               	goto	u2391
  1246  05B6  2DB8               	goto	u2390
  1247  05B7                     u2391:	
  1248  05B7  2D82               	goto	l1932
  1249  05B8                     u2390:	
  1250  05B8  2D7C               	goto	l1930
  1251  05B9                     l155:	
  1252  05B9  1F86               	btfss	6,7	;volatile
  1253  05BA  2DBC               	goto	u2401
  1254  05BB  2DBD               	goto	u2400
  1255  05BC                     u2401:	
  1256  05BC  2E13               	goto	l168
  1257  05BD                     u2400:	
  1258  05BD                     l1946:	
  1259                           
  1260                           ;main.c: 115:             if((aVOLTAGE<=bVOLTAGE)&&(RB0==0)){
  1261  05BD  085D               	movf	_bVOLTAGE+1,w
  1262  05BE  3A80               	xorlw	128
  1263  05BF  00C5               	movwf	??_main
  1264  05C0  085F               	movf	_aVOLTAGE+1,w
  1265  05C1  3A80               	xorlw	128
  1266  05C2  0245               	subwf	??_main,w
  1267  05C3  1D03               	skipz
  1268  05C4  2DC7               	goto	u2415
  1269  05C5  085E               	movf	_aVOLTAGE,w
  1270  05C6  025C               	subwf	_bVOLTAGE,w
  1271  05C7                     u2415:	
  1272  05C7  1C03               	skipc
  1273  05C8  2DCA               	goto	u2411
  1274  05C9  2DCB               	goto	u2410
  1275  05CA                     u2411:	
  1276  05CA  2DE7               	goto	l1958
  1277  05CB                     u2410:	
  1278  05CB                     l1948:	
  1279  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  1280  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  1281  05CD  1806               	btfsc	6,0	;volatile
  1282  05CE  2DD0               	goto	u2421
  1283  05CF  2DD1               	goto	u2420
  1284  05D0                     u2421:	
  1285  05D0  2DE7               	goto	l1958
  1286  05D1                     u2420:	
  1287  05D1                     l1950:	
  1288                           
  1289                           ;main.c: 116:                 if(aVOLTAGE<cVOLTAGE)aON();
  1290  05D1  085F               	movf	_aVOLTAGE+1,w
  1291  05D2  3A80               	xorlw	128
  1292  05D3  00C5               	movwf	??_main
  1293  05D4  085B               	movf	_cVOLTAGE+1,w
  1294  05D5  3A80               	xorlw	128
  1295  05D6  0245               	subwf	??_main,w
  1296  05D7  1D03               	skipz
  1297  05D8  2DDB               	goto	u2435
  1298  05D9  085A               	movf	_cVOLTAGE,w
  1299  05DA  025E               	subwf	_aVOLTAGE,w
  1300  05DB                     u2435:	
  1301  05DB  1803               	skipnc
  1302  05DC  2DDE               	goto	u2431
  1303  05DD  2DDF               	goto	u2430
  1304  05DE                     u2431:	
  1305  05DE  2DE0               	goto	l170
  1306  05DF                     u2430:	
  1307  05DF  2D70               	goto	l1928
  1308  05E0                     l170:	
  1309                           ;main.c: 117:                 else if(RB2==0)cON();
  1310                           
  1311  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  1312  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  1313  05E2  1906               	btfsc	6,2	;volatile
  1314  05E3  2DE5               	goto	u2441
  1315  05E4  2DE6               	goto	u2440
  1316  05E5                     u2441:	
  1317  05E5  2D82               	goto	l1932
  1318  05E6                     u2440:	
  1319  05E6  2D7C               	goto	l1930
  1320  05E7                     l1958:	
  1321  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  1322  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  1323  05E9  085F               	movf	_aVOLTAGE+1,w
  1324  05EA  3A80               	xorlw	128
  1325  05EB  00C5               	movwf	??_main
  1326  05EC  085D               	movf	_bVOLTAGE+1,w
  1327  05ED  3A80               	xorlw	128
  1328  05EE  0245               	subwf	??_main,w
  1329  05EF  1D03               	skipz
  1330  05F0  2DF3               	goto	u2455
  1331  05F1  085C               	movf	_bVOLTAGE,w
  1332  05F2  025E               	subwf	_aVOLTAGE,w
  1333  05F3                     u2455:	
  1334  05F3  1C03               	skipc
  1335  05F4  2DF6               	goto	u2451
  1336  05F5  2DF7               	goto	u2450
  1337  05F6                     u2451:	
  1338  05F6  2E22               	goto	l1978
  1339  05F7                     u2450:	
  1340  05F7                     l1960:	
  1341  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  1342  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  1343  05F9  1886               	btfsc	6,1	;volatile
  1344  05FA  2DFC               	goto	u2461
  1345  05FB  2DFD               	goto	u2460
  1346  05FC                     u2461:	
  1347  05FC  2E22               	goto	l1978
  1348  05FD                     u2460:	
  1349  05FD                     l1962:	
  1350                           
  1351                           ;main.c: 120:                 if(bVOLTAGE<cVOLTAGE)bON();
  1352  05FD  085D               	movf	_bVOLTAGE+1,w
  1353  05FE  3A80               	xorlw	128
  1354  05FF  00C5               	movwf	??_main
  1355  0600  085B               	movf	_cVOLTAGE+1,w
  1356  0601  3A80               	xorlw	128
  1357  0602  0245               	subwf	??_main,w
  1358  0603  1D03               	skipz
  1359  0604  2E07               	goto	u2475
  1360  0605  085A               	movf	_cVOLTAGE,w
  1361  0606  025C               	subwf	_bVOLTAGE,w
  1362  0607                     u2475:	
  1363  0607  1803               	skipnc
  1364  0608  2E0A               	goto	u2471
  1365  0609  2E0B               	goto	u2470
  1366  060A                     u2471:	
  1367  060A  2E0C               	goto	l176
  1368  060B                     u2470:	
  1369  060B  2DAC               	goto	l1940
  1370  060C                     l176:	
  1371                           ;main.c: 121:                 else if(RB2==0)cON();
  1372                           
  1373  060C  1283               	bcf	3,5	;RP0=0, select bank0
  1374  060D  1303               	bcf	3,6	;RP1=0, select bank0
  1375  060E  1906               	btfsc	6,2	;volatile
  1376  060F  2E11               	goto	u2481
  1377  0610  2E12               	goto	u2480
  1378  0611                     u2481:	
  1379  0611  2D82               	goto	l1932
  1380  0612                     u2480:	
  1381  0612  2D7C               	goto	l1930
  1382  0613                     l168:	
  1383                           
  1384                           ;main.c: 125:             if(RB0==0)aON();
  1385  0613  1806               	btfsc	6,0	;volatile
  1386  0614  2E16               	goto	u2491
  1387  0615  2E17               	goto	u2490
  1388  0616                     u2491:	
  1389  0616  2E18               	goto	l181
  1390  0617                     u2490:	
  1391  0617  2D70               	goto	l1928
  1392  0618                     l181:	
  1393                           ;main.c: 126:             else if(RB1==0)bON();
  1394                           
  1395  0618  1886               	btfsc	6,1	;volatile
  1396  0619  2E1B               	goto	u2501
  1397  061A  2E1C               	goto	u2500
  1398  061B                     u2501:	
  1399  061B  2E1D               	goto	l183
  1400  061C                     u2500:	
  1401  061C  2DAC               	goto	l1940
  1402  061D                     l183:	
  1403                           ;main.c: 127:             else if(RB2==0)cON();
  1404                           
  1405  061D  1906               	btfsc	6,2	;volatile
  1406  061E  2E20               	goto	u2511
  1407  061F  2E21               	goto	u2510
  1408  0620                     u2511:	
  1409  0620  2D82               	goto	l1932
  1410  0621                     u2510:	
  1411  0621  2D7C               	goto	l1930
  1412  0622                     l1978:	
  1413                           
  1414                           ;main.c: 132:         Lcd_Clear();
  1415  0622  120A  158A  246A  120A  118A  	fcall	_Lcd_Clear
  1416  0627                     l1980:	
  1417                           
  1418                           ;main.c: 133:         Lcd_Set_Cursor(1,5);
  1419  0627  3005               	movlw	5
  1420  0628  1283               	bcf	3,5	;RP0=0, select bank0
  1421  0629  1303               	bcf	3,6	;RP1=0, select bank0
  1422  062A  00C5               	movwf	??_main
  1423  062B  0845               	movf	??_main,w
  1424  062C  00F4               	movwf	Lcd_Set_Cursor@b
  1425  062D  3001               	movlw	1
  1426  062E  120A  158A  255D  120A  118A  	fcall	_Lcd_Set_Cursor
  1427  0633                     l1982:	
  1428                           
  1429                           ;main.c: 134:         ADCON0bits.CHS=3;
  1430  0633  1283               	bcf	3,5	;RP0=0, select bank0
  1431  0634  1303               	bcf	3,6	;RP1=0, select bank0
  1432  0635  081F               	movf	31,w	;volatile
  1433  0636  39C7               	andlw	-57
  1434  0637  3818               	iorlw	24
  1435  0638  009F               	movwf	31	;volatile
  1436  0639                     l1984:	
  1437                           
  1438                           ;main.c: 135:         for(int i=0;i<100;i++){
  1439  0639  01C8               	clrf	main@i
  1440  063A  01C9               	clrf	main@i+1
  1441  063B                     l187:	
  1442                           
  1443                           ;main.c: 136:             ADCON0bits.GO_nDONE=1;
  1444  063B  1283               	bcf	3,5	;RP0=0, select bank0
  1445  063C  1303               	bcf	3,6	;RP1=0, select bank0
  1446  063D  151F               	bsf	31,2	;volatile
  1447  063E                     l189:	
  1448                           ;main.c: 137:             while(ADCON0bits.GO_nDONE);
  1449                           
  1450  063E  191F               	btfsc	31,2	;volatile
  1451  063F  2E41               	goto	u2521
  1452  0640  2E42               	goto	u2520
  1453  0641                     u2521:	
  1454  0641  2E3E               	goto	l189
  1455  0642                     u2520:	
  1456  0642                     l1990:	
  1457                           
  1458                           ;main.c: 138:             current=(ADRESH<<8)+ADRESL;
  1459  0642  081E               	movf	30,w	;volatile
  1460  0643  00D7               	movwf	_current+1
  1461  0644  1683               	bsf	3,5	;RP0=1, select bank1
  1462  0645  1303               	bcf	3,6	;RP1=0, select bank1
  1463  0646  081E               	movf	30,w	;volatile
  1464  0647  1283               	bcf	3,5	;RP0=0, select bank0
  1465  0648  1303               	bcf	3,6	;RP1=0, select bank0
  1466  0649  00D6               	movwf	_current
  1467                           
  1468                           ;main.c: 139:             if(current>max_current)max_current=current;
  1469  064A  0853               	movf	_max_current+1,w
  1470  064B  3A80               	xorlw	128
  1471  064C  00C5               	movwf	??_main
  1472  064D  0857               	movf	_current+1,w
  1473  064E  3A80               	xorlw	128
  1474  064F  0245               	subwf	??_main,w
  1475  0650  1D03               	skipz
  1476  0651  2E54               	goto	u2535
  1477  0652  0856               	movf	_current,w
  1478  0653  0252               	subwf	_max_current,w
  1479  0654                     u2535:	
  1480  0654  1803               	skipnc
  1481  0655  2E57               	goto	u2531
  1482  0656  2E58               	goto	u2530
  1483  0657                     u2531:	
  1484  0657  2E5E               	goto	l192
  1485  0658                     u2530:	
  1486  0658                     l1992:	
  1487  0658  1283               	bcf	3,5	;RP0=0, select bank0
  1488  0659  1303               	bcf	3,6	;RP1=0, select bank0
  1489  065A  0857               	movf	_current+1,w
  1490  065B  00D3               	movwf	_max_current+1
  1491  065C  0856               	movf	_current,w
  1492  065D  00D2               	movwf	_max_current
  1493  065E                     l192:	
  1494                           
  1495                           ;main.c: 140:             if(current<min_current)min_current=current;
  1496  065E  1283               	bcf	3,5	;RP0=0, select bank0
  1497  065F  1303               	bcf	3,6	;RP1=0, select bank0
  1498  0660  0857               	movf	_current+1,w
  1499  0661  3A80               	xorlw	128
  1500  0662  00C5               	movwf	??_main
  1501  0663  0851               	movf	_min_current+1,w
  1502  0664  3A80               	xorlw	128
  1503  0665  0245               	subwf	??_main,w
  1504  0666  1D03               	skipz
  1505  0667  2E6A               	goto	u2545
  1506  0668  0850               	movf	_min_current,w
  1507  0669  0256               	subwf	_current,w
  1508  066A                     u2545:	
  1509  066A  1803               	skipnc
  1510  066B  2E6D               	goto	u2541
  1511  066C  2E6E               	goto	u2540
  1512  066D                     u2541:	
  1513  066D  2E74               	goto	l193
  1514  066E                     u2540:	
  1515  066E                     l1994:	
  1516  066E  1283               	bcf	3,5	;RP0=0, select bank0
  1517  066F  1303               	bcf	3,6	;RP1=0, select bank0
  1518  0670  0857               	movf	_current+1,w
  1519  0671  00D1               	movwf	_min_current+1
  1520  0672  0856               	movf	_current,w
  1521  0673  00D0               	movwf	_min_current
  1522  0674                     l193:	
  1523                           
  1524                           ;main.c: 141:             _delay((unsigned long)((190)*(20000000/4000000.0)));
  1525  0674  30BD               	movlw	189
  1526  0675  1283               	bcf	3,5	;RP0=0, select bank0
  1527  0676  1303               	bcf	3,6	;RP1=0, select bank0
  1528  0677  00C5               	movwf	??_main
  1529  0678                     u2657:	
  1530  0678  2E79               	nop2
  1531  0679  0BC5               	decfsz	??_main,f
  1532  067A  2E78               	goto	u2657
  1533  067B  2E7C               	nop2
  1534                           
  1535                           ;main.c: 142:         }
  1536  067C  3001               	movlw	1
  1537  067D  1283               	bcf	3,5	;RP0=0, select bank0
  1538  067E  1303               	bcf	3,6	;RP1=0, select bank0
  1539  067F  07C8               	addwf	main@i,f
  1540  0680  1803               	skipnc
  1541  0681  0AC9               	incf	main@i+1,f
  1542  0682  3000               	movlw	0
  1543  0683  07C9               	addwf	main@i+1,f
  1544  0684                     l1996:	
  1545  0684  0849               	movf	main@i+1,w
  1546  0685  3A80               	xorlw	128
  1547  0686  00FF               	movwf	btemp+1
  1548  0687  3080               	movlw	128
  1549  0688  027F               	subwf	btemp+1,w
  1550  0689  1D03               	skipz
  1551  068A  2E8D               	goto	u2555
  1552  068B  3064               	movlw	100
  1553  068C  0248               	subwf	main@i,w
  1554  068D                     u2555:	
  1555  068D  1C03               	skipc
  1556  068E  2E90               	goto	u2551
  1557  068F  2E91               	goto	u2550
  1558  0690                     u2551:	
  1559  0690  2E3B               	goto	l187
  1560  0691                     u2550:	
  1561  0691                     l1998:	
  1562                           
  1563                           ;main.c: 143:         current=(max_current-min_current)/2;
  1564  0691  3002               	movlw	2
  1565  0692  00F0               	movwf	___awdiv@divisor
  1566  0693  3000               	movlw	0
  1567  0694  00F1               	movwf	___awdiv@divisor+1
  1568  0695  1283               	bcf	3,5	;RP0=0, select bank0
  1569  0696  1303               	bcf	3,6	;RP1=0, select bank0
  1570  0697  0850               	movf	_min_current,w
  1571  0698  0252               	subwf	_max_current,w
  1572  0699  00F2               	movwf	___awdiv@dividend
  1573  069A  0851               	movf	_min_current+1,w
  1574  069B  1C03               	skipc
  1575  069C  0A51               	incf	_min_current+1,w
  1576  069D  0253               	subwf	_max_current+1,w
  1577  069E  00F3               	movwf	___awdiv@dividend+1
  1578  069F  120A  158A  260D  120A  118A  	fcall	___awdiv
  1579  06A4  0871               	movf	?___awdiv+1,w
  1580  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  1581  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  1582  06A7  00D7               	movwf	_current+1
  1583  06A8  0870               	movf	?___awdiv,w
  1584  06A9  00D6               	movwf	_current
  1585  06AA                     l2000:	
  1586                           
  1587                           ;main.c: 144:         if(RB3==1){
  1588  06AA  1D86               	btfss	6,3	;volatile
  1589  06AB  2EAD               	goto	u2561
  1590  06AC  2EAE               	goto	u2560
  1591  06AD                     u2561:	
  1592  06AD  2EF0               	goto	l194
  1593  06AE                     u2560:	
  1594  06AE                     l2002:	
  1595                           
  1596                           ;main.c: 145:             voltage=0.5*aVOLTAGE;
  1597  06AE  085E               	movf	_aVOLTAGE,w
  1598  06AF  00F0               	movwf	___xxtofl@val
  1599  06B0  085F               	movf	_aVOLTAGE+1,w
  1600  06B1  00F1               	movwf	___xxtofl@val+1
  1601  06B2  3000               	movlw	0
  1602  06B3  1BF1               	btfsc	___xxtofl@val+1,7
  1603  06B4  30FF               	movlw	255
  1604  06B5  00F2               	movwf	___xxtofl@val+2
  1605  06B6  00F3               	movwf	___xxtofl@val+3
  1606  06B7  3001               	movlw	1
  1607  06B8  120A  118A  200A  120A  118A  	fcall	___xxtofl
  1608  06BD  0873               	movf	?___xxtofl+3,w
  1609  06BE  1283               	bcf	3,5	;RP0=0, select bank0
  1610  06BF  1303               	bcf	3,6	;RP1=0, select bank0
  1611  06C0  00A7               	movwf	___flmul@a+3
  1612  06C1  0872               	movf	?___xxtofl+2,w
  1613  06C2  00A6               	movwf	___flmul@a+2
  1614  06C3  0871               	movf	?___xxtofl+1,w
  1615  06C4  00A5               	movwf	___flmul@a+1
  1616  06C5  0870               	movf	?___xxtofl,w
  1617  06C6  00A4               	movwf	___flmul@a
  1618  06C7  303F               	movlw	63
  1619  06C8  00A3               	movwf	___flmul@b+3
  1620  06C9  3000               	movlw	0
  1621  06CA  00A2               	movwf	___flmul@b+2
  1622  06CB  3000               	movlw	0
  1623  06CC  00A1               	movwf	___flmul@b+1
  1624  06CD  3000               	movlw	0
  1625  06CE  00A0               	movwf	___flmul@b
  1626  06CF  120A  118A  20C4  120A  118A  	fcall	___flmul
  1627  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  1628  06D5  1303               	bcf	3,6	;RP1=0, select bank0
  1629  06D6  0823               	movf	?___flmul+3,w
  1630  06D7  00BD               	movwf	___fltol@f1+3
  1631  06D8  0822               	movf	?___flmul+2,w
  1632  06D9  00BC               	movwf	___fltol@f1+2
  1633  06DA  0821               	movf	?___flmul+1,w
  1634  06DB  00BB               	movwf	___fltol@f1+1
  1635  06DC  0820               	movf	?___flmul,w
  1636  06DD  00BA               	movwf	___fltol@f1
  1637  06DE  120A  158A  2674  120A  118A  	fcall	___fltol
  1638  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1639  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1640  06E5  083B               	movf	?___fltol+1,w
  1641  06E6  00D9               	movwf	_voltage+1
  1642  06E7  083A               	movf	?___fltol,w
  1643  06E8  00D8               	movwf	_voltage
  1644  06E9                     l2004:	
  1645                           
  1646                           ;main.c: 146:             Lcd_Write_String("A-");
  1647  06E9  302B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1648  06EA  120A  158A  24D8  120A  118A  	fcall	_Lcd_Write_String
  1649                           
  1650                           ;main.c: 147:         }else if(RB4==1){
  1651  06EF  2F84               	goto	l2018
  1652  06F0                     l194:	
  1653  06F0  1E06               	btfss	6,4	;volatile
  1654  06F1  2EF3               	goto	u2571
  1655  06F2  2EF4               	goto	u2570
  1656  06F3                     u2571:	
  1657  06F3  2F36               	goto	l196
  1658  06F4                     u2570:	
  1659  06F4                     l2006:	
  1660                           
  1661                           ;main.c: 148:             voltage=0.5*bVOLTAGE;
  1662  06F4  085C               	movf	_bVOLTAGE,w
  1663  06F5  00F0               	movwf	___xxtofl@val
  1664  06F6  085D               	movf	_bVOLTAGE+1,w
  1665  06F7  00F1               	movwf	___xxtofl@val+1
  1666  06F8  3000               	movlw	0
  1667  06F9  1BF1               	btfsc	___xxtofl@val+1,7
  1668  06FA  30FF               	movlw	255
  1669  06FB  00F2               	movwf	___xxtofl@val+2
  1670  06FC  00F3               	movwf	___xxtofl@val+3
  1671  06FD  3001               	movlw	1
  1672  06FE  120A  118A  200A  120A  118A  	fcall	___xxtofl
  1673  0703  0873               	movf	?___xxtofl+3,w
  1674  0704  1283               	bcf	3,5	;RP0=0, select bank0
  1675  0705  1303               	bcf	3,6	;RP1=0, select bank0
  1676  0706  00A7               	movwf	___flmul@a+3
  1677  0707  0872               	movf	?___xxtofl+2,w
  1678  0708  00A6               	movwf	___flmul@a+2
  1679  0709  0871               	movf	?___xxtofl+1,w
  1680  070A  00A5               	movwf	___flmul@a+1
  1681  070B  0870               	movf	?___xxtofl,w
  1682  070C  00A4               	movwf	___flmul@a
  1683  070D  303F               	movlw	63
  1684  070E  00A3               	movwf	___flmul@b+3
  1685  070F  3000               	movlw	0
  1686  0710  00A2               	movwf	___flmul@b+2
  1687  0711  3000               	movlw	0
  1688  0712  00A1               	movwf	___flmul@b+1
  1689  0713  3000               	movlw	0
  1690  0714  00A0               	movwf	___flmul@b
  1691  0715  120A  118A  20C4  120A  118A  	fcall	___flmul
  1692  071A  1283               	bcf	3,5	;RP0=0, select bank0
  1693  071B  1303               	bcf	3,6	;RP1=0, select bank0
  1694  071C  0823               	movf	?___flmul+3,w
  1695  071D  00BD               	movwf	___fltol@f1+3
  1696  071E  0822               	movf	?___flmul+2,w
  1697  071F  00BC               	movwf	___fltol@f1+2
  1698  0720  0821               	movf	?___flmul+1,w
  1699  0721  00BB               	movwf	___fltol@f1+1
  1700  0722  0820               	movf	?___flmul,w
  1701  0723  00BA               	movwf	___fltol@f1
  1702  0724  120A  158A  2674  120A  118A  	fcall	___fltol
  1703  0729  1283               	bcf	3,5	;RP0=0, select bank0
  1704  072A  1303               	bcf	3,6	;RP1=0, select bank0
  1705  072B  083B               	movf	?___fltol+1,w
  1706  072C  00D9               	movwf	_voltage+1
  1707  072D  083A               	movf	?___fltol,w
  1708  072E  00D8               	movwf	_voltage
  1709  072F                     l2008:	
  1710                           
  1711                           ;main.c: 149:             Lcd_Write_String("B-");
  1712  072F  302E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1713  0730  120A  158A  24D8  120A  118A  	fcall	_Lcd_Write_String
  1714                           
  1715                           ;main.c: 150:         }else if(RB5==1){
  1716  0735  2F84               	goto	l2018
  1717  0736                     l196:	
  1718  0736  1E86               	btfss	6,5	;volatile
  1719  0737  2F39               	goto	u2581
  1720  0738  2F3A               	goto	u2580
  1721  0739                     u2581:	
  1722  0739  2F7C               	goto	l2014
  1723  073A                     u2580:	
  1724  073A                     l2010:	
  1725                           
  1726                           ;main.c: 151:             voltage=0.5*cVOLTAGE;
  1727  073A  085A               	movf	_cVOLTAGE,w
  1728  073B  00F0               	movwf	___xxtofl@val
  1729  073C  085B               	movf	_cVOLTAGE+1,w
  1730  073D  00F1               	movwf	___xxtofl@val+1
  1731  073E  3000               	movlw	0
  1732  073F  1BF1               	btfsc	___xxtofl@val+1,7
  1733  0740  30FF               	movlw	255
  1734  0741  00F2               	movwf	___xxtofl@val+2
  1735  0742  00F3               	movwf	___xxtofl@val+3
  1736  0743  3001               	movlw	1
  1737  0744  120A  118A  200A  120A  118A  	fcall	___xxtofl
  1738  0749  0873               	movf	?___xxtofl+3,w
  1739  074A  1283               	bcf	3,5	;RP0=0, select bank0
  1740  074B  1303               	bcf	3,6	;RP1=0, select bank0
  1741  074C  00A7               	movwf	___flmul@a+3
  1742  074D  0872               	movf	?___xxtofl+2,w
  1743  074E  00A6               	movwf	___flmul@a+2
  1744  074F  0871               	movf	?___xxtofl+1,w
  1745  0750  00A5               	movwf	___flmul@a+1
  1746  0751  0870               	movf	?___xxtofl,w
  1747  0752  00A4               	movwf	___flmul@a
  1748  0753  303F               	movlw	63
  1749  0754  00A3               	movwf	___flmul@b+3
  1750  0755  3000               	movlw	0
  1751  0756  00A2               	movwf	___flmul@b+2
  1752  0757  3000               	movlw	0
  1753  0758  00A1               	movwf	___flmul@b+1
  1754  0759  3000               	movlw	0
  1755  075A  00A0               	movwf	___flmul@b
  1756  075B  120A  118A  20C4  120A  118A  	fcall	___flmul
  1757  0760  1283               	bcf	3,5	;RP0=0, select bank0
  1758  0761  1303               	bcf	3,6	;RP1=0, select bank0
  1759  0762  0823               	movf	?___flmul+3,w
  1760  0763  00BD               	movwf	___fltol@f1+3
  1761  0764  0822               	movf	?___flmul+2,w
  1762  0765  00BC               	movwf	___fltol@f1+2
  1763  0766  0821               	movf	?___flmul+1,w
  1764  0767  00BB               	movwf	___fltol@f1+1
  1765  0768  0820               	movf	?___flmul,w
  1766  0769  00BA               	movwf	___fltol@f1
  1767  076A  120A  158A  2674  120A  118A  	fcall	___fltol
  1768  076F  1283               	bcf	3,5	;RP0=0, select bank0
  1769  0770  1303               	bcf	3,6	;RP1=0, select bank0
  1770  0771  083B               	movf	?___fltol+1,w
  1771  0772  00D9               	movwf	_voltage+1
  1772  0773  083A               	movf	?___fltol,w
  1773  0774  00D8               	movwf	_voltage
  1774  0775                     l2012:	
  1775                           
  1776                           ;main.c: 152:             Lcd_Write_String("C-");
  1777  0775  3031               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1778  0776  120A  158A  24D8  120A  118A  	fcall	_Lcd_Write_String
  1779                           
  1780                           ;main.c: 153:         }else{
  1781  077B  2F84               	goto	l2018
  1782  077C                     l2014:	
  1783                           
  1784                           ;main.c: 154:             voltage=0;
  1785  077C  01D8               	clrf	_voltage
  1786  077D  01D9               	clrf	_voltage+1
  1787  077E                     l2016:	
  1788                           
  1789                           ;main.c: 155:             Lcd_Write_String("OFF");
  1790  077E  3027               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1791  077F  120A  158A  24D8  120A  118A  	fcall	_Lcd_Write_String
  1792  0784                     l2018:	
  1793                           
  1794                           ;main.c: 157:         power=voltage*current;
  1795  0784  1283               	bcf	3,5	;RP0=0, select bank0
  1796  0785  1303               	bcf	3,6	;RP1=0, select bank0
  1797  0786  0859               	movf	_voltage+1,w
  1798  0787  00F1               	movwf	___wmul@multiplier+1
  1799  0788  0858               	movf	_voltage,w
  1800  0789  00F0               	movwf	___wmul@multiplier
  1801  078A  0857               	movf	_current+1,w
  1802  078B  00F3               	movwf	___wmul@multiplicand+1
  1803  078C  0856               	movf	_current,w
  1804  078D  00F2               	movwf	___wmul@multiplicand
  1805  078E  120A  158A  24B3  120A  118A  	fcall	___wmul
  1806  0793  0871               	movf	?___wmul+1,w
  1807  0794  1283               	bcf	3,5	;RP0=0, select bank0
  1808  0795  1303               	bcf	3,6	;RP1=0, select bank0
  1809  0796  00D5               	movwf	_power+1
  1810  0797  0870               	movf	?___wmul,w
  1811  0798  00D4               	movwf	_power
  1812  0799                     l2020:	
  1813                           
  1814                           ;main.c: 158:         Lcd_Set_Cursor(1,7);
  1815  0799  3007               	movlw	7
  1816  079A  00C5               	movwf	??_main
  1817  079B  0845               	movf	??_main,w
  1818  079C  00F4               	movwf	Lcd_Set_Cursor@b
  1819  079D  3001               	movlw	1
  1820  079E  120A  158A  255D  120A  118A  	fcall	_Lcd_Set_Cursor
  1821  07A3                     l2022:	
  1822                           
  1823                           ;main.c: 159:         Lcd_Write_Int(power);
  1824  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  1825  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  1826  07A5  0855               	movf	_power+1,w
  1827  07A6  00FA               	movwf	Lcd_Write_Int@a+1
  1828  07A7  0854               	movf	_power,w
  1829  07A8  00F9               	movwf	Lcd_Write_Int@a
  1830  07A9  120A  158A  26F0  120A  118A  	fcall	_Lcd_Write_Int
  1831  07AE                     l2024:	
  1832                           
  1833                           ;main.c: 160:         Lcd_Write_String("Watts");
  1834  07AE  3021               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1835  07AF  120A  158A  24D8  120A  118A  	fcall	_Lcd_Write_String
  1836  07B4                     l2026:	
  1837                           
  1838                           ;main.c: 161:         Lcd_Set_Cursor(2,1);
  1839  07B4  01F4               	clrf	Lcd_Set_Cursor@b
  1840  07B5  0AF4               	incf	Lcd_Set_Cursor@b,f
  1841  07B6  3002               	movlw	2
  1842  07B7  120A  158A  255D  120A  118A  	fcall	_Lcd_Set_Cursor
  1843  07BC                     l2028:	
  1844                           
  1845                           ;main.c: 162:         Lcd_Write_String("volts:");
  1846  07BC  301A               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1847  07BD  120A  158A  24D8  120A  118A  	fcall	_Lcd_Write_String
  1848  07C2                     l2030:	
  1849                           
  1850                           ;main.c: 163:         Lcd_Write_Int(voltage);
  1851  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  1852  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  1853  07C4  0859               	movf	_voltage+1,w
  1854  07C5  00FA               	movwf	Lcd_Write_Int@a+1
  1855  07C6  0858               	movf	_voltage,w
  1856  07C7  00F9               	movwf	Lcd_Write_Int@a
  1857  07C8  120A  158A  26F0  120A  118A  	fcall	_Lcd_Write_Int
  1858  07CD                     l2032:	
  1859                           
  1860                           ;main.c: 164:         Lcd_Write_Char('V');
  1861  07CD  3056               	movlw	86
  1862  07CE  120A  158A  2524  120A  118A  	fcall	_Lcd_Write_Char
  1863  07D3                     l2034:	
  1864                           
  1865                           ;main.c: 166:         RE0=1;
  1866  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  1867  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  1868  07D5  1409               	bsf	9,0	;volatile
  1869  07D6                     l2036:	
  1870                           
  1871                           ;main.c: 167:         _delay((unsigned long)((10)*(20000000/4000.0)));
  1872  07D6  3041               	movlw	65
  1873  07D7  1283               	bcf	3,5	;RP0=0, select bank0
  1874  07D8  1303               	bcf	3,6	;RP1=0, select bank0
  1875  07D9  00C6               	movwf	??_main+1
  1876  07DA  30ED               	movlw	237
  1877  07DB  00C5               	movwf	??_main
  1878  07DC                     u2667:	
  1879  07DC  0BC5               	decfsz	??_main,f
  1880  07DD  2FDC               	goto	u2667
  1881  07DE  0BC6               	decfsz	??_main+1,f
  1882  07DF  2FDC               	goto	u2667
  1883  07E0  2FE1               	nop2
  1884  07E1                     l2038:	
  1885                           
  1886                           ;main.c: 168:         RE0=0;
  1887  07E1  1283               	bcf	3,5	;RP0=0, select bank0
  1888  07E2  1303               	bcf	3,6	;RP1=0, select bank0
  1889  07E3  1009               	bcf	9,0	;volatile
  1890  07E4                     l2040:	
  1891                           
  1892                           ;main.c: 169:         _delay((unsigned long)((10)*(20000000/4000.0)));
  1893  07E4  3041               	movlw	65
  1894  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  1895  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  1896  07E7  00C6               	movwf	??_main+1
  1897  07E8  30ED               	movlw	237
  1898  07E9  00C5               	movwf	??_main
  1899  07EA                     u2677:	
  1900  07EA  0BC5               	decfsz	??_main,f
  1901  07EB  2FEA               	goto	u2677
  1902  07EC  0BC6               	decfsz	??_main+1,f
  1903  07ED  2FEA               	goto	u2677
  1904  07EE  2FEF               	nop2
  1905  07EF  2C8C               	goto	l1882
  1906  07F0  120A  118A  2800   	ljmp	start
  1907  07F3                     __end_of_main:	
  1908                           
  1909                           	psect	text1
  1910  0004                     __ptext1:	
  1911 ;; *************** function _cON *****************
  1912 ;; Defined at:
  1913 ;;		line 184 in file "main.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;		None
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;		None
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      void 
  1920 ;; Registers used:
  1921 ;;		None
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1927 ;;      Params:         0       0       0       0       0
  1928 ;;      Locals:         0       0       0       0       0
  1929 ;;      Temps:          0       0       0       0       0
  1930 ;;      Totals:         0       0       0       0       0
  1931 ;;Total ram usage:        0 bytes
  1932 ;; Hardware stack levels used:    1
  1933 ;; This function calls:
  1934 ;;		Nothing
  1935 ;; This function is called by:
  1936 ;;		_main
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           
  1941                           ;psect for function _cON
  1942  0004                     _cON:	
  1943  0004                     l1622:	
  1944                           ;incstack = 0
  1945                           ; Regs used in _cON: []
  1946                           
  1947                           
  1948                           ;main.c: 185:     RB3=0;
  1949  0004  1283               	bcf	3,5	;RP0=0, select bank0
  1950  0005  1303               	bcf	3,6	;RP1=0, select bank0
  1951  0006  1186               	bcf	6,3	;volatile
  1952                           
  1953                           ;main.c: 186:     RB4=0;
  1954  0007  1206               	bcf	6,4	;volatile
  1955                           
  1956                           ;main.c: 187:     RB5=1;
  1957  0008  1686               	bsf	6,5	;volatile
  1958  0009                     l211:	
  1959  0009  0008               	return
  1960  000A                     __end_of_cON:	
  1961                           
  1962                           	psect	text2
  1963  0C5C                     __ptext2:	
  1964 ;; *************** function _bON *****************
  1965 ;; Defined at:
  1966 ;;		line 179 in file "main.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		None
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1980 ;;      Params:         0       0       0       0       0
  1981 ;;      Locals:         0       0       0       0       0
  1982 ;;      Temps:          0       0       0       0       0
  1983 ;;      Totals:         0       0       0       0       0
  1984 ;;Total ram usage:        0 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_main
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           
  1994                           ;psect for function _bON
  1995  0C5C                     _bON:	
  1996  0C5C                     l1626:	
  1997                           ;incstack = 0
  1998                           ; Regs used in _bON: []
  1999                           
  2000                           
  2001                           ;main.c: 180:     RB3=0;
  2002  0C5C  1283               	bcf	3,5	;RP0=0, select bank0
  2003  0C5D  1303               	bcf	3,6	;RP1=0, select bank0
  2004  0C5E  1186               	bcf	6,3	;volatile
  2005                           
  2006                           ;main.c: 181:     RB4=1;
  2007  0C5F  1606               	bsf	6,4	;volatile
  2008                           
  2009                           ;main.c: 182:     RB5=0;
  2010  0C60  1286               	bcf	6,5	;volatile
  2011  0C61                     l208:	
  2012  0C61  0008               	return
  2013  0C62                     __end_of_bON:	
  2014                           
  2015                           	psect	text3
  2016  0C56                     __ptext3:	
  2017 ;; *************** function _aON *****************
  2018 ;; Defined at:
  2019 ;;		line 174 in file "main.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;		None
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;		None
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1    wreg      void 
  2026 ;; Registers used:
  2027 ;;		None
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2033 ;;      Params:         0       0       0       0       0
  2034 ;;      Locals:         0       0       0       0       0
  2035 ;;      Temps:          0       0       0       0       0
  2036 ;;      Totals:         0       0       0       0       0
  2037 ;;Total ram usage:        0 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; This function calls:
  2040 ;;		Nothing
  2041 ;; This function is called by:
  2042 ;;		_main
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           
  2047                           ;psect for function _aON
  2048  0C56                     _aON:	
  2049  0C56                     l1620:	
  2050                           ;incstack = 0
  2051                           ; Regs used in _aON: []
  2052                           
  2053                           
  2054                           ;main.c: 175:     RB3=1;
  2055  0C56  1283               	bcf	3,5	;RP0=0, select bank0
  2056  0C57  1303               	bcf	3,6	;RP1=0, select bank0
  2057  0C58  1586               	bsf	6,3	;volatile
  2058                           
  2059                           ;main.c: 176:     RB4=0;
  2060  0C59  1206               	bcf	6,4	;volatile
  2061                           
  2062                           ;main.c: 177:     RB5=0;
  2063  0C5A  1286               	bcf	6,5	;volatile
  2064  0C5B                     l205:	
  2065  0C5B  0008               	return
  2066  0C5C                     __end_of_aON:	
  2067                           
  2068                           	psect	text4
  2069  000A                     __ptext4:	
  2070 ;; *************** function ___xxtofl *****************
  2071 ;; Defined at:
  2072 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  sign            1    wreg     unsigned char 
  2075 ;;  val             4    0[COMMON] long 
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;  sign            1    8[COMMON] unsigned char 
  2078 ;;  arg             4   10[COMMON] unsigned long 
  2079 ;;  exp             1    9[COMMON] unsigned char 
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  4    0[COMMON] unsigned char 
  2082 ;; Registers used:
  2083 ;;		wreg, status,2, status,0
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2089 ;;      Params:         4       0       0       0       0
  2090 ;;      Locals:         6       0       0       0       0
  2091 ;;      Temps:          4       0       0       0       0
  2092 ;;      Totals:        14       0       0       0       0
  2093 ;;Total ram usage:       14 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_main
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           
  2103                           ;psect for function ___xxtofl
  2104  000A                     ___xxtofl:	
  2105                           
  2106                           ;incstack = 0
  2107                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2108                           ;___xxtofl@sign stored from wreg
  2109  000A  00F8               	movwf	___xxtofl@sign
  2110  000B                     l1804:	
  2111  000B  0878               	movf	___xxtofl@sign,w
  2112  000C  1903               	btfsc	3,2
  2113  000D  280F               	goto	u2081
  2114  000E  2810               	goto	u2080
  2115  000F                     u2081:	
  2116  000F  2824               	goto	l1810
  2117  0010                     u2080:	
  2118  0010                     l1806:	
  2119  0010  1FF3               	btfss	___xxtofl@val+3,7
  2120  0011  2813               	goto	u2091
  2121  0012  2814               	goto	u2090
  2122  0013                     u2091:	
  2123  0013  2824               	goto	l1810
  2124  0014                     u2090:	
  2125  0014                     l1808:	
  2126  0014  0970               	comf	___xxtofl@val,w
  2127  0015  00FA               	movwf	___xxtofl@arg
  2128  0016  0971               	comf	___xxtofl@val+1,w
  2129  0017  00FB               	movwf	___xxtofl@arg+1
  2130  0018  0972               	comf	___xxtofl@val+2,w
  2131  0019  00FC               	movwf	___xxtofl@arg+2
  2132  001A  0973               	comf	___xxtofl@val+3,w
  2133  001B  00FD               	movwf	___xxtofl@arg+3
  2134  001C  0AFA               	incf	___xxtofl@arg,f
  2135  001D  1903               	skipnz
  2136  001E  0AFB               	incf	___xxtofl@arg+1,f
  2137  001F  1903               	skipnz
  2138  0020  0AFC               	incf	___xxtofl@arg+2,f
  2139  0021  1903               	skipnz
  2140  0022  0AFD               	incf	___xxtofl@arg+3,f
  2141  0023  282C               	goto	l727
  2142  0024                     l1810:	
  2143  0024  0873               	movf	___xxtofl@val+3,w
  2144  0025  00FD               	movwf	___xxtofl@arg+3
  2145  0026  0872               	movf	___xxtofl@val+2,w
  2146  0027  00FC               	movwf	___xxtofl@arg+2
  2147  0028  0871               	movf	___xxtofl@val+1,w
  2148  0029  00FB               	movwf	___xxtofl@arg+1
  2149  002A  0870               	movf	___xxtofl@val,w
  2150  002B  00FA               	movwf	___xxtofl@arg
  2151  002C                     l727:	
  2152  002C  0873               	movf	___xxtofl@val+3,w
  2153  002D  0472               	iorwf	___xxtofl@val+2,w
  2154  002E  0471               	iorwf	___xxtofl@val+1,w
  2155  002F  0470               	iorwf	___xxtofl@val,w
  2156  0030  1D03               	skipz
  2157  0031  2833               	goto	u2101
  2158  0032  2834               	goto	u2100
  2159  0033                     u2101:	
  2160  0033  283D               	goto	l1816
  2161  0034                     u2100:	
  2162  0034                     l1812:	
  2163  0034  3000               	movlw	0
  2164  0035  00F3               	movwf	?___xxtofl+3
  2165  0036  3000               	movlw	0
  2166  0037  00F2               	movwf	?___xxtofl+2
  2167  0038  3000               	movlw	0
  2168  0039  00F1               	movwf	?___xxtofl+1
  2169  003A  3000               	movlw	0
  2170  003B  00F0               	movwf	?___xxtofl
  2171  003C  28C3               	goto	l729
  2172  003D                     l1816:	
  2173  003D  3096               	movlw	150
  2174  003E  00F4               	movwf	??___xxtofl
  2175  003F  0874               	movf	??___xxtofl,w
  2176  0040  00F9               	movwf	___xxtofl@exp
  2177  0041  284F               	goto	l1820
  2178  0042                     l1818:	
  2179  0042  3001               	movlw	1
  2180  0043  00F4               	movwf	??___xxtofl
  2181  0044  0874               	movf	??___xxtofl,w
  2182  0045  07F9               	addwf	___xxtofl@exp,f
  2183  0046  3001               	movlw	1
  2184  0047                     u2115:	
  2185  0047  1003               	clrc
  2186  0048  0CFD               	rrf	___xxtofl@arg+3,f
  2187  0049  0CFC               	rrf	___xxtofl@arg+2,f
  2188  004A  0CFB               	rrf	___xxtofl@arg+1,f
  2189  004B  0CFA               	rrf	___xxtofl@arg,f
  2190  004C  3EFF               	addlw	-1
  2191  004D  1D03               	skipz
  2192  004E  2847               	goto	u2115
  2193  004F                     l1820:	
  2194  004F  30FE               	movlw	254
  2195  0050  057D               	andwf	___xxtofl@arg+3,w
  2196  0051  1D03               	btfss	3,2
  2197  0052  2854               	goto	u2121
  2198  0053  2855               	goto	u2120
  2199  0054                     u2121:	
  2200  0054  2842               	goto	l1818
  2201  0055                     u2120:	
  2202  0055  2871               	goto	l733
  2203  0056                     l1822:	
  2204  0056  3001               	movlw	1
  2205  0057  00F4               	movwf	??___xxtofl
  2206  0058  0874               	movf	??___xxtofl,w
  2207  0059  07F9               	addwf	___xxtofl@exp,f
  2208  005A                     l1824:	
  2209  005A  3001               	movlw	1
  2210  005B  07FA               	addwf	___xxtofl@arg,f
  2211  005C  3000               	movlw	0
  2212  005D  1803               	skipnc
  2213  005E  3001               	movlw	1
  2214  005F  07FB               	addwf	___xxtofl@arg+1,f
  2215  0060  3000               	movlw	0
  2216  0061  1803               	skipnc
  2217  0062  3001               	movlw	1
  2218  0063  07FC               	addwf	___xxtofl@arg+2,f
  2219  0064  3000               	movlw	0
  2220  0065  1803               	skipnc
  2221  0066  3001               	movlw	1
  2222  0067  07FD               	addwf	___xxtofl@arg+3,f
  2223  0068                     l1826:	
  2224  0068  3001               	movlw	1
  2225  0069                     u2135:	
  2226  0069  1003               	clrc
  2227  006A  0CFD               	rrf	___xxtofl@arg+3,f
  2228  006B  0CFC               	rrf	___xxtofl@arg+2,f
  2229  006C  0CFB               	rrf	___xxtofl@arg+1,f
  2230  006D  0CFA               	rrf	___xxtofl@arg,f
  2231  006E  3EFF               	addlw	-1
  2232  006F  1D03               	skipz
  2233  0070  2869               	goto	u2135
  2234  0071                     l733:	
  2235  0071  30FF               	movlw	255
  2236  0072  057D               	andwf	___xxtofl@arg+3,w
  2237  0073  1D03               	btfss	3,2
  2238  0074  2876               	goto	u2141
  2239  0075  2877               	goto	u2140
  2240  0076                     u2141:	
  2241  0076  2856               	goto	l1822
  2242  0077                     u2140:	
  2243  0077  2883               	goto	l1830
  2244  0078                     l1828:	
  2245  0078  3001               	movlw	1
  2246  0079  02F9               	subwf	___xxtofl@exp,f
  2247  007A  3001               	movlw	1
  2248  007B  00F4               	movwf	??___xxtofl
  2249  007C                     u2155:	
  2250  007C  1003               	clrc
  2251  007D  0DFA               	rlf	___xxtofl@arg,f
  2252  007E  0DFB               	rlf	___xxtofl@arg+1,f
  2253  007F  0DFC               	rlf	___xxtofl@arg+2,f
  2254  0080  0DFD               	rlf	___xxtofl@arg+3,f
  2255  0081  0BF4               	decfsz	??___xxtofl,f
  2256  0082  287C               	goto	u2155
  2257  0083                     l1830:	
  2258  0083  1BFC               	btfsc	___xxtofl@arg+2,7
  2259  0084  2886               	goto	u2161
  2260  0085  2887               	goto	u2160
  2261  0086                     u2161:	
  2262  0086  288D               	goto	l740
  2263  0087                     u2160:	
  2264  0087                     l1832:	
  2265  0087  3002               	movlw	2
  2266  0088  0279               	subwf	___xxtofl@exp,w
  2267  0089  1803               	skipnc
  2268  008A  288C               	goto	u2171
  2269  008B  288D               	goto	u2170
  2270  008C                     u2171:	
  2271  008C  2878               	goto	l1828
  2272  008D                     u2170:	
  2273  008D                     l740:	
  2274  008D  1879               	btfsc	___xxtofl@exp,0
  2275  008E  2890               	goto	u2181
  2276  008F  2891               	goto	u2180
  2277  0090                     u2181:	
  2278  0090  2899               	goto	l741
  2279  0091                     u2180:	
  2280  0091                     l1834:	
  2281  0091  30FF               	movlw	255
  2282  0092  05FA               	andwf	___xxtofl@arg,f
  2283  0093  30FF               	movlw	255
  2284  0094  05FB               	andwf	___xxtofl@arg+1,f
  2285  0095  307F               	movlw	127
  2286  0096  05FC               	andwf	___xxtofl@arg+2,f
  2287  0097  30FF               	movlw	255
  2288  0098  05FD               	andwf	___xxtofl@arg+3,f
  2289  0099                     l741:	
  2290  0099  1003               	clrc
  2291  009A  0CF9               	rrf	___xxtofl@exp,f
  2292  009B                     l1836:	
  2293  009B  0879               	movf	___xxtofl@exp,w
  2294  009C  00F4               	movwf	??___xxtofl
  2295  009D  01F5               	clrf	??___xxtofl+1
  2296  009E  01F6               	clrf	??___xxtofl+2
  2297  009F  01F7               	clrf	??___xxtofl+3
  2298  00A0  3018               	movlw	24
  2299  00A1                     u2195:	
  2300  00A1  1003               	clrc
  2301  00A2  0DF4               	rlf	??___xxtofl,f
  2302  00A3  0DF5               	rlf	??___xxtofl+1,f
  2303  00A4  0DF6               	rlf	??___xxtofl+2,f
  2304  00A5  0DF7               	rlf	??___xxtofl+3,f
  2305  00A6                     u2190:	
  2306  00A6  3EFF               	addlw	-1
  2307  00A7  1D03               	skipz
  2308  00A8  28A1               	goto	u2195
  2309  00A9  0874               	movf	??___xxtofl,w
  2310  00AA  04FA               	iorwf	___xxtofl@arg,f
  2311  00AB  0875               	movf	??___xxtofl+1,w
  2312  00AC  04FB               	iorwf	___xxtofl@arg+1,f
  2313  00AD  0876               	movf	??___xxtofl+2,w
  2314  00AE  04FC               	iorwf	___xxtofl@arg+2,f
  2315  00AF  0877               	movf	??___xxtofl+3,w
  2316  00B0  04FD               	iorwf	___xxtofl@arg+3,f
  2317  00B1                     l1838:	
  2318  00B1  0878               	movf	___xxtofl@sign,w
  2319  00B2  1903               	btfsc	3,2
  2320  00B3  28B5               	goto	u2201
  2321  00B4  28B6               	goto	u2200
  2322  00B5                     u2201:	
  2323  00B5  28BB               	goto	l1844
  2324  00B6                     u2200:	
  2325  00B6                     l1840:	
  2326  00B6  1FF3               	btfss	___xxtofl@val+3,7
  2327  00B7  28B9               	goto	u2211
  2328  00B8  28BA               	goto	u2210
  2329  00B9                     u2211:	
  2330  00B9  28BB               	goto	l1844
  2331  00BA                     u2210:	
  2332  00BA                     l1842:	
  2333  00BA  17FD               	bsf	___xxtofl@arg+3,7
  2334  00BB                     l1844:	
  2335  00BB  087D               	movf	___xxtofl@arg+3,w
  2336  00BC  00F3               	movwf	?___xxtofl+3
  2337  00BD  087C               	movf	___xxtofl@arg+2,w
  2338  00BE  00F2               	movwf	?___xxtofl+2
  2339  00BF  087B               	movf	___xxtofl@arg+1,w
  2340  00C0  00F1               	movwf	?___xxtofl+1
  2341  00C1  087A               	movf	___xxtofl@arg,w
  2342  00C2  00F0               	movwf	?___xxtofl
  2343  00C3                     l729:	
  2344  00C3  0008               	return
  2345  00C4                     __end_of___xxtofl:	
  2346                           
  2347                           	psect	text5
  2348  0E74                     __ptext5:	
  2349 ;; *************** function ___fltol *****************
  2350 ;; Defined at:
  2351 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;  f1              4   26[BANK0 ] unsigned char 
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;  exp1            1   36[BANK0 ] unsigned char 
  2356 ;;  sign1           1   35[BANK0 ] unsigned char 
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  4   26[BANK0 ] long 
  2359 ;; Registers used:
  2360 ;;		wreg, status,2, status,0
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2366 ;;      Params:         0       4       0       0       0
  2367 ;;      Locals:         0       2       0       0       0
  2368 ;;      Temps:          0       5       0       0       0
  2369 ;;      Totals:         0      11       0       0       0
  2370 ;;Total ram usage:       11 bytes
  2371 ;; Hardware stack levels used:    1
  2372 ;; This function calls:
  2373 ;;		Nothing
  2374 ;; This function is called by:
  2375 ;;		_main
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           
  2380                           ;psect for function ___fltol
  2381  0E74                     ___fltol:	
  2382  0E74                     l1628:	
  2383                           ;incstack = 0
  2384                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2385                           
  2386  0E74  1003               	clrc
  2387  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  2388  0E76  1303               	bcf	3,6	;RP1=0, select bank0
  2389  0E77  0D3C               	rlf	___fltol@f1+2,w
  2390  0E78  0D3D               	rlf	___fltol@f1+3,w
  2391  0E79  00BE               	movwf	??___fltol
  2392  0E7A  083E               	movf	??___fltol,w
  2393  0E7B  00C4               	movwf	___fltol@exp1
  2394  0E7C  0844               	movf	___fltol@exp1,w
  2395  0E7D  1D03               	btfss	3,2
  2396  0E7E  2E80               	goto	u1611
  2397  0E7F  2E81               	goto	u1610
  2398  0E80                     u1611:	
  2399  0E80  2E8A               	goto	l1634
  2400  0E81                     u1610:	
  2401  0E81                     l1630:	
  2402  0E81  3000               	movlw	0
  2403  0E82  00BD               	movwf	?___fltol+3
  2404  0E83  3000               	movlw	0
  2405  0E84  00BC               	movwf	?___fltol+2
  2406  0E85  3000               	movlw	0
  2407  0E86  00BB               	movwf	?___fltol+1
  2408  0E87  3000               	movlw	0
  2409  0E88  00BA               	movwf	?___fltol
  2410  0E89  2EEF               	goto	l486
  2411  0E8A                     l1634:	
  2412  0E8A  083A               	movf	___fltol@f1,w
  2413  0E8B  00BE               	movwf	??___fltol
  2414  0E8C  083B               	movf	___fltol@f1+1,w
  2415  0E8D  00BF               	movwf	??___fltol+1
  2416  0E8E  083C               	movf	___fltol@f1+2,w
  2417  0E8F  00C0               	movwf	??___fltol+2
  2418  0E90  083D               	movf	___fltol@f1+3,w
  2419  0E91  00C1               	movwf	??___fltol+3
  2420  0E92  301F               	movlw	31
  2421  0E93                     u1625:	
  2422  0E93  1003               	clrc
  2423  0E94  0CC1               	rrf	??___fltol+3,f
  2424  0E95  0CC0               	rrf	??___fltol+2,f
  2425  0E96  0CBF               	rrf	??___fltol+1,f
  2426  0E97  0CBE               	rrf	??___fltol,f
  2427  0E98                     u1620:	
  2428  0E98  3EFF               	addlw	-1
  2429  0E99  1D03               	skipz
  2430  0E9A  2E93               	goto	u1625
  2431  0E9B  083E               	movf	??___fltol,w
  2432  0E9C  00C2               	movwf	??___fltol+4
  2433  0E9D  0842               	movf	??___fltol+4,w
  2434  0E9E  00C3               	movwf	___fltol@sign1
  2435  0E9F                     l1636:	
  2436  0E9F  17BC               	bsf	___fltol@f1+2,7
  2437  0EA0                     l1638:	
  2438  0EA0  30FF               	movlw	255
  2439  0EA1  05BA               	andwf	___fltol@f1,f
  2440  0EA2  30FF               	movlw	255
  2441  0EA3  05BB               	andwf	___fltol@f1+1,f
  2442  0EA4  30FF               	movlw	255
  2443  0EA5  05BC               	andwf	___fltol@f1+2,f
  2444  0EA6  3000               	movlw	0
  2445  0EA7  05BD               	andwf	___fltol@f1+3,f
  2446  0EA8                     l1640:	
  2447  0EA8  3096               	movlw	150
  2448  0EA9  02C4               	subwf	___fltol@exp1,f
  2449  0EAA                     l1642:	
  2450  0EAA  1FC4               	btfss	___fltol@exp1,7
  2451  0EAB  2EAD               	goto	u1631
  2452  0EAC  2EAE               	goto	u1630
  2453  0EAD                     u1631:	
  2454  0EAD  2EC8               	goto	l1652
  2455  0EAE                     u1630:	
  2456  0EAE                     l1644:	
  2457  0EAE  0844               	movf	___fltol@exp1,w
  2458  0EAF  3A80               	xorlw	128
  2459  0EB0  3E97               	addlw	151
  2460  0EB1  1803               	skipnc
  2461  0EB2  2EB4               	goto	u1641
  2462  0EB3  2EB5               	goto	u1640
  2463  0EB4                     u1641:	
  2464  0EB4  2EB6               	goto	l1650
  2465  0EB5                     u1640:	
  2466  0EB5  2E81               	goto	l1630
  2467  0EB6                     l1650:	
  2468  0EB6  3001               	movlw	1
  2469  0EB7                     u1655:	
  2470  0EB7  1003               	clrc
  2471  0EB8  0CBD               	rrf	___fltol@f1+3,f
  2472  0EB9  0CBC               	rrf	___fltol@f1+2,f
  2473  0EBA  0CBB               	rrf	___fltol@f1+1,f
  2474  0EBB  0CBA               	rrf	___fltol@f1,f
  2475  0EBC  3EFF               	addlw	-1
  2476  0EBD  1D03               	skipz
  2477  0EBE  2EB7               	goto	u1655
  2478  0EBF  3001               	movlw	1
  2479  0EC0  00BE               	movwf	??___fltol
  2480  0EC1  083E               	movf	??___fltol,w
  2481  0EC2  07C4               	addwf	___fltol@exp1,f
  2482  0EC3  1D03               	btfss	3,2
  2483  0EC4  2EC6               	goto	u1661
  2484  0EC5  2EC7               	goto	u1660
  2485  0EC6                     u1661:	
  2486  0EC6  2EB6               	goto	l1650
  2487  0EC7                     u1660:	
  2488  0EC7  2EDF               	goto	l1660
  2489  0EC8                     l1652:	
  2490  0EC8  3020               	movlw	32
  2491  0EC9  0244               	subwf	___fltol@exp1,w
  2492  0ECA  1C03               	skipc
  2493  0ECB  2ECD               	goto	u1671
  2494  0ECC  2ECE               	goto	u1670
  2495  0ECD                     u1671:	
  2496  0ECD  2EDA               	goto	l493
  2497  0ECE                     u1670:	
  2498  0ECE  2E81               	goto	l1630
  2499  0ECF                     l1658:	
  2500  0ECF  3001               	movlw	1
  2501  0ED0  00BE               	movwf	??___fltol
  2502  0ED1                     u1685:	
  2503  0ED1  1003               	clrc
  2504  0ED2  0DBA               	rlf	___fltol@f1,f
  2505  0ED3  0DBB               	rlf	___fltol@f1+1,f
  2506  0ED4  0DBC               	rlf	___fltol@f1+2,f
  2507  0ED5  0DBD               	rlf	___fltol@f1+3,f
  2508  0ED6  0BBE               	decfsz	??___fltol,f
  2509  0ED7  2ED1               	goto	u1685
  2510  0ED8  3001               	movlw	1
  2511  0ED9  02C4               	subwf	___fltol@exp1,f
  2512  0EDA                     l493:	
  2513  0EDA  0844               	movf	___fltol@exp1,w
  2514  0EDB  1D03               	btfss	3,2
  2515  0EDC  2EDE               	goto	u1691
  2516  0EDD  2EDF               	goto	u1690
  2517  0EDE                     u1691:	
  2518  0EDE  2ECF               	goto	l1658
  2519  0EDF                     u1690:	
  2520  0EDF                     l1660:	
  2521  0EDF  0843               	movf	___fltol@sign1,w
  2522  0EE0  1903               	btfsc	3,2
  2523  0EE1  2EE3               	goto	u1701
  2524  0EE2  2EE4               	goto	u1700
  2525  0EE3                     u1701:	
  2526  0EE3  2EEF               	goto	l496
  2527  0EE4                     u1700:	
  2528  0EE4                     l1662:	
  2529  0EE4  09BA               	comf	___fltol@f1,f
  2530  0EE5  09BB               	comf	___fltol@f1+1,f
  2531  0EE6  09BC               	comf	___fltol@f1+2,f
  2532  0EE7  09BD               	comf	___fltol@f1+3,f
  2533  0EE8  0ABA               	incf	___fltol@f1,f
  2534  0EE9  1903               	skipnz
  2535  0EEA  0ABB               	incf	___fltol@f1+1,f
  2536  0EEB  1903               	skipnz
  2537  0EEC  0ABC               	incf	___fltol@f1+2,f
  2538  0EED  1903               	skipnz
  2539  0EEE  0ABD               	incf	___fltol@f1+3,f
  2540  0EEF                     l496:	
  2541  0EEF                     l486:	
  2542  0EEF  0008               	return
  2543  0EF0                     __end_of___fltol:	
  2544                           
  2545                           	psect	text6
  2546  00C4                     __ptext6:	
  2547 ;; *************** function ___flmul *****************
  2548 ;; Defined at:
  2549 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;  b               4    0[BANK0 ] long 
  2552 ;;  a               4    4[BANK0 ] long 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;  prod            4   20[BANK0 ] struct .
  2555 ;;  grs             4   14[BANK0 ] unsigned long 
  2556 ;;  temp            2   24[BANK0 ] struct .
  2557 ;;  bexp            1   19[BANK0 ] unsigned char 
  2558 ;;  aexp            1   18[BANK0 ] unsigned char 
  2559 ;;  sign            1   13[BANK0 ] unsigned char 
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  4    0[BANK0 ] unsigned char 
  2562 ;; Registers used:
  2563 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2569 ;;      Params:         0       8       0       0       0
  2570 ;;      Locals:         0      13       0       0       0
  2571 ;;      Temps:          0       5       0       0       0
  2572 ;;      Totals:         0      26       0       0       0
  2573 ;;Total ram usage:       26 bytes
  2574 ;; Hardware stack levels used:    1
  2575 ;; Hardware stack levels required when called:    1
  2576 ;; This function calls:
  2577 ;;		__Umul8_16
  2578 ;; This function is called by:
  2579 ;;		_main
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           
  2584                           ;psect for function ___flmul
  2585  00C4                     ___flmul:	
  2586  00C4                     l1664:	
  2587                           ;incstack = 0
  2588                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2589                           
  2590  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  2591  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  2592  00C6  0823               	movf	___flmul@b+3,w
  2593  00C7  3980               	andlw	128
  2594  00C8  00A8               	movwf	??___flmul
  2595  00C9  0828               	movf	??___flmul,w
  2596  00CA  00AD               	movwf	___flmul@sign
  2597  00CB                     l1666:	
  2598  00CB  0823               	movf	___flmul@b+3,w
  2599  00CC  00A8               	movwf	??___flmul
  2600  00CD  0728               	addwf	??___flmul,w
  2601  00CE  00A9               	movwf	??___flmul+1
  2602  00CF  0829               	movf	??___flmul+1,w
  2603  00D0  00B3               	movwf	___flmul@bexp
  2604  00D1                     l1668:	
  2605  00D1  1FA2               	btfss	___flmul@b+2,7
  2606  00D2  28D4               	goto	u1711
  2607  00D3  28D5               	goto	u1710
  2608  00D4                     u1711:	
  2609  00D4  28D6               	goto	l1672
  2610  00D5                     u1710:	
  2611  00D5                     l1670:	
  2612  00D5  1433               	bsf	___flmul@bexp,0
  2613  00D6                     l1672:	
  2614  00D6  0833               	movf	___flmul@bexp,w
  2615  00D7  1903               	btfsc	3,2
  2616  00D8  28DA               	goto	u1721
  2617  00D9  28DB               	goto	u1720
  2618  00DA                     u1721:	
  2619  00DA  28EA               	goto	l1680
  2620  00DB                     u1720:	
  2621  00DB                     l1674:	
  2622  00DB  0A33               	incf	___flmul@bexp,w
  2623  00DC  1D03               	btfss	3,2
  2624  00DD  28DF               	goto	u1731
  2625  00DE  28E0               	goto	u1730
  2626  00DF                     u1731:	
  2627  00DF  28E8               	goto	l1678
  2628  00E0                     u1730:	
  2629  00E0                     l1676:	
  2630  00E0  3000               	movlw	0
  2631  00E1  00A3               	movwf	___flmul@b+3
  2632  00E2  3000               	movlw	0
  2633  00E3  00A2               	movwf	___flmul@b+2
  2634  00E4  3000               	movlw	0
  2635  00E5  00A1               	movwf	___flmul@b+1
  2636  00E6  3000               	movlw	0
  2637  00E7  00A0               	movwf	___flmul@b
  2638  00E8                     l1678:	
  2639  00E8  17A2               	bsf	___flmul@b+2,7
  2640  00E9  28F2               	goto	l1682
  2641  00EA                     l1680:	
  2642  00EA  3000               	movlw	0
  2643  00EB  00A3               	movwf	___flmul@b+3
  2644  00EC  3000               	movlw	0
  2645  00ED  00A2               	movwf	___flmul@b+2
  2646  00EE  3000               	movlw	0
  2647  00EF  00A1               	movwf	___flmul@b+1
  2648  00F0  3000               	movlw	0
  2649  00F1  00A0               	movwf	___flmul@b
  2650  00F2                     l1682:	
  2651  00F2  0827               	movf	___flmul@a+3,w
  2652  00F3  3980               	andlw	128
  2653  00F4  00A8               	movwf	??___flmul
  2654  00F5  0828               	movf	??___flmul,w
  2655  00F6  06AD               	xorwf	___flmul@sign,f
  2656  00F7                     l1684:	
  2657  00F7  0827               	movf	___flmul@a+3,w
  2658  00F8  00A8               	movwf	??___flmul
  2659  00F9  0728               	addwf	??___flmul,w
  2660  00FA  00A9               	movwf	??___flmul+1
  2661  00FB  0829               	movf	??___flmul+1,w
  2662  00FC  00B2               	movwf	___flmul@aexp
  2663  00FD                     l1686:	
  2664  00FD  1FA6               	btfss	___flmul@a+2,7
  2665  00FE  2900               	goto	u1741
  2666  00FF  2901               	goto	u1740
  2667  0100                     u1741:	
  2668  0100  2902               	goto	l1690
  2669  0101                     u1740:	
  2670  0101                     l1688:	
  2671  0101  1432               	bsf	___flmul@aexp,0
  2672  0102                     l1690:	
  2673  0102  0832               	movf	___flmul@aexp,w
  2674  0103  1903               	btfsc	3,2
  2675  0104  2906               	goto	u1751
  2676  0105  2907               	goto	u1750
  2677  0106                     u1751:	
  2678  0106  2916               	goto	l1698
  2679  0107                     u1750:	
  2680  0107                     l1692:	
  2681  0107  0A32               	incf	___flmul@aexp,w
  2682  0108  1D03               	btfss	3,2
  2683  0109  290B               	goto	u1761
  2684  010A  290C               	goto	u1760
  2685  010B                     u1761:	
  2686  010B  2914               	goto	l1696
  2687  010C                     u1760:	
  2688  010C                     l1694:	
  2689  010C  3000               	movlw	0
  2690  010D  00A7               	movwf	___flmul@a+3
  2691  010E  3000               	movlw	0
  2692  010F  00A6               	movwf	___flmul@a+2
  2693  0110  3000               	movlw	0
  2694  0111  00A5               	movwf	___flmul@a+1
  2695  0112  3000               	movlw	0
  2696  0113  00A4               	movwf	___flmul@a
  2697  0114                     l1696:	
  2698  0114  17A6               	bsf	___flmul@a+2,7
  2699  0115  291E               	goto	l1700
  2700  0116                     l1698:	
  2701  0116  3000               	movlw	0
  2702  0117  00A7               	movwf	___flmul@a+3
  2703  0118  3000               	movlw	0
  2704  0119  00A6               	movwf	___flmul@a+2
  2705  011A  3000               	movlw	0
  2706  011B  00A5               	movwf	___flmul@a+1
  2707  011C  3000               	movlw	0
  2708  011D  00A4               	movwf	___flmul@a
  2709  011E                     l1700:	
  2710  011E  0832               	movf	___flmul@aexp,w
  2711  011F  1903               	btfsc	3,2
  2712  0120  2922               	goto	u1771
  2713  0121  2923               	goto	u1770
  2714  0122                     u1771:	
  2715  0122  2928               	goto	l1704
  2716  0123                     u1770:	
  2717  0123                     l1702:	
  2718  0123  0833               	movf	___flmul@bexp,w
  2719  0124  1D03               	btfss	3,2
  2720  0125  2927               	goto	u1781
  2721  0126  2928               	goto	u1780
  2722  0127                     u1781:	
  2723  0127  2931               	goto	l1708
  2724  0128                     u1780:	
  2725  0128                     l1704:	
  2726  0128  3000               	movlw	0
  2727  0129  00A3               	movwf	?___flmul+3
  2728  012A  3000               	movlw	0
  2729  012B  00A2               	movwf	?___flmul+2
  2730  012C  3000               	movlw	0
  2731  012D  00A1               	movwf	?___flmul+1
  2732  012E  3000               	movlw	0
  2733  012F  00A0               	movwf	?___flmul
  2734  0130  2C24               	goto	l689
  2735  0131                     l1708:	
  2736  0131  0820               	movf	___flmul@b,w
  2737  0132  00A8               	movwf	??___flmul
  2738  0133  0828               	movf	??___flmul,w
  2739  0134  00F0               	movwf	__Umul8_16@multiplicand
  2740  0135  0826               	movf	___flmul@a+2,w
  2741  0136  120A  158A  24FD  120A  118A  	fcall	__Umul8_16
  2742  013B  0871               	movf	?__Umul8_16+1,w
  2743  013C  1283               	bcf	3,5	;RP0=0, select bank0
  2744  013D  1303               	bcf	3,6	;RP1=0, select bank0
  2745  013E  00B9               	movwf	___flmul@temp+1
  2746  013F  0870               	movf	?__Umul8_16,w
  2747  0140  00B8               	movwf	___flmul@temp
  2748  0141                     l1710:	
  2749  0141  0838               	movf	___flmul@temp,w
  2750  0142  00A8               	movwf	??___flmul
  2751  0143  01A9               	clrf	??___flmul+1
  2752  0144  01AA               	clrf	??___flmul+2
  2753  0145  01AB               	clrf	??___flmul+3
  2754  0146  082B               	movf	??___flmul+3,w
  2755  0147  00B1               	movwf	___flmul@grs+3
  2756  0148  082A               	movf	??___flmul+2,w
  2757  0149  00B0               	movwf	___flmul@grs+2
  2758  014A  0829               	movf	??___flmul+1,w
  2759  014B  00AF               	movwf	___flmul@grs+1
  2760  014C  0828               	movf	??___flmul,w
  2761  014D  00AE               	movwf	___flmul@grs
  2762  014E                     l1712:	
  2763  014E  0839               	movf	___flmul@temp+1,w
  2764  014F  00A8               	movwf	??___flmul
  2765  0150  01A9               	clrf	??___flmul+1
  2766  0151  01AA               	clrf	??___flmul+2
  2767  0152  01AB               	clrf	??___flmul+3
  2768  0153  082B               	movf	??___flmul+3,w
  2769  0154  00B7               	movwf	___flmul@prod+3
  2770  0155  082A               	movf	??___flmul+2,w
  2771  0156  00B6               	movwf	___flmul@prod+2
  2772  0157  0829               	movf	??___flmul+1,w
  2773  0158  00B5               	movwf	___flmul@prod+1
  2774  0159  0828               	movf	??___flmul,w
  2775  015A  00B4               	movwf	___flmul@prod
  2776  015B  0821               	movf	___flmul@b+1,w
  2777  015C  00A8               	movwf	??___flmul
  2778  015D  0828               	movf	??___flmul,w
  2779  015E  00F0               	movwf	__Umul8_16@multiplicand
  2780  015F  0825               	movf	___flmul@a+1,w
  2781  0160  120A  158A  24FD  120A  118A  	fcall	__Umul8_16
  2782  0165  0871               	movf	?__Umul8_16+1,w
  2783  0166  1283               	bcf	3,5	;RP0=0, select bank0
  2784  0167  1303               	bcf	3,6	;RP1=0, select bank0
  2785  0168  00B9               	movwf	___flmul@temp+1
  2786  0169  0870               	movf	?__Umul8_16,w
  2787  016A  00B8               	movwf	___flmul@temp
  2788  016B                     l1714:	
  2789  016B  0838               	movf	___flmul@temp,w
  2790  016C  00A8               	movwf	??___flmul
  2791  016D  01A9               	clrf	??___flmul+1
  2792  016E  01AA               	clrf	??___flmul+2
  2793  016F  01AB               	clrf	??___flmul+3
  2794  0170  0828               	movf	??___flmul,w
  2795  0171  07AE               	addwf	___flmul@grs,f
  2796  0172  0829               	movf	??___flmul+1,w
  2797  0173  1103               	clrz
  2798  0174  1803               	skipnc
  2799  0175  3E01               	addlw	1
  2800  0176  1903               	skipnz
  2801  0177  2979               	goto	u1791
  2802  0178  07AF               	addwf	___flmul@grs+1,f
  2803  0179                     u1791:	
  2804  0179  082A               	movf	??___flmul+2,w
  2805  017A  1103               	clrz
  2806  017B  1803               	skipnc
  2807  017C  3E01               	addlw	1
  2808  017D  1903               	skipnz
  2809  017E  2980               	goto	u1792
  2810  017F  07B0               	addwf	___flmul@grs+2,f
  2811  0180                     u1792:	
  2812  0180  082B               	movf	??___flmul+3,w
  2813  0181  1103               	clrz
  2814  0182  1803               	skipnc
  2815  0183  3E01               	addlw	1
  2816  0184  1903               	skipnz
  2817  0185  2987               	goto	u1793
  2818  0186  07B1               	addwf	___flmul@grs+3,f
  2819  0187                     u1793:	
  2820  0187                     l1716:	
  2821  0187  0839               	movf	___flmul@temp+1,w
  2822  0188  00A8               	movwf	??___flmul
  2823  0189  01A9               	clrf	??___flmul+1
  2824  018A  01AA               	clrf	??___flmul+2
  2825  018B  01AB               	clrf	??___flmul+3
  2826  018C  0828               	movf	??___flmul,w
  2827  018D  07B4               	addwf	___flmul@prod,f
  2828  018E  0829               	movf	??___flmul+1,w
  2829  018F  1103               	clrz
  2830  0190  1803               	skipnc
  2831  0191  3E01               	addlw	1
  2832  0192  1903               	skipnz
  2833  0193  2995               	goto	u1801
  2834  0194  07B5               	addwf	___flmul@prod+1,f
  2835  0195                     u1801:	
  2836  0195  082A               	movf	??___flmul+2,w
  2837  0196  1103               	clrz
  2838  0197  1803               	skipnc
  2839  0198  3E01               	addlw	1
  2840  0199  1903               	skipnz
  2841  019A  299C               	goto	u1802
  2842  019B  07B6               	addwf	___flmul@prod+2,f
  2843  019C                     u1802:	
  2844  019C  082B               	movf	??___flmul+3,w
  2845  019D  1103               	clrz
  2846  019E  1803               	skipnc
  2847  019F  3E01               	addlw	1
  2848  01A0  1903               	skipnz
  2849  01A1  29A3               	goto	u1803
  2850  01A2  07B7               	addwf	___flmul@prod+3,f
  2851  01A3                     u1803:	
  2852  01A3  0822               	movf	___flmul@b+2,w
  2853  01A4  00A8               	movwf	??___flmul
  2854  01A5  0828               	movf	??___flmul,w
  2855  01A6  00F0               	movwf	__Umul8_16@multiplicand
  2856  01A7  0824               	movf	___flmul@a,w
  2857  01A8  120A  158A  24FD  120A  118A  	fcall	__Umul8_16
  2858  01AD  0871               	movf	?__Umul8_16+1,w
  2859  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  2860  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  2861  01B0  00B9               	movwf	___flmul@temp+1
  2862  01B1  0870               	movf	?__Umul8_16,w
  2863  01B2  00B8               	movwf	___flmul@temp
  2864  01B3                     l1718:	
  2865  01B3  0838               	movf	___flmul@temp,w
  2866  01B4  00A8               	movwf	??___flmul
  2867  01B5  01A9               	clrf	??___flmul+1
  2868  01B6  01AA               	clrf	??___flmul+2
  2869  01B7  01AB               	clrf	??___flmul+3
  2870  01B8  0828               	movf	??___flmul,w
  2871  01B9  07AE               	addwf	___flmul@grs,f
  2872  01BA  0829               	movf	??___flmul+1,w
  2873  01BB  1103               	clrz
  2874  01BC  1803               	skipnc
  2875  01BD  3E01               	addlw	1
  2876  01BE  1903               	skipnz
  2877  01BF  29C1               	goto	u1811
  2878  01C0  07AF               	addwf	___flmul@grs+1,f
  2879  01C1                     u1811:	
  2880  01C1  082A               	movf	??___flmul+2,w
  2881  01C2  1103               	clrz
  2882  01C3  1803               	skipnc
  2883  01C4  3E01               	addlw	1
  2884  01C5  1903               	skipnz
  2885  01C6  29C8               	goto	u1812
  2886  01C7  07B0               	addwf	___flmul@grs+2,f
  2887  01C8                     u1812:	
  2888  01C8  082B               	movf	??___flmul+3,w
  2889  01C9  1103               	clrz
  2890  01CA  1803               	skipnc
  2891  01CB  3E01               	addlw	1
  2892  01CC  1903               	skipnz
  2893  01CD  29CF               	goto	u1813
  2894  01CE  07B1               	addwf	___flmul@grs+3,f
  2895  01CF                     u1813:	
  2896  01CF                     l1720:	
  2897  01CF  0839               	movf	___flmul@temp+1,w
  2898  01D0  00A8               	movwf	??___flmul
  2899  01D1  01A9               	clrf	??___flmul+1
  2900  01D2  01AA               	clrf	??___flmul+2
  2901  01D3  01AB               	clrf	??___flmul+3
  2902  01D4  0828               	movf	??___flmul,w
  2903  01D5  07B4               	addwf	___flmul@prod,f
  2904  01D6  0829               	movf	??___flmul+1,w
  2905  01D7  1103               	clrz
  2906  01D8  1803               	skipnc
  2907  01D9  3E01               	addlw	1
  2908  01DA  1903               	skipnz
  2909  01DB  29DD               	goto	u1821
  2910  01DC  07B5               	addwf	___flmul@prod+1,f
  2911  01DD                     u1821:	
  2912  01DD  082A               	movf	??___flmul+2,w
  2913  01DE  1103               	clrz
  2914  01DF  1803               	skipnc
  2915  01E0  3E01               	addlw	1
  2916  01E1  1903               	skipnz
  2917  01E2  29E4               	goto	u1822
  2918  01E3  07B6               	addwf	___flmul@prod+2,f
  2919  01E4                     u1822:	
  2920  01E4  082B               	movf	??___flmul+3,w
  2921  01E5  1103               	clrz
  2922  01E6  1803               	skipnc
  2923  01E7  3E01               	addlw	1
  2924  01E8  1903               	skipnz
  2925  01E9  29EB               	goto	u1823
  2926  01EA  07B7               	addwf	___flmul@prod+3,f
  2927  01EB                     u1823:	
  2928  01EB                     l1722:	
  2929  01EB  3008               	movlw	8
  2930  01EC  00A8               	movwf	??___flmul
  2931  01ED                     u1835:	
  2932  01ED  1003               	clrc
  2933  01EE  0DAE               	rlf	___flmul@grs,f
  2934  01EF  0DAF               	rlf	___flmul@grs+1,f
  2935  01F0  0DB0               	rlf	___flmul@grs+2,f
  2936  01F1  0DB1               	rlf	___flmul@grs+3,f
  2937  01F2  0BA8               	decfsz	??___flmul,f
  2938  01F3  29ED               	goto	u1835
  2939  01F4                     l1724:	
  2940  01F4  0821               	movf	___flmul@b+1,w
  2941  01F5  00A8               	movwf	??___flmul
  2942  01F6  0828               	movf	??___flmul,w
  2943  01F7  00F0               	movwf	__Umul8_16@multiplicand
  2944  01F8  0824               	movf	___flmul@a,w
  2945  01F9  120A  158A  24FD  120A  118A  	fcall	__Umul8_16
  2946  01FE  0871               	movf	?__Umul8_16+1,w
  2947  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  2948  0200  1303               	bcf	3,6	;RP1=0, select bank0
  2949  0201  00B9               	movwf	___flmul@temp+1
  2950  0202  0870               	movf	?__Umul8_16,w
  2951  0203  00B8               	movwf	___flmul@temp
  2952  0204                     l1726:	
  2953  0204  0838               	movf	___flmul@temp,w
  2954  0205  00A8               	movwf	??___flmul
  2955  0206  0839               	movf	___flmul@temp+1,w
  2956  0207  00A9               	movwf	??___flmul+1
  2957  0208  01AA               	clrf	??___flmul+2
  2958  0209  01AB               	clrf	??___flmul+3
  2959  020A  0828               	movf	??___flmul,w
  2960  020B  07AE               	addwf	___flmul@grs,f
  2961  020C  0829               	movf	??___flmul+1,w
  2962  020D  1103               	clrz
  2963  020E  1803               	skipnc
  2964  020F  3E01               	addlw	1
  2965  0210  1903               	skipnz
  2966  0211  2A13               	goto	u1841
  2967  0212  07AF               	addwf	___flmul@grs+1,f
  2968  0213                     u1841:	
  2969  0213  082A               	movf	??___flmul+2,w
  2970  0214  1103               	clrz
  2971  0215  1803               	skipnc
  2972  0216  3E01               	addlw	1
  2973  0217  1903               	skipnz
  2974  0218  2A1A               	goto	u1842
  2975  0219  07B0               	addwf	___flmul@grs+2,f
  2976  021A                     u1842:	
  2977  021A  082B               	movf	??___flmul+3,w
  2978  021B  1103               	clrz
  2979  021C  1803               	skipnc
  2980  021D  3E01               	addlw	1
  2981  021E  1903               	skipnz
  2982  021F  2A21               	goto	u1843
  2983  0220  07B1               	addwf	___flmul@grs+3,f
  2984  0221                     u1843:	
  2985  0221                     l1728:	
  2986  0221  0820               	movf	___flmul@b,w
  2987  0222  00A8               	movwf	??___flmul
  2988  0223  0828               	movf	??___flmul,w
  2989  0224  00F0               	movwf	__Umul8_16@multiplicand
  2990  0225  0825               	movf	___flmul@a+1,w
  2991  0226  120A  158A  24FD  120A  118A  	fcall	__Umul8_16
  2992  022B  0871               	movf	?__Umul8_16+1,w
  2993  022C  1283               	bcf	3,5	;RP0=0, select bank0
  2994  022D  1303               	bcf	3,6	;RP1=0, select bank0
  2995  022E  00B9               	movwf	___flmul@temp+1
  2996  022F  0870               	movf	?__Umul8_16,w
  2997  0230  00B8               	movwf	___flmul@temp
  2998  0231                     l1730:	
  2999  0231  0838               	movf	___flmul@temp,w
  3000  0232  00A8               	movwf	??___flmul
  3001  0233  0839               	movf	___flmul@temp+1,w
  3002  0234  00A9               	movwf	??___flmul+1
  3003  0235  01AA               	clrf	??___flmul+2
  3004  0236  01AB               	clrf	??___flmul+3
  3005  0237  0828               	movf	??___flmul,w
  3006  0238  07AE               	addwf	___flmul@grs,f
  3007  0239  0829               	movf	??___flmul+1,w
  3008  023A  1103               	clrz
  3009  023B  1803               	skipnc
  3010  023C  3E01               	addlw	1
  3011  023D  1903               	skipnz
  3012  023E  2A40               	goto	u1851
  3013  023F  07AF               	addwf	___flmul@grs+1,f
  3014  0240                     u1851:	
  3015  0240  082A               	movf	??___flmul+2,w
  3016  0241  1103               	clrz
  3017  0242  1803               	skipnc
  3018  0243  3E01               	addlw	1
  3019  0244  1903               	skipnz
  3020  0245  2A47               	goto	u1852
  3021  0246  07B0               	addwf	___flmul@grs+2,f
  3022  0247                     u1852:	
  3023  0247  082B               	movf	??___flmul+3,w
  3024  0248  1103               	clrz
  3025  0249  1803               	skipnc
  3026  024A  3E01               	addlw	1
  3027  024B  1903               	skipnz
  3028  024C  2A4E               	goto	u1853
  3029  024D  07B1               	addwf	___flmul@grs+3,f
  3030  024E                     u1853:	
  3031  024E                     l1732:	
  3032  024E  3008               	movlw	8
  3033  024F  00A8               	movwf	??___flmul
  3034  0250                     u1865:	
  3035  0250  1003               	clrc
  3036  0251  0DAE               	rlf	___flmul@grs,f
  3037  0252  0DAF               	rlf	___flmul@grs+1,f
  3038  0253  0DB0               	rlf	___flmul@grs+2,f
  3039  0254  0DB1               	rlf	___flmul@grs+3,f
  3040  0255  0BA8               	decfsz	??___flmul,f
  3041  0256  2A50               	goto	u1865
  3042  0257  0820               	movf	___flmul@b,w
  3043  0258  00A8               	movwf	??___flmul
  3044  0259  0828               	movf	??___flmul,w
  3045  025A  00F0               	movwf	__Umul8_16@multiplicand
  3046  025B  0824               	movf	___flmul@a,w
  3047  025C  120A  158A  24FD  120A  118A  	fcall	__Umul8_16
  3048  0261  0871               	movf	?__Umul8_16+1,w
  3049  0262  1283               	bcf	3,5	;RP0=0, select bank0
  3050  0263  1303               	bcf	3,6	;RP1=0, select bank0
  3051  0264  00B9               	movwf	___flmul@temp+1
  3052  0265  0870               	movf	?__Umul8_16,w
  3053  0266  00B8               	movwf	___flmul@temp
  3054  0267                     l1734:	
  3055  0267  0838               	movf	___flmul@temp,w
  3056  0268  00A8               	movwf	??___flmul
  3057  0269  0839               	movf	___flmul@temp+1,w
  3058  026A  00A9               	movwf	??___flmul+1
  3059  026B  01AA               	clrf	??___flmul+2
  3060  026C  01AB               	clrf	??___flmul+3
  3061  026D  0828               	movf	??___flmul,w
  3062  026E  07AE               	addwf	___flmul@grs,f
  3063  026F  0829               	movf	??___flmul+1,w
  3064  0270  1103               	clrz
  3065  0271  1803               	skipnc
  3066  0272  3E01               	addlw	1
  3067  0273  1903               	skipnz
  3068  0274  2A76               	goto	u1871
  3069  0275  07AF               	addwf	___flmul@grs+1,f
  3070  0276                     u1871:	
  3071  0276  082A               	movf	??___flmul+2,w
  3072  0277  1103               	clrz
  3073  0278  1803               	skipnc
  3074  0279  3E01               	addlw	1
  3075  027A  1903               	skipnz
  3076  027B  2A7D               	goto	u1872
  3077  027C  07B0               	addwf	___flmul@grs+2,f
  3078  027D                     u1872:	
  3079  027D  082B               	movf	??___flmul+3,w
  3080  027E  1103               	clrz
  3081  027F  1803               	skipnc
  3082  0280  3E01               	addlw	1
  3083  0281  1903               	skipnz
  3084  0282  2A84               	goto	u1873
  3085  0283  07B1               	addwf	___flmul@grs+3,f
  3086  0284                     u1873:	
  3087  0284                     l1736:	
  3088  0284  0821               	movf	___flmul@b+1,w
  3089  0285  00A8               	movwf	??___flmul
  3090  0286  0828               	movf	??___flmul,w
  3091  0287  00F0               	movwf	__Umul8_16@multiplicand
  3092  0288  0826               	movf	___flmul@a+2,w
  3093  0289  120A  158A  24FD  120A  118A  	fcall	__Umul8_16
  3094  028E  0871               	movf	?__Umul8_16+1,w
  3095  028F  1283               	bcf	3,5	;RP0=0, select bank0
  3096  0290  1303               	bcf	3,6	;RP1=0, select bank0
  3097  0291  00B9               	movwf	___flmul@temp+1
  3098  0292  0870               	movf	?__Umul8_16,w
  3099  0293  00B8               	movwf	___flmul@temp
  3100  0294  0838               	movf	___flmul@temp,w
  3101  0295  00A8               	movwf	??___flmul
  3102  0296  0839               	movf	___flmul@temp+1,w
  3103  0297  00A9               	movwf	??___flmul+1
  3104  0298  01AA               	clrf	??___flmul+2
  3105  0299  01AB               	clrf	??___flmul+3
  3106  029A  0828               	movf	??___flmul,w
  3107  029B  07B4               	addwf	___flmul@prod,f
  3108  029C  0829               	movf	??___flmul+1,w
  3109  029D  1103               	clrz
  3110  029E  1803               	skipnc
  3111  029F  3E01               	addlw	1
  3112  02A0  1903               	skipnz
  3113  02A1  2AA3               	goto	u1881
  3114  02A2  07B5               	addwf	___flmul@prod+1,f
  3115  02A3                     u1881:	
  3116  02A3  082A               	movf	??___flmul+2,w
  3117  02A4  1103               	clrz
  3118  02A5  1803               	skipnc
  3119  02A6  3E01               	addlw	1
  3120  02A7  1903               	skipnz
  3121  02A8  2AAA               	goto	u1882
  3122  02A9  07B6               	addwf	___flmul@prod+2,f
  3123  02AA                     u1882:	
  3124  02AA  082B               	movf	??___flmul+3,w
  3125  02AB  1103               	clrz
  3126  02AC  1803               	skipnc
  3127  02AD  3E01               	addlw	1
  3128  02AE  1903               	skipnz
  3129  02AF  2AB1               	goto	u1883
  3130  02B0  07B7               	addwf	___flmul@prod+3,f
  3131  02B1                     u1883:	
  3132  02B1                     l1738:	
  3133  02B1  0822               	movf	___flmul@b+2,w
  3134  02B2  00A8               	movwf	??___flmul
  3135  02B3  0828               	movf	??___flmul,w
  3136  02B4  00F0               	movwf	__Umul8_16@multiplicand
  3137  02B5  0825               	movf	___flmul@a+1,w
  3138  02B6  120A  158A  24FD  120A  118A  	fcall	__Umul8_16
  3139  02BB  0871               	movf	?__Umul8_16+1,w
  3140  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  3141  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  3142  02BE  00B9               	movwf	___flmul@temp+1
  3143  02BF  0870               	movf	?__Umul8_16,w
  3144  02C0  00B8               	movwf	___flmul@temp
  3145  02C1                     l1740:	
  3146  02C1  0838               	movf	___flmul@temp,w
  3147  02C2  00A8               	movwf	??___flmul
  3148  02C3  0839               	movf	___flmul@temp+1,w
  3149  02C4  00A9               	movwf	??___flmul+1
  3150  02C5  01AA               	clrf	??___flmul+2
  3151  02C6  01AB               	clrf	??___flmul+3
  3152  02C7  0828               	movf	??___flmul,w
  3153  02C8  07B4               	addwf	___flmul@prod,f
  3154  02C9  0829               	movf	??___flmul+1,w
  3155  02CA  1103               	clrz
  3156  02CB  1803               	skipnc
  3157  02CC  3E01               	addlw	1
  3158  02CD  1903               	skipnz
  3159  02CE  2AD0               	goto	u1891
  3160  02CF  07B5               	addwf	___flmul@prod+1,f
  3161  02D0                     u1891:	
  3162  02D0  082A               	movf	??___flmul+2,w
  3163  02D1  1103               	clrz
  3164  02D2  1803               	skipnc
  3165  02D3  3E01               	addlw	1
  3166  02D4  1903               	skipnz
  3167  02D5  2AD7               	goto	u1892
  3168  02D6  07B6               	addwf	___flmul@prod+2,f
  3169  02D7                     u1892:	
  3170  02D7  082B               	movf	??___flmul+3,w
  3171  02D8  1103               	clrz
  3172  02D9  1803               	skipnc
  3173  02DA  3E01               	addlw	1
  3174  02DB  1903               	skipnz
  3175  02DC  2ADE               	goto	u1893
  3176  02DD  07B7               	addwf	___flmul@prod+3,f
  3177  02DE                     u1893:	
  3178  02DE  0822               	movf	___flmul@b+2,w
  3179  02DF  00A8               	movwf	??___flmul
  3180  02E0  0828               	movf	??___flmul,w
  3181  02E1  00F0               	movwf	__Umul8_16@multiplicand
  3182  02E2  0826               	movf	___flmul@a+2,w
  3183  02E3  120A  158A  24FD  120A  118A  	fcall	__Umul8_16
  3184  02E8  0871               	movf	?__Umul8_16+1,w
  3185  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  3186  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  3187  02EB  00B9               	movwf	___flmul@temp+1
  3188  02EC  0870               	movf	?__Umul8_16,w
  3189  02ED  00B8               	movwf	___flmul@temp
  3190  02EE                     l1742:	
  3191  02EE  0838               	movf	___flmul@temp,w
  3192  02EF  00A8               	movwf	??___flmul
  3193  02F0  0839               	movf	___flmul@temp+1,w
  3194  02F1  00A9               	movwf	??___flmul+1
  3195  02F2  01AA               	clrf	??___flmul+2
  3196  02F3  01AB               	clrf	??___flmul+3
  3197  02F4  3008               	movlw	8
  3198  02F5                     u1905:	
  3199  02F5  1003               	clrc
  3200  02F6  0DA8               	rlf	??___flmul,f
  3201  02F7  0DA9               	rlf	??___flmul+1,f
  3202  02F8  0DAA               	rlf	??___flmul+2,f
  3203  02F9  0DAB               	rlf	??___flmul+3,f
  3204  02FA                     u1900:	
  3205  02FA  3EFF               	addlw	-1
  3206  02FB  1D03               	skipz
  3207  02FC  2AF5               	goto	u1905
  3208  02FD  0828               	movf	??___flmul,w
  3209  02FE  07B4               	addwf	___flmul@prod,f
  3210  02FF  0829               	movf	??___flmul+1,w
  3211  0300  1103               	clrz
  3212  0301  1803               	skipnc
  3213  0302  3E01               	addlw	1
  3214  0303  1903               	skipnz
  3215  0304  2B06               	goto	u1911
  3216  0305  07B5               	addwf	___flmul@prod+1,f
  3217  0306                     u1911:	
  3218  0306  082A               	movf	??___flmul+2,w
  3219  0307  1103               	clrz
  3220  0308  1803               	skipnc
  3221  0309  3E01               	addlw	1
  3222  030A  1903               	skipnz
  3223  030B  2B0D               	goto	u1912
  3224  030C  07B6               	addwf	___flmul@prod+2,f
  3225  030D                     u1912:	
  3226  030D  082B               	movf	??___flmul+3,w
  3227  030E  1103               	clrz
  3228  030F  1803               	skipnc
  3229  0310  3E01               	addlw	1
  3230  0311  1903               	skipnz
  3231  0312  2B14               	goto	u1913
  3232  0313  07B7               	addwf	___flmul@prod+3,f
  3233  0314                     u1913:	
  3234  0314                     l1744:	
  3235  0314  082E               	movf	___flmul@grs,w
  3236  0315  00A8               	movwf	??___flmul
  3237  0316  082F               	movf	___flmul@grs+1,w
  3238  0317  00A9               	movwf	??___flmul+1
  3239  0318  0830               	movf	___flmul@grs+2,w
  3240  0319  00AA               	movwf	??___flmul+2
  3241  031A  0831               	movf	___flmul@grs+3,w
  3242  031B  00AB               	movwf	??___flmul+3
  3243  031C  3018               	movlw	24
  3244  031D                     u1925:	
  3245  031D  1003               	clrc
  3246  031E  0CAB               	rrf	??___flmul+3,f
  3247  031F  0CAA               	rrf	??___flmul+2,f
  3248  0320  0CA9               	rrf	??___flmul+1,f
  3249  0321  0CA8               	rrf	??___flmul,f
  3250  0322                     u1920:	
  3251  0322  3EFF               	addlw	-1
  3252  0323  1D03               	skipz
  3253  0324  2B1D               	goto	u1925
  3254  0325  0828               	movf	??___flmul,w
  3255  0326  07B4               	addwf	___flmul@prod,f
  3256  0327  0829               	movf	??___flmul+1,w
  3257  0328  1103               	clrz
  3258  0329  1803               	skipnc
  3259  032A  3E01               	addlw	1
  3260  032B  1903               	skipnz
  3261  032C  2B2E               	goto	u1931
  3262  032D  07B5               	addwf	___flmul@prod+1,f
  3263  032E                     u1931:	
  3264  032E  082A               	movf	??___flmul+2,w
  3265  032F  1103               	clrz
  3266  0330  1803               	skipnc
  3267  0331  3E01               	addlw	1
  3268  0332  1903               	skipnz
  3269  0333  2B35               	goto	u1932
  3270  0334  07B6               	addwf	___flmul@prod+2,f
  3271  0335                     u1932:	
  3272  0335  082B               	movf	??___flmul+3,w
  3273  0336  1103               	clrz
  3274  0337  1803               	skipnc
  3275  0338  3E01               	addlw	1
  3276  0339  1903               	skipnz
  3277  033A  2B3C               	goto	u1933
  3278  033B  07B7               	addwf	___flmul@prod+3,f
  3279  033C                     u1933:	
  3280  033C                     l1746:	
  3281  033C  3008               	movlw	8
  3282  033D  00A8               	movwf	??___flmul
  3283  033E                     u1945:	
  3284  033E  1003               	clrc
  3285  033F  0DAE               	rlf	___flmul@grs,f
  3286  0340  0DAF               	rlf	___flmul@grs+1,f
  3287  0341  0DB0               	rlf	___flmul@grs+2,f
  3288  0342  0DB1               	rlf	___flmul@grs+3,f
  3289  0343  0BA8               	decfsz	??___flmul,f
  3290  0344  2B3E               	goto	u1945
  3291  0345                     l1748:	
  3292  0345  0833               	movf	___flmul@bexp,w
  3293  0346  0732               	addwf	___flmul@aexp,w
  3294  0347  00A8               	movwf	??___flmul
  3295  0348  01A9               	clrf	??___flmul+1
  3296  0349  0DA9               	rlf	??___flmul+1,f
  3297  034A  0828               	movf	??___flmul,w
  3298  034B  3E82               	addlw	130
  3299  034C  00B8               	movwf	___flmul@temp
  3300  034D  0829               	movf	??___flmul+1,w
  3301  034E  1803               	skipnc
  3302  034F  3E01               	addlw	1
  3303  0350  3EFF               	addlw	255
  3304  0351  00B9               	movwf	___flmul@temp+1
  3305  0352  2B70               	goto	l1760
  3306  0353                     l1750:	
  3307  0353  3001               	movlw	1
  3308  0354  00A8               	movwf	??___flmul
  3309  0355                     u1955:	
  3310  0355  1003               	clrc
  3311  0356  0DB4               	rlf	___flmul@prod,f
  3312  0357  0DB5               	rlf	___flmul@prod+1,f
  3313  0358  0DB6               	rlf	___flmul@prod+2,f
  3314  0359  0DB7               	rlf	___flmul@prod+3,f
  3315  035A  0BA8               	decfsz	??___flmul,f
  3316  035B  2B55               	goto	u1955
  3317  035C                     l1752:	
  3318  035C  1FB1               	btfss	___flmul@grs+3,7
  3319  035D  2B5F               	goto	u1961
  3320  035E  2B60               	goto	u1960
  3321  035F                     u1961:	
  3322  035F  2B61               	goto	l1756
  3323  0360                     u1960:	
  3324  0360                     l1754:	
  3325  0360  1434               	bsf	___flmul@prod,0
  3326  0361                     l1756:	
  3327  0361  3001               	movlw	1
  3328  0362  00A8               	movwf	??___flmul
  3329  0363                     u1975:	
  3330  0363  1003               	clrc
  3331  0364  0DAE               	rlf	___flmul@grs,f
  3332  0365  0DAF               	rlf	___flmul@grs+1,f
  3333  0366  0DB0               	rlf	___flmul@grs+2,f
  3334  0367  0DB1               	rlf	___flmul@grs+3,f
  3335  0368  0BA8               	decfsz	??___flmul,f
  3336  0369  2B63               	goto	u1975
  3337  036A                     l1758:	
  3338  036A  30FF               	movlw	255
  3339  036B  07B8               	addwf	___flmul@temp,f
  3340  036C  1803               	skipnc
  3341  036D  0AB9               	incf	___flmul@temp+1,f
  3342  036E  30FF               	movlw	255
  3343  036F  07B9               	addwf	___flmul@temp+1,f
  3344  0370                     l1760:	
  3345  0370  1FB6               	btfss	___flmul@prod+2,7
  3346  0371  2B73               	goto	u1981
  3347  0372  2B74               	goto	u1980
  3348  0373                     u1981:	
  3349  0373  2B53               	goto	l1750
  3350  0374                     u1980:	
  3351  0374                     l1762:	
  3352  0374  01B2               	clrf	___flmul@aexp
  3353  0375                     l1764:	
  3354  0375  1FB1               	btfss	___flmul@grs+3,7
  3355  0376  2B78               	goto	u1991
  3356  0377  2B79               	goto	u1990
  3357  0378                     u1991:	
  3358  0378  2B95               	goto	l1772
  3359  0379                     u1990:	
  3360  0379                     l1766:	
  3361  0379  30FF               	movlw	255
  3362  037A  052E               	andwf	___flmul@grs,w
  3363  037B  00A8               	movwf	??___flmul
  3364  037C  30FF               	movlw	255
  3365  037D  052F               	andwf	___flmul@grs+1,w
  3366  037E  00A9               	movwf	??___flmul+1
  3367  037F  30FF               	movlw	255
  3368  0380  0530               	andwf	___flmul@grs+2,w
  3369  0381  00AA               	movwf	??___flmul+2
  3370  0382  307F               	movlw	127
  3371  0383  0531               	andwf	___flmul@grs+3,w
  3372  0384  00AB               	movwf	??___flmul+3
  3373  0385  082B               	movf	??___flmul+3,w
  3374  0386  042A               	iorwf	??___flmul+2,w
  3375  0387  0429               	iorwf	??___flmul+1,w
  3376  0388  0428               	iorwf	??___flmul,w
  3377  0389  1903               	skipnz
  3378  038A  2B8C               	goto	u2001
  3379  038B  2B8D               	goto	u2000
  3380  038C                     u2001:	
  3381  038C  2B90               	goto	l695
  3382  038D                     u2000:	
  3383  038D                     l1768:	
  3384  038D  01B2               	clrf	___flmul@aexp
  3385  038E  0AB2               	incf	___flmul@aexp,f
  3386  038F  2B95               	goto	l1772
  3387  0390                     l695:	
  3388  0390  1C34               	btfss	___flmul@prod,0
  3389  0391  2B93               	goto	u2011
  3390  0392  2B94               	goto	u2010
  3391  0393                     u2011:	
  3392  0393  2B95               	goto	l1772
  3393  0394                     u2010:	
  3394  0394  2B8D               	goto	l1768
  3395  0395                     l1772:	
  3396  0395  0832               	movf	___flmul@aexp,w
  3397  0396  1903               	btfsc	3,2
  3398  0397  2B99               	goto	u2021
  3399  0398  2B9A               	goto	u2020
  3400  0399                     u2021:	
  3401  0399  2BCB               	goto	l1782
  3402  039A                     u2020:	
  3403  039A                     l1774:	
  3404  039A  3001               	movlw	1
  3405  039B  07B4               	addwf	___flmul@prod,f
  3406  039C  3000               	movlw	0
  3407  039D  1803               	skipnc
  3408  039E  3001               	movlw	1
  3409  039F  07B5               	addwf	___flmul@prod+1,f
  3410  03A0  3000               	movlw	0
  3411  03A1  1803               	skipnc
  3412  03A2  3001               	movlw	1
  3413  03A3  07B6               	addwf	___flmul@prod+2,f
  3414  03A4  3000               	movlw	0
  3415  03A5  1803               	skipnc
  3416  03A6  3001               	movlw	1
  3417  03A7  07B7               	addwf	___flmul@prod+3,f
  3418  03A8                     l1776:	
  3419  03A8  1C37               	btfss	___flmul@prod+3,0
  3420  03A9  2BAB               	goto	u2031
  3421  03AA  2BAC               	goto	u2030
  3422  03AB                     u2031:	
  3423  03AB  2BCB               	goto	l1782
  3424  03AC                     u2030:	
  3425  03AC                     l1778:	
  3426  03AC  0834               	movf	___flmul@prod,w
  3427  03AD  00A8               	movwf	??___flmul
  3428  03AE  0835               	movf	___flmul@prod+1,w
  3429  03AF  00A9               	movwf	??___flmul+1
  3430  03B0  0836               	movf	___flmul@prod+2,w
  3431  03B1  00AA               	movwf	??___flmul+2
  3432  03B2  0837               	movf	___flmul@prod+3,w
  3433  03B3  00AB               	movwf	??___flmul+3
  3434  03B4  3001               	movlw	1
  3435  03B5  00AC               	movwf	??___flmul+4
  3436  03B6                     u2045:	
  3437  03B6  0D2B               	rlf	??___flmul+3,w
  3438  03B7  0CAB               	rrf	??___flmul+3,f
  3439  03B8  0CAA               	rrf	??___flmul+2,f
  3440  03B9  0CA9               	rrf	??___flmul+1,f
  3441  03BA  0CA8               	rrf	??___flmul,f
  3442  03BB                     u2040:	
  3443  03BB  0BAC               	decfsz	??___flmul+4,f
  3444  03BC  2BB6               	goto	u2045
  3445  03BD  082B               	movf	??___flmul+3,w
  3446  03BE  00B7               	movwf	___flmul@prod+3
  3447  03BF  082A               	movf	??___flmul+2,w
  3448  03C0  00B6               	movwf	___flmul@prod+2
  3449  03C1  0829               	movf	??___flmul+1,w
  3450  03C2  00B5               	movwf	___flmul@prod+1
  3451  03C3  0828               	movf	??___flmul,w
  3452  03C4  00B4               	movwf	___flmul@prod
  3453  03C5                     l1780:	
  3454  03C5  3001               	movlw	1
  3455  03C6  07B8               	addwf	___flmul@temp,f
  3456  03C7  1803               	skipnc
  3457  03C8  0AB9               	incf	___flmul@temp+1,f
  3458  03C9  3000               	movlw	0
  3459  03CA  07B9               	addwf	___flmul@temp+1,f
  3460  03CB                     l1782:	
  3461  03CB  0839               	movf	___flmul@temp+1,w
  3462  03CC  3A80               	xorlw	128
  3463  03CD  00FF               	movwf	btemp+1
  3464  03CE  3080               	movlw	128
  3465  03CF  027F               	subwf	btemp+1,w
  3466  03D0  1D03               	skipz
  3467  03D1  2BD4               	goto	u2055
  3468  03D2  30FF               	movlw	255
  3469  03D3  0238               	subwf	___flmul@temp,w
  3470  03D4                     u2055:	
  3471  03D4  1C03               	skipc
  3472  03D5  2BD7               	goto	u2051
  3473  03D6  2BD8               	goto	u2050
  3474  03D7                     u2051:	
  3475  03D7  2BE3               	goto	l1786
  3476  03D8                     u2050:	
  3477  03D8                     l1784:	
  3478  03D8  307F               	movlw	127
  3479  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  3480  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  3481  03DB  00B7               	movwf	___flmul@prod+3
  3482  03DC  3080               	movlw	128
  3483  03DD  00B6               	movwf	___flmul@prod+2
  3484  03DE  3000               	movlw	0
  3485  03DF  00B5               	movwf	___flmul@prod+1
  3486  03E0  3000               	movlw	0
  3487  03E1  00B4               	movwf	___flmul@prod
  3488  03E2  2C18               	goto	l701
  3489  03E3                     l1786:	
  3490  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  3491  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  3492  03E5  0839               	movf	___flmul@temp+1,w
  3493  03E6  3A80               	xorlw	128
  3494  03E7  00FF               	movwf	btemp+1
  3495  03E8  3080               	movlw	128
  3496  03E9  027F               	subwf	btemp+1,w
  3497  03EA  1D03               	skipz
  3498  03EB  2BEE               	goto	u2065
  3499  03EC  3001               	movlw	1
  3500  03ED  0238               	subwf	___flmul@temp,w
  3501  03EE                     u2065:	
  3502  03EE  1803               	skipnc
  3503  03EF  2BF1               	goto	u2061
  3504  03F0  2BF2               	goto	u2060
  3505  03F1                     u2061:	
  3506  03F1  2BFE               	goto	l1792
  3507  03F2                     u2060:	
  3508  03F2                     l1788:	
  3509  03F2  3000               	movlw	0
  3510  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  3511  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  3512  03F5  00B7               	movwf	___flmul@prod+3
  3513  03F6  3000               	movlw	0
  3514  03F7  00B6               	movwf	___flmul@prod+2
  3515  03F8  3000               	movlw	0
  3516  03F9  00B5               	movwf	___flmul@prod+1
  3517  03FA  3000               	movlw	0
  3518  03FB  00B4               	movwf	___flmul@prod
  3519  03FC                     l1790:	
  3520  03FC  01AD               	clrf	___flmul@sign
  3521  03FD  2C18               	goto	l701
  3522  03FE                     l1792:	
  3523  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  3524  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  3525  0400  0838               	movf	___flmul@temp,w
  3526  0401  00A8               	movwf	??___flmul
  3527  0402  0828               	movf	??___flmul,w
  3528  0403  00B3               	movwf	___flmul@bexp
  3529  0404  30FF               	movlw	255
  3530  0405  05B4               	andwf	___flmul@prod,f
  3531  0406  30FF               	movlw	255
  3532  0407  05B5               	andwf	___flmul@prod+1,f
  3533  0408  307F               	movlw	127
  3534  0409  05B6               	andwf	___flmul@prod+2,f
  3535  040A  3000               	movlw	0
  3536  040B  05B7               	andwf	___flmul@prod+3,f
  3537  040C                     l1794:	
  3538  040C  1C33               	btfss	___flmul@bexp,0
  3539  040D  2C0F               	goto	u2071
  3540  040E  2C10               	goto	u2070
  3541  040F                     u2071:	
  3542  040F  2C11               	goto	l1798
  3543  0410                     u2070:	
  3544  0410                     l1796:	
  3545  0410  17B6               	bsf	___flmul@prod+2,7
  3546  0411                     l1798:	
  3547  0411  0833               	movf	___flmul@bexp,w
  3548  0412  00A8               	movwf	??___flmul
  3549  0413  1003               	clrc
  3550  0414  0C28               	rrf	??___flmul,w
  3551  0415  00A9               	movwf	??___flmul+1
  3552  0416  0829               	movf	??___flmul+1,w
  3553  0417  00B7               	movwf	___flmul@prod+3
  3554  0418                     l701:	
  3555  0418  082D               	movf	___flmul@sign,w
  3556  0419  00A8               	movwf	??___flmul
  3557  041A  0828               	movf	??___flmul,w
  3558  041B  04B7               	iorwf	___flmul@prod+3,f
  3559  041C                     l1800:	
  3560  041C  0837               	movf	___flmul@prod+3,w
  3561  041D  00A3               	movwf	?___flmul+3
  3562  041E  0836               	movf	___flmul@prod+2,w
  3563  041F  00A2               	movwf	?___flmul+2
  3564  0420  0835               	movf	___flmul@prod+1,w
  3565  0421  00A1               	movwf	?___flmul+1
  3566  0422  0834               	movf	___flmul@prod,w
  3567  0423  00A0               	movwf	?___flmul
  3568  0424                     l689:	
  3569  0424  0008               	return
  3570  0425                     __end_of___flmul:	
  3571                           
  3572                           	psect	text7
  3573  0CFD                     __ptext7:	
  3574 ;; *************** function __Umul8_16 *****************
  3575 ;; Defined at:
  3576 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;  multiplier      1    wreg     unsigned char 
  3579 ;;  multiplicand    1    0[COMMON] unsigned char 
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;  multiplier      1    8[COMMON] unsigned char 
  3582 ;;  word_mpld       2    6[COMMON] unsigned int 
  3583 ;;  product         2    4[COMMON] unsigned int 
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  2    0[COMMON] unsigned int 
  3586 ;; Registers used:
  3587 ;;		wreg, status,2, status,0
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3593 ;;      Params:         2       0       0       0       0
  3594 ;;      Locals:         5       0       0       0       0
  3595 ;;      Temps:          2       0       0       0       0
  3596 ;;      Totals:         9       0       0       0       0
  3597 ;;Total ram usage:        9 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; This function calls:
  3600 ;;		Nothing
  3601 ;; This function is called by:
  3602 ;;		___flmul
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606                           
  3607                           ;psect for function __Umul8_16
  3608  0CFD                     __Umul8_16:	
  3609                           
  3610                           ;incstack = 0
  3611                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3612                           ;__Umul8_16@multiplier stored from wreg
  3613  0CFD  00F8               	movwf	__Umul8_16@multiplier
  3614  0CFE                     l1522:	
  3615  0CFE  01F4               	clrf	__Umul8_16@product
  3616  0CFF  01F5               	clrf	__Umul8_16@product+1
  3617  0D00                     l1524:	
  3618  0D00  0870               	movf	__Umul8_16@multiplicand,w
  3619  0D01  00F2               	movwf	??__Umul8_16
  3620  0D02  01F3               	clrf	??__Umul8_16+1
  3621  0D03  0872               	movf	??__Umul8_16,w
  3622  0D04  00F6               	movwf	__Umul8_16@word_mpld
  3623  0D05  0873               	movf	??__Umul8_16+1,w
  3624  0D06  00F7               	movwf	__Umul8_16@word_mpld+1
  3625  0D07                     l1526:	
  3626  0D07  1C78               	btfss	__Umul8_16@multiplier,0
  3627  0D08  2D0A               	goto	u1491
  3628  0D09  2D0B               	goto	u1490
  3629  0D0A                     u1491:	
  3630  0D0A  2D11               	goto	l746
  3631  0D0B                     u1490:	
  3632  0D0B                     l1528:	
  3633  0D0B  0876               	movf	__Umul8_16@word_mpld,w
  3634  0D0C  07F4               	addwf	__Umul8_16@product,f
  3635  0D0D  1803               	skipnc
  3636  0D0E  0AF5               	incf	__Umul8_16@product+1,f
  3637  0D0F  0877               	movf	__Umul8_16@word_mpld+1,w
  3638  0D10  07F5               	addwf	__Umul8_16@product+1,f
  3639  0D11                     l746:	
  3640  0D11  3001               	movlw	1
  3641  0D12                     u1505:	
  3642  0D12  1003               	clrc
  3643  0D13  0DF6               	rlf	__Umul8_16@word_mpld,f
  3644  0D14  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  3645  0D15  3EFF               	addlw	-1
  3646  0D16  1D03               	skipz
  3647  0D17  2D12               	goto	u1505
  3648  0D18  1003               	clrc
  3649  0D19  0CF8               	rrf	__Umul8_16@multiplier,f
  3650  0D1A                     l1530:	
  3651  0D1A  0878               	movf	__Umul8_16@multiplier,w
  3652  0D1B  1D03               	btfss	3,2
  3653  0D1C  2D1E               	goto	u1511
  3654  0D1D  2D1F               	goto	u1510
  3655  0D1E                     u1511:	
  3656  0D1E  2D07               	goto	l1526
  3657  0D1F                     u1510:	
  3658  0D1F                     l1532:	
  3659  0D1F  0875               	movf	__Umul8_16@product+1,w
  3660  0D20  00F1               	movwf	?__Umul8_16+1
  3661  0D21  0874               	movf	__Umul8_16@product,w
  3662  0D22  00F0               	movwf	?__Umul8_16
  3663  0D23                     l748:	
  3664  0D23  0008               	return
  3665  0D24                     __end_of__Umul8_16:	
  3666                           
  3667                           	psect	text8
  3668  0C50                     __ptext8:	
  3669 ;; *************** function _OFF *****************
  3670 ;; Defined at:
  3671 ;;		line 189 in file "main.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;		None
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;		None
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  1    wreg      void 
  3678 ;; Registers used:
  3679 ;;		None
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3685 ;;      Params:         0       0       0       0       0
  3686 ;;      Locals:         0       0       0       0       0
  3687 ;;      Temps:          0       0       0       0       0
  3688 ;;      Totals:         0       0       0       0       0
  3689 ;;Total ram usage:        0 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; This function calls:
  3692 ;;		Nothing
  3693 ;; This function is called by:
  3694 ;;		_main
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698                           
  3699                           ;psect for function _OFF
  3700  0C50                     _OFF:	
  3701  0C50                     l1624:	
  3702                           ;incstack = 0
  3703                           ; Regs used in _OFF: []
  3704                           
  3705                           
  3706                           ;main.c: 190:     RB3=0;
  3707  0C50  1283               	bcf	3,5	;RP0=0, select bank0
  3708  0C51  1303               	bcf	3,6	;RP1=0, select bank0
  3709  0C52  1186               	bcf	6,3	;volatile
  3710                           
  3711                           ;main.c: 191:     RB4=0;
  3712  0C53  1206               	bcf	6,4	;volatile
  3713                           
  3714                           ;main.c: 192:     RB5=0;
  3715  0C54  1286               	bcf	6,5	;volatile
  3716  0C55                     l214:	
  3717  0C55  0008               	return
  3718  0C56                     __end_of_OFF:	
  3719                           
  3720                           	psect	text9
  3721  0CD8                     __ptext9:	
  3722 ;; *************** function _Lcd_Write_String *****************
  3723 ;; Defined at:
  3724 ;;		line 97 in file "./lcd.h"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;  a               1    wreg     PTR unsigned char 
  3727 ;;		 -> STR_8(7), STR_7(6), STR_6(4), STR_5(3), 
  3728 ;;		 -> STR_4(3), STR_3(3), STR_2(16), STR_1(9), 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;  a               1    7[COMMON] PTR unsigned char 
  3731 ;;		 -> STR_8(7), STR_7(6), STR_6(4), STR_5(3), 
  3732 ;;		 -> STR_4(3), STR_3(3), STR_2(16), STR_1(9), 
  3733 ;;  i               2    5[COMMON] int 
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  1    wreg      void 
  3736 ;; Registers used:
  3737 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3743 ;;      Params:         0       0       0       0       0
  3744 ;;      Locals:         3       0       0       0       0
  3745 ;;      Temps:          0       0       0       0       0
  3746 ;;      Totals:         3       0       0       0       0
  3747 ;;Total ram usage:        3 bytes
  3748 ;; Hardware stack levels used:    1
  3749 ;; Hardware stack levels required when called:    2
  3750 ;; This function calls:
  3751 ;;		_Lcd_Write_Char
  3752 ;; This function is called by:
  3753 ;;		_main
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           
  3758                           ;psect for function _Lcd_Write_String
  3759  0CD8                     _Lcd_Write_String:	
  3760                           
  3761                           ;incstack = 0
  3762                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3763                           ;Lcd_Write_String@a stored from wreg
  3764  0CD8  00F7               	movwf	Lcd_Write_String@a
  3765  0CD9                     l1568:	
  3766                           
  3767                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
  3768  0CD9  01F5               	clrf	Lcd_Write_String@i
  3769  0CDA  01F6               	clrf	Lcd_Write_String@i+1
  3770  0CDB  2CEF               	goto	l1574
  3771  0CDC                     l1570:	
  3772                           
  3773                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
  3774  0CDC  0875               	movf	Lcd_Write_String@i,w
  3775  0CDD  0777               	addwf	Lcd_Write_String@a,w
  3776  0CDE  0084               	movwf	4
  3777  0CDF  120A  158A  2000  120A  158A  	fcall	stringdir
  3778  0CE4  120A  158A  2524  120A  158A  	fcall	_Lcd_Write_Char
  3779  0CE9                     l1572:	
  3780  0CE9  3001               	movlw	1
  3781  0CEA  07F5               	addwf	Lcd_Write_String@i,f
  3782  0CEB  1803               	skipnc
  3783  0CEC  0AF6               	incf	Lcd_Write_String@i+1,f
  3784  0CED  3000               	movlw	0
  3785  0CEE  07F6               	addwf	Lcd_Write_String@i+1,f
  3786  0CEF                     l1574:	
  3787  0CEF  0875               	movf	Lcd_Write_String@i,w
  3788  0CF0  0777               	addwf	Lcd_Write_String@a,w
  3789  0CF1  0084               	movwf	4
  3790  0CF2  120A  158A  2000  120A  158A  	fcall	stringdir
  3791  0CF7  3A00               	xorlw	0
  3792  0CF8  1D03               	skipz
  3793  0CF9  2CFB               	goto	u1561
  3794  0CFA  2CFC               	goto	u1560
  3795  0CFB                     u1561:	
  3796  0CFB  2CDC               	goto	l1570
  3797  0CFC                     u1560:	
  3798  0CFC                     l95:	
  3799  0CFC  0008               	return
  3800  0CFD                     __end_of_Lcd_Write_String:	
  3801                           
  3802                           	psect	text10
  3803  0EF0                     __ptext10:	
  3804 ;; *************** function _Lcd_Write_Int *****************
  3805 ;; Defined at:
  3806 ;;		line 116 in file "./lcd.h"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;  a               2    9[COMMON] int 
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;  i               2    0        int 
  3811 ;;  rem             6    2[BANK0 ] short [3]
  3812 ;;  d               2    8[BANK0 ] short 
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  2    9[COMMON] int 
  3815 ;; Registers used:
  3816 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3822 ;;      Params:         2       0       0       0       0
  3823 ;;      Locals:         0      10       0       0       0
  3824 ;;      Temps:          0       0       0       0       0
  3825 ;;      Totals:         2      10       0       0       0
  3826 ;;Total ram usage:       12 bytes
  3827 ;; Hardware stack levels used:    1
  3828 ;; Hardware stack levels required when called:    2
  3829 ;; This function calls:
  3830 ;;		_Lcd_Write_Char
  3831 ;;		___awdiv
  3832 ;;		___wmul
  3833 ;; This function is called by:
  3834 ;;		_main
  3835 ;; This function uses a non-reentrant model
  3836 ;;
  3837                           
  3838                           
  3839                           ;psect for function _Lcd_Write_Int
  3840  0EF0                     _Lcd_Write_Int:	
  3841  0EF0                     l1576:	
  3842                           ;incstack = 0
  3843                           ; Regs used in _Lcd_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3844                           
  3845                           
  3846                           ;./lcd.h: 117:     short int rem[3]={0,0,0};
  3847  0EF0  3022               	movlw	Lcd_Write_Int@rem& (0+255)
  3848  0EF1  0084               	movwf	4
  3849  0EF2  3006               	movlw	6
  3850  0EF3  00FF               	movwf	btemp+1
  3851  0EF4                     u1570:	
  3852  0EF4  1383               	bcf	3,7	;select IRP bank0
  3853  0EF5  0180               	clrf	0
  3854  0EF6  0A84               	incf	4,f
  3855  0EF7  0BFF               	decfsz	btemp+1,f
  3856  0EF8  2EF4               	goto	u1570
  3857  0EF9                     l1578:	
  3858                           
  3859                           ;./lcd.h: 118:     short int d;;./lcd.h: 119:     if(a<=9){
  3860  0EF9  087A               	movf	Lcd_Write_Int@a+1,w
  3861  0EFA  3A80               	xorlw	128
  3862  0EFB  00FF               	movwf	btemp+1
  3863  0EFC  3080               	movlw	128
  3864  0EFD  027F               	subwf	btemp+1,w
  3865  0EFE  1D03               	skipz
  3866  0EFF  2F02               	goto	u1585
  3867  0F00  300A               	movlw	10
  3868  0F01  0279               	subwf	Lcd_Write_Int@a,w
  3869  0F02                     u1585:	
  3870  0F02  1803               	skipnc
  3871  0F03  2F05               	goto	u1581
  3872  0F04  2F06               	goto	u1580
  3873  0F05                     u1581:	
  3874  0F05  2F0E               	goto	l1586
  3875  0F06                     u1580:	
  3876  0F06                     l1580:	
  3877                           
  3878                           ;./lcd.h: 120:         Lcd_Write_Char(a+48);
  3879  0F06  0879               	movf	Lcd_Write_Int@a,w
  3880  0F07  3E30               	addlw	48
  3881  0F08  120A  158A  2524  120A  158A  	fcall	_Lcd_Write_Char
  3882  0F0D  2FFF               	goto	l107
  3883  0F0E                     l1586:	
  3884  0F0E                     l1588:	
  3885                           
  3886                           ;./lcd.h: 125:         d=a/10;
  3887  0F0E  300A               	movlw	10
  3888  0F0F  00F0               	movwf	___awdiv@divisor
  3889  0F10  3000               	movlw	0
  3890  0F11  00F1               	movwf	___awdiv@divisor+1
  3891  0F12  087A               	movf	Lcd_Write_Int@a+1,w
  3892  0F13  00F3               	movwf	___awdiv@dividend+1
  3893  0F14  0879               	movf	Lcd_Write_Int@a,w
  3894  0F15  00F2               	movwf	___awdiv@dividend
  3895  0F16  120A  158A  260D  120A  158A  	fcall	___awdiv
  3896  0F1B  0871               	movf	?___awdiv+1,w
  3897  0F1C  1283               	bcf	3,5	;RP0=0, select bank0
  3898  0F1D  1303               	bcf	3,6	;RP1=0, select bank0
  3899  0F1E  00A9               	movwf	Lcd_Write_Int@d+1
  3900  0F1F  0870               	movf	?___awdiv,w
  3901  0F20  00A8               	movwf	Lcd_Write_Int@d
  3902  0F21                     l1590:	
  3903                           
  3904                           ;./lcd.h: 126:         rem[0]=(a-(d*10));
  3905  0F21  0829               	movf	Lcd_Write_Int@d+1,w
  3906  0F22  00F1               	movwf	___wmul@multiplier+1
  3907  0F23  0828               	movf	Lcd_Write_Int@d,w
  3908  0F24  00F0               	movwf	___wmul@multiplier
  3909  0F25  30F6               	movlw	246
  3910  0F26  00F2               	movwf	___wmul@multiplicand
  3911  0F27  30FF               	movlw	255
  3912  0F28  00F3               	movwf	___wmul@multiplicand+1
  3913  0F29  120A  158A  24B3  120A  158A  	fcall	___wmul
  3914  0F2E  0879               	movf	Lcd_Write_Int@a,w
  3915  0F2F  0770               	addwf	?___wmul,w
  3916  0F30  1283               	bcf	3,5	;RP0=0, select bank0
  3917  0F31  1303               	bcf	3,6	;RP1=0, select bank0
  3918  0F32  00A2               	movwf	Lcd_Write_Int@rem
  3919  0F33  087A               	movf	Lcd_Write_Int@a+1,w
  3920  0F34  1803               	skipnc
  3921  0F35  0A7A               	incf	Lcd_Write_Int@a+1,w
  3922  0F36  0771               	addwf	?___wmul+1,w
  3923  0F37  00A3               	movwf	Lcd_Write_Int@rem+1
  3924  0F38                     l1592:	
  3925                           
  3926                           ;./lcd.h: 127:         a=d;
  3927  0F38  0829               	movf	Lcd_Write_Int@d+1,w
  3928  0F39  00FA               	movwf	Lcd_Write_Int@a+1
  3929  0F3A  0828               	movf	Lcd_Write_Int@d,w
  3930  0F3B  00F9               	movwf	Lcd_Write_Int@a
  3931  0F3C                     l1594:	
  3932                           
  3933                           ;./lcd.h: 128:         if(a<=9){
  3934  0F3C  087A               	movf	Lcd_Write_Int@a+1,w
  3935  0F3D  3A80               	xorlw	128
  3936  0F3E  00FF               	movwf	btemp+1
  3937  0F3F  3080               	movlw	128
  3938  0F40  027F               	subwf	btemp+1,w
  3939  0F41  1D03               	skipz
  3940  0F42  2F45               	goto	u1595
  3941  0F43  300A               	movlw	10
  3942  0F44  0279               	subwf	Lcd_Write_Int@a,w
  3943  0F45                     u1595:	
  3944  0F45  1803               	skipnc
  3945  0F46  2F48               	goto	u1591
  3946  0F47  2F49               	goto	u1590
  3947  0F48                     u1591:	
  3948  0F48  2F5A               	goto	l1598
  3949  0F49                     u1590:	
  3950  0F49                     l1596:	
  3951                           
  3952                           ;./lcd.h: 129:             Lcd_Write_Char(a+48);
  3953  0F49  0879               	movf	Lcd_Write_Int@a,w
  3954  0F4A  3E30               	addlw	48
  3955  0F4B  120A  158A  2524  120A  158A  	fcall	_Lcd_Write_Char
  3956                           
  3957                           ;./lcd.h: 130:             Lcd_Write_Char(rem[0]+48);
  3958  0F50  1283               	bcf	3,5	;RP0=0, select bank0
  3959  0F51  1303               	bcf	3,6	;RP1=0, select bank0
  3960  0F52  0822               	movf	Lcd_Write_Int@rem,w
  3961  0F53  3E30               	addlw	48
  3962  0F54  120A  158A  2524  120A  158A  	fcall	_Lcd_Write_Char
  3963                           
  3964                           ;./lcd.h: 131:         }else{
  3965  0F59  2FFF               	goto	l107
  3966  0F5A                     l1598:	
  3967                           
  3968                           ;./lcd.h: 132:             d=a/10;
  3969  0F5A  300A               	movlw	10
  3970  0F5B  00F0               	movwf	___awdiv@divisor
  3971  0F5C  3000               	movlw	0
  3972  0F5D  00F1               	movwf	___awdiv@divisor+1
  3973  0F5E  087A               	movf	Lcd_Write_Int@a+1,w
  3974  0F5F  00F3               	movwf	___awdiv@dividend+1
  3975  0F60  0879               	movf	Lcd_Write_Int@a,w
  3976  0F61  00F2               	movwf	___awdiv@dividend
  3977  0F62  120A  158A  260D  120A  158A  	fcall	___awdiv
  3978  0F67  0871               	movf	?___awdiv+1,w
  3979  0F68  1283               	bcf	3,5	;RP0=0, select bank0
  3980  0F69  1303               	bcf	3,6	;RP1=0, select bank0
  3981  0F6A  00A9               	movwf	Lcd_Write_Int@d+1
  3982  0F6B  0870               	movf	?___awdiv,w
  3983  0F6C  00A8               	movwf	Lcd_Write_Int@d
  3984                           
  3985                           ;./lcd.h: 133:             rem[1]=(a-(d*10));
  3986  0F6D  0829               	movf	Lcd_Write_Int@d+1,w
  3987  0F6E  00F1               	movwf	___wmul@multiplier+1
  3988  0F6F  0828               	movf	Lcd_Write_Int@d,w
  3989  0F70  00F0               	movwf	___wmul@multiplier
  3990  0F71  30F6               	movlw	246
  3991  0F72  00F2               	movwf	___wmul@multiplicand
  3992  0F73  30FF               	movlw	255
  3993  0F74  00F3               	movwf	___wmul@multiplicand+1
  3994  0F75  120A  158A  24B3  120A  158A  	fcall	___wmul
  3995  0F7A  0879               	movf	Lcd_Write_Int@a,w
  3996  0F7B  0770               	addwf	?___wmul,w
  3997  0F7C  1283               	bcf	3,5	;RP0=0, select bank0
  3998  0F7D  1303               	bcf	3,6	;RP1=0, select bank0
  3999  0F7E  00A4               	movwf	Lcd_Write_Int@rem+2
  4000  0F7F  087A               	movf	Lcd_Write_Int@a+1,w
  4001  0F80  1803               	skipnc
  4002  0F81  0A7A               	incf	Lcd_Write_Int@a+1,w
  4003  0F82  0771               	addwf	?___wmul+1,w
  4004  0F83  00A5               	movwf	Lcd_Write_Int@rem+3
  4005  0F84                     l1600:	
  4006                           
  4007                           ;./lcd.h: 134:             a=d;
  4008  0F84  0829               	movf	Lcd_Write_Int@d+1,w
  4009  0F85  00FA               	movwf	Lcd_Write_Int@a+1
  4010  0F86  0828               	movf	Lcd_Write_Int@d,w
  4011  0F87  00F9               	movwf	Lcd_Write_Int@a
  4012  0F88                     l1602:	
  4013                           
  4014                           ;./lcd.h: 135:             if(a<=9){
  4015  0F88  087A               	movf	Lcd_Write_Int@a+1,w
  4016  0F89  3A80               	xorlw	128
  4017  0F8A  00FF               	movwf	btemp+1
  4018  0F8B  3080               	movlw	128
  4019  0F8C  027F               	subwf	btemp+1,w
  4020  0F8D  1D03               	skipz
  4021  0F8E  2F91               	goto	u1605
  4022  0F8F  300A               	movlw	10
  4023  0F90  0279               	subwf	Lcd_Write_Int@a,w
  4024  0F91                     u1605:	
  4025  0F91  1803               	skipnc
  4026  0F92  2F94               	goto	u1601
  4027  0F93  2F95               	goto	u1600
  4028  0F94                     u1601:	
  4029  0F94  2FAF               	goto	l1606
  4030  0F95                     u1600:	
  4031  0F95                     l1604:	
  4032                           
  4033                           ;./lcd.h: 136:                 Lcd_Write_Char(a+48);
  4034  0F95  0879               	movf	Lcd_Write_Int@a,w
  4035  0F96  3E30               	addlw	48
  4036  0F97  120A  158A  2524  120A  158A  	fcall	_Lcd_Write_Char
  4037                           
  4038                           ;./lcd.h: 137:                 Lcd_Write_Char(rem[0]+48);
  4039  0F9C  1283               	bcf	3,5	;RP0=0, select bank0
  4040  0F9D  1303               	bcf	3,6	;RP1=0, select bank0
  4041  0F9E  0822               	movf	Lcd_Write_Int@rem,w
  4042  0F9F  3E30               	addlw	48
  4043  0FA0  120A  158A  2524  120A  158A  	fcall	_Lcd_Write_Char
  4044                           
  4045                           ;./lcd.h: 138:                 Lcd_Write_Char(rem[1]+48);
  4046  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  4047  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  4048  0FA7  0824               	movf	Lcd_Write_Int@rem+2,w
  4049  0FA8  3E30               	addlw	48
  4050  0FA9  120A  158A  2524  120A  158A  	fcall	_Lcd_Write_Char
  4051                           
  4052                           ;./lcd.h: 139:             }else{
  4053  0FAE  2FFF               	goto	l107
  4054  0FAF                     l1606:	
  4055                           
  4056                           ;./lcd.h: 140:                 d=a/10;
  4057  0FAF  300A               	movlw	10
  4058  0FB0  00F0               	movwf	___awdiv@divisor
  4059  0FB1  3000               	movlw	0
  4060  0FB2  00F1               	movwf	___awdiv@divisor+1
  4061  0FB3  087A               	movf	Lcd_Write_Int@a+1,w
  4062  0FB4  00F3               	movwf	___awdiv@dividend+1
  4063  0FB5  0879               	movf	Lcd_Write_Int@a,w
  4064  0FB6  00F2               	movwf	___awdiv@dividend
  4065  0FB7  120A  158A  260D  120A  158A  	fcall	___awdiv
  4066  0FBC  0871               	movf	?___awdiv+1,w
  4067  0FBD  1283               	bcf	3,5	;RP0=0, select bank0
  4068  0FBE  1303               	bcf	3,6	;RP1=0, select bank0
  4069  0FBF  00A9               	movwf	Lcd_Write_Int@d+1
  4070  0FC0  0870               	movf	?___awdiv,w
  4071  0FC1  00A8               	movwf	Lcd_Write_Int@d
  4072                           
  4073                           ;./lcd.h: 141:                 rem[0]=(a-(d*10));
  4074  0FC2  0829               	movf	Lcd_Write_Int@d+1,w
  4075  0FC3  00F1               	movwf	___wmul@multiplier+1
  4076  0FC4  0828               	movf	Lcd_Write_Int@d,w
  4077  0FC5  00F0               	movwf	___wmul@multiplier
  4078  0FC6  30F6               	movlw	246
  4079  0FC7  00F2               	movwf	___wmul@multiplicand
  4080  0FC8  30FF               	movlw	255
  4081  0FC9  00F3               	movwf	___wmul@multiplicand+1
  4082  0FCA  120A  158A  24B3  120A  158A  	fcall	___wmul
  4083  0FCF  0879               	movf	Lcd_Write_Int@a,w
  4084  0FD0  0770               	addwf	?___wmul,w
  4085  0FD1  1283               	bcf	3,5	;RP0=0, select bank0
  4086  0FD2  1303               	bcf	3,6	;RP1=0, select bank0
  4087  0FD3  00A2               	movwf	Lcd_Write_Int@rem
  4088  0FD4  087A               	movf	Lcd_Write_Int@a+1,w
  4089  0FD5  1803               	skipnc
  4090  0FD6  0A7A               	incf	Lcd_Write_Int@a+1,w
  4091  0FD7  0771               	addwf	?___wmul+1,w
  4092  0FD8  00A3               	movwf	Lcd_Write_Int@rem+1
  4093  0FD9                     l1608:	
  4094                           
  4095                           ;./lcd.h: 142:                 a=d;
  4096  0FD9  0829               	movf	Lcd_Write_Int@d+1,w
  4097  0FDA  00FA               	movwf	Lcd_Write_Int@a+1
  4098  0FDB  0828               	movf	Lcd_Write_Int@d,w
  4099  0FDC  00F9               	movwf	Lcd_Write_Int@a
  4100  0FDD                     l1610:	
  4101                           
  4102                           ;./lcd.h: 143:                 Lcd_Write_Char(a+48);
  4103  0FDD  0879               	movf	Lcd_Write_Int@a,w
  4104  0FDE  3E30               	addlw	48
  4105  0FDF  120A  158A  2524  120A  158A  	fcall	_Lcd_Write_Char
  4106  0FE4                     l1612:	
  4107                           
  4108                           ;./lcd.h: 144:                 Lcd_Write_Char(rem[0]+48);
  4109  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  4110  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  4111  0FE6  0822               	movf	Lcd_Write_Int@rem,w
  4112  0FE7  3E30               	addlw	48
  4113  0FE8  120A  158A  2524  120A  158A  	fcall	_Lcd_Write_Char
  4114  0FED                     l1614:	
  4115                           
  4116                           ;./lcd.h: 145:                 Lcd_Write_Char(rem[1]+48);
  4117  0FED  1283               	bcf	3,5	;RP0=0, select bank0
  4118  0FEE  1303               	bcf	3,6	;RP1=0, select bank0
  4119  0FEF  0824               	movf	Lcd_Write_Int@rem+2,w
  4120  0FF0  3E30               	addlw	48
  4121  0FF1  120A  158A  2524  120A  158A  	fcall	_Lcd_Write_Char
  4122  0FF6                     l1616:	
  4123                           
  4124                           ;./lcd.h: 146:                 Lcd_Write_Char(rem[2]+48);
  4125  0FF6  1283               	bcf	3,5	;RP0=0, select bank0
  4126  0FF7  1303               	bcf	3,6	;RP1=0, select bank0
  4127  0FF8  0826               	movf	Lcd_Write_Int@rem+4,w
  4128  0FF9  3E30               	addlw	48
  4129  0FFA  120A  158A  2524  120A  158A  	fcall	_Lcd_Write_Char
  4130  0FFF                     l107:	
  4131  0FFF  0008               	return
  4132  1000                     __end_of_Lcd_Write_Int:	
  4133                           
  4134                           	psect	text11
  4135  0CB3                     __ptext11:	
  4136 ;; *************** function ___wmul *****************
  4137 ;; Defined at:
  4138 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;  multiplier      2    0[COMMON] unsigned int 
  4141 ;;  multiplicand    2    2[COMMON] unsigned int 
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;  product         2    4[COMMON] unsigned int 
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  2    0[COMMON] unsigned int 
  4146 ;; Registers used:
  4147 ;;		wreg, status,2, status,0
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4153 ;;      Params:         4       0       0       0       0
  4154 ;;      Locals:         2       0       0       0       0
  4155 ;;      Temps:          0       0       0       0       0
  4156 ;;      Totals:         6       0       0       0       0
  4157 ;;Total ram usage:        6 bytes
  4158 ;; Hardware stack levels used:    1
  4159 ;; This function calls:
  4160 ;;		Nothing
  4161 ;; This function is called by:
  4162 ;;		_Lcd_Write_Int
  4163 ;;		_main
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           
  4168                           ;psect for function ___wmul
  4169  0CB3                     ___wmul:	
  4170  0CB3                     l1464:	
  4171                           ;incstack = 0
  4172                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4173                           
  4174  0CB3  01F4               	clrf	___wmul@product
  4175  0CB4  01F5               	clrf	___wmul@product+1
  4176  0CB5                     l1466:	
  4177  0CB5  1C70               	btfss	___wmul@multiplier,0
  4178  0CB6  2CB8               	goto	u1351
  4179  0CB7  2CB9               	goto	u1350
  4180  0CB8                     u1351:	
  4181  0CB8  2CBF               	goto	l300
  4182  0CB9                     u1350:	
  4183  0CB9                     l1468:	
  4184  0CB9  0872               	movf	___wmul@multiplicand,w
  4185  0CBA  07F4               	addwf	___wmul@product,f
  4186  0CBB  1803               	skipnc
  4187  0CBC  0AF5               	incf	___wmul@product+1,f
  4188  0CBD  0873               	movf	___wmul@multiplicand+1,w
  4189  0CBE  07F5               	addwf	___wmul@product+1,f
  4190  0CBF                     l300:	
  4191  0CBF  3001               	movlw	1
  4192  0CC0                     u1365:	
  4193  0CC0  1003               	clrc
  4194  0CC1  0DF2               	rlf	___wmul@multiplicand,f
  4195  0CC2  0DF3               	rlf	___wmul@multiplicand+1,f
  4196  0CC3  3EFF               	addlw	-1
  4197  0CC4  1D03               	skipz
  4198  0CC5  2CC0               	goto	u1365
  4199  0CC6                     l1470:	
  4200  0CC6  3001               	movlw	1
  4201  0CC7                     u1375:	
  4202  0CC7  1003               	clrc
  4203  0CC8  0CF1               	rrf	___wmul@multiplier+1,f
  4204  0CC9  0CF0               	rrf	___wmul@multiplier,f
  4205  0CCA  3EFF               	addlw	-1
  4206  0CCB  1D03               	skipz
  4207  0CCC  2CC7               	goto	u1375
  4208  0CCD                     l1472:	
  4209  0CCD  0870               	movf	___wmul@multiplier,w
  4210  0CCE  0471               	iorwf	___wmul@multiplier+1,w
  4211  0CCF  1D03               	btfss	3,2
  4212  0CD0  2CD2               	goto	u1381
  4213  0CD1  2CD3               	goto	u1380
  4214  0CD2                     u1381:	
  4215  0CD2  2CB5               	goto	l1466
  4216  0CD3                     u1380:	
  4217  0CD3                     l1474:	
  4218  0CD3  0875               	movf	___wmul@product+1,w
  4219  0CD4  00F1               	movwf	?___wmul+1
  4220  0CD5  0874               	movf	___wmul@product,w
  4221  0CD6  00F0               	movwf	?___wmul
  4222  0CD7                     l302:	
  4223  0CD7  0008               	return
  4224  0CD8                     __end_of___wmul:	
  4225                           
  4226                           	psect	text12
  4227  0E0D                     __ptext12:	
  4228 ;; *************** function ___awdiv *****************
  4229 ;; Defined at:
  4230 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;  divisor         2    0[COMMON] int 
  4233 ;;  dividend        2    2[COMMON] int 
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;  quotient        2    7[COMMON] int 
  4236 ;;  sign            1    6[COMMON] unsigned char 
  4237 ;;  counter         1    5[COMMON] unsigned char 
  4238 ;; Return value:  Size  Location     Type
  4239 ;;                  2    0[COMMON] int 
  4240 ;; Registers used:
  4241 ;;		wreg, status,2, status,0
  4242 ;; Tracked objects:
  4243 ;;		On entry : 0/0
  4244 ;;		On exit  : 0/0
  4245 ;;		Unchanged: 0/0
  4246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4247 ;;      Params:         4       0       0       0       0
  4248 ;;      Locals:         4       0       0       0       0
  4249 ;;      Temps:          1       0       0       0       0
  4250 ;;      Totals:         9       0       0       0       0
  4251 ;;Total ram usage:        9 bytes
  4252 ;; Hardware stack levels used:    1
  4253 ;; This function calls:
  4254 ;;		Nothing
  4255 ;; This function is called by:
  4256 ;;		_Lcd_Write_Int
  4257 ;;		_main
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260                           
  4261                           
  4262                           ;psect for function ___awdiv
  4263  0E0D                     ___awdiv:	
  4264  0E0D                     l1478:	
  4265                           ;incstack = 0
  4266                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4267                           
  4268  0E0D  01F6               	clrf	___awdiv@sign
  4269  0E0E                     l1480:	
  4270  0E0E  1FF1               	btfss	___awdiv@divisor+1,7
  4271  0E0F  2E11               	goto	u1391
  4272  0E10  2E12               	goto	u1390
  4273  0E11                     u1391:	
  4274  0E11  2E19               	goto	l1486
  4275  0E12                     u1390:	
  4276  0E12                     l1482:	
  4277  0E12  09F0               	comf	___awdiv@divisor,f
  4278  0E13  09F1               	comf	___awdiv@divisor+1,f
  4279  0E14  0AF0               	incf	___awdiv@divisor,f
  4280  0E15  1903               	skipnz
  4281  0E16  0AF1               	incf	___awdiv@divisor+1,f
  4282  0E17                     l1484:	
  4283  0E17  01F6               	clrf	___awdiv@sign
  4284  0E18  0AF6               	incf	___awdiv@sign,f
  4285  0E19                     l1486:	
  4286  0E19  1FF3               	btfss	___awdiv@dividend+1,7
  4287  0E1A  2E1C               	goto	u1401
  4288  0E1B  2E1D               	goto	u1400
  4289  0E1C                     u1401:	
  4290  0E1C  2E26               	goto	l1492
  4291  0E1D                     u1400:	
  4292  0E1D                     l1488:	
  4293  0E1D  09F2               	comf	___awdiv@dividend,f
  4294  0E1E  09F3               	comf	___awdiv@dividend+1,f
  4295  0E1F  0AF2               	incf	___awdiv@dividend,f
  4296  0E20  1903               	skipnz
  4297  0E21  0AF3               	incf	___awdiv@dividend+1,f
  4298  0E22                     l1490:	
  4299  0E22  3001               	movlw	1
  4300  0E23  00F4               	movwf	??___awdiv
  4301  0E24  0874               	movf	??___awdiv,w
  4302  0E25  06F6               	xorwf	___awdiv@sign,f
  4303  0E26                     l1492:	
  4304  0E26  01F7               	clrf	___awdiv@quotient
  4305  0E27  01F8               	clrf	___awdiv@quotient+1
  4306  0E28                     l1494:	
  4307  0E28  0870               	movf	___awdiv@divisor,w
  4308  0E29  0471               	iorwf	___awdiv@divisor+1,w
  4309  0E2A  1903               	btfsc	3,2
  4310  0E2B  2E2D               	goto	u1411
  4311  0E2C  2E2E               	goto	u1410
  4312  0E2D                     u1411:	
  4313  0E2D  2E65               	goto	l1514
  4314  0E2E                     u1410:	
  4315  0E2E                     l1496:	
  4316  0E2E  01F5               	clrf	___awdiv@counter
  4317  0E2F  0AF5               	incf	___awdiv@counter,f
  4318  0E30  2E3C               	goto	l1502
  4319  0E31                     l1498:	
  4320  0E31  3001               	movlw	1
  4321  0E32                     u1425:	
  4322  0E32  1003               	clrc
  4323  0E33  0DF0               	rlf	___awdiv@divisor,f
  4324  0E34  0DF1               	rlf	___awdiv@divisor+1,f
  4325  0E35  3EFF               	addlw	-1
  4326  0E36  1D03               	skipz
  4327  0E37  2E32               	goto	u1425
  4328  0E38                     l1500:	
  4329  0E38  3001               	movlw	1
  4330  0E39  00F4               	movwf	??___awdiv
  4331  0E3A  0874               	movf	??___awdiv,w
  4332  0E3B  07F5               	addwf	___awdiv@counter,f
  4333  0E3C                     l1502:	
  4334  0E3C  1FF1               	btfss	___awdiv@divisor+1,7
  4335  0E3D  2E3F               	goto	u1431
  4336  0E3E  2E40               	goto	u1430
  4337  0E3F                     u1431:	
  4338  0E3F  2E31               	goto	l1498
  4339  0E40                     u1430:	
  4340  0E40                     l1504:	
  4341  0E40  3001               	movlw	1
  4342  0E41                     u1445:	
  4343  0E41  1003               	clrc
  4344  0E42  0DF7               	rlf	___awdiv@quotient,f
  4345  0E43  0DF8               	rlf	___awdiv@quotient+1,f
  4346  0E44  3EFF               	addlw	-1
  4347  0E45  1D03               	skipz
  4348  0E46  2E41               	goto	u1445
  4349  0E47  0871               	movf	___awdiv@divisor+1,w
  4350  0E48  0273               	subwf	___awdiv@dividend+1,w
  4351  0E49  1D03               	skipz
  4352  0E4A  2E4D               	goto	u1455
  4353  0E4B  0870               	movf	___awdiv@divisor,w
  4354  0E4C  0272               	subwf	___awdiv@dividend,w
  4355  0E4D                     u1455:	
  4356  0E4D  1C03               	skipc
  4357  0E4E  2E50               	goto	u1451
  4358  0E4F  2E51               	goto	u1450
  4359  0E50                     u1451:	
  4360  0E50  2E58               	goto	l1510
  4361  0E51                     u1450:	
  4362  0E51                     l1506:	
  4363  0E51  0870               	movf	___awdiv@divisor,w
  4364  0E52  02F2               	subwf	___awdiv@dividend,f
  4365  0E53  0871               	movf	___awdiv@divisor+1,w
  4366  0E54  1C03               	skipc
  4367  0E55  03F3               	decf	___awdiv@dividend+1,f
  4368  0E56  02F3               	subwf	___awdiv@dividend+1,f
  4369  0E57                     l1508:	
  4370  0E57  1477               	bsf	___awdiv@quotient,0
  4371  0E58                     l1510:	
  4372  0E58  3001               	movlw	1
  4373  0E59                     u1465:	
  4374  0E59  1003               	clrc
  4375  0E5A  0CF1               	rrf	___awdiv@divisor+1,f
  4376  0E5B  0CF0               	rrf	___awdiv@divisor,f
  4377  0E5C  3EFF               	addlw	-1
  4378  0E5D  1D03               	skipz
  4379  0E5E  2E59               	goto	u1465
  4380  0E5F                     l1512:	
  4381  0E5F  3001               	movlw	1
  4382  0E60  02F5               	subwf	___awdiv@counter,f
  4383  0E61  1D03               	btfss	3,2
  4384  0E62  2E64               	goto	u1471
  4385  0E63  2E65               	goto	u1470
  4386  0E64                     u1471:	
  4387  0E64  2E40               	goto	l1504
  4388  0E65                     u1470:	
  4389  0E65                     l1514:	
  4390  0E65  0876               	movf	___awdiv@sign,w
  4391  0E66  1903               	btfsc	3,2
  4392  0E67  2E69               	goto	u1481
  4393  0E68  2E6A               	goto	u1480
  4394  0E69                     u1481:	
  4395  0E69  2E6F               	goto	l1518
  4396  0E6A                     u1480:	
  4397  0E6A                     l1516:	
  4398  0E6A  09F7               	comf	___awdiv@quotient,f
  4399  0E6B  09F8               	comf	___awdiv@quotient+1,f
  4400  0E6C  0AF7               	incf	___awdiv@quotient,f
  4401  0E6D  1903               	skipnz
  4402  0E6E  0AF8               	incf	___awdiv@quotient+1,f
  4403  0E6F                     l1518:	
  4404  0E6F  0878               	movf	___awdiv@quotient+1,w
  4405  0E70  00F1               	movwf	?___awdiv+1
  4406  0E71  0877               	movf	___awdiv@quotient,w
  4407  0E72  00F0               	movwf	?___awdiv
  4408  0E73                     l453:	
  4409  0E73  0008               	return
  4410  0E74                     __end_of___awdiv:	
  4411                           
  4412                           	psect	text13
  4413  0D24                     __ptext13:	
  4414 ;; *************** function _Lcd_Write_Char *****************
  4415 ;; Defined at:
  4416 ;;		line 81 in file "./lcd.h"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  a               1    wreg     unsigned char 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  a               1    4[COMMON] unsigned char 
  4421 ;;  y               1    3[COMMON] unsigned char 
  4422 ;;  temp            1    2[COMMON] unsigned char 
  4423 ;; Return value:  Size  Location     Type
  4424 ;;                  1    wreg      void 
  4425 ;; Registers used:
  4426 ;;		wreg, status,2, status,0, pclath, cstack
  4427 ;; Tracked objects:
  4428 ;;		On entry : 0/0
  4429 ;;		On exit  : 0/0
  4430 ;;		Unchanged: 0/0
  4431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4432 ;;      Params:         0       0       0       0       0
  4433 ;;      Locals:         3       0       0       0       0
  4434 ;;      Temps:          1       0       0       0       0
  4435 ;;      Totals:         4       0       0       0       0
  4436 ;;Total ram usage:        4 bytes
  4437 ;; Hardware stack levels used:    1
  4438 ;; Hardware stack levels required when called:    1
  4439 ;; This function calls:
  4440 ;;		_Lcd_Port
  4441 ;; This function is called by:
  4442 ;;		_Lcd_Write_String
  4443 ;;		_Lcd_Write_Int
  4444 ;;		_main
  4445 ;; This function uses a non-reentrant model
  4446 ;;
  4447                           
  4448                           
  4449                           ;psect for function _Lcd_Write_Char
  4450  0D24                     _Lcd_Write_Char:	
  4451                           
  4452                           ;incstack = 0
  4453                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4454                           ;Lcd_Write_Char@a stored from wreg
  4455  0D24  00F4               	movwf	Lcd_Write_Char@a
  4456  0D25                     l1444:	
  4457                           
  4458                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char temp,y;;./
      +                          lcd.h: 84:    temp = a&0x0F;
  4459  0D25  0874               	movf	Lcd_Write_Char@a,w
  4460  0D26  390F               	andlw	15
  4461  0D27  00F1               	movwf	??_Lcd_Write_Char
  4462  0D28  0871               	movf	??_Lcd_Write_Char,w
  4463  0D29  00F2               	movwf	Lcd_Write_Char@temp
  4464                           
  4465                           ;./lcd.h: 85:    y = a&0xF0;
  4466  0D2A  0874               	movf	Lcd_Write_Char@a,w
  4467  0D2B  39F0               	andlw	240
  4468  0D2C  00F1               	movwf	??_Lcd_Write_Char
  4469  0D2D  0871               	movf	??_Lcd_Write_Char,w
  4470  0D2E  00F3               	movwf	Lcd_Write_Char@y
  4471  0D2F                     l1446:	
  4472                           
  4473                           ;./lcd.h: 86:    RD1 = 1;
  4474  0D2F  1283               	bcf	3,5	;RP0=0, select bank0
  4475  0D30  1303               	bcf	3,6	;RP1=0, select bank0
  4476  0D31  1488               	bsf	8,1	;volatile
  4477  0D32                     l1448:	
  4478                           
  4479                           ;./lcd.h: 87:    Lcd_Port(y>>4);
  4480  0D32  0873               	movf	Lcd_Write_Char@y,w
  4481  0D33  00F1               	movwf	??_Lcd_Write_Char
  4482  0D34  3004               	movlw	4
  4483  0D35                     u1345:	
  4484  0D35  1003               	clrc
  4485  0D36  0CF1               	rrf	??_Lcd_Write_Char,f
  4486  0D37  3EFF               	addlw	-1
  4487  0D38  1D03               	skipz
  4488  0D39  2D35               	goto	u1345
  4489  0D3A  0871               	movf	??_Lcd_Write_Char,w
  4490  0D3B  120A  158A  2491  120A  158A  	fcall	_Lcd_Port
  4491  0D40                     l1450:	
  4492                           
  4493                           ;./lcd.h: 88:    RD3 = 1;
  4494  0D40  1283               	bcf	3,5	;RP0=0, select bank0
  4495  0D41  1303               	bcf	3,6	;RP1=0, select bank0
  4496  0D42  1588               	bsf	8,3	;volatile
  4497  0D43                     l1452:	
  4498                           
  4499                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  4500  0D43  3042               	movlw	66
  4501  0D44  00F1               	movwf	??_Lcd_Write_Char
  4502  0D45                     u2687:	
  4503  0D45  0BF1               	decfsz	??_Lcd_Write_Char,f
  4504  0D46  2D45               	goto	u2687
  4505  0D47  0000               	nop
  4506  0D48                     l1454:	
  4507                           
  4508                           ;./lcd.h: 90:    RD3 = 0;
  4509  0D48  1283               	bcf	3,5	;RP0=0, select bank0
  4510  0D49  1303               	bcf	3,6	;RP1=0, select bank0
  4511  0D4A  1188               	bcf	8,3	;volatile
  4512  0D4B                     l1456:	
  4513                           
  4514                           ;./lcd.h: 91:    Lcd_Port(temp);
  4515  0D4B  0872               	movf	Lcd_Write_Char@temp,w
  4516  0D4C  120A  158A  2491  120A  158A  	fcall	_Lcd_Port
  4517  0D51                     l1458:	
  4518                           
  4519                           ;./lcd.h: 92:    RD3 = 1;
  4520  0D51  1283               	bcf	3,5	;RP0=0, select bank0
  4521  0D52  1303               	bcf	3,6	;RP1=0, select bank0
  4522  0D53  1588               	bsf	8,3	;volatile
  4523  0D54                     l1460:	
  4524                           
  4525                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  4526  0D54  3042               	movlw	66
  4527  0D55  00F1               	movwf	??_Lcd_Write_Char
  4528  0D56                     u2697:	
  4529  0D56  0BF1               	decfsz	??_Lcd_Write_Char,f
  4530  0D57  2D56               	goto	u2697
  4531  0D58  0000               	nop
  4532  0D59                     l1462:	
  4533                           
  4534                           ;./lcd.h: 94:    RD3 = 0;
  4535  0D59  1283               	bcf	3,5	;RP0=0, select bank0
  4536  0D5A  1303               	bcf	3,6	;RP1=0, select bank0
  4537  0D5B  1188               	bcf	8,3	;volatile
  4538  0D5C                     l89:	
  4539  0D5C  0008               	return
  4540  0D5D                     __end_of_Lcd_Write_Char:	
  4541                           
  4542                           	psect	text14
  4543  0D5D                     __ptext14:	
  4544 ;; *************** function _Lcd_Set_Cursor *****************
  4545 ;; Defined at:
  4546 ;;		line 41 in file "./lcd.h"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;  a               1    wreg     unsigned char 
  4549 ;;  b               1    4[COMMON] unsigned char 
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;  a               1    7[COMMON] unsigned char 
  4552 ;;  temp            1   10[COMMON] unsigned char 
  4553 ;;  y               1    9[COMMON] unsigned char 
  4554 ;;  z               1    8[COMMON] unsigned char 
  4555 ;; Return value:  Size  Location     Type
  4556 ;;                  1    wreg      void 
  4557 ;; Registers used:
  4558 ;;		wreg, status,2, status,0, pclath, cstack
  4559 ;; Tracked objects:
  4560 ;;		On entry : 0/0
  4561 ;;		On exit  : 0/0
  4562 ;;		Unchanged: 0/0
  4563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4564 ;;      Params:         1       0       0       0       0
  4565 ;;      Locals:         4       0       0       0       0
  4566 ;;      Temps:          2       0       0       0       0
  4567 ;;      Totals:         7       0       0       0       0
  4568 ;;Total ram usage:        7 bytes
  4569 ;; Hardware stack levels used:    1
  4570 ;; Hardware stack levels required when called:    2
  4571 ;; This function calls:
  4572 ;;		_Lcd_Cmd
  4573 ;; This function is called by:
  4574 ;;		_main
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578                           
  4579                           ;psect for function _Lcd_Set_Cursor
  4580  0D5D                     _Lcd_Set_Cursor:	
  4581                           
  4582                           ;incstack = 0
  4583                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4584                           ;Lcd_Set_Cursor@a stored from wreg
  4585  0D5D  00F7               	movwf	Lcd_Set_Cursor@a
  4586  0D5E                     l1538:	
  4587                           
  4588                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
  4589  0D5E  0377               	decf	Lcd_Set_Cursor@a,w
  4590  0D5F  1D03               	btfss	3,2
  4591  0D60  2D62               	goto	u1521
  4592  0D61  2D63               	goto	u1520
  4593  0D62                     u1521:	
  4594  0D62  2D86               	goto	l1548
  4595  0D63                     u1520:	
  4596  0D63                     l1540:	
  4597                           
  4598                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
  4599  0D63  0874               	movf	Lcd_Set_Cursor@b,w
  4600  0D64  3E7F               	addlw	127
  4601  0D65  00F5               	movwf	??_Lcd_Set_Cursor
  4602  0D66  0875               	movf	??_Lcd_Set_Cursor,w
  4603  0D67  00FA               	movwf	Lcd_Set_Cursor@temp
  4604                           
  4605                           ;./lcd.h: 47:   z = temp>>4;
  4606  0D68  087A               	movf	Lcd_Set_Cursor@temp,w
  4607  0D69  00F5               	movwf	??_Lcd_Set_Cursor
  4608  0D6A  3004               	movlw	4
  4609  0D6B                     u1535:	
  4610  0D6B  1003               	clrc
  4611  0D6C  0CF5               	rrf	??_Lcd_Set_Cursor,f
  4612  0D6D  3EFF               	addlw	-1
  4613  0D6E  1D03               	skipz
  4614  0D6F  2D6B               	goto	u1535
  4615  0D70  0875               	movf	??_Lcd_Set_Cursor,w
  4616  0D71  00F6               	movwf	??_Lcd_Set_Cursor+1
  4617  0D72  0876               	movf	??_Lcd_Set_Cursor+1,w
  4618  0D73  00F8               	movwf	Lcd_Set_Cursor@z
  4619  0D74                     l1542:	
  4620                           
  4621                           ;./lcd.h: 48:   y = temp & 0x0F;
  4622  0D74  087A               	movf	Lcd_Set_Cursor@temp,w
  4623  0D75  390F               	andlw	15
  4624  0D76  00F5               	movwf	??_Lcd_Set_Cursor
  4625  0D77  0875               	movf	??_Lcd_Set_Cursor,w
  4626  0D78  00F9               	movwf	Lcd_Set_Cursor@y
  4627  0D79                     l1544:	
  4628                           
  4629                           ;./lcd.h: 49:   Lcd_Cmd(z);
  4630  0D79  0878               	movf	Lcd_Set_Cursor@z,w
  4631  0D7A  120A  158A  2477  120A  158A  	fcall	_Lcd_Cmd
  4632  0D7F                     l1546:	
  4633                           
  4634                           ;./lcd.h: 50:   Lcd_Cmd(y);
  4635  0D7F  0879               	movf	Lcd_Set_Cursor@y,w
  4636  0D80  120A  158A  2477  120A  158A  	fcall	_Lcd_Cmd
  4637                           
  4638                           ;./lcd.h: 51:  }
  4639  0D85  2DAE               	goto	l83
  4640  0D86                     l1548:	
  4641  0D86  3002               	movlw	2
  4642  0D87  0677               	xorwf	Lcd_Set_Cursor@a,w
  4643  0D88  1D03               	btfss	3,2
  4644  0D89  2D8B               	goto	u1541
  4645  0D8A  2D8C               	goto	u1540
  4646  0D8B                     u1541:	
  4647  0D8B  2DAE               	goto	l83
  4648  0D8C                     u1540:	
  4649  0D8C                     l1550:	
  4650                           
  4651                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
  4652  0D8C  0874               	movf	Lcd_Set_Cursor@b,w
  4653  0D8D  3EBF               	addlw	191
  4654  0D8E  00F5               	movwf	??_Lcd_Set_Cursor
  4655  0D8F  0875               	movf	??_Lcd_Set_Cursor,w
  4656  0D90  00FA               	movwf	Lcd_Set_Cursor@temp
  4657                           
  4658                           ;./lcd.h: 55:   z = temp>>4;
  4659  0D91  087A               	movf	Lcd_Set_Cursor@temp,w
  4660  0D92  00F5               	movwf	??_Lcd_Set_Cursor
  4661  0D93  3004               	movlw	4
  4662  0D94                     u1555:	
  4663  0D94  1003               	clrc
  4664  0D95  0CF5               	rrf	??_Lcd_Set_Cursor,f
  4665  0D96  3EFF               	addlw	-1
  4666  0D97  1D03               	skipz
  4667  0D98  2D94               	goto	u1555
  4668  0D99  0875               	movf	??_Lcd_Set_Cursor,w
  4669  0D9A  00F6               	movwf	??_Lcd_Set_Cursor+1
  4670  0D9B  0876               	movf	??_Lcd_Set_Cursor+1,w
  4671  0D9C  00F8               	movwf	Lcd_Set_Cursor@z
  4672  0D9D                     l1552:	
  4673                           
  4674                           ;./lcd.h: 56:   y = temp & 0x0F;
  4675  0D9D  087A               	movf	Lcd_Set_Cursor@temp,w
  4676  0D9E  390F               	andlw	15
  4677  0D9F  00F5               	movwf	??_Lcd_Set_Cursor
  4678  0DA0  0875               	movf	??_Lcd_Set_Cursor,w
  4679  0DA1  00F9               	movwf	Lcd_Set_Cursor@y
  4680  0DA2                     l1554:	
  4681                           
  4682                           ;./lcd.h: 57:   Lcd_Cmd(z);
  4683  0DA2  0878               	movf	Lcd_Set_Cursor@z,w
  4684  0DA3  120A  158A  2477  120A  158A  	fcall	_Lcd_Cmd
  4685  0DA8                     l1556:	
  4686                           
  4687                           ;./lcd.h: 58:   Lcd_Cmd(y);
  4688  0DA8  0879               	movf	Lcd_Set_Cursor@y,w
  4689  0DA9  120A  158A  2477  120A  158A  	fcall	_Lcd_Cmd
  4690  0DAE                     l83:	
  4691  0DAE  0008               	return
  4692  0DAF                     __end_of_Lcd_Set_Cursor:	
  4693                           
  4694                           	psect	text15
  4695  0DAF                     __ptext15:	
  4696 ;; *************** function _Lcd_Init *****************
  4697 ;; Defined at:
  4698 ;;		line 62 in file "./lcd.h"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;		None
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;		None
  4703 ;; Return value:  Size  Location     Type
  4704 ;;                  1    wreg      void 
  4705 ;; Registers used:
  4706 ;;		wreg, status,2, status,0, pclath, cstack
  4707 ;; Tracked objects:
  4708 ;;		On entry : 0/0
  4709 ;;		On exit  : 0/0
  4710 ;;		Unchanged: 0/0
  4711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4712 ;;      Params:         0       0       0       0       0
  4713 ;;      Locals:         0       0       0       0       0
  4714 ;;      Temps:          2       0       0       0       0
  4715 ;;      Totals:         2       0       0       0       0
  4716 ;;Total ram usage:        2 bytes
  4717 ;; Hardware stack levels used:    1
  4718 ;; Hardware stack levels required when called:    2
  4719 ;; This function calls:
  4720 ;;		_Lcd_Cmd
  4721 ;;		_Lcd_Port
  4722 ;; This function is called by:
  4723 ;;		_main
  4724 ;; This function uses a non-reentrant model
  4725 ;;
  4726                           
  4727                           
  4728                           ;psect for function _Lcd_Init
  4729  0DAF                     _Lcd_Init:	
  4730  0DAF                     l1558:	
  4731                           ;incstack = 0
  4732                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4733                           
  4734                           
  4735                           ;./lcd.h: 64:   Lcd_Port(0x00);
  4736  0DAF  3000               	movlw	0
  4737  0DB0  120A  158A  2491  120A  158A  	fcall	_Lcd_Port
  4738  0DB5                     l1560:	
  4739                           
  4740                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(20000000/4000.0)));
  4741  0DB5  3082               	movlw	130
  4742  0DB6  00F5               	movwf	??_Lcd_Init+1
  4743  0DB7  30DD               	movlw	221
  4744  0DB8  00F4               	movwf	??_Lcd_Init
  4745  0DB9                     u2707:	
  4746  0DB9  0BF4               	decfsz	??_Lcd_Init,f
  4747  0DBA  2DB9               	goto	u2707
  4748  0DBB  0BF5               	decfsz	??_Lcd_Init+1,f
  4749  0DBC  2DB9               	goto	u2707
  4750  0DBD  2DBE               	nop2
  4751  0DBE                     l1562:	
  4752                           
  4753                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  4754  0DBE  3003               	movlw	3
  4755  0DBF  120A  158A  2477  120A  158A  	fcall	_Lcd_Cmd
  4756                           
  4757                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(20000000/4000.0)));
  4758  0DC4  3021               	movlw	33
  4759  0DC5  00F5               	movwf	??_Lcd_Init+1
  4760  0DC6  3076               	movlw	118
  4761  0DC7  00F4               	movwf	??_Lcd_Init
  4762  0DC8                     u2717:	
  4763  0DC8  0BF4               	decfsz	??_Lcd_Init,f
  4764  0DC9  2DC8               	goto	u2717
  4765  0DCA  0BF5               	decfsz	??_Lcd_Init+1,f
  4766  0DCB  2DC8               	goto	u2717
  4767  0DCC  0000               	nop
  4768  0DCD                     l1564:	
  4769                           
  4770                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  4771  0DCD  3003               	movlw	3
  4772  0DCE  120A  158A  2477  120A  158A  	fcall	_Lcd_Cmd
  4773  0DD3                     l1566:	
  4774                           
  4775                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(20000000/4000.0)));
  4776  0DD3  3048               	movlw	72
  4777  0DD4  00F5               	movwf	??_Lcd_Init+1
  4778  0DD5  306C               	movlw	108
  4779  0DD6  00F4               	movwf	??_Lcd_Init
  4780  0DD7                     u2727:	
  4781  0DD7  0BF4               	decfsz	??_Lcd_Init,f
  4782  0DD8  2DD7               	goto	u2727
  4783  0DD9  0BF5               	decfsz	??_Lcd_Init+1,f
  4784  0DDA  2DD7               	goto	u2727
  4785  0DDB  0000               	nop
  4786                           
  4787                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
  4788  0DDC  3003               	movlw	3
  4789  0DDD  120A  158A  2477  120A  158A  	fcall	_Lcd_Cmd
  4790                           
  4791                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  4792  0DE2  3002               	movlw	2
  4793  0DE3  120A  158A  2477  120A  158A  	fcall	_Lcd_Cmd
  4794                           
  4795                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  4796  0DE8  3002               	movlw	2
  4797  0DE9  120A  158A  2477  120A  158A  	fcall	_Lcd_Cmd
  4798                           
  4799                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
  4800  0DEE  3008               	movlw	8
  4801  0DEF  120A  158A  2477  120A  158A  	fcall	_Lcd_Cmd
  4802                           
  4803                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  4804  0DF4  3000               	movlw	0
  4805  0DF5  120A  158A  2477  120A  158A  	fcall	_Lcd_Cmd
  4806                           
  4807                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
  4808  0DFA  300C               	movlw	12
  4809  0DFB  120A  158A  2477  120A  158A  	fcall	_Lcd_Cmd
  4810                           
  4811                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
  4812  0E00  3000               	movlw	0
  4813  0E01  120A  158A  2477  120A  158A  	fcall	_Lcd_Cmd
  4814                           
  4815                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
  4816  0E06  3006               	movlw	6
  4817  0E07  120A  158A  2477  120A  158A  	fcall	_Lcd_Cmd
  4818  0E0C                     l86:	
  4819  0E0C  0008               	return
  4820  0E0D                     __end_of_Lcd_Init:	
  4821                           
  4822                           	psect	text16
  4823  0C6A                     __ptext16:	
  4824 ;; *************** function _Lcd_Clear *****************
  4825 ;; Defined at:
  4826 ;;		line 35 in file "./lcd.h"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;		None
  4829 ;; Auto vars:     Size  Location     Type
  4830 ;;		None
  4831 ;; Return value:  Size  Location     Type
  4832 ;;                  2   76[None  ] int 
  4833 ;; Registers used:
  4834 ;;		wreg, status,2, status,0, pclath, cstack
  4835 ;; Tracked objects:
  4836 ;;		On entry : 0/0
  4837 ;;		On exit  : 0/0
  4838 ;;		Unchanged: 0/0
  4839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4840 ;;      Params:         0       0       0       0       0
  4841 ;;      Locals:         0       0       0       0       0
  4842 ;;      Temps:          0       0       0       0       0
  4843 ;;      Totals:         0       0       0       0       0
  4844 ;;Total ram usage:        0 bytes
  4845 ;; Hardware stack levels used:    1
  4846 ;; Hardware stack levels required when called:    2
  4847 ;; This function calls:
  4848 ;;		_Lcd_Cmd
  4849 ;; This function is called by:
  4850 ;;		_main
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           
  4855                           ;psect for function _Lcd_Clear
  4856  0C6A                     _Lcd_Clear:	
  4857  0C6A                     l1536:	
  4858                           ;incstack = 0
  4859                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4860                           
  4861                           
  4862                           ;./lcd.h: 37:  Lcd_Cmd(0);
  4863  0C6A  3000               	movlw	0
  4864  0C6B  120A  158A  2477  120A  158A  	fcall	_Lcd_Cmd
  4865                           
  4866                           ;./lcd.h: 38:  Lcd_Cmd(1);
  4867  0C70  3001               	movlw	1
  4868  0C71  120A  158A  2477  120A  158A  	fcall	_Lcd_Cmd
  4869  0C76                     l77:	
  4870  0C76  0008               	return
  4871  0C77                     __end_of_Lcd_Clear:	
  4872                           
  4873                           	psect	text17
  4874  0C77                     __ptext17:	
  4875 ;; *************** function _Lcd_Cmd *****************
  4876 ;; Defined at:
  4877 ;;		line 26 in file "./lcd.h"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;  a               1    wreg     unsigned char 
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;  a               1    3[COMMON] unsigned char 
  4882 ;; Return value:  Size  Location     Type
  4883 ;;                  1    wreg      void 
  4884 ;; Registers used:
  4885 ;;		wreg, status,2, status,0, pclath, cstack
  4886 ;; Tracked objects:
  4887 ;;		On entry : 0/0
  4888 ;;		On exit  : 0/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4891 ;;      Params:         0       0       0       0       0
  4892 ;;      Locals:         1       0       0       0       0
  4893 ;;      Temps:          2       0       0       0       0
  4894 ;;      Totals:         3       0       0       0       0
  4895 ;;Total ram usage:        3 bytes
  4896 ;; Hardware stack levels used:    1
  4897 ;; Hardware stack levels required when called:    1
  4898 ;; This function calls:
  4899 ;;		_Lcd_Port
  4900 ;; This function is called by:
  4901 ;;		_Lcd_Clear
  4902 ;;		_Lcd_Set_Cursor
  4903 ;;		_Lcd_Init
  4904 ;;		_Lcd_Shift_Right
  4905 ;;		_Lcd_Shift_Left
  4906 ;; This function uses a non-reentrant model
  4907 ;;
  4908                           
  4909                           
  4910                           ;psect for function _Lcd_Cmd
  4911  0C77                     _Lcd_Cmd:	
  4912                           
  4913                           ;incstack = 0
  4914                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4915                           ;Lcd_Cmd@a stored from wreg
  4916  0C77  00F3               	movwf	Lcd_Cmd@a
  4917  0C78                     l1434:	
  4918                           
  4919                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  RD1 = 0;
  4920  0C78  1283               	bcf	3,5	;RP0=0, select bank0
  4921  0C79  1303               	bcf	3,6	;RP1=0, select bank0
  4922  0C7A  1088               	bcf	8,1	;volatile
  4923  0C7B                     l1436:	
  4924                           
  4925                           ;./lcd.h: 29:  Lcd_Port(a);
  4926  0C7B  0873               	movf	Lcd_Cmd@a,w
  4927  0C7C  120A  158A  2491  120A  158A  	fcall	_Lcd_Port
  4928  0C81                     l1438:	
  4929                           
  4930                           ;./lcd.h: 30:  RD3 = 1;
  4931  0C81  1283               	bcf	3,5	;RP0=0, select bank0
  4932  0C82  1303               	bcf	3,6	;RP1=0, select bank0
  4933  0C83  1588               	bsf	8,3	;volatile
  4934  0C84                     l1440:	
  4935                           
  4936                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(20000000/4000.0)));
  4937  0C84  301A               	movlw	26
  4938  0C85  00F2               	movwf	??_Lcd_Cmd+1
  4939  0C86  30F8               	movlw	248
  4940  0C87  00F1               	movwf	??_Lcd_Cmd
  4941  0C88                     u2737:	
  4942  0C88  0BF1               	decfsz	??_Lcd_Cmd,f
  4943  0C89  2C88               	goto	u2737
  4944  0C8A  0BF2               	decfsz	??_Lcd_Cmd+1,f
  4945  0C8B  2C88               	goto	u2737
  4946  0C8C  0000               	nop
  4947  0C8D                     l1442:	
  4948                           
  4949                           ;./lcd.h: 32:         RD3 = 0;
  4950  0C8D  1283               	bcf	3,5	;RP0=0, select bank0
  4951  0C8E  1303               	bcf	3,6	;RP1=0, select bank0
  4952  0C8F  1188               	bcf	8,3	;volatile
  4953  0C90                     l74:	
  4954  0C90  0008               	return
  4955  0C91                     __end_of_Lcd_Cmd:	
  4956                           
  4957                           	psect	text18
  4958  0C91                     __ptext18:	
  4959 ;; *************** function _Lcd_Port *****************
  4960 ;; Defined at:
  4961 ;;		line 4 in file "./lcd.h"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;  a               1    wreg     unsigned char 
  4964 ;; Auto vars:     Size  Location     Type
  4965 ;;  a               1    0[COMMON] unsigned char 
  4966 ;; Return value:  Size  Location     Type
  4967 ;;                  1    wreg      void 
  4968 ;; Registers used:
  4969 ;;		wreg
  4970 ;; Tracked objects:
  4971 ;;		On entry : 0/0
  4972 ;;		On exit  : 0/0
  4973 ;;		Unchanged: 0/0
  4974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4975 ;;      Params:         0       0       0       0       0
  4976 ;;      Locals:         1       0       0       0       0
  4977 ;;      Temps:          0       0       0       0       0
  4978 ;;      Totals:         1       0       0       0       0
  4979 ;;Total ram usage:        1 bytes
  4980 ;; Hardware stack levels used:    1
  4981 ;; This function calls:
  4982 ;;		Nothing
  4983 ;; This function is called by:
  4984 ;;		_Lcd_Cmd
  4985 ;;		_Lcd_Init
  4986 ;;		_Lcd_Write_Char
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           
  4990                           
  4991                           ;psect for function _Lcd_Port
  4992  0C91                     _Lcd_Port:	
  4993                           
  4994                           ;incstack = 0
  4995                           ; Regs used in _Lcd_Port: [wreg]
  4996                           ;Lcd_Port@a stored from wreg
  4997  0C91  00F0               	movwf	Lcd_Port@a
  4998  0C92                     l1424:	
  4999                           
  5000                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  5001  0C92  1C70               	btfss	Lcd_Port@a,0
  5002  0C93  2C95               	goto	u1301
  5003  0C94  2C96               	goto	u1300
  5004  0C95                     u1301:	
  5005  0C95  2C9A               	goto	l63
  5006  0C96                     u1300:	
  5007  0C96                     l1426:	
  5008                           
  5009                           ;./lcd.h: 7:   RD4 = 1;
  5010  0C96  1283               	bcf	3,5	;RP0=0, select bank0
  5011  0C97  1303               	bcf	3,6	;RP1=0, select bank0
  5012  0C98  1608               	bsf	8,4	;volatile
  5013  0C99  2C9D               	goto	l64
  5014  0C9A                     l63:	
  5015                           ;./lcd.h: 8:  else
  5016                           
  5017                           
  5018                           ;./lcd.h: 9:   RD4 = 0;
  5019  0C9A  1283               	bcf	3,5	;RP0=0, select bank0
  5020  0C9B  1303               	bcf	3,6	;RP1=0, select bank0
  5021  0C9C  1208               	bcf	8,4	;volatile
  5022  0C9D                     l64:	
  5023                           
  5024                           ;./lcd.h: 11:  if(a & 2)
  5025  0C9D  1CF0               	btfss	Lcd_Port@a,1
  5026  0C9E  2CA0               	goto	u1311
  5027  0C9F  2CA1               	goto	u1310
  5028  0CA0                     u1311:	
  5029  0CA0  2CA3               	goto	l65
  5030  0CA1                     u1310:	
  5031  0CA1                     l1428:	
  5032                           
  5033                           ;./lcd.h: 12:   RD5 = 1;
  5034  0CA1  1688               	bsf	8,5	;volatile
  5035  0CA2  2CA4               	goto	l66
  5036  0CA3                     l65:	
  5037                           ;./lcd.h: 13:  else
  5038                           
  5039                           
  5040                           ;./lcd.h: 14:   RD5 = 0;
  5041  0CA3  1288               	bcf	8,5	;volatile
  5042  0CA4                     l66:	
  5043                           
  5044                           ;./lcd.h: 16:  if(a & 4)
  5045  0CA4  1D70               	btfss	Lcd_Port@a,2
  5046  0CA5  2CA7               	goto	u1321
  5047  0CA6  2CA8               	goto	u1320
  5048  0CA7                     u1321:	
  5049  0CA7  2CAA               	goto	l67
  5050  0CA8                     u1320:	
  5051  0CA8                     l1430:	
  5052                           
  5053                           ;./lcd.h: 17:   RD6 = 1;
  5054  0CA8  1708               	bsf	8,6	;volatile
  5055  0CA9  2CAB               	goto	l68
  5056  0CAA                     l67:	
  5057                           ;./lcd.h: 18:  else
  5058                           
  5059                           
  5060                           ;./lcd.h: 19:   RD6 = 0;
  5061  0CAA  1308               	bcf	8,6	;volatile
  5062  0CAB                     l68:	
  5063                           
  5064                           ;./lcd.h: 21:  if(a & 8)
  5065  0CAB  1DF0               	btfss	Lcd_Port@a,3
  5066  0CAC  2CAE               	goto	u1331
  5067  0CAD  2CAF               	goto	u1330
  5068  0CAE                     u1331:	
  5069  0CAE  2CB1               	goto	l69
  5070  0CAF                     u1330:	
  5071  0CAF                     l1432:	
  5072                           
  5073                           ;./lcd.h: 22:   RD7 = 1;
  5074  0CAF  1788               	bsf	8,7	;volatile
  5075  0CB0  2CB2               	goto	l71
  5076  0CB1                     l69:	
  5077                           ;./lcd.h: 23:  else
  5078                           
  5079                           
  5080                           ;./lcd.h: 24:   RD7 = 0;
  5081  0CB1  1388               	bcf	8,7	;volatile
  5082  0CB2                     l71:	
  5083  0CB2  0008               	return
  5084  0CB3                     __end_of_Lcd_Port:	
  5085  007E                     btemp	set	126	;btemp
  5086  007E                     wtemp0	set	126


Data Sizes:
    Strings     51
    Constant    0
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     42      64
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> STR_8(CODE[7]), STR_7(CODE[6]), STR_6(CODE[4]), STR_5(CODE[3]), 
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[16]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Int->___awdiv
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    9685
                                             37 BANK0      5     5      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                      _Lcd_Write_Int
                   _Lcd_Write_String
                                _OFF
                            ___awdiv
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
                                _aON
                                _bON
                                _cON
 ---------------------------------------------------------------------------------
 (1) _cON                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bON                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _aON                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     457
                                             26 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2721
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _OFF                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     532
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_Int                                       12    10      2    2525
                                              9 COMMON     2     0      2
                                              0 BANK0     10    10      0
                     _Lcd_Write_Char
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     700
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     908
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     760
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_Int
     _Lcd_Write_Char
       _Lcd_Port
     ___awdiv
     ___wmul
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _OFF
   ___awdiv
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___wmul
   ___xxtofl
   _aON
   _bON
   _cON

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2A      40       5       80.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4E      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Dec 18 07:52:27 2020

               __CFG_CP$ON 0000                          pc 0002                         l71 0CB2  
                       l63 0C9A                         l64 0C9D                         l65 0CA3  
                       l66 0CA4                         l74 0C90                         l67 0CAA  
                       l83 0DAE                         l68 0CAB                         l69 0CB1  
                       l77 0C76                         l86 0E0C                         l95 0CFC  
                       l89 0D5C                __CFG_CPD$ON 0000               ___awdiv@sign 0076  
                       fsr 0004        ___wmul@multiplicand 0072        __Umul8_16@word_mpld 0076  
              __CFG_LVP$ON 0000                        l107 0FFF                        l211 0009  
                      l300 0CBF                        l205 0C5B                        l141 04D5  
                      l302 0CD7                        l214 0C55                        l134 0498  
                      l151 053E                        l208 0C61                        l144 0501  
                      l153 053A                        l137 04C4                        l170 05E0  
                      l146 04FD                        l163 05B2                        l155 05B9  
                      l139 04C0                        l148 0512                        l181 0618  
                      l157 0576                        l183 061D                        l192 065E  
                      l176 060C                        l168 0613                        l193 0674  
                      l194 06F0                        l187 063B                        l196 0736  
                      l453 0E73                        l701 0418                        l189 063E  
                      l740 008D                        l493 0EDA                        l741 0099  
                      l733 0071                        l486 0EEF                        l727 002C  
                      l496 0EEF                        l729 00C3                        l746 0D11  
                      l748 0D23                        l695 0390                        l689 0424  
                      _RB0 0030                        _RB1 0031                        _RB2 0032  
                      _RB3 0033                        _RB4 0034                        _RD1 0041  
                      _RB5 0035                        _RE0 0048                        _RB6 0036  
                      _RD3 0043                        _RB7 0037                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      _OFF 0C50                        _aON 0C56                        _bON 0C5C  
                      _cON 0004                        fsr0 0004                        indf 0000  
             ___flmul@aexp 0032               ___flmul@bexp 0033               ___flmul@sign 002D  
             ___flmul@temp 0038               ___flmul@prod 0034                       ?_OFF 0070  
                     ?_aON 0070                       ?_bON 0070                       ?_cON 0070  
             ___fltol@exp1 0044                       l2000 06AA                       l2010 073A  
                     l2002 06AE                       l2020 0799                       l2012 0775  
                     l2004 06E9                       l2030 07C2                       l2022 07A3  
                     l2014 077C                       l2006 06F4                       l2040 07E4  
                     l2032 07CD                       l2024 07AE                       l2016 077E  
                     l2008 072F                       l2034 07D3                       l2026 07B4  
                     l2018 0784                       l1500 0E38                       l2036 07D6  
                     l2028 07BC                       l1430 0CA8                       l1510 0E58  
                     l1502 0E3C                       l2038 07E1                       l1432 0CAF  
                     l1424 0C92                       l1440 0C84                       l1512 0E5F  
                     l1504 0E40                       l1600 0F84                       l1426 0C96  
                     l1442 0C8D                       l1434 0C78                       l1450 0D40  
                     l1506 0E51                       l1514 0E65                       l1610 0FDD  
                     l1602 0F88                       l1530 0D1A                       l1522 0CFE  
                     l1428 0CA1                       l1436 0C7B                       l1540 0D63  
                     l1460 0D54                       l1452 0D43                       l1444 0D25  
                     l1516 0E6A                       l1508 0E57                       l1612 0FE4  
                     l1604 0F95                       l1532 0D1F                       l1524 0D00  
                     l1700 011E                       l1620 0C56                       l1438 0C81  
                     l1550 0D8C                       l1542 0D74                       l1462 0D59  
                     l1454 0D48                       l1446 0D2F                       l1518 0E6F  
                     l1470 0CC6                       l1614 0FED                       l1606 0FAF  
                     l1526 0D07                       l1710 0141                       l1702 0123  
                     l1630 0E81                       l1622 0004                       l1536 0C6A  
                     l1560 0DB5                       l1552 0D9D                       l1544 0D79  
                     l1456 0D4B                       l1448 0D32                       l1480 0E0E  
                     l1472 0CCD                       l1464 0CB3                       l1616 0FF6  
                     l1608 0FD9                       l1624 0C50                       l1528 0D0B  
                     l1800 041C                       l1720 01CF                       l1712 014E  
                     l1704 0128                       l1640 0EA8                       l1562 0DBE  
                     l1554 0DA2                       l1546 0D7F                       l1538 0D5E  
                     l1458 0D51                       l1490 0E22                       l1482 0E12  
                     l1474 0CD3                       l1466 0CB5                       l1570 0CDC  
                     l1730 0231                       l1722 01EB                       l1714 016B  
                     l1650 0EB6                       l1642 0EAA                       l1634 0E8A  
                     l1810 0024                       l1626 0C5C                       l1564 0DCD  
                     l1556 0DA8                       l1548 0D86                       l1492 0E26  
                     l1484 0E17                       l1468 0CB9                       l1580 0F06  
                     l1572 0CE9                       l1740 02C1                       l1732 024E  
                     l1724 01F4                       l1716 0187                       l1708 0131  
                     l1660 0EDF                       l1644 0EAE                       l1652 0EC8  
                     l1636 0E9F                       l1628 0E74                       l1820 004F  
                     l1812 0034                       l1804 000B                       l1900 04D9  
                     l1566 0DD3                       l1558 0DAF                       l1494 0E28  
                     l1486 0E19                       l1478 0E0D                       l1590 0F21  
                     l1574 0CEF                       l1750 0353                       l1742 02EE  
                     l1734 0267                       l1726 0204                       l1718 01B3  
                     l1670 00D5                       l1662 0EE4                       l1638 0EA0  
                     l1830 0083                       l1822 0056                       l1806 0010  
                     l1910 0511                       l1902 04E1                       l1496 0E2E  
                     l1488 0E1D                       l1592 0F38                       l1576 0EF0  
                     l1568 0CD9                       l1752 035C                       l1760 0370  
                     l1744 0314                       l1736 0284                       l1728 0221  
                     l1680 00EA                       l1672 00D6                       l1664 00C4  
                     l1840 00B6                       l1832 0087                       l1824 005A  
                     l1816 003D                       l1808 0014                       l1920 0548  
                     l1912 0516                       l1904 04EE                       l1498 0E31  
                     l1594 0F3C                       l1586 0F0E                       l1578 0EF9  
                     l1762 0374                       l1754 0360                       l1746 033C  
                     l1738 02B1                       l1690 0102                       l1682 00F2  
                     l1674 00DB                       l1666 00CB                       l1658 0ECF  
                     l1842 00BA                       l1834 0091                       l1826 0068  
                     l1818 0042                       l1930 057C                       l1922 054E  
                     l1914 051E                       l1906 0504                       l1596 0F49  
                     l1588 0F0E                       l1780 03C5                       l1772 0395  
                     l1764 0375                       l1756 0361                       l1748 0345  
                     l1692 0107                       l1684 00F7                       l1676 00E0  
                     l1668 00D1                       l1844 00BB                       l1836 009B  
                     l1828 0078                       l1940 05AC                       l1932 0582  
                     l1924 055C                       l1916 052B                       l1908 050B  
                     l1860 043F                       l1852 0425                       l1598 0F5A  
                     l1790 03FC                       l1774 039A                       l1782 03CB  
                     l1766 0379                       l1758 036A                       l1694 010C  
                     l1686 00FD                       l1678 00E8                       l1838 00B1  
                     l1950 05D1                       l1926 0562                       l1934 0588  
                     l1918 0541                       l1870 0450                       l1862 0442  
                     l1854 0433                       l1792 03FE                       l1784 03D8  
                     l1776 03A8                       l1768 038D                       l1696 0114  
                     l1688 0101                       l1960 05F7                       l1936 0598  
                     l1928 0570                       l1880 047E                       l1872 045C  
                     l1864 0445                       l1856 0435                       l1794 040C  
                     l1786 03E3                       l1778 03AC                       l1698 0116  
                     l1962 05FD                       l1946 05BD                       l1938 059E  
                     l1890 04A4                       l1882 048C                       l1874 0462  
                     l1866 0448                       l1858 043C                       l1796 0410  
                     l1788 03F2                       l1980 0627                       l1948 05CB  
                     l1892 04B1                       l1884 0493                       l1876 046A  
                     l1868 044B                       l1798 0411                       l1990 0642  
                     l1982 0633                       l1958 05E7                       l1894 04C7  
                     l1886 0497                       l1878 0478                       l1992 0658  
                     l1984 0639                       l1896 04CE                       l1888 049C  
                     l1994 066E                       l1978 0622                       l1898 04D4  
                     l1996 0684                       l1998 0691                       STR_1 0816  
                     STR_2 0806                       STR_3 0830                       STR_4 0833  
                     STR_5 0836                       STR_6 082C                       STR_7 0826  
                     STR_8 081F                       u2000 038D                       u2001 038C  
                     u2010 0394                       u2011 0393                       u1300 0C96  
                     u2020 039A                       u2100 0034                       u1301 0C95  
                     u2021 0399                       u2101 0033                       u1310 0CA1  
                     u2030 03AC                       u1311 0CA0                       u2031 03AB  
                     u1320 0CA8                       u1400 0E1D                       u2040 03BB  
                     u2200 00B6                       u2120 0055                       u1321 0CA7  
                     u1401 0E1C                       u2201 00B5                       u2121 0054  
                     u1330 0CAF                       u1410 0E2E                       u2050 03D8  
                     u2210 00BA                       u1331 0CAE                       u1411 0E2D  
                     u2051 03D7                       u2211 00B9                       u2115 0047  
                     u2060 03F2                       u2140 0077                       u2300 053A  
                     u2220 049C                       u2061 03F1                       u2045 03B6  
                     u2141 0076                       u2301 0539                       u2221 049B  
                     u1430 0E40                       u1350 0CB9                       u1510 0D1F  
                     u2070 0410                       u2310 054E                       u2230 04B1  
                     u1431 0E3F                       u1351 0CB8                       u1511 0D1E  
                     u2071 040F                       u2055 03D4                       u2135 0069  
                     u2311 054D                       u2231 04B0                       u1520 0D63  
                     u1600 0F95                       u2160 0087                       u2080 0010  
                     u2400 05BD                       u2320 055C                       u2240 04C0  
                     u1521 0D62                       u1345 0D35                       u1425 0E32  
                     u1601 0F94                       u1505 0D12                       u2065 03EE  
                     u2161 0086                       u2081 000F                       u2401 05BC  
                     u2321 055B                       u2305 0536                       u2241 04BF  
                     u1450 0E51                       u1610 0E81                       u2170 008D  
                     u2090 0014                       u2410 05CB                       u2330 0562  
                     u2250 04D9                       u1451 0E50                       u1611 0E80  
                     u2171 008C                       u2155 007C                       u2091 0013  
                     u2411 05CA                       u2331 0561                       u2251 04D8  
                     u2235 04AD                       u1540 0D8C                       u1380 0CD3  
                     u1700 0EE4                       u1620 0E98                       u2180 0091  
                     u2500 061C                       u2420 05D1                       u2340 0570  
                     u2260 04EE                       u1541 0D8B                       u1445 0E41  
                     u1381 0CD2                       u1365 0CC0                       u1605 0F91  
                     u1701 0EE3                       u2181 0090                       u2501 061B  
                     u2421 05D0                       u2341 056F                       u2325 0558  
                     u2261 04ED                       u2245 04BC                       u1470 0E65  
                     u1390 0E12                       u1710 00D5                       u1630 0EAE  
                     u2190 00A6                       u2510 0621                       u2430 05DF  
                     u2350 057C                       u2270 04FD                       u1535 0D6B  
                     u1471 0E64                       u1455 0E4D                       u1391 0E11  
                     u1375 0CC7                       u1711 00D4                       u1631 0EAD  
                     u2511 0620                       u2431 05DE                       u2415 05C7  
                     u2351 057B                       u2271 04FC                       u1480 0E6A  
                     u1560 0CFC                       u1720 00DB                       u1640 0EB5  
                     u2520 0642                       u2440 05E6                       u2360 0598  
                     u2280 0516                       u1481 0E69                       u1465 0E59  
                     u1561 0CFB                       u1801 0195                       u1721 00DA  
                     u1641 0EB4                       u1625 0E93                       u2521 0641  
                     u2441 05E5                       u2361 0597                       u2345 056C  
                     u2281 0515                       u2265 04EA                       u1570 0EF4  
                     u1490 0D0B                       u1802 019C                       u1730 00E0  
                     u2530 0658                       u2450 05F7                       u2370 059E  
                     u2290 052B                       u1555 0D94                       u1491 0D0A  
                     u1811 01C1                       u1803 01A3                       u1731 00DF  
                     u2195 00A1                       u2531 0657                       u2451 05F6  
                     u2435 05DB                       u2371 059D                       u2291 052A  
                     u2275 04F9                       u1580 0F06                       u1900 02FA  
                     u1812 01C8                       u1740 0101                       u1660 0EC7  
                     u2540 066E                       u2460 05FD                       u2380 05AC  
                     u1581 0F05                       u1821 01DD                       u1813 01CF  
                     u1741 0100                       u1661 0EC6                       u2541 066D  
                     u2461 05FC                       u2381 05AB                       u2365 0594  
                     u1590 0F49                       u1822 01E4                       u1750 0107  
                     u1670 0ECE                       u2550 0691                       u2470 060B  
                     u2390 05B8                       u1591 0F48                       u1911 0306  
                     u1823 01EB                       u1751 0106                       u1671 0ECD  
                     u1655 0EB7                       u2551 0690                       u2535 0654  
                     u2471 060A                       u2455 05F3                       u2391 05B7  
                     u2295 0527                       u2607 0486                       u1920 0322  
                     u1912 030D                       u1760 010C                       u2560 06AE  
                     u2480 0612                       u1585 0F02                       u1913 0314  
                     u1905 02F5                       u1841 0213                       u1761 010B  
                     u2561 06AD                       u2545 066A                       u2481 0611  
                     u2385 05A8                       u2617 0490                       u1842 021A  
                     u1770 0123                       u1690 0EDF                       u2570 06F4  
                     u2490 0617                       u2707 0DB9                       u1595 0F45  
                     u1931 032E                       u1851 0240                       u1843 0221  
                     u1835 01ED                       u1771 0122                       u1691 0EDE  
                     u2571 06F3                       u2555 068D                       u2491 0616  
                     u2475 0607                       u2627 04CB                       u1932 0335  
                     u1852 0247                       u1780 0128                       u2580 073A  
                     u2717 0DC8                       u1933 033C                       u1925 031D  
                     u1853 024E                       u1781 0127                       u1685 0ED1  
                     u2581 0739                       u2637 0508                       u2727 0DD7  
                     u1871 0276                       u1791 0179                       u2647 0545  
                     u1960 0360                       u1872 027D                       u1792 0180  
                     u2737 0C88                       u1961 035F                       u1945 033E  
                     u1881 02A3                       u1873 0284                       u1865 0250  
                     u1793 0187                       u2657 0678                       u1882 02AA  
                     u1955 0355                       u1891 02D0                       u1883 02B1  
                     u2667 07DC                       u1980 0374                       u1892 02D7  
                     u1981 0373                       u1893 02DE                       u2677 07EA  
                     u2597 0472                       u1990 0379                       u2687 0D45  
                     u1991 0378                       u1975 0363                       u2697 0D56  
             __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0070                       _main 0425  
                     btemp 007E              __CFG_BOREN$ON 0000                       start 0000  
       ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 0C91                      ??_OFF 0070  
                    ??_aON 0070                      ??_bON 0070                      ??_cON 0070  
            ___fltol@sign1 0043                      ?_main 0070            __end_of___awdiv 0E74  
            __CFG_WDTE$OFF 0000            __end_of___flmul 0425            __end_of___fltol 0EF0  
          ___awdiv@divisor 0070            ___awdiv@counter 0075                      _PORTB 0006  
                    _PORTD 0008    __size_of_Lcd_Set_Cursor 0052                      _TRISA 0085  
                    _TRISB 0086                      _TRISD 0088                      _power 0054  
                    main@i 0048                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 0E0D           __end_of_Lcd_Port 0CB3  
          __initialization 07F3               __end_of_main 07F3                     ??_main 0045  
       __size_of_Lcd_Clear 000D                     _ADRESH 001E                     _ADRESL 009E  
         ___awdiv@dividend 0072                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0039  
                   _TRISE0 0448           __end_of___xxtofl 00C4             __CFG_PWRTE$OFF 0000  
                   ___wmul 0CB3                  ??___awdiv 0074                  ??___flmul 0028  
                ??___fltol 003E           ___awdiv@quotient 0077      __end_of_Lcd_Write_Int 1000  
       __size_of__Umul8_16 0027           Lcd_Write_Int@rem 0022            Lcd_Set_Cursor@a 0077  
          Lcd_Set_Cursor@b 0074            Lcd_Set_Cursor@y 0079            Lcd_Set_Cursor@z 0078  
             ___xxtofl@arg 007A            __CFG_FOSC$EXTRC 0000               ___xxtofl@exp 0079  
             ___xxtofl@val 0070    __end_of__initialization 07FC          __end_of_Lcd_Clear 0C77  
               ___fltol@f1 003A             __pcstackCOMMON 0070             _Lcd_Set_Cursor 0D5D  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070             Lcd_Write_Int@a 0079  
           Lcd_Write_Int@d 0028                 __pbssBANK0 004A          __end_of__Umul8_16 0D24  
               __pmaintext 0425                    ?___wmul 0070  __size_of_Lcd_Write_String 0025  
   __end_of_Lcd_Set_Cursor 0DAF                  ?___xxtofl 0070                 ??_Lcd_Init 0074  
               ??_Lcd_Port 0070                 __stringtab 0800             _Lcd_Write_Char 0D24  
                  _Lcd_Cmd 0C77                    ___awdiv 0E0D                    ___flmul 00C4  
                  ___fltol 0E74            __size_of___wmul 0025            ?_Lcd_Set_Cursor 0074  
                  __ptext1 0004                    __ptext2 0C5C                    __ptext3 0C56  
                  __ptext4 000A                    __ptext5 0E74                    __ptext6 00C4  
                  __ptext7 0CFD                    __ptext8 0C50                    __ptext9 0CD8  
             __size_of_OFF 0006               __size_of_aON 0006               __size_of_bON 0006  
             __size_of_cON 0006                    _current 0056                 ??___xxtofl 0074  
                  clrloop0 0C63                    _voltage 0058     __end_of_Lcd_Write_Char 0D5D  
     end_of_initialization 07FC          Lcd_Write_Int@F873 004A                  Lcd_Port@a 0070  
            ___xxtofl@sign 0078            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077  
        Lcd_Write_String@i 0075                ___flmul@grs 002E                  _Lcd_Clear 0C6A  
           __end_of___wmul 0CD8           _Lcd_Write_String 0CD8        start_initialization 07F3  
              __end_of_OFF 0C56                __end_of_aON 0C5C                __end_of_bON 0C62  
              __end_of_cON 000A          __size_of_Lcd_Init 005E          __size_of_Lcd_Port 0022  
   __size_of_Lcd_Write_Int 0110                 ?_Lcd_Clear 0070                   ??___wmul 0074  
                __Umul8_16 0CFD            Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073  
                ___flmul@a 0024                  ___flmul@b 0020                  ___latbits 0002  
            __pcstackBANK0 0020          __size_of___xxtofl 00BA                   ?_Lcd_Cmd 0070  
         ??_Lcd_Set_Cursor 0075                   ?___awdiv 0070                   ?___flmul 0020  
                 ?___fltol 003A                 ?__Umul8_16 0070                  __pstrings 0800  
            _Lcd_Write_Int 0EF0             ___wmul@product 0074                  clear_ram0 0C62  
                 Lcd_Cmd@a 0073                ??_Lcd_Clear 0074                 _ADCON0bits 001F  
              __stringbase 0805                 _ADCON1bits 009F          ___wmul@multiplier 0070  
           ?_Lcd_Write_Int 0079           ??_Lcd_Write_Char 0071                   _Lcd_Init 0DAF  
                 _Lcd_Port 0C91                   _aVOLTAGE 005E   __end_of_Lcd_Write_String 0CFD  
                 _bVOLTAGE 005C                   _cVOLTAGE 005A           __size_of_Lcd_Cmd 001A  
              ??__Umul8_16 0072           __size_of___awdiv 0067           __size_of___flmul 0361  
         __size_of___fltol 007C                _max_current 0052         __end_of__stringtab 0806  
                 ___xxtofl 000A                   __ptext10 0EF0                   __ptext11 0CB3  
                 __ptext12 0E0D                   __ptext13 0D24                   __ptext14 0D5D  
                 __ptext15 0DAF                   __ptext16 0C6A                   __ptext17 0C77  
                 __ptext18 0C91                _min_current 0050              __size_of_main 03CE  
          ??_Lcd_Write_Int 007B         Lcd_Write_Char@temp 0072                  stringcode 0800  
       Lcd_Set_Cursor@temp 007A     __Umul8_16@multiplicand 0070                   stringdir 0800  
                 stringtab 0800       __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
