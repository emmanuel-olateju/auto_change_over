

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Dec 17 10:20:59 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.10
    27                           ; Generated 31/07/2019 GMT
    28                           ; 
    29                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F877A Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  018C                     	;# 
   119  018D                     	;# 
   120  0000                     	;# 
   121  0001                     	;# 
   122  0002                     	;# 
   123  0003                     	;# 
   124  0004                     	;# 
   125  0005                     	;# 
   126  0006                     	;# 
   127  0007                     	;# 
   128  0008                     	;# 
   129  0009                     	;# 
   130  000A                     	;# 
   131  000B                     	;# 
   132  000C                     	;# 
   133  000D                     	;# 
   134  000E                     	;# 
   135  000E                     	;# 
   136  000F                     	;# 
   137  0010                     	;# 
   138  0011                     	;# 
   139  0012                     	;# 
   140  0013                     	;# 
   141  0014                     	;# 
   142  0015                     	;# 
   143  0015                     	;# 
   144  0016                     	;# 
   145  0017                     	;# 
   146  0018                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  001B                     	;# 
   150  001B                     	;# 
   151  001C                     	;# 
   152  001D                     	;# 
   153  001E                     	;# 
   154  001F                     	;# 
   155  0081                     	;# 
   156  0085                     	;# 
   157  0086                     	;# 
   158  0087                     	;# 
   159  0088                     	;# 
   160  0089                     	;# 
   161  008C                     	;# 
   162  008D                     	;# 
   163  008E                     	;# 
   164  0091                     	;# 
   165  0092                     	;# 
   166  0093                     	;# 
   167  0094                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009C                     	;# 
   171  009D                     	;# 
   172  009E                     	;# 
   173  009F                     	;# 
   174  010C                     	;# 
   175  010D                     	;# 
   176  010E                     	;# 
   177  010F                     	;# 
   178  018C                     	;# 
   179  018D                     	;# 
   180  001E                     _ADRESH	set	30
   181  0008                     _PORTD	set	8
   182  0006                     _PORTB	set	6
   183  001F                     _ADCON0bits	set	31
   184  0035                     _RB5	set	53
   185  0034                     _RB4	set	52
   186  0033                     _RB3	set	51
   187  0037                     _RB7	set	55
   188  0036                     _RB6	set	54
   189  0032                     _RB2	set	50
   190  0031                     _RB1	set	49
   191  0030                     _RB0	set	48
   192  0048                     _RE0	set	72
   193  0043                     _RD3	set	67
   194  0041                     _RD1	set	65
   195  0047                     _RD7	set	71
   196  0046                     _RD6	set	70
   197  0045                     _RD5	set	69
   198  0044                     _RD4	set	68
   199  009E                     _ADRESL	set	158
   200  0088                     _TRISD	set	136
   201  0086                     _TRISB	set	134
   202  0085                     _TRISA	set	133
   203  009F                     _ADCON1bits	set	159
   204  0448                     _TRISE0	set	1096
   205                           
   206                           	psect	strings
   207  0003                     __pstrings:	
   208  0003                     stringtab:	
   209  0003                     __stringtab:	
   210  0003                     stringcode:	
   211                           ;	String table - string pointers are 1 byte each
   212                           
   213  0003                     stringdir:	
   214  0003  3000               	movlw	high stringdir
   215  0004  008A               	movwf	10
   216  0005  0804               	movf	4,w
   217  0006  0A84               	incf	4,f
   218  0007  0782               	addwf	2,f
   219  0008                     __stringbase:	
   220  0008  3400               	retlw	0
   221  0009                     __end_of__stringtab:	
   222  0009                     STR_2:	
   223  0009  3461               	retlw	97	;'a'
   224  000A  3475               	retlw	117	;'u'
   225  000B  3474               	retlw	116	;'t'
   226  000C  346F               	retlw	111	;'o'
   227  000D  3420               	retlw	32	;' '
   228  000E  3470               	retlw	112	;'p'
   229  000F  3468               	retlw	104	;'h'
   230  0010  3461               	retlw	97	;'a'
   231  0011  3473               	retlw	115	;'s'
   232  0012  3465               	retlw	101	;'e'
   233  0013  3420               	retlw	32	;' '
   234  0014  3473               	retlw	115	;'s'
   235  0015  3479               	retlw	121	;'y'
   236  0016  3473               	retlw	115	;'s'
   237  0017  346D               	retlw	109	;'m'
   238  0018  3400               	retlw	0
   239  0019                     STR_1:	
   240  0019  3441               	retlw	65	;'A'
   241  001A  3465               	retlw	101	;'e'
   242  001B  346F               	retlw	111	;'o'
   243  001C  346E               	retlw	110	;'n'
   244  001D  342D               	retlw	45	;'-'
   245  001E  3441               	retlw	65	;'A'
   246  001F  3474               	retlw	116	;'t'
   247  0020  346B               	retlw	107	;'k'
   248  0021  3400               	retlw	0
   249  0022                     STR_3:	
   250  0022  3476               	retlw	118	;'v'
   251  0023  346F               	retlw	111	;'o'
   252  0024  346C               	retlw	108	;'l'
   253  0025  3474               	retlw	116	;'t'
   254  0026  3473               	retlw	115	;'s'
   255  0027  343A               	retlw	58	;':'
   256  0028  3400               	retlw	0
   257                           
   258                           ; #config settings
   259  0000                     
   260                           	psect	cinit
   261  07F3                     start_initialization:	
   262  07F3                     __initialization:	
   263                           
   264                           ; Clear objects allocated to BANK0
   265  07F3  1383               	bcf	3,7	;select IRP bank0
   266  07F4  3020               	movlw	low __pbssBANK0
   267  07F5  0084               	movwf	4
   268  07F6  3030               	movlw	low (__pbssBANK0+16)
   269  07F7  120A  118A  231B  120A  118A  	fcall	clear_ram0
   270  07FC                     end_of_initialization:	
   271                           ;End of C runtime variable initialization code
   272                           
   273  07FC                     __end_of__initialization:	
   274  07FC  0183               	clrf	3
   275  07FD  120A  118A  2D06   	ljmp	_main	;jump to C main() function
   276                           
   277                           	psect	bssBANK0
   278  0020                     __pbssBANK0:	
   279  0020                     _min_current:	
   280  0020                     	ds	2
   281  0022                     _max_current:	
   282  0022                     	ds	2
   283  0024                     _power:	
   284  0024                     	ds	2
   285  0026                     _current:	
   286  0026                     	ds	2
   287  0028                     _voltage:	
   288  0028                     	ds	2
   289  002A                     _cVOLTAGE:	
   290  002A                     	ds	2
   291  002C                     _bVOLTAGE:	
   292  002C                     	ds	2
   293  002E                     _aVOLTAGE:	
   294  002E                     	ds	2
   295                           
   296                           	psect	clrtext
   297  031B                     clear_ram0:	
   298                           ;	Called with FSR containing the base address, and
   299                           ;	W with the last address+1
   300                           
   301  031B  0064               	clrwdt	;clear the watchdog before getting into this loop
   302  031C                     clrloop0:	
   303  031C  0180               	clrf	0	;clear RAM location pointed to by FSR
   304  031D  0A84               	incf	4,f	;increment pointer
   305  031E  0604               	xorwf	4,w	;XOR with final address
   306  031F  1903               	btfsc	3,2	;have we reached the end yet?
   307  0320  3400               	retlw	0	;all done for this memory range, return
   308  0321  0604               	xorwf	4,w	;XOR again to restore value
   309  0322  2B1C               	goto	clrloop0	;do the next byte
   310                           
   311                           	psect	cstackCOMMON
   312  0070                     __pcstackCOMMON:	
   313  0070                     ?_aON:	
   314  0070                     ??_aON:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     ?_cON:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ??_cON:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ?_OFF:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ??_OFF:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_bON:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ??_bON:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_Lcd_Port:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ??_Lcd_Port:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_Lcd_Cmd:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_Lcd_Init:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_Lcd_Write_Char:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_Lcd_Write_String:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_main:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_Lcd_Clear:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?___wmul:	
   360                           ; 2 bytes @ 0x0
   361                           
   362  0070                     ?___awdiv:	
   363                           ; 2 bytes @ 0x0
   364                           
   365  0070                     Lcd_Port@a:	
   366                           ; 2 bytes @ 0x0
   367                           
   368  0070                     ___wmul@multiplier:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ___awdiv@divisor:	
   372                           ; 2 bytes @ 0x0
   373                           
   374                           
   375                           ; 2 bytes @ 0x0
   376  0070                     	ds	1
   377  0071                     ??_Lcd_Cmd:	
   378  0071                     ??_Lcd_Write_Char:	
   379                           ; 1 bytes @ 0x1
   380                           
   381                           
   382                           ; 1 bytes @ 0x1
   383  0071                     	ds	1
   384  0072                     Lcd_Write_Char@temp:	
   385  0072                     ___wmul@multiplicand:	
   386                           ; 1 bytes @ 0x2
   387                           
   388  0072                     ___awdiv@dividend:	
   389                           ; 2 bytes @ 0x2
   390                           
   391                           
   392                           ; 2 bytes @ 0x2
   393  0072                     	ds	1
   394  0073                     Lcd_Cmd@a:	
   395  0073                     Lcd_Write_Char@y:	
   396                           ; 1 bytes @ 0x3
   397                           
   398                           
   399                           ; 1 bytes @ 0x3
   400  0073                     	ds	1
   401  0074                     ??_Lcd_Clear:	
   402  0074                     ?_Lcd_Set_Cursor:	
   403                           ; 1 bytes @ 0x4
   404                           
   405  0074                     ??_Lcd_Init:	
   406                           ; 1 bytes @ 0x4
   407                           
   408  0074                     ??___wmul:	
   409                           ; 1 bytes @ 0x4
   410                           
   411  0074                     ??___awdiv:	
   412                           ; 1 bytes @ 0x4
   413                           
   414  0074                     Lcd_Set_Cursor@b:	
   415                           ; 1 bytes @ 0x4
   416                           
   417  0074                     Lcd_Write_Char@a:	
   418                           ; 1 bytes @ 0x4
   419                           
   420  0074                     ___wmul@product:	
   421                           ; 1 bytes @ 0x4
   422                           
   423                           
   424                           ; 2 bytes @ 0x4
   425  0074                     	ds	1
   426  0075                     ??_Lcd_Set_Cursor:	
   427  0075                     ??_Lcd_Write_String:	
   428                           ; 1 bytes @ 0x5
   429                           
   430  0075                     ___awdiv@counter:	
   431                           ; 1 bytes @ 0x5
   432                           
   433  0075                     Lcd_Write_String@i:	
   434                           ; 1 bytes @ 0x5
   435                           
   436                           
   437                           ; 2 bytes @ 0x5
   438  0075                     	ds	1
   439  0076                     ___awdiv@sign:	
   440                           
   441                           ; 1 bytes @ 0x6
   442  0076                     	ds	1
   443  0077                     Lcd_Set_Cursor@a:	
   444  0077                     Lcd_Write_String@a:	
   445                           ; 1 bytes @ 0x7
   446                           
   447  0077                     ___awdiv@quotient:	
   448                           ; 1 bytes @ 0x7
   449                           
   450                           
   451                           ; 2 bytes @ 0x7
   452  0077                     	ds	1
   453  0078                     Lcd_Set_Cursor@z:	
   454                           
   455                           ; 1 bytes @ 0x8
   456  0078                     	ds	1
   457  0079                     Lcd_Set_Cursor@y:	
   458                           
   459                           ; 1 bytes @ 0x9
   460  0079                     	ds	1
   461  007A                     Lcd_Set_Cursor@temp:	
   462                           
   463                           ; 1 bytes @ 0xA
   464  007A                     	ds	1
   465  007B                     ??_main:	
   466                           
   467                           ; 1 bytes @ 0xB
   468  007B                     	ds	3
   469                           
   470                           	psect	cstackBANK0
   471  0030                     __pcstackBANK0:	
   472  0030                     main@i:	
   473                           
   474                           ; 2 bytes @ 0x0
   475  0030                     	ds	2
   476                           
   477                           	psect	maintext
   478  0506                     __pmaintext:	
   479 ;;
   480 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   481 ;;
   482 ;; *************** function _main *****************
   483 ;; Defined at:
   484 ;;		line 54 in file "main.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;  i               2    0[BANK0 ] int 
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   493 ;; Tracked objects:
   494 ;;		On entry : B00/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   498 ;;      Params:         0       0       0       0       0
   499 ;;      Locals:         0       2       0       0       0
   500 ;;      Temps:          3       0       0       0       0
   501 ;;      Totals:         3       2       0       0       0
   502 ;;Total ram usage:        5 bytes
   503 ;; Hardware stack levels required when called:    3
   504 ;; This function calls:
   505 ;;		_Lcd_Clear
   506 ;;		_Lcd_Init
   507 ;;		_Lcd_Set_Cursor
   508 ;;		_Lcd_Write_String
   509 ;;		_OFF
   510 ;;		___awdiv
   511 ;;		___wmul
   512 ;;		_aON
   513 ;;		_bON
   514 ;;		_cON
   515 ;; This function is called by:
   516 ;;		Startup code after reset
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520                           
   521                           ;psect for function _main
   522  0506                     _main:	
   523  0506                     l1261:	
   524                           ;incstack = 0
   525                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   526                           
   527                           
   528                           ;main.c: 55:     ADCON1bits.ADFM=1;
   529  0506  1683               	bsf	3,5	;RP0=1, select bank1
   530  0507  1303               	bcf	3,6	;RP1=0, select bank1
   531  0508  179F               	bsf	31,7	;volatile
   532                           
   533                           ;main.c: 56:     ADCON1bits.ADCS2=0;
   534  0509  131F               	bcf	31,6	;volatile
   535                           
   536                           ;main.c: 57:     ADCON0bits.ADCS1=1;
   537  050A  1283               	bcf	3,5	;RP0=0, select bank0
   538  050B  1303               	bcf	3,6	;RP1=0, select bank0
   539  050C  179F               	bsf	31,7	;volatile
   540                           
   541                           ;main.c: 58:     ADCON0bits.ADCS0=0;
   542  050D  131F               	bcf	31,6	;volatile
   543                           
   544                           ;main.c: 59:     ADCON1bits.PCFG3=0;
   545  050E  1683               	bsf	3,5	;RP0=1, select bank1
   546  050F  1303               	bcf	3,6	;RP1=0, select bank1
   547  0510  119F               	bcf	31,3	;volatile
   548                           
   549                           ;main.c: 60:     ADCON1bits.PCFG2=0;
   550  0511  111F               	bcf	31,2	;volatile
   551                           
   552                           ;main.c: 61:     ADCON1bits.PCFG1=1;
   553  0512  149F               	bsf	31,1	;volatile
   554                           
   555                           ;main.c: 62:     ADCON1bits.PCFG0=0;
   556  0513  101F               	bcf	31,0	;volatile
   557  0514                     l1263:	
   558                           
   559                           ;main.c: 63:     TRISA=0x0F;
   560  0514  300F               	movlw	15
   561  0515  0085               	movwf	5	;volatile
   562  0516                     l1265:	
   563                           
   564                           ;main.c: 64:     ADCON0bits.ADON=1;
   565  0516  1283               	bcf	3,5	;RP0=0, select bank0
   566  0517  1303               	bcf	3,6	;RP1=0, select bank0
   567  0518  141F               	bsf	31,0	;volatile
   568                           
   569                           ;main.c: 65:     TRISB=0xc0;
   570  0519  30C0               	movlw	192
   571  051A  1683               	bsf	3,5	;RP0=1, select bank1
   572  051B  1303               	bcf	3,6	;RP1=0, select bank1
   573  051C  0086               	movwf	6	;volatile
   574  051D                     l1267:	
   575                           
   576                           ;main.c: 66:     PORTB=0x00;
   577  051D  1283               	bcf	3,5	;RP0=0, select bank0
   578  051E  1303               	bcf	3,6	;RP1=0, select bank0
   579  051F  0186               	clrf	6	;volatile
   580  0520                     l1269:	
   581                           
   582                           ;main.c: 67:     TRISE0=0;
   583  0520  1683               	bsf	3,5	;RP0=1, select bank1
   584  0521  1303               	bcf	3,6	;RP1=0, select bank1
   585  0522  1009               	bcf	9,0	;volatile
   586  0523                     l1271:	
   587                           
   588                           ;main.c: 68:     RE0=0;
   589  0523  1283               	bcf	3,5	;RP0=0, select bank0
   590  0524  1303               	bcf	3,6	;RP1=0, select bank0
   591  0525  1009               	bcf	9,0	;volatile
   592  0526                     l1273:	
   593                           
   594                           ;main.c: 69:     TRISD=0x00;
   595  0526  1683               	bsf	3,5	;RP0=1, select bank1
   596  0527  1303               	bcf	3,6	;RP1=0, select bank1
   597  0528  0188               	clrf	8	;volatile
   598  0529                     l1275:	
   599                           
   600                           ;main.c: 70:     PORTD=0x00;
   601  0529  1283               	bcf	3,5	;RP0=0, select bank0
   602  052A  1303               	bcf	3,6	;RP1=0, select bank0
   603  052B  0188               	clrf	8	;volatile
   604  052C                     l1277:	
   605                           
   606                           ;main.c: 71:     Lcd_Init();
   607  052C  120A  118A  2441  120A  118A  	fcall	_Lcd_Init
   608  0531                     l1279:	
   609                           
   610                           ;main.c: 72:     Lcd_Set_Cursor(1,5);
   611  0531  3005               	movlw	5
   612  0532  00FB               	movwf	??_main
   613  0533  087B               	movf	??_main,w
   614  0534  00F4               	movwf	Lcd_Set_Cursor@b
   615  0535  3001               	movlw	1
   616  0536  120A  118A  23EF  120A  118A  	fcall	_Lcd_Set_Cursor
   617  053B                     l1281:	
   618                           
   619                           ;main.c: 73:     Lcd_Write_String("Aeon-Atk");
   620  053B  3011               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   621  053C  120A  118A  236C  120A  118A  	fcall	_Lcd_Write_String
   622  0541                     l1283:	
   623                           
   624                           ;main.c: 74:     Lcd_Set_Cursor(2,1);
   625  0541  01F4               	clrf	Lcd_Set_Cursor@b
   626  0542  0AF4               	incf	Lcd_Set_Cursor@b,f
   627  0543  3002               	movlw	2
   628  0544  120A  118A  23EF  120A  118A  	fcall	_Lcd_Set_Cursor
   629  0549                     l1285:	
   630                           
   631                           ;main.c: 75:     _delay((unsigned long)((1000)*(20000000/4000.0)));
   632  0549  301A               	movlw	26
   633  054A  00FD               	movwf	??_main+2
   634  054B  305E               	movlw	94
   635  054C  00FC               	movwf	??_main+1
   636  054D  306E               	movlw	110
   637  054E  00FB               	movwf	??_main
   638  054F                     u1237:	
   639  054F  0BFB               	decfsz	??_main,f
   640  0550  2D4F               	goto	u1237
   641  0551  0BFC               	decfsz	??_main+1,f
   642  0552  2D4F               	goto	u1237
   643  0553  0BFD               	decfsz	??_main+2,f
   644  0554  2D4F               	goto	u1237
   645  0555  0000               	nop
   646  0556                     l1287:	
   647                           
   648                           ;main.c: 76:     Lcd_Write_String("auto phase sysm");
   649  0556  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   650  0557  120A  118A  236C  120A  118A  	fcall	_Lcd_Write_String
   651  055C                     l1289:	
   652                           
   653                           ;main.c: 77:     _delay((unsigned long)((2000)*(20000000/4000.0)));
   654  055C  3033               	movlw	51
   655  055D  00FD               	movwf	??_main+2
   656  055E  30BB               	movlw	187
   657  055F  00FC               	movwf	??_main+1
   658  0560  30DF               	movlw	223
   659  0561  00FB               	movwf	??_main
   660  0562                     u1247:	
   661  0562  0BFB               	decfsz	??_main,f
   662  0563  2D62               	goto	u1247
   663  0564  0BFC               	decfsz	??_main+1,f
   664  0565  2D62               	goto	u1247
   665  0566  0BFD               	decfsz	??_main+2,f
   666  0567  2D62               	goto	u1247
   667  0568  2D69               	nop2
   668  0569                     l1291:	
   669                           
   670                           ;main.c: 81:         _delay((unsigned long)((20)*(20000000/4000000.0)));
   671  0569  3021               	movlw	33
   672  056A  00FB               	movwf	??_main
   673  056B                     u1257:	
   674  056B  0BFB               	decfsz	??_main,f
   675  056C  2D6B               	goto	u1257
   676  056D                     l1293:	
   677                           
   678                           ;main.c: 82:         ADCON0bits.CHS=0;
   679  056D  30C7               	movlw	-57
   680  056E  1283               	bcf	3,5	;RP0=0, select bank0
   681  056F  1303               	bcf	3,6	;RP1=0, select bank0
   682  0570  059F               	andwf	31,f	;volatile
   683  0571                     l1295:	
   684                           
   685                           ;main.c: 83:         ADCON0bits.GO_nDONE=1;
   686  0571  151F               	bsf	31,2	;volatile
   687  0572                     l123:	
   688                           ;main.c: 84:         while(ADCON0bits.GO_nDONE);
   689                           
   690  0572  191F               	btfsc	31,2	;volatile
   691  0573  2D75               	goto	u861
   692  0574  2D76               	goto	u860
   693  0575                     u861:	
   694  0575  2D72               	goto	l123
   695  0576                     u860:	
   696  0576                     l1297:	
   697                           
   698                           ;main.c: 85:         aVOLTAGE=(ADRESH<<8)+ADRESL;
   699  0576  081E               	movf	30,w	;volatile
   700  0577  00AF               	movwf	_aVOLTAGE+1
   701  0578  1683               	bsf	3,5	;RP0=1, select bank1
   702  0579  1303               	bcf	3,6	;RP1=0, select bank1
   703  057A  081E               	movf	30,w	;volatile
   704  057B  1283               	bcf	3,5	;RP0=0, select bank0
   705  057C  1303               	bcf	3,6	;RP1=0, select bank0
   706  057D  00AE               	movwf	_aVOLTAGE
   707  057E                     l1299:	
   708                           
   709                           ;main.c: 86:         if((aVOLTAGE>=614)||(aVOLTAGE<=368))RB0=1;
   710  057E  082F               	movf	_aVOLTAGE+1,w
   711  057F  3A80               	xorlw	128
   712  0580  00FF               	movwf	btemp+1
   713  0581  3082               	movlw	130
   714  0582  027F               	subwf	btemp+1,w
   715  0583  1D03               	skipz
   716  0584  2D87               	goto	u875
   717  0585  3066               	movlw	102
   718  0586  022E               	subwf	_aVOLTAGE,w
   719  0587                     u875:	
   720  0587  1803               	skipnc
   721  0588  2D8A               	goto	u871
   722  0589  2D8B               	goto	u870
   723  058A                     u871:	
   724  058A  2D9A               	goto	l128
   725  058B                     u870:	
   726  058B                     l1301:	
   727  058B  1283               	bcf	3,5	;RP0=0, select bank0
   728  058C  1303               	bcf	3,6	;RP1=0, select bank0
   729  058D  082F               	movf	_aVOLTAGE+1,w
   730  058E  3A80               	xorlw	128
   731  058F  00FF               	movwf	btemp+1
   732  0590  3081               	movlw	129
   733  0591  027F               	subwf	btemp+1,w
   734  0592  1D03               	skipz
   735  0593  2D96               	goto	u885
   736  0594  3071               	movlw	113
   737  0595  022E               	subwf	_aVOLTAGE,w
   738  0596                     u885:	
   739  0596  1803               	skipnc
   740  0597  2D99               	goto	u881
   741  0598  2D9A               	goto	u880
   742  0599                     u881:	
   743  0599  2D9E               	goto	l126
   744  059A                     u880:	
   745  059A                     l128:	
   746  059A  1283               	bcf	3,5	;RP0=0, select bank0
   747  059B  1303               	bcf	3,6	;RP1=0, select bank0
   748  059C  1406               	bsf	6,0	;volatile
   749  059D  2DA1               	goto	l1303
   750  059E                     l126:	
   751                           ;main.c: 87:         else RB0=0;
   752                           
   753  059E  1283               	bcf	3,5	;RP0=0, select bank0
   754  059F  1303               	bcf	3,6	;RP1=0, select bank0
   755  05A0  1006               	bcf	6,0	;volatile
   756  05A1                     l1303:	
   757                           
   758                           ;main.c: 88:         _delay((unsigned long)((20)*(20000000/4000000.0)));
   759  05A1  3021               	movlw	33
   760  05A2  00FB               	movwf	??_main
   761  05A3                     u1267:	
   762  05A3  0BFB               	decfsz	??_main,f
   763  05A4  2DA3               	goto	u1267
   764  05A5                     l1305:	
   765                           
   766                           ;main.c: 89:         ADCON0bits.CHS=1;
   767  05A5  1283               	bcf	3,5	;RP0=0, select bank0
   768  05A6  1303               	bcf	3,6	;RP1=0, select bank0
   769  05A7  081F               	movf	31,w	;volatile
   770  05A8  39C7               	andlw	-57
   771  05A9  3808               	iorlw	8
   772  05AA  009F               	movwf	31	;volatile
   773  05AB                     l1307:	
   774                           
   775                           ;main.c: 90:         ADCON0bits.GO_nDONE=1;
   776  05AB  151F               	bsf	31,2	;volatile
   777  05AC                     l130:	
   778                           ;main.c: 91:         while(ADCON0bits.GO_nDONE);
   779                           
   780  05AC  191F               	btfsc	31,2	;volatile
   781  05AD  2DAF               	goto	u891
   782  05AE  2DB0               	goto	u890
   783  05AF                     u891:	
   784  05AF  2DAC               	goto	l130
   785  05B0                     u890:	
   786  05B0                     l1309:	
   787                           
   788                           ;main.c: 92:         bVOLTAGE=(ADRESH<<8)+ADRESL;
   789  05B0  081E               	movf	30,w	;volatile
   790  05B1  00AD               	movwf	_bVOLTAGE+1
   791  05B2  1683               	bsf	3,5	;RP0=1, select bank1
   792  05B3  1303               	bcf	3,6	;RP1=0, select bank1
   793  05B4  081E               	movf	30,w	;volatile
   794  05B5  1283               	bcf	3,5	;RP0=0, select bank0
   795  05B6  1303               	bcf	3,6	;RP1=0, select bank0
   796  05B7  00AC               	movwf	_bVOLTAGE
   797  05B8                     l1311:	
   798                           
   799                           ;main.c: 93:         if((bVOLTAGE>=614)||(bVOLTAGE<=368))RB1=1;
   800  05B8  082D               	movf	_bVOLTAGE+1,w
   801  05B9  3A80               	xorlw	128
   802  05BA  00FF               	movwf	btemp+1
   803  05BB  3082               	movlw	130
   804  05BC  027F               	subwf	btemp+1,w
   805  05BD  1D03               	skipz
   806  05BE  2DC1               	goto	u905
   807  05BF  3066               	movlw	102
   808  05C0  022C               	subwf	_bVOLTAGE,w
   809  05C1                     u905:	
   810  05C1  1803               	skipnc
   811  05C2  2DC4               	goto	u901
   812  05C3  2DC5               	goto	u900
   813  05C4                     u901:	
   814  05C4  2DD4               	goto	l135
   815  05C5                     u900:	
   816  05C5                     l1313:	
   817  05C5  1283               	bcf	3,5	;RP0=0, select bank0
   818  05C6  1303               	bcf	3,6	;RP1=0, select bank0
   819  05C7  082D               	movf	_bVOLTAGE+1,w
   820  05C8  3A80               	xorlw	128
   821  05C9  00FF               	movwf	btemp+1
   822  05CA  3081               	movlw	129
   823  05CB  027F               	subwf	btemp+1,w
   824  05CC  1D03               	skipz
   825  05CD  2DD0               	goto	u915
   826  05CE  3071               	movlw	113
   827  05CF  022C               	subwf	_bVOLTAGE,w
   828  05D0                     u915:	
   829  05D0  1803               	skipnc
   830  05D1  2DD3               	goto	u911
   831  05D2  2DD4               	goto	u910
   832  05D3                     u911:	
   833  05D3  2DD8               	goto	l133
   834  05D4                     u910:	
   835  05D4                     l135:	
   836  05D4  1283               	bcf	3,5	;RP0=0, select bank0
   837  05D5  1303               	bcf	3,6	;RP1=0, select bank0
   838  05D6  1486               	bsf	6,1	;volatile
   839  05D7  2DDB               	goto	l1315
   840  05D8                     l133:	
   841                           ;main.c: 94:         else RB1=0;
   842                           
   843  05D8  1283               	bcf	3,5	;RP0=0, select bank0
   844  05D9  1303               	bcf	3,6	;RP1=0, select bank0
   845  05DA  1086               	bcf	6,1	;volatile
   846  05DB                     l1315:	
   847                           
   848                           ;main.c: 95:         _delay((unsigned long)((20)*(20000000/4000000.0)));
   849  05DB  3021               	movlw	33
   850  05DC  00FB               	movwf	??_main
   851  05DD                     u1277:	
   852  05DD  0BFB               	decfsz	??_main,f
   853  05DE  2DDD               	goto	u1277
   854  05DF                     l1317:	
   855                           
   856                           ;main.c: 96:         ADCON0bits.CHS=2;
   857  05DF  1283               	bcf	3,5	;RP0=0, select bank0
   858  05E0  1303               	bcf	3,6	;RP1=0, select bank0
   859  05E1  081F               	movf	31,w	;volatile
   860  05E2  39C7               	andlw	-57
   861  05E3  3810               	iorlw	16
   862  05E4  009F               	movwf	31	;volatile
   863  05E5                     l1319:	
   864                           
   865                           ;main.c: 97:         ADCON0bits.GO_nDONE=1;
   866  05E5  151F               	bsf	31,2	;volatile
   867  05E6                     l137:	
   868                           ;main.c: 98:         while(ADCON0bits.GO_nDONE);
   869                           
   870  05E6  191F               	btfsc	31,2	;volatile
   871  05E7  2DE9               	goto	u921
   872  05E8  2DEA               	goto	u920
   873  05E9                     u921:	
   874  05E9  2DE6               	goto	l137
   875  05EA                     u920:	
   876  05EA                     l1321:	
   877                           
   878                           ;main.c: 99:         cVOLTAGE=(ADRESH<<8)+ADRESL;
   879  05EA  081E               	movf	30,w	;volatile
   880  05EB  00AB               	movwf	_cVOLTAGE+1
   881  05EC  1683               	bsf	3,5	;RP0=1, select bank1
   882  05ED  1303               	bcf	3,6	;RP1=0, select bank1
   883  05EE  081E               	movf	30,w	;volatile
   884  05EF  1283               	bcf	3,5	;RP0=0, select bank0
   885  05F0  1303               	bcf	3,6	;RP1=0, select bank0
   886  05F1  00AA               	movwf	_cVOLTAGE
   887  05F2                     l1323:	
   888                           
   889                           ;main.c: 100:         if((cVOLTAGE>=720)||(cVOLTAGE<=368))RB2=1;
   890  05F2  082B               	movf	_cVOLTAGE+1,w
   891  05F3  3A80               	xorlw	128
   892  05F4  00FF               	movwf	btemp+1
   893  05F5  3082               	movlw	130
   894  05F6  027F               	subwf	btemp+1,w
   895  05F7  1D03               	skipz
   896  05F8  2DFB               	goto	u935
   897  05F9  30D0               	movlw	208
   898  05FA  022A               	subwf	_cVOLTAGE,w
   899  05FB                     u935:	
   900  05FB  1803               	skipnc
   901  05FC  2DFE               	goto	u931
   902  05FD  2DFF               	goto	u930
   903  05FE                     u931:	
   904  05FE  2E0E               	goto	l142
   905  05FF                     u930:	
   906  05FF                     l1325:	
   907  05FF  1283               	bcf	3,5	;RP0=0, select bank0
   908  0600  1303               	bcf	3,6	;RP1=0, select bank0
   909  0601  082B               	movf	_cVOLTAGE+1,w
   910  0602  3A80               	xorlw	128
   911  0603  00FF               	movwf	btemp+1
   912  0604  3081               	movlw	129
   913  0605  027F               	subwf	btemp+1,w
   914  0606  1D03               	skipz
   915  0607  2E0A               	goto	u945
   916  0608  3071               	movlw	113
   917  0609  022A               	subwf	_cVOLTAGE,w
   918  060A                     u945:	
   919  060A  1803               	skipnc
   920  060B  2E0D               	goto	u941
   921  060C  2E0E               	goto	u940
   922  060D                     u941:	
   923  060D  2E12               	goto	l140
   924  060E                     u940:	
   925  060E                     l142:	
   926  060E  1283               	bcf	3,5	;RP0=0, select bank0
   927  060F  1303               	bcf	3,6	;RP1=0, select bank0
   928  0610  1506               	bsf	6,2	;volatile
   929  0611  2E15               	goto	l1327
   930  0612                     l140:	
   931                           ;main.c: 101:         else RB2=0;
   932                           
   933  0612  1283               	bcf	3,5	;RP0=0, select bank0
   934  0613  1303               	bcf	3,6	;RP1=0, select bank0
   935  0614  1106               	bcf	6,2	;volatile
   936  0615                     l1327:	
   937                           
   938                           ;main.c: 102:         _delay((unsigned long)((20)*(20000000/4000000.0)));
   939  0615  3021               	movlw	33
   940  0616  00FB               	movwf	??_main
   941  0617                     u1287:	
   942  0617  0BFB               	decfsz	??_main,f
   943  0618  2E17               	goto	u1287
   944  0619                     l1329:	
   945                           
   946                           ;main.c: 105:         if(RB6){
   947  0619  1283               	bcf	3,5	;RP0=0, select bank0
   948  061A  1303               	bcf	3,6	;RP1=0, select bank0
   949  061B  1F06               	btfss	6,6	;volatile
   950  061C  2E1E               	goto	u951
   951  061D  2E1F               	goto	u950
   952  061E                     u951:	
   953  061E  2E8B               	goto	l144
   954  061F                     u950:	
   955  061F                     l1331:	
   956                           
   957                           ;main.c: 106:             if((aVOLTAGE>=bVOLTAGE)&&(RB0==0)){
   958  061F  082F               	movf	_aVOLTAGE+1,w
   959  0620  3A80               	xorlw	128
   960  0621  00FB               	movwf	??_main
   961  0622  082D               	movf	_bVOLTAGE+1,w
   962  0623  3A80               	xorlw	128
   963  0624  027B               	subwf	??_main,w
   964  0625  1D03               	skipz
   965  0626  2E29               	goto	u965
   966  0627  082C               	movf	_bVOLTAGE,w
   967  0628  022E               	subwf	_aVOLTAGE,w
   968  0629                     u965:	
   969  0629  1C03               	skipc
   970  062A  2E2C               	goto	u961
   971  062B  2E2D               	goto	u960
   972  062C                     u961:	
   973  062C  2E5A               	goto	l1343
   974  062D                     u960:	
   975  062D                     l1333:	
   976  062D  1283               	bcf	3,5	;RP0=0, select bank0
   977  062E  1303               	bcf	3,6	;RP1=0, select bank0
   978  062F  1806               	btfsc	6,0	;volatile
   979  0630  2E32               	goto	u971
   980  0631  2E33               	goto	u970
   981  0632                     u971:	
   982  0632  2E5A               	goto	l1343
   983  0633                     u970:	
   984  0633                     l1335:	
   985                           
   986                           ;main.c: 107:                 if(aVOLTAGE>cVOLTAGE)aON();
   987  0633  082B               	movf	_cVOLTAGE+1,w
   988  0634  3A80               	xorlw	128
   989  0635  00FB               	movwf	??_main
   990  0636  082F               	movf	_aVOLTAGE+1,w
   991  0637  3A80               	xorlw	128
   992  0638  027B               	subwf	??_main,w
   993  0639  1D03               	skipz
   994  063A  2E3D               	goto	u985
   995  063B  082E               	movf	_aVOLTAGE,w
   996  063C  022A               	subwf	_cVOLTAGE,w
   997  063D                     u985:	
   998  063D  1803               	skipnc
   999  063E  2E40               	goto	u981
  1000  063F  2E41               	goto	u980
  1001  0640                     u981:	
  1002  0640  2E47               	goto	l146
  1003  0641                     u980:	
  1004  0641                     l1337:	
  1005  0641  120A  118A  2309  120A  118A  	fcall	_aON
  1006  0646  2EF4               	goto	l1383
  1007  0647                     l146:	
  1008                           ;main.c: 108:                 else if(RB2==0)cON();
  1009                           
  1010  0647  1283               	bcf	3,5	;RP0=0, select bank0
  1011  0648  1303               	bcf	3,6	;RP1=0, select bank0
  1012  0649  1906               	btfsc	6,2	;volatile
  1013  064A  2E4C               	goto	u991
  1014  064B  2E4D               	goto	u990
  1015  064C                     u991:	
  1016  064C  2E53               	goto	l1341
  1017  064D                     u990:	
  1018  064D                     l1339:	
  1019  064D  120A  118A  2315  120A  118A  	fcall	_cON
  1020  0652  2EF4               	goto	l1383
  1021  0653                     l1341:	
  1022  0653  120A  118A  2303  120A  118A  	fcall	_OFF
  1023  0658  2EF4               	goto	l1383
  1024  0659                     l147:	
  1025                           
  1026                           ;main.c: 110:             }else if((bVOLTAGE>=aVOLTAGE)&&(RB1==0)){
  1027  0659  2EF4               	goto	l1383
  1028  065A                     l1343:	
  1029  065A  1283               	bcf	3,5	;RP0=0, select bank0
  1030  065B  1303               	bcf	3,6	;RP1=0, select bank0
  1031  065C  082D               	movf	_bVOLTAGE+1,w
  1032  065D  3A80               	xorlw	128
  1033  065E  00FB               	movwf	??_main
  1034  065F  082F               	movf	_aVOLTAGE+1,w
  1035  0660  3A80               	xorlw	128
  1036  0661  027B               	subwf	??_main,w
  1037  0662  1D03               	skipz
  1038  0663  2E66               	goto	u1005
  1039  0664  082E               	movf	_aVOLTAGE,w
  1040  0665  022C               	subwf	_bVOLTAGE,w
  1041  0666                     u1005:	
  1042  0666  1C03               	skipc
  1043  0667  2E69               	goto	u1001
  1044  0668  2E6A               	goto	u1000
  1045  0669                     u1001:	
  1046  0669  2EF4               	goto	l1383
  1047  066A                     u1000:	
  1048  066A                     l1345:	
  1049  066A  1283               	bcf	3,5	;RP0=0, select bank0
  1050  066B  1303               	bcf	3,6	;RP1=0, select bank0
  1051  066C  1886               	btfsc	6,1	;volatile
  1052  066D  2E6F               	goto	u1011
  1053  066E  2E70               	goto	u1010
  1054  066F                     u1011:	
  1055  066F  2EF4               	goto	l1383
  1056  0670                     u1010:	
  1057  0670                     l1347:	
  1058                           
  1059                           ;main.c: 111:                 if(bVOLTAGE>cVOLTAGE)bON();
  1060  0670  082B               	movf	_cVOLTAGE+1,w
  1061  0671  3A80               	xorlw	128
  1062  0672  00FB               	movwf	??_main
  1063  0673  082D               	movf	_bVOLTAGE+1,w
  1064  0674  3A80               	xorlw	128
  1065  0675  027B               	subwf	??_main,w
  1066  0676  1D03               	skipz
  1067  0677  2E7A               	goto	u1025
  1068  0678  082C               	movf	_bVOLTAGE,w
  1069  0679  022A               	subwf	_cVOLTAGE,w
  1070  067A                     u1025:	
  1071  067A  1803               	skipnc
  1072  067B  2E7D               	goto	u1021
  1073  067C  2E7E               	goto	u1020
  1074  067D                     u1021:	
  1075  067D  2E84               	goto	l152
  1076  067E                     u1020:	
  1077  067E                     l1349:	
  1078  067E  120A  118A  230F  120A  118A  	fcall	_bON
  1079  0683  2EF4               	goto	l1383
  1080  0684                     l152:	
  1081                           ;main.c: 112:                 else if(RB2==0)cON();
  1082                           
  1083  0684  1283               	bcf	3,5	;RP0=0, select bank0
  1084  0685  1303               	bcf	3,6	;RP1=0, select bank0
  1085  0686  1906               	btfsc	6,2	;volatile
  1086  0687  2E89               	goto	u1031
  1087  0688  2E8A               	goto	u1030
  1088  0689                     u1031:	
  1089  0689  2E59               	goto	l147
  1090  068A                     u1030:	
  1091  068A  2E4D               	goto	l1339
  1092  068B                     l144:	
  1093  068B  1F86               	btfss	6,7	;volatile
  1094  068C  2E8E               	goto	u1041
  1095  068D  2E8F               	goto	u1040
  1096  068E                     u1041:	
  1097  068E  2EE5               	goto	l157
  1098  068F                     u1040:	
  1099  068F                     l1353:	
  1100                           
  1101                           ;main.c: 116:             if((aVOLTAGE<=bVOLTAGE)&&(RB0==0)){
  1102  068F  082D               	movf	_bVOLTAGE+1,w
  1103  0690  3A80               	xorlw	128
  1104  0691  00FB               	movwf	??_main
  1105  0692  082F               	movf	_aVOLTAGE+1,w
  1106  0693  3A80               	xorlw	128
  1107  0694  027B               	subwf	??_main,w
  1108  0695  1D03               	skipz
  1109  0696  2E99               	goto	u1055
  1110  0697  082E               	movf	_aVOLTAGE,w
  1111  0698  022C               	subwf	_bVOLTAGE,w
  1112  0699                     u1055:	
  1113  0699  1C03               	skipc
  1114  069A  2E9C               	goto	u1051
  1115  069B  2E9D               	goto	u1050
  1116  069C                     u1051:	
  1117  069C  2EB9               	goto	l1365
  1118  069D                     u1050:	
  1119  069D                     l1355:	
  1120  069D  1283               	bcf	3,5	;RP0=0, select bank0
  1121  069E  1303               	bcf	3,6	;RP1=0, select bank0
  1122  069F  1806               	btfsc	6,0	;volatile
  1123  06A0  2EA2               	goto	u1061
  1124  06A1  2EA3               	goto	u1060
  1125  06A2                     u1061:	
  1126  06A2  2EB9               	goto	l1365
  1127  06A3                     u1060:	
  1128  06A3                     l1357:	
  1129                           
  1130                           ;main.c: 117:                 if(aVOLTAGE<cVOLTAGE)aON();
  1131  06A3  082F               	movf	_aVOLTAGE+1,w
  1132  06A4  3A80               	xorlw	128
  1133  06A5  00FB               	movwf	??_main
  1134  06A6  082B               	movf	_cVOLTAGE+1,w
  1135  06A7  3A80               	xorlw	128
  1136  06A8  027B               	subwf	??_main,w
  1137  06A9  1D03               	skipz
  1138  06AA  2EAD               	goto	u1075
  1139  06AB  082A               	movf	_cVOLTAGE,w
  1140  06AC  022E               	subwf	_aVOLTAGE,w
  1141  06AD                     u1075:	
  1142  06AD  1803               	skipnc
  1143  06AE  2EB0               	goto	u1071
  1144  06AF  2EB1               	goto	u1070
  1145  06B0                     u1071:	
  1146  06B0  2EB2               	goto	l159
  1147  06B1                     u1070:	
  1148  06B1  2E41               	goto	l1337
  1149  06B2                     l159:	
  1150                           ;main.c: 118:                 else if(RB2==0)cON();
  1151                           
  1152  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  1153  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  1154  06B4  1906               	btfsc	6,2	;volatile
  1155  06B5  2EB7               	goto	u1081
  1156  06B6  2EB8               	goto	u1080
  1157  06B7                     u1081:	
  1158  06B7  2E53               	goto	l1341
  1159  06B8                     u1080:	
  1160  06B8  2E4D               	goto	l1339
  1161  06B9                     l1365:	
  1162  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  1163  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  1164  06BB  082F               	movf	_aVOLTAGE+1,w
  1165  06BC  3A80               	xorlw	128
  1166  06BD  00FB               	movwf	??_main
  1167  06BE  082D               	movf	_bVOLTAGE+1,w
  1168  06BF  3A80               	xorlw	128
  1169  06C0  027B               	subwf	??_main,w
  1170  06C1  1D03               	skipz
  1171  06C2  2EC5               	goto	u1095
  1172  06C3  082C               	movf	_bVOLTAGE,w
  1173  06C4  022E               	subwf	_aVOLTAGE,w
  1174  06C5                     u1095:	
  1175  06C5  1C03               	skipc
  1176  06C6  2EC8               	goto	u1091
  1177  06C7  2EC9               	goto	u1090
  1178  06C8                     u1091:	
  1179  06C8  2EF4               	goto	l1383
  1180  06C9                     u1090:	
  1181  06C9                     l1367:	
  1182  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  1183  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  1184  06CB  1886               	btfsc	6,1	;volatile
  1185  06CC  2ECE               	goto	u1101
  1186  06CD  2ECF               	goto	u1100
  1187  06CE                     u1101:	
  1188  06CE  2EF4               	goto	l1383
  1189  06CF                     u1100:	
  1190  06CF                     l1369:	
  1191                           
  1192                           ;main.c: 121:                 if(bVOLTAGE<cVOLTAGE)bON();
  1193  06CF  082D               	movf	_bVOLTAGE+1,w
  1194  06D0  3A80               	xorlw	128
  1195  06D1  00FB               	movwf	??_main
  1196  06D2  082B               	movf	_cVOLTAGE+1,w
  1197  06D3  3A80               	xorlw	128
  1198  06D4  027B               	subwf	??_main,w
  1199  06D5  1D03               	skipz
  1200  06D6  2ED9               	goto	u1115
  1201  06D7  082A               	movf	_cVOLTAGE,w
  1202  06D8  022C               	subwf	_bVOLTAGE,w
  1203  06D9                     u1115:	
  1204  06D9  1803               	skipnc
  1205  06DA  2EDC               	goto	u1111
  1206  06DB  2EDD               	goto	u1110
  1207  06DC                     u1111:	
  1208  06DC  2EDE               	goto	l165
  1209  06DD                     u1110:	
  1210  06DD  2E7E               	goto	l1349
  1211  06DE                     l165:	
  1212                           ;main.c: 122:                 else if(RB2==0)cON();
  1213                           
  1214  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  1215  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  1216  06E0  1906               	btfsc	6,2	;volatile
  1217  06E1  2EE3               	goto	u1121
  1218  06E2  2EE4               	goto	u1120
  1219  06E3                     u1121:	
  1220  06E3  2E59               	goto	l147
  1221  06E4                     u1120:	
  1222  06E4  2E4D               	goto	l1339
  1223  06E5                     l157:	
  1224                           
  1225                           ;main.c: 126:             if(RB0==0)aON();
  1226  06E5  1806               	btfsc	6,0	;volatile
  1227  06E6  2EE8               	goto	u1131
  1228  06E7  2EE9               	goto	u1130
  1229  06E8                     u1131:	
  1230  06E8  2EEA               	goto	l170
  1231  06E9                     u1130:	
  1232  06E9  2E41               	goto	l1337
  1233  06EA                     l170:	
  1234                           ;main.c: 127:             else if(RB1==0)bON();
  1235                           
  1236  06EA  1886               	btfsc	6,1	;volatile
  1237  06EB  2EED               	goto	u1141
  1238  06EC  2EEE               	goto	u1140
  1239  06ED                     u1141:	
  1240  06ED  2EEF               	goto	l172
  1241  06EE                     u1140:	
  1242  06EE  2E7E               	goto	l1349
  1243  06EF                     l172:	
  1244                           ;main.c: 128:             else if(RB2==0)cON();
  1245                           
  1246  06EF  1906               	btfsc	6,2	;volatile
  1247  06F0  2EF2               	goto	u1151
  1248  06F1  2EF3               	goto	u1150
  1249  06F2                     u1151:	
  1250  06F2  2E53               	goto	l1341
  1251  06F3                     u1150:	
  1252  06F3  2E4D               	goto	l1339
  1253  06F4                     l1383:	
  1254                           
  1255                           ;main.c: 133:         ADCON0bits.CHS=3;
  1256  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  1257  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  1258  06F6  081F               	movf	31,w	;volatile
  1259  06F7  39C7               	andlw	-57
  1260  06F8  3818               	iorlw	24
  1261  06F9  009F               	movwf	31	;volatile
  1262  06FA                     l1385:	
  1263                           
  1264                           ;main.c: 134:         for(int i=0;i<100;i++){
  1265  06FA  01B0               	clrf	main@i
  1266  06FB  01B1               	clrf	main@i+1
  1267  06FC                     l176:	
  1268                           
  1269                           ;main.c: 135:             ADCON0bits.GO_nDONE=1;
  1270  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  1271  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  1272  06FE  151F               	bsf	31,2	;volatile
  1273  06FF                     l178:	
  1274                           ;main.c: 136:             while(ADCON0bits.GO_nDONE);
  1275                           
  1276  06FF  191F               	btfsc	31,2	;volatile
  1277  0700  2F02               	goto	u1161
  1278  0701  2F03               	goto	u1160
  1279  0702                     u1161:	
  1280  0702  2EFF               	goto	l178
  1281  0703                     u1160:	
  1282  0703                     l1391:	
  1283                           
  1284                           ;main.c: 137:             current=(ADRESH<<8)+ADRESL;
  1285  0703  081E               	movf	30,w	;volatile
  1286  0704  00A7               	movwf	_current+1
  1287  0705  1683               	bsf	3,5	;RP0=1, select bank1
  1288  0706  1303               	bcf	3,6	;RP1=0, select bank1
  1289  0707  081E               	movf	30,w	;volatile
  1290  0708  1283               	bcf	3,5	;RP0=0, select bank0
  1291  0709  1303               	bcf	3,6	;RP1=0, select bank0
  1292  070A  00A6               	movwf	_current
  1293                           
  1294                           ;main.c: 138:             if(current>max_current)max_current=current;
  1295  070B  0823               	movf	_max_current+1,w
  1296  070C  3A80               	xorlw	128
  1297  070D  00FB               	movwf	??_main
  1298  070E  0827               	movf	_current+1,w
  1299  070F  3A80               	xorlw	128
  1300  0710  027B               	subwf	??_main,w
  1301  0711  1D03               	skipz
  1302  0712  2F15               	goto	u1175
  1303  0713  0826               	movf	_current,w
  1304  0714  0222               	subwf	_max_current,w
  1305  0715                     u1175:	
  1306  0715  1803               	skipnc
  1307  0716  2F18               	goto	u1171
  1308  0717  2F19               	goto	u1170
  1309  0718                     u1171:	
  1310  0718  2F1F               	goto	l181
  1311  0719                     u1170:	
  1312  0719                     l1393:	
  1313  0719  1283               	bcf	3,5	;RP0=0, select bank0
  1314  071A  1303               	bcf	3,6	;RP1=0, select bank0
  1315  071B  0827               	movf	_current+1,w
  1316  071C  00A3               	movwf	_max_current+1
  1317  071D  0826               	movf	_current,w
  1318  071E  00A2               	movwf	_max_current
  1319  071F                     l181:	
  1320                           
  1321                           ;main.c: 139:             if(current<min_current)min_current=current;
  1322  071F  1283               	bcf	3,5	;RP0=0, select bank0
  1323  0720  1303               	bcf	3,6	;RP1=0, select bank0
  1324  0721  0827               	movf	_current+1,w
  1325  0722  3A80               	xorlw	128
  1326  0723  00FB               	movwf	??_main
  1327  0724  0821               	movf	_min_current+1,w
  1328  0725  3A80               	xorlw	128
  1329  0726  027B               	subwf	??_main,w
  1330  0727  1D03               	skipz
  1331  0728  2F2B               	goto	u1185
  1332  0729  0820               	movf	_min_current,w
  1333  072A  0226               	subwf	_current,w
  1334  072B                     u1185:	
  1335  072B  1803               	skipnc
  1336  072C  2F2E               	goto	u1181
  1337  072D  2F2F               	goto	u1180
  1338  072E                     u1181:	
  1339  072E  2F35               	goto	l182
  1340  072F                     u1180:	
  1341  072F                     l1395:	
  1342  072F  1283               	bcf	3,5	;RP0=0, select bank0
  1343  0730  1303               	bcf	3,6	;RP1=0, select bank0
  1344  0731  0827               	movf	_current+1,w
  1345  0732  00A1               	movwf	_min_current+1
  1346  0733  0826               	movf	_current,w
  1347  0734  00A0               	movwf	_min_current
  1348  0735                     l182:	
  1349                           
  1350                           ;main.c: 140:             _delay((unsigned long)((190)*(20000000/4000000.0)));
  1351  0735  30BD               	movlw	189
  1352  0736  00FB               	movwf	??_main
  1353  0737                     u1297:	
  1354  0737  2F38               	nop2
  1355  0738  0BFB               	decfsz	??_main,f
  1356  0739  2F37               	goto	u1297
  1357  073A  2F3B               	nop2
  1358  073B  2F3C               	nop2
  1359                           
  1360                           ;main.c: 141:         }
  1361  073C  3001               	movlw	1
  1362  073D  1283               	bcf	3,5	;RP0=0, select bank0
  1363  073E  1303               	bcf	3,6	;RP1=0, select bank0
  1364  073F  07B0               	addwf	main@i,f
  1365  0740  1803               	skipnc
  1366  0741  0AB1               	incf	main@i+1,f
  1367  0742  3000               	movlw	0
  1368  0743  07B1               	addwf	main@i+1,f
  1369  0744                     l1397:	
  1370  0744  0831               	movf	main@i+1,w
  1371  0745  3A80               	xorlw	128
  1372  0746  00FF               	movwf	btemp+1
  1373  0747  3080               	movlw	128
  1374  0748  027F               	subwf	btemp+1,w
  1375  0749  1D03               	skipz
  1376  074A  2F4D               	goto	u1195
  1377  074B  3064               	movlw	100
  1378  074C  0230               	subwf	main@i,w
  1379  074D                     u1195:	
  1380  074D  1C03               	skipc
  1381  074E  2F50               	goto	u1191
  1382  074F  2F51               	goto	u1190
  1383  0750                     u1191:	
  1384  0750  2EFC               	goto	l176
  1385  0751                     u1190:	
  1386  0751                     l1399:	
  1387                           
  1388                           ;main.c: 142:         current=(max_current-min_current)/2;
  1389  0751  3002               	movlw	2
  1390  0752  00F0               	movwf	___awdiv@divisor
  1391  0753  3000               	movlw	0
  1392  0754  00F1               	movwf	___awdiv@divisor+1
  1393  0755  1283               	bcf	3,5	;RP0=0, select bank0
  1394  0756  1303               	bcf	3,6	;RP1=0, select bank0
  1395  0757  0820               	movf	_min_current,w
  1396  0758  0222               	subwf	_max_current,w
  1397  0759  00F2               	movwf	___awdiv@dividend
  1398  075A  0821               	movf	_min_current+1,w
  1399  075B  1C03               	skipc
  1400  075C  0A21               	incf	_min_current+1,w
  1401  075D  0223               	subwf	_max_current+1,w
  1402  075E  00F3               	movwf	___awdiv@dividend+1
  1403  075F  120A  118A  249F  120A  118A  	fcall	___awdiv
  1404  0764  0871               	movf	?___awdiv+1,w
  1405  0765  1283               	bcf	3,5	;RP0=0, select bank0
  1406  0766  1303               	bcf	3,6	;RP1=0, select bank0
  1407  0767  00A7               	movwf	_current+1
  1408  0768  0870               	movf	?___awdiv,w
  1409  0769  00A6               	movwf	_current
  1410  076A                     l1401:	
  1411                           
  1412                           ;main.c: 143:         if(RB3==1){
  1413  076A  1D86               	btfss	6,3	;volatile
  1414  076B  2F6D               	goto	u1201
  1415  076C  2F6E               	goto	u1200
  1416  076D                     u1201:	
  1417  076D  2F81               	goto	l183
  1418  076E                     u1200:	
  1419  076E                     l1403:	
  1420                           
  1421                           ;main.c: 144:             voltage=(500/1023)*aVOLTAGE;
  1422  076E  082F               	movf	_aVOLTAGE+1,w
  1423  076F  00F1               	movwf	___wmul@multiplier+1
  1424  0770  082E               	movf	_aVOLTAGE,w
  1425  0771  00F0               	movwf	___wmul@multiplier
  1426  0772  3000               	movlw	0
  1427  0773  00F2               	movwf	___wmul@multiplicand
  1428  0774  00F3               	movwf	___wmul@multiplicand+1
  1429  0775  120A  118A  2391  120A  118A  	fcall	___wmul
  1430  077A  0871               	movf	?___wmul+1,w
  1431  077B  1283               	bcf	3,5	;RP0=0, select bank0
  1432  077C  1303               	bcf	3,6	;RP1=0, select bank0
  1433  077D  00A9               	movwf	_voltage+1
  1434  077E  0870               	movf	?___wmul,w
  1435  077F  00A8               	movwf	_voltage
  1436                           
  1437                           ;main.c: 145:         }else if(RB4==1){
  1438  0780  2FB1               	goto	l1411
  1439  0781                     l183:	
  1440  0781  1E06               	btfss	6,4	;volatile
  1441  0782  2F84               	goto	u1211
  1442  0783  2F85               	goto	u1210
  1443  0784                     u1211:	
  1444  0784  2F98               	goto	l185
  1445  0785                     u1210:	
  1446  0785                     l1405:	
  1447                           
  1448                           ;main.c: 146:             voltage=(500/1023)*bVOLTAGE;
  1449  0785  082D               	movf	_bVOLTAGE+1,w
  1450  0786  00F1               	movwf	___wmul@multiplier+1
  1451  0787  082C               	movf	_bVOLTAGE,w
  1452  0788  00F0               	movwf	___wmul@multiplier
  1453  0789  3000               	movlw	0
  1454  078A  00F2               	movwf	___wmul@multiplicand
  1455  078B  00F3               	movwf	___wmul@multiplicand+1
  1456  078C  120A  118A  2391  120A  118A  	fcall	___wmul
  1457  0791  0871               	movf	?___wmul+1,w
  1458  0792  1283               	bcf	3,5	;RP0=0, select bank0
  1459  0793  1303               	bcf	3,6	;RP1=0, select bank0
  1460  0794  00A9               	movwf	_voltage+1
  1461  0795  0870               	movf	?___wmul,w
  1462  0796  00A8               	movwf	_voltage
  1463                           
  1464                           ;main.c: 147:         }else if(RB5==1){
  1465  0797  2FB1               	goto	l1411
  1466  0798                     l185:	
  1467  0798  1E86               	btfss	6,5	;volatile
  1468  0799  2F9B               	goto	u1221
  1469  079A  2F9C               	goto	u1220
  1470  079B                     u1221:	
  1471  079B  2FAF               	goto	l1409
  1472  079C                     u1220:	
  1473  079C                     l1407:	
  1474                           
  1475                           ;main.c: 148:             voltage=(500/1023)*cVOLTAGE;
  1476  079C  082B               	movf	_cVOLTAGE+1,w
  1477  079D  00F1               	movwf	___wmul@multiplier+1
  1478  079E  082A               	movf	_cVOLTAGE,w
  1479  079F  00F0               	movwf	___wmul@multiplier
  1480  07A0  3000               	movlw	0
  1481  07A1  00F2               	movwf	___wmul@multiplicand
  1482  07A2  00F3               	movwf	___wmul@multiplicand+1
  1483  07A3  120A  118A  2391  120A  118A  	fcall	___wmul
  1484  07A8  0871               	movf	?___wmul+1,w
  1485  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  1486  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  1487  07AB  00A9               	movwf	_voltage+1
  1488  07AC  0870               	movf	?___wmul,w
  1489  07AD  00A8               	movwf	_voltage
  1490                           
  1491                           ;main.c: 149:         }else{
  1492  07AE  2FB1               	goto	l1411
  1493  07AF                     l1409:	
  1494                           
  1495                           ;main.c: 150:             voltage=0;
  1496  07AF  01A8               	clrf	_voltage
  1497  07B0  01A9               	clrf	_voltage+1
  1498  07B1                     l1411:	
  1499                           
  1500                           ;main.c: 152:         power=voltage*current;
  1501  07B1  0829               	movf	_voltage+1,w
  1502  07B2  00F1               	movwf	___wmul@multiplier+1
  1503  07B3  0828               	movf	_voltage,w
  1504  07B4  00F0               	movwf	___wmul@multiplier
  1505  07B5  0827               	movf	_current+1,w
  1506  07B6  00F3               	movwf	___wmul@multiplicand+1
  1507  07B7  0826               	movf	_current,w
  1508  07B8  00F2               	movwf	___wmul@multiplicand
  1509  07B9  120A  118A  2391  120A  118A  	fcall	___wmul
  1510  07BE  0871               	movf	?___wmul+1,w
  1511  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  1512  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  1513  07C1  00A5               	movwf	_power+1
  1514  07C2  0870               	movf	?___wmul,w
  1515  07C3  00A4               	movwf	_power
  1516  07C4                     l1413:	
  1517                           
  1518                           ;main.c: 154:         Lcd_Clear();
  1519  07C4  120A  118A  2323  120A  118A  	fcall	_Lcd_Clear
  1520  07C9                     l1415:	
  1521                           
  1522                           ;main.c: 155:         Lcd_Set_Cursor(1,1);
  1523  07C9  01F4               	clrf	Lcd_Set_Cursor@b
  1524  07CA  0AF4               	incf	Lcd_Set_Cursor@b,f
  1525  07CB  3001               	movlw	1
  1526  07CC  120A  118A  23EF  120A  118A  	fcall	_Lcd_Set_Cursor
  1527  07D1                     l1417:	
  1528                           
  1529                           ;main.c: 156:         Lcd_Write_String("volts:");
  1530  07D1  301A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1531  07D2  120A  118A  236C  120A  118A  	fcall	_Lcd_Write_String
  1532  07D7                     l1419:	
  1533                           
  1534                           ;main.c: 159:         RE0=1;
  1535  07D7  1283               	bcf	3,5	;RP0=0, select bank0
  1536  07D8  1303               	bcf	3,6	;RP1=0, select bank0
  1537  07D9  1409               	bsf	9,0	;volatile
  1538  07DA                     l1421:	
  1539                           
  1540                           ;main.c: 160:         _delay((unsigned long)((10)*(20000000/4000.0)));
  1541  07DA  3041               	movlw	65
  1542  07DB  00FC               	movwf	??_main+1
  1543  07DC  30EE               	movlw	238
  1544  07DD  00FB               	movwf	??_main
  1545  07DE                     u1307:	
  1546  07DE  0BFB               	decfsz	??_main,f
  1547  07DF  2FDE               	goto	u1307
  1548  07E0  0BFC               	decfsz	??_main+1,f
  1549  07E1  2FDE               	goto	u1307
  1550  07E2  0000               	nop
  1551  07E3                     l1423:	
  1552                           
  1553                           ;main.c: 161:         RE0=0;
  1554  07E3  1283               	bcf	3,5	;RP0=0, select bank0
  1555  07E4  1303               	bcf	3,6	;RP1=0, select bank0
  1556  07E5  1009               	bcf	9,0	;volatile
  1557  07E6                     l1425:	
  1558                           
  1559                           ;main.c: 162:         _delay((unsigned long)((10)*(20000000/4000.0)));
  1560  07E6  3041               	movlw	65
  1561  07E7  00FC               	movwf	??_main+1
  1562  07E8  30EE               	movlw	238
  1563  07E9  00FB               	movwf	??_main
  1564  07EA                     u1317:	
  1565  07EA  0BFB               	decfsz	??_main,f
  1566  07EB  2FEA               	goto	u1317
  1567  07EC  0BFC               	decfsz	??_main+1,f
  1568  07ED  2FEA               	goto	u1317
  1569  07EE  0000               	nop
  1570  07EF  2D69               	goto	l1291
  1571  07F0  120A  118A  2800   	ljmp	start
  1572  07F3                     __end_of_main:	
  1573                           
  1574                           	psect	text1
  1575  0315                     __ptext1:	
  1576 ;; *************** function _cON *****************
  1577 ;; Defined at:
  1578 ;;		line 177 in file "main.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;		None
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;		None
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      void 
  1585 ;; Registers used:
  1586 ;;		None
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1592 ;;      Params:         0       0       0       0       0
  1593 ;;      Locals:         0       0       0       0       0
  1594 ;;      Temps:          0       0       0       0       0
  1595 ;;      Totals:         0       0       0       0       0
  1596 ;;Total ram usage:        0 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; This function calls:
  1599 ;;		Nothing
  1600 ;; This function is called by:
  1601 ;;		_main
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           
  1606                           ;psect for function _cON
  1607  0315                     _cON:	
  1608  0315                     l1193:	
  1609                           ;incstack = 0
  1610                           ; Regs used in _cON: []
  1611                           
  1612                           
  1613                           ;main.c: 178:     RB3=0;
  1614  0315  1283               	bcf	3,5	;RP0=0, select bank0
  1615  0316  1303               	bcf	3,6	;RP1=0, select bank0
  1616  0317  1186               	bcf	6,3	;volatile
  1617                           
  1618                           ;main.c: 179:     RB4=0;
  1619  0318  1206               	bcf	6,4	;volatile
  1620                           
  1621                           ;main.c: 180:     RB5=1;
  1622  0319  1686               	bsf	6,5	;volatile
  1623  031A                     l200:	
  1624  031A  0008               	return
  1625  031B                     __end_of_cON:	
  1626                           
  1627                           	psect	text2
  1628  030F                     __ptext2:	
  1629 ;; *************** function _bON *****************
  1630 ;; Defined at:
  1631 ;;		line 172 in file "main.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;		None
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;		None
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  1    wreg      void 
  1638 ;; Registers used:
  1639 ;;		None
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1645 ;;      Params:         0       0       0       0       0
  1646 ;;      Locals:         0       0       0       0       0
  1647 ;;      Temps:          0       0       0       0       0
  1648 ;;      Totals:         0       0       0       0       0
  1649 ;;Total ram usage:        0 bytes
  1650 ;; Hardware stack levels used:    1
  1651 ;; This function calls:
  1652 ;;		Nothing
  1653 ;; This function is called by:
  1654 ;;		_main
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           
  1659                           ;psect for function _bON
  1660  030F                     _bON:	
  1661  030F                     l1197:	
  1662                           ;incstack = 0
  1663                           ; Regs used in _bON: []
  1664                           
  1665                           
  1666                           ;main.c: 173:     RB3=0;
  1667  030F  1283               	bcf	3,5	;RP0=0, select bank0
  1668  0310  1303               	bcf	3,6	;RP1=0, select bank0
  1669  0311  1186               	bcf	6,3	;volatile
  1670                           
  1671                           ;main.c: 174:     RB4=1;
  1672  0312  1606               	bsf	6,4	;volatile
  1673                           
  1674                           ;main.c: 175:     RB5=0;
  1675  0313  1286               	bcf	6,5	;volatile
  1676  0314                     l197:	
  1677  0314  0008               	return
  1678  0315                     __end_of_bON:	
  1679                           
  1680                           	psect	text3
  1681  0309                     __ptext3:	
  1682 ;; *************** function _aON *****************
  1683 ;; Defined at:
  1684 ;;		line 167 in file "main.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;		None
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;		None
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      void 
  1691 ;; Registers used:
  1692 ;;		None
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1698 ;;      Params:         0       0       0       0       0
  1699 ;;      Locals:         0       0       0       0       0
  1700 ;;      Temps:          0       0       0       0       0
  1701 ;;      Totals:         0       0       0       0       0
  1702 ;;Total ram usage:        0 bytes
  1703 ;; Hardware stack levels used:    1
  1704 ;; This function calls:
  1705 ;;		Nothing
  1706 ;; This function is called by:
  1707 ;;		_main
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           
  1712                           ;psect for function _aON
  1713  0309                     _aON:	
  1714  0309                     l1191:	
  1715                           ;incstack = 0
  1716                           ; Regs used in _aON: []
  1717                           
  1718                           
  1719                           ;main.c: 168:     RB3=1;
  1720  0309  1283               	bcf	3,5	;RP0=0, select bank0
  1721  030A  1303               	bcf	3,6	;RP1=0, select bank0
  1722  030B  1586               	bsf	6,3	;volatile
  1723                           
  1724                           ;main.c: 169:     RB4=0;
  1725  030C  1206               	bcf	6,4	;volatile
  1726                           
  1727                           ;main.c: 170:     RB5=0;
  1728  030D  1286               	bcf	6,5	;volatile
  1729  030E                     l194:	
  1730  030E  0008               	return
  1731  030F                     __end_of_aON:	
  1732                           
  1733                           	psect	text4
  1734  0391                     __ptext4:	
  1735 ;; *************** function ___wmul *****************
  1736 ;; Defined at:
  1737 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;  multiplier      2    0[COMMON] unsigned int 
  1740 ;;  multiplicand    2    2[COMMON] unsigned int 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  product         2    4[COMMON] unsigned int 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  2    0[COMMON] unsigned int 
  1745 ;; Registers used:
  1746 ;;		wreg, status,2, status,0
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1752 ;;      Params:         4       0       0       0       0
  1753 ;;      Locals:         2       0       0       0       0
  1754 ;;      Temps:          0       0       0       0       0
  1755 ;;      Totals:         6       0       0       0       0
  1756 ;;Total ram usage:        6 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; This function calls:
  1759 ;;		Nothing
  1760 ;; This function is called by:
  1761 ;;		_main
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           
  1766                           ;psect for function ___wmul
  1767  0391                     ___wmul:	
  1768  0391                     l1199:	
  1769                           ;incstack = 0
  1770                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1771                           
  1772  0391  01F4               	clrf	___wmul@product
  1773  0392  01F5               	clrf	___wmul@product+1
  1774  0393                     l1201:	
  1775  0393  1C70               	btfss	___wmul@multiplier,0
  1776  0394  2B96               	goto	u721
  1777  0395  2B97               	goto	u720
  1778  0396                     u721:	
  1779  0396  2B9D               	goto	l289
  1780  0397                     u720:	
  1781  0397                     l1203:	
  1782  0397  0872               	movf	___wmul@multiplicand,w
  1783  0398  07F4               	addwf	___wmul@product,f
  1784  0399  1803               	skipnc
  1785  039A  0AF5               	incf	___wmul@product+1,f
  1786  039B  0873               	movf	___wmul@multiplicand+1,w
  1787  039C  07F5               	addwf	___wmul@product+1,f
  1788  039D                     l289:	
  1789  039D  3001               	movlw	1
  1790  039E                     u735:	
  1791  039E  1003               	clrc
  1792  039F  0DF2               	rlf	___wmul@multiplicand,f
  1793  03A0  0DF3               	rlf	___wmul@multiplicand+1,f
  1794  03A1  3EFF               	addlw	-1
  1795  03A2  1D03               	skipz
  1796  03A3  2B9E               	goto	u735
  1797  03A4                     l1205:	
  1798  03A4  3001               	movlw	1
  1799  03A5                     u745:	
  1800  03A5  1003               	clrc
  1801  03A6  0CF1               	rrf	___wmul@multiplier+1,f
  1802  03A7  0CF0               	rrf	___wmul@multiplier,f
  1803  03A8  3EFF               	addlw	-1
  1804  03A9  1D03               	skipz
  1805  03AA  2BA5               	goto	u745
  1806  03AB                     l1207:	
  1807  03AB  0870               	movf	___wmul@multiplier,w
  1808  03AC  0471               	iorwf	___wmul@multiplier+1,w
  1809  03AD  1D03               	btfss	3,2
  1810  03AE  2BB0               	goto	u751
  1811  03AF  2BB1               	goto	u750
  1812  03B0                     u751:	
  1813  03B0  2B93               	goto	l1201
  1814  03B1                     u750:	
  1815  03B1                     l1209:	
  1816  03B1  0875               	movf	___wmul@product+1,w
  1817  03B2  00F1               	movwf	?___wmul+1
  1818  03B3  0874               	movf	___wmul@product,w
  1819  03B4  00F0               	movwf	?___wmul
  1820  03B5                     l291:	
  1821  03B5  0008               	return
  1822  03B6                     __end_of___wmul:	
  1823                           
  1824                           	psect	text5
  1825  049F                     __ptext5:	
  1826 ;; *************** function ___awdiv *****************
  1827 ;; Defined at:
  1828 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;  divisor         2    0[COMMON] int 
  1831 ;;  dividend        2    2[COMMON] int 
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;  quotient        2    7[COMMON] int 
  1834 ;;  sign            1    6[COMMON] unsigned char 
  1835 ;;  counter         1    5[COMMON] unsigned char 
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  2    0[COMMON] int 
  1838 ;; Registers used:
  1839 ;;		wreg, status,2, status,0
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1845 ;;      Params:         4       0       0       0       0
  1846 ;;      Locals:         4       0       0       0       0
  1847 ;;      Temps:          1       0       0       0       0
  1848 ;;      Totals:         9       0       0       0       0
  1849 ;;Total ram usage:        9 bytes
  1850 ;; Hardware stack levels used:    1
  1851 ;; This function calls:
  1852 ;;		Nothing
  1853 ;; This function is called by:
  1854 ;;		_main
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           
  1859                           ;psect for function ___awdiv
  1860  049F                     ___awdiv:	
  1861  049F                     l1213:	
  1862                           ;incstack = 0
  1863                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1864                           
  1865  049F  01F6               	clrf	___awdiv@sign
  1866  04A0                     l1215:	
  1867  04A0  1FF1               	btfss	___awdiv@divisor+1,7
  1868  04A1  2CA3               	goto	u761
  1869  04A2  2CA4               	goto	u760
  1870  04A3                     u761:	
  1871  04A3  2CAB               	goto	l1221
  1872  04A4                     u760:	
  1873  04A4                     l1217:	
  1874  04A4  09F0               	comf	___awdiv@divisor,f
  1875  04A5  09F1               	comf	___awdiv@divisor+1,f
  1876  04A6  0AF0               	incf	___awdiv@divisor,f
  1877  04A7  1903               	skipnz
  1878  04A8  0AF1               	incf	___awdiv@divisor+1,f
  1879  04A9                     l1219:	
  1880  04A9  01F6               	clrf	___awdiv@sign
  1881  04AA  0AF6               	incf	___awdiv@sign,f
  1882  04AB                     l1221:	
  1883  04AB  1FF3               	btfss	___awdiv@dividend+1,7
  1884  04AC  2CAE               	goto	u771
  1885  04AD  2CAF               	goto	u770
  1886  04AE                     u771:	
  1887  04AE  2CB8               	goto	l1227
  1888  04AF                     u770:	
  1889  04AF                     l1223:	
  1890  04AF  09F2               	comf	___awdiv@dividend,f
  1891  04B0  09F3               	comf	___awdiv@dividend+1,f
  1892  04B1  0AF2               	incf	___awdiv@dividend,f
  1893  04B2  1903               	skipnz
  1894  04B3  0AF3               	incf	___awdiv@dividend+1,f
  1895  04B4                     l1225:	
  1896  04B4  3001               	movlw	1
  1897  04B5  00F4               	movwf	??___awdiv
  1898  04B6  0874               	movf	??___awdiv,w
  1899  04B7  06F6               	xorwf	___awdiv@sign,f
  1900  04B8                     l1227:	
  1901  04B8  01F7               	clrf	___awdiv@quotient
  1902  04B9  01F8               	clrf	___awdiv@quotient+1
  1903  04BA                     l1229:	
  1904  04BA  0870               	movf	___awdiv@divisor,w
  1905  04BB  0471               	iorwf	___awdiv@divisor+1,w
  1906  04BC  1903               	btfsc	3,2
  1907  04BD  2CBF               	goto	u781
  1908  04BE  2CC0               	goto	u780
  1909  04BF                     u781:	
  1910  04BF  2CF7               	goto	l1249
  1911  04C0                     u780:	
  1912  04C0                     l1231:	
  1913  04C0  01F5               	clrf	___awdiv@counter
  1914  04C1  0AF5               	incf	___awdiv@counter,f
  1915  04C2  2CCE               	goto	l1237
  1916  04C3                     l1233:	
  1917  04C3  3001               	movlw	1
  1918  04C4                     u795:	
  1919  04C4  1003               	clrc
  1920  04C5  0DF0               	rlf	___awdiv@divisor,f
  1921  04C6  0DF1               	rlf	___awdiv@divisor+1,f
  1922  04C7  3EFF               	addlw	-1
  1923  04C8  1D03               	skipz
  1924  04C9  2CC4               	goto	u795
  1925  04CA                     l1235:	
  1926  04CA  3001               	movlw	1
  1927  04CB  00F4               	movwf	??___awdiv
  1928  04CC  0874               	movf	??___awdiv,w
  1929  04CD  07F5               	addwf	___awdiv@counter,f
  1930  04CE                     l1237:	
  1931  04CE  1FF1               	btfss	___awdiv@divisor+1,7
  1932  04CF  2CD1               	goto	u801
  1933  04D0  2CD2               	goto	u800
  1934  04D1                     u801:	
  1935  04D1  2CC3               	goto	l1233
  1936  04D2                     u800:	
  1937  04D2                     l1239:	
  1938  04D2  3001               	movlw	1
  1939  04D3                     u815:	
  1940  04D3  1003               	clrc
  1941  04D4  0DF7               	rlf	___awdiv@quotient,f
  1942  04D5  0DF8               	rlf	___awdiv@quotient+1,f
  1943  04D6  3EFF               	addlw	-1
  1944  04D7  1D03               	skipz
  1945  04D8  2CD3               	goto	u815
  1946  04D9  0871               	movf	___awdiv@divisor+1,w
  1947  04DA  0273               	subwf	___awdiv@dividend+1,w
  1948  04DB  1D03               	skipz
  1949  04DC  2CDF               	goto	u825
  1950  04DD  0870               	movf	___awdiv@divisor,w
  1951  04DE  0272               	subwf	___awdiv@dividend,w
  1952  04DF                     u825:	
  1953  04DF  1C03               	skipc
  1954  04E0  2CE2               	goto	u821
  1955  04E1  2CE3               	goto	u820
  1956  04E2                     u821:	
  1957  04E2  2CEA               	goto	l1245
  1958  04E3                     u820:	
  1959  04E3                     l1241:	
  1960  04E3  0870               	movf	___awdiv@divisor,w
  1961  04E4  02F2               	subwf	___awdiv@dividend,f
  1962  04E5  0871               	movf	___awdiv@divisor+1,w
  1963  04E6  1C03               	skipc
  1964  04E7  03F3               	decf	___awdiv@dividend+1,f
  1965  04E8  02F3               	subwf	___awdiv@dividend+1,f
  1966  04E9                     l1243:	
  1967  04E9  1477               	bsf	___awdiv@quotient,0
  1968  04EA                     l1245:	
  1969  04EA  3001               	movlw	1
  1970  04EB                     u835:	
  1971  04EB  1003               	clrc
  1972  04EC  0CF1               	rrf	___awdiv@divisor+1,f
  1973  04ED  0CF0               	rrf	___awdiv@divisor,f
  1974  04EE  3EFF               	addlw	-1
  1975  04EF  1D03               	skipz
  1976  04F0  2CEB               	goto	u835
  1977  04F1                     l1247:	
  1978  04F1  3001               	movlw	1
  1979  04F2  02F5               	subwf	___awdiv@counter,f
  1980  04F3  1D03               	btfss	3,2
  1981  04F4  2CF6               	goto	u841
  1982  04F5  2CF7               	goto	u840
  1983  04F6                     u841:	
  1984  04F6  2CD2               	goto	l1239
  1985  04F7                     u840:	
  1986  04F7                     l1249:	
  1987  04F7  0876               	movf	___awdiv@sign,w
  1988  04F8  1903               	btfsc	3,2
  1989  04F9  2CFB               	goto	u851
  1990  04FA  2CFC               	goto	u850
  1991  04FB                     u851:	
  1992  04FB  2D01               	goto	l1253
  1993  04FC                     u850:	
  1994  04FC                     l1251:	
  1995  04FC  09F7               	comf	___awdiv@quotient,f
  1996  04FD  09F8               	comf	___awdiv@quotient+1,f
  1997  04FE  0AF7               	incf	___awdiv@quotient,f
  1998  04FF  1903               	skipnz
  1999  0500  0AF8               	incf	___awdiv@quotient+1,f
  2000  0501                     l1253:	
  2001  0501  0878               	movf	___awdiv@quotient+1,w
  2002  0502  00F1               	movwf	?___awdiv+1
  2003  0503  0877               	movf	___awdiv@quotient,w
  2004  0504  00F0               	movwf	?___awdiv
  2005  0505                     l442:	
  2006  0505  0008               	return
  2007  0506                     __end_of___awdiv:	
  2008                           
  2009                           	psect	text6
  2010  0303                     __ptext6:	
  2011 ;; *************** function _OFF *****************
  2012 ;; Defined at:
  2013 ;;		line 182 in file "main.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;		None
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;		None
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  1    wreg      void 
  2020 ;; Registers used:
  2021 ;;		None
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2027 ;;      Params:         0       0       0       0       0
  2028 ;;      Locals:         0       0       0       0       0
  2029 ;;      Temps:          0       0       0       0       0
  2030 ;;      Totals:         0       0       0       0       0
  2031 ;;Total ram usage:        0 bytes
  2032 ;; Hardware stack levels used:    1
  2033 ;; This function calls:
  2034 ;;		Nothing
  2035 ;; This function is called by:
  2036 ;;		_main
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           
  2041                           ;psect for function _OFF
  2042  0303                     _OFF:	
  2043  0303                     l1195:	
  2044                           ;incstack = 0
  2045                           ; Regs used in _OFF: []
  2046                           
  2047                           
  2048                           ;main.c: 183:     RB3=0;
  2049  0303  1283               	bcf	3,5	;RP0=0, select bank0
  2050  0304  1303               	bcf	3,6	;RP1=0, select bank0
  2051  0305  1186               	bcf	6,3	;volatile
  2052                           
  2053                           ;main.c: 184:     RB4=0;
  2054  0306  1206               	bcf	6,4	;volatile
  2055                           
  2056                           ;main.c: 185:     RB5=0;
  2057  0307  1286               	bcf	6,5	;volatile
  2058  0308                     l203:	
  2059  0308  0008               	return
  2060  0309                     __end_of_OFF:	
  2061                           
  2062                           	psect	text7
  2063  036C                     __ptext7:	
  2064 ;; *************** function _Lcd_Write_String *****************
  2065 ;; Defined at:
  2066 ;;		line 97 in file "./lcd.h"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  a               1    wreg     PTR unsigned char 
  2069 ;;		 -> STR_3(7), STR_2(16), STR_1(9), 
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;  a               1    7[COMMON] PTR unsigned char 
  2072 ;;		 -> STR_3(7), STR_2(16), STR_1(9), 
  2073 ;;  i               2    5[COMMON] int 
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  1    wreg      void 
  2076 ;; Registers used:
  2077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2083 ;;      Params:         0       0       0       0       0
  2084 ;;      Locals:         3       0       0       0       0
  2085 ;;      Temps:          0       0       0       0       0
  2086 ;;      Totals:         3       0       0       0       0
  2087 ;;Total ram usage:        3 bytes
  2088 ;; Hardware stack levels used:    1
  2089 ;; Hardware stack levels required when called:    2
  2090 ;; This function calls:
  2091 ;;		_Lcd_Write_Char
  2092 ;; This function is called by:
  2093 ;;		_main
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           
  2098                           ;psect for function _Lcd_Write_String
  2099  036C                     _Lcd_Write_String:	
  2100                           
  2101                           ;incstack = 0
  2102                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2103                           ;Lcd_Write_String@a stored from wreg
  2104  036C  00F7               	movwf	Lcd_Write_String@a
  2105  036D                     l1183:	
  2106                           
  2107                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
  2108  036D  01F5               	clrf	Lcd_Write_String@i
  2109  036E  01F6               	clrf	Lcd_Write_String@i+1
  2110  036F  2B83               	goto	l1189
  2111  0370                     l1185:	
  2112                           
  2113                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
  2114  0370  0875               	movf	Lcd_Write_String@i,w
  2115  0371  0777               	addwf	Lcd_Write_String@a,w
  2116  0372  0084               	movwf	4
  2117  0373  120A  118A  2003  120A  118A  	fcall	stringdir
  2118  0378  120A  118A  23B6  120A  118A  	fcall	_Lcd_Write_Char
  2119  037D                     l1187:	
  2120  037D  3001               	movlw	1
  2121  037E  07F5               	addwf	Lcd_Write_String@i,f
  2122  037F  1803               	skipnc
  2123  0380  0AF6               	incf	Lcd_Write_String@i+1,f
  2124  0381  3000               	movlw	0
  2125  0382  07F6               	addwf	Lcd_Write_String@i+1,f
  2126  0383                     l1189:	
  2127  0383  0875               	movf	Lcd_Write_String@i,w
  2128  0384  0777               	addwf	Lcd_Write_String@a,w
  2129  0385  0084               	movwf	4
  2130  0386  120A  118A  2003  120A  118A  	fcall	stringdir
  2131  038B  3A00               	xorlw	0
  2132  038C  1D03               	skipz
  2133  038D  2B8F               	goto	u711
  2134  038E  2B90               	goto	u710
  2135  038F                     u711:	
  2136  038F  2B70               	goto	l1185
  2137  0390                     u710:	
  2138  0390                     l95:	
  2139  0390  0008               	return
  2140  0391                     __end_of_Lcd_Write_String:	
  2141                           
  2142                           	psect	text8
  2143  03B6                     __ptext8:	
  2144 ;; *************** function _Lcd_Write_Char *****************
  2145 ;; Defined at:
  2146 ;;		line 81 in file "./lcd.h"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;  a               1    wreg     unsigned char 
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;  a               1    4[COMMON] unsigned char 
  2151 ;;  y               1    3[COMMON] unsigned char 
  2152 ;;  temp            1    2[COMMON] unsigned char 
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  1    wreg      void 
  2155 ;; Registers used:
  2156 ;;		wreg, status,2, status,0, pclath, cstack
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2162 ;;      Params:         0       0       0       0       0
  2163 ;;      Locals:         3       0       0       0       0
  2164 ;;      Temps:          1       0       0       0       0
  2165 ;;      Totals:         4       0       0       0       0
  2166 ;;Total ram usage:        4 bytes
  2167 ;; Hardware stack levels used:    1
  2168 ;; Hardware stack levels required when called:    1
  2169 ;; This function calls:
  2170 ;;		_Lcd_Port
  2171 ;; This function is called by:
  2172 ;;		_Lcd_Write_String
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           
  2177                           ;psect for function _Lcd_Write_Char
  2178  03B6                     _Lcd_Write_Char:	
  2179                           
  2180                           ;incstack = 0
  2181                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2182                           ;Lcd_Write_Char@a stored from wreg
  2183  03B6  00F4               	movwf	Lcd_Write_Char@a
  2184  03B7                     l1131:	
  2185                           
  2186                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char temp,y;;./
      +                          lcd.h: 84:    temp = a&0x0F;
  2187  03B7  0874               	movf	Lcd_Write_Char@a,w
  2188  03B8  390F               	andlw	15
  2189  03B9  00F1               	movwf	??_Lcd_Write_Char
  2190  03BA  0871               	movf	??_Lcd_Write_Char,w
  2191  03BB  00F2               	movwf	Lcd_Write_Char@temp
  2192                           
  2193                           ;./lcd.h: 85:    y = a&0xF0;
  2194  03BC  0874               	movf	Lcd_Write_Char@a,w
  2195  03BD  39F0               	andlw	240
  2196  03BE  00F1               	movwf	??_Lcd_Write_Char
  2197  03BF  0871               	movf	??_Lcd_Write_Char,w
  2198  03C0  00F3               	movwf	Lcd_Write_Char@y
  2199  03C1                     l1133:	
  2200                           
  2201                           ;./lcd.h: 86:    RD1 = 1;
  2202  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  2203  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  2204  03C3  1488               	bsf	8,1	;volatile
  2205  03C4                     l1135:	
  2206                           
  2207                           ;./lcd.h: 87:    Lcd_Port(y>>4);
  2208  03C4  0873               	movf	Lcd_Write_Char@y,w
  2209  03C5  00F1               	movwf	??_Lcd_Write_Char
  2210  03C6  3004               	movlw	4
  2211  03C7                     u665:	
  2212  03C7  1003               	clrc
  2213  03C8  0CF1               	rrf	??_Lcd_Write_Char,f
  2214  03C9  3EFF               	addlw	-1
  2215  03CA  1D03               	skipz
  2216  03CB  2BC7               	goto	u665
  2217  03CC  0871               	movf	??_Lcd_Write_Char,w
  2218  03CD  120A  118A  234A  120A  118A  	fcall	_Lcd_Port
  2219  03D2                     l1137:	
  2220                           
  2221                           ;./lcd.h: 88:    RD3 = 1;
  2222  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  2223  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  2224  03D4  1588               	bsf	8,3	;volatile
  2225  03D5                     l1139:	
  2226                           
  2227                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  2228  03D5  3042               	movlw	66
  2229  03D6  00F1               	movwf	??_Lcd_Write_Char
  2230  03D7                     u1327:	
  2231  03D7  0BF1               	decfsz	??_Lcd_Write_Char,f
  2232  03D8  2BD7               	goto	u1327
  2233  03D9  0000               	nop
  2234  03DA                     l1141:	
  2235                           
  2236                           ;./lcd.h: 90:    RD3 = 0;
  2237  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  2238  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  2239  03DC  1188               	bcf	8,3	;volatile
  2240  03DD                     l1143:	
  2241                           
  2242                           ;./lcd.h: 91:    Lcd_Port(temp);
  2243  03DD  0872               	movf	Lcd_Write_Char@temp,w
  2244  03DE  120A  118A  234A  120A  118A  	fcall	_Lcd_Port
  2245  03E3                     l1145:	
  2246                           
  2247                           ;./lcd.h: 92:    RD3 = 1;
  2248  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  2249  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  2250  03E5  1588               	bsf	8,3	;volatile
  2251  03E6                     l1147:	
  2252                           
  2253                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  2254  03E6  3042               	movlw	66
  2255  03E7  00F1               	movwf	??_Lcd_Write_Char
  2256  03E8                     u1337:	
  2257  03E8  0BF1               	decfsz	??_Lcd_Write_Char,f
  2258  03E9  2BE8               	goto	u1337
  2259  03EA  0000               	nop
  2260  03EB                     l1149:	
  2261                           
  2262                           ;./lcd.h: 94:    RD3 = 0;
  2263  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  2264  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  2265  03ED  1188               	bcf	8,3	;volatile
  2266  03EE                     l89:	
  2267  03EE  0008               	return
  2268  03EF                     __end_of_Lcd_Write_Char:	
  2269                           
  2270                           	psect	text9
  2271  03EF                     __ptext9:	
  2272 ;; *************** function _Lcd_Set_Cursor *****************
  2273 ;; Defined at:
  2274 ;;		line 41 in file "./lcd.h"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;  a               1    wreg     unsigned char 
  2277 ;;  b               1    4[COMMON] unsigned char 
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  a               1    7[COMMON] unsigned char 
  2280 ;;  temp            1   10[COMMON] unsigned char 
  2281 ;;  y               1    9[COMMON] unsigned char 
  2282 ;;  z               1    8[COMMON] unsigned char 
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  1    wreg      void 
  2285 ;; Registers used:
  2286 ;;		wreg, status,2, status,0, pclath, cstack
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2292 ;;      Params:         1       0       0       0       0
  2293 ;;      Locals:         4       0       0       0       0
  2294 ;;      Temps:          2       0       0       0       0
  2295 ;;      Totals:         7       0       0       0       0
  2296 ;;Total ram usage:        7 bytes
  2297 ;; Hardware stack levels used:    1
  2298 ;; Hardware stack levels required when called:    2
  2299 ;; This function calls:
  2300 ;;		_Lcd_Cmd
  2301 ;; This function is called by:
  2302 ;;		_main
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           
  2307                           ;psect for function _Lcd_Set_Cursor
  2308  03EF                     _Lcd_Set_Cursor:	
  2309                           
  2310                           ;incstack = 0
  2311                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2312                           ;Lcd_Set_Cursor@a stored from wreg
  2313  03EF  00F7               	movwf	Lcd_Set_Cursor@a
  2314  03F0                     l1153:	
  2315                           
  2316                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
  2317  03F0  0377               	decf	Lcd_Set_Cursor@a,w
  2318  03F1  1D03               	btfss	3,2
  2319  03F2  2BF4               	goto	u671
  2320  03F3  2BF5               	goto	u670
  2321  03F4                     u671:	
  2322  03F4  2C18               	goto	l1163
  2323  03F5                     u670:	
  2324  03F5                     l1155:	
  2325                           
  2326                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
  2327  03F5  0874               	movf	Lcd_Set_Cursor@b,w
  2328  03F6  3E7F               	addlw	127
  2329  03F7  00F5               	movwf	??_Lcd_Set_Cursor
  2330  03F8  0875               	movf	??_Lcd_Set_Cursor,w
  2331  03F9  00FA               	movwf	Lcd_Set_Cursor@temp
  2332                           
  2333                           ;./lcd.h: 47:   z = temp>>4;
  2334  03FA  087A               	movf	Lcd_Set_Cursor@temp,w
  2335  03FB  00F5               	movwf	??_Lcd_Set_Cursor
  2336  03FC  3004               	movlw	4
  2337  03FD                     u685:	
  2338  03FD  1003               	clrc
  2339  03FE  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2340  03FF  3EFF               	addlw	-1
  2341  0400  1D03               	skipz
  2342  0401  2BFD               	goto	u685
  2343  0402  0875               	movf	??_Lcd_Set_Cursor,w
  2344  0403  00F6               	movwf	??_Lcd_Set_Cursor+1
  2345  0404  0876               	movf	??_Lcd_Set_Cursor+1,w
  2346  0405  00F8               	movwf	Lcd_Set_Cursor@z
  2347  0406                     l1157:	
  2348                           
  2349                           ;./lcd.h: 48:   y = temp & 0x0F;
  2350  0406  087A               	movf	Lcd_Set_Cursor@temp,w
  2351  0407  390F               	andlw	15
  2352  0408  00F5               	movwf	??_Lcd_Set_Cursor
  2353  0409  0875               	movf	??_Lcd_Set_Cursor,w
  2354  040A  00F9               	movwf	Lcd_Set_Cursor@y
  2355  040B                     l1159:	
  2356                           
  2357                           ;./lcd.h: 49:   Lcd_Cmd(z);
  2358  040B  0878               	movf	Lcd_Set_Cursor@z,w
  2359  040C  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2360  0411                     l1161:	
  2361                           
  2362                           ;./lcd.h: 50:   Lcd_Cmd(y);
  2363  0411  0879               	movf	Lcd_Set_Cursor@y,w
  2364  0412  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2365                           
  2366                           ;./lcd.h: 51:  }
  2367  0417  2C40               	goto	l83
  2368  0418                     l1163:	
  2369  0418  3002               	movlw	2
  2370  0419  0677               	xorwf	Lcd_Set_Cursor@a,w
  2371  041A  1D03               	btfss	3,2
  2372  041B  2C1D               	goto	u691
  2373  041C  2C1E               	goto	u690
  2374  041D                     u691:	
  2375  041D  2C40               	goto	l83
  2376  041E                     u690:	
  2377  041E                     l1165:	
  2378                           
  2379                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
  2380  041E  0874               	movf	Lcd_Set_Cursor@b,w
  2381  041F  3EBF               	addlw	191
  2382  0420  00F5               	movwf	??_Lcd_Set_Cursor
  2383  0421  0875               	movf	??_Lcd_Set_Cursor,w
  2384  0422  00FA               	movwf	Lcd_Set_Cursor@temp
  2385                           
  2386                           ;./lcd.h: 55:   z = temp>>4;
  2387  0423  087A               	movf	Lcd_Set_Cursor@temp,w
  2388  0424  00F5               	movwf	??_Lcd_Set_Cursor
  2389  0425  3004               	movlw	4
  2390  0426                     u705:	
  2391  0426  1003               	clrc
  2392  0427  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2393  0428  3EFF               	addlw	-1
  2394  0429  1D03               	skipz
  2395  042A  2C26               	goto	u705
  2396  042B  0875               	movf	??_Lcd_Set_Cursor,w
  2397  042C  00F6               	movwf	??_Lcd_Set_Cursor+1
  2398  042D  0876               	movf	??_Lcd_Set_Cursor+1,w
  2399  042E  00F8               	movwf	Lcd_Set_Cursor@z
  2400  042F                     l1167:	
  2401                           
  2402                           ;./lcd.h: 56:   y = temp & 0x0F;
  2403  042F  087A               	movf	Lcd_Set_Cursor@temp,w
  2404  0430  390F               	andlw	15
  2405  0431  00F5               	movwf	??_Lcd_Set_Cursor
  2406  0432  0875               	movf	??_Lcd_Set_Cursor,w
  2407  0433  00F9               	movwf	Lcd_Set_Cursor@y
  2408  0434                     l1169:	
  2409                           
  2410                           ;./lcd.h: 57:   Lcd_Cmd(z);
  2411  0434  0878               	movf	Lcd_Set_Cursor@z,w
  2412  0435  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2413  043A                     l1171:	
  2414                           
  2415                           ;./lcd.h: 58:   Lcd_Cmd(y);
  2416  043A  0879               	movf	Lcd_Set_Cursor@y,w
  2417  043B  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2418  0440                     l83:	
  2419  0440  0008               	return
  2420  0441                     __end_of_Lcd_Set_Cursor:	
  2421                           
  2422                           	psect	text10
  2423  0441                     __ptext10:	
  2424 ;; *************** function _Lcd_Init *****************
  2425 ;; Defined at:
  2426 ;;		line 62 in file "./lcd.h"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;		None
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;		None
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  1    wreg      void 
  2433 ;; Registers used:
  2434 ;;		wreg, status,2, status,0, pclath, cstack
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2440 ;;      Params:         0       0       0       0       0
  2441 ;;      Locals:         0       0       0       0       0
  2442 ;;      Temps:          2       0       0       0       0
  2443 ;;      Totals:         2       0       0       0       0
  2444 ;;Total ram usage:        2 bytes
  2445 ;; Hardware stack levels used:    1
  2446 ;; Hardware stack levels required when called:    2
  2447 ;; This function calls:
  2448 ;;		_Lcd_Cmd
  2449 ;;		_Lcd_Port
  2450 ;; This function is called by:
  2451 ;;		_main
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           
  2456                           ;psect for function _Lcd_Init
  2457  0441                     _Lcd_Init:	
  2458  0441                     l1173:	
  2459                           ;incstack = 0
  2460                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2461                           
  2462                           
  2463                           ;./lcd.h: 64:   Lcd_Port(0x00);
  2464  0441  3000               	movlw	0
  2465  0442  120A  118A  234A  120A  118A  	fcall	_Lcd_Port
  2466  0447                     l1175:	
  2467                           
  2468                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(20000000/4000.0)));
  2469  0447  3082               	movlw	130
  2470  0448  00F5               	movwf	??_Lcd_Init+1
  2471  0449  30DD               	movlw	221
  2472  044A  00F4               	movwf	??_Lcd_Init
  2473  044B                     u1347:	
  2474  044B  0BF4               	decfsz	??_Lcd_Init,f
  2475  044C  2C4B               	goto	u1347
  2476  044D  0BF5               	decfsz	??_Lcd_Init+1,f
  2477  044E  2C4B               	goto	u1347
  2478  044F  2C50               	nop2
  2479  0450                     l1177:	
  2480                           
  2481                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  2482  0450  3003               	movlw	3
  2483  0451  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2484                           
  2485                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(20000000/4000.0)));
  2486  0456  3021               	movlw	33
  2487  0457  00F5               	movwf	??_Lcd_Init+1
  2488  0458  3076               	movlw	118
  2489  0459  00F4               	movwf	??_Lcd_Init
  2490  045A                     u1357:	
  2491  045A  0BF4               	decfsz	??_Lcd_Init,f
  2492  045B  2C5A               	goto	u1357
  2493  045C  0BF5               	decfsz	??_Lcd_Init+1,f
  2494  045D  2C5A               	goto	u1357
  2495  045E  0000               	nop
  2496  045F                     l1179:	
  2497                           
  2498                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  2499  045F  3003               	movlw	3
  2500  0460  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2501  0465                     l1181:	
  2502                           
  2503                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(20000000/4000.0)));
  2504  0465  3048               	movlw	72
  2505  0466  00F5               	movwf	??_Lcd_Init+1
  2506  0467  306C               	movlw	108
  2507  0468  00F4               	movwf	??_Lcd_Init
  2508  0469                     u1367:	
  2509  0469  0BF4               	decfsz	??_Lcd_Init,f
  2510  046A  2C69               	goto	u1367
  2511  046B  0BF5               	decfsz	??_Lcd_Init+1,f
  2512  046C  2C69               	goto	u1367
  2513  046D  0000               	nop
  2514                           
  2515                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
  2516  046E  3003               	movlw	3
  2517  046F  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2518                           
  2519                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  2520  0474  3002               	movlw	2
  2521  0475  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2522                           
  2523                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  2524  047A  3002               	movlw	2
  2525  047B  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2526                           
  2527                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
  2528  0480  3008               	movlw	8
  2529  0481  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2530                           
  2531                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  2532  0486  3000               	movlw	0
  2533  0487  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2534                           
  2535                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
  2536  048C  300C               	movlw	12
  2537  048D  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2538                           
  2539                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
  2540  0492  3000               	movlw	0
  2541  0493  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2542                           
  2543                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
  2544  0498  3006               	movlw	6
  2545  0499  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2546  049E                     l86:	
  2547  049E  0008               	return
  2548  049F                     __end_of_Lcd_Init:	
  2549                           
  2550                           	psect	text11
  2551  0323                     __ptext11:	
  2552 ;; *************** function _Lcd_Clear *****************
  2553 ;; Defined at:
  2554 ;;		line 35 in file "./lcd.h"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;		None
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;		None
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  2   76[None  ] int 
  2561 ;; Registers used:
  2562 ;;		wreg, status,2, status,0, pclath, cstack
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2568 ;;      Params:         0       0       0       0       0
  2569 ;;      Locals:         0       0       0       0       0
  2570 ;;      Temps:          0       0       0       0       0
  2571 ;;      Totals:         0       0       0       0       0
  2572 ;;Total ram usage:        0 bytes
  2573 ;; Hardware stack levels used:    1
  2574 ;; Hardware stack levels required when called:    2
  2575 ;; This function calls:
  2576 ;;		_Lcd_Cmd
  2577 ;; This function is called by:
  2578 ;;		_main
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           
  2583                           ;psect for function _Lcd_Clear
  2584  0323                     _Lcd_Clear:	
  2585  0323                     l1151:	
  2586                           ;incstack = 0
  2587                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2588                           
  2589                           
  2590                           ;./lcd.h: 37:  Lcd_Cmd(0);
  2591  0323  3000               	movlw	0
  2592  0324  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2593                           
  2594                           ;./lcd.h: 38:  Lcd_Cmd(1);
  2595  0329  3001               	movlw	1
  2596  032A  120A  118A  2330  120A  118A  	fcall	_Lcd_Cmd
  2597  032F                     l77:	
  2598  032F  0008               	return
  2599  0330                     __end_of_Lcd_Clear:	
  2600                           
  2601                           	psect	text12
  2602  0330                     __ptext12:	
  2603 ;; *************** function _Lcd_Cmd *****************
  2604 ;; Defined at:
  2605 ;;		line 26 in file "./lcd.h"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;  a               1    wreg     unsigned char 
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;  a               1    3[COMMON] unsigned char 
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      void 
  2612 ;; Registers used:
  2613 ;;		wreg, status,2, status,0, pclath, cstack
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2619 ;;      Params:         0       0       0       0       0
  2620 ;;      Locals:         1       0       0       0       0
  2621 ;;      Temps:          2       0       0       0       0
  2622 ;;      Totals:         3       0       0       0       0
  2623 ;;Total ram usage:        3 bytes
  2624 ;; Hardware stack levels used:    1
  2625 ;; Hardware stack levels required when called:    1
  2626 ;; This function calls:
  2627 ;;		_Lcd_Port
  2628 ;; This function is called by:
  2629 ;;		_Lcd_Clear
  2630 ;;		_Lcd_Set_Cursor
  2631 ;;		_Lcd_Init
  2632 ;;		_Lcd_Shift_Right
  2633 ;;		_Lcd_Shift_Left
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           
  2638                           ;psect for function _Lcd_Cmd
  2639  0330                     _Lcd_Cmd:	
  2640                           
  2641                           ;incstack = 0
  2642                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2643                           ;Lcd_Cmd@a stored from wreg
  2644  0330  00F3               	movwf	Lcd_Cmd@a
  2645  0331                     l1121:	
  2646                           
  2647                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  RD1 = 0;
  2648  0331  1283               	bcf	3,5	;RP0=0, select bank0
  2649  0332  1303               	bcf	3,6	;RP1=0, select bank0
  2650  0333  1088               	bcf	8,1	;volatile
  2651  0334                     l1123:	
  2652                           
  2653                           ;./lcd.h: 29:  Lcd_Port(a);
  2654  0334  0873               	movf	Lcd_Cmd@a,w
  2655  0335  120A  118A  234A  120A  118A  	fcall	_Lcd_Port
  2656  033A                     l1125:	
  2657                           
  2658                           ;./lcd.h: 30:  RD3 = 1;
  2659  033A  1283               	bcf	3,5	;RP0=0, select bank0
  2660  033B  1303               	bcf	3,6	;RP1=0, select bank0
  2661  033C  1588               	bsf	8,3	;volatile
  2662  033D                     l1127:	
  2663                           
  2664                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(20000000/4000.0)));
  2665  033D  301A               	movlw	26
  2666  033E  00F2               	movwf	??_Lcd_Cmd+1
  2667  033F  30F8               	movlw	248
  2668  0340  00F1               	movwf	??_Lcd_Cmd
  2669  0341                     u1377:	
  2670  0341  0BF1               	decfsz	??_Lcd_Cmd,f
  2671  0342  2B41               	goto	u1377
  2672  0343  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2673  0344  2B41               	goto	u1377
  2674  0345  0000               	nop
  2675  0346                     l1129:	
  2676                           
  2677                           ;./lcd.h: 32:         RD3 = 0;
  2678  0346  1283               	bcf	3,5	;RP0=0, select bank0
  2679  0347  1303               	bcf	3,6	;RP1=0, select bank0
  2680  0348  1188               	bcf	8,3	;volatile
  2681  0349                     l74:	
  2682  0349  0008               	return
  2683  034A                     __end_of_Lcd_Cmd:	
  2684                           
  2685                           	psect	text13
  2686  034A                     __ptext13:	
  2687 ;; *************** function _Lcd_Port *****************
  2688 ;; Defined at:
  2689 ;;		line 4 in file "./lcd.h"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  a               1    wreg     unsigned char 
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;  a               1    0[COMMON] unsigned char 
  2694 ;; Return value:  Size  Location     Type
  2695 ;;                  1    wreg      void 
  2696 ;; Registers used:
  2697 ;;		wreg
  2698 ;; Tracked objects:
  2699 ;;		On entry : 0/0
  2700 ;;		On exit  : 0/0
  2701 ;;		Unchanged: 0/0
  2702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2703 ;;      Params:         0       0       0       0       0
  2704 ;;      Locals:         1       0       0       0       0
  2705 ;;      Temps:          0       0       0       0       0
  2706 ;;      Totals:         1       0       0       0       0
  2707 ;;Total ram usage:        1 bytes
  2708 ;; Hardware stack levels used:    1
  2709 ;; This function calls:
  2710 ;;		Nothing
  2711 ;; This function is called by:
  2712 ;;		_Lcd_Cmd
  2713 ;;		_Lcd_Init
  2714 ;;		_Lcd_Write_Char
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           
  2719                           ;psect for function _Lcd_Port
  2720  034A                     _Lcd_Port:	
  2721                           
  2722                           ;incstack = 0
  2723                           ; Regs used in _Lcd_Port: [wreg]
  2724                           ;Lcd_Port@a stored from wreg
  2725  034A  00F0               	movwf	Lcd_Port@a
  2726  034B                     l1111:	
  2727                           
  2728                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  2729  034B  1C70               	btfss	Lcd_Port@a,0
  2730  034C  2B4E               	goto	u621
  2731  034D  2B4F               	goto	u620
  2732  034E                     u621:	
  2733  034E  2B53               	goto	l63
  2734  034F                     u620:	
  2735  034F                     l1113:	
  2736                           
  2737                           ;./lcd.h: 7:   RD4 = 1;
  2738  034F  1283               	bcf	3,5	;RP0=0, select bank0
  2739  0350  1303               	bcf	3,6	;RP1=0, select bank0
  2740  0351  1608               	bsf	8,4	;volatile
  2741  0352  2B56               	goto	l64
  2742  0353                     l63:	
  2743                           ;./lcd.h: 8:  else
  2744                           
  2745                           
  2746                           ;./lcd.h: 9:   RD4 = 0;
  2747  0353  1283               	bcf	3,5	;RP0=0, select bank0
  2748  0354  1303               	bcf	3,6	;RP1=0, select bank0
  2749  0355  1208               	bcf	8,4	;volatile
  2750  0356                     l64:	
  2751                           
  2752                           ;./lcd.h: 11:  if(a & 2)
  2753  0356  1CF0               	btfss	Lcd_Port@a,1
  2754  0357  2B59               	goto	u631
  2755  0358  2B5A               	goto	u630
  2756  0359                     u631:	
  2757  0359  2B5C               	goto	l65
  2758  035A                     u630:	
  2759  035A                     l1115:	
  2760                           
  2761                           ;./lcd.h: 12:   RD5 = 1;
  2762  035A  1688               	bsf	8,5	;volatile
  2763  035B  2B5D               	goto	l66
  2764  035C                     l65:	
  2765                           ;./lcd.h: 13:  else
  2766                           
  2767                           
  2768                           ;./lcd.h: 14:   RD5 = 0;
  2769  035C  1288               	bcf	8,5	;volatile
  2770  035D                     l66:	
  2771                           
  2772                           ;./lcd.h: 16:  if(a & 4)
  2773  035D  1D70               	btfss	Lcd_Port@a,2
  2774  035E  2B60               	goto	u641
  2775  035F  2B61               	goto	u640
  2776  0360                     u641:	
  2777  0360  2B63               	goto	l67
  2778  0361                     u640:	
  2779  0361                     l1117:	
  2780                           
  2781                           ;./lcd.h: 17:   RD6 = 1;
  2782  0361  1708               	bsf	8,6	;volatile
  2783  0362  2B64               	goto	l68
  2784  0363                     l67:	
  2785                           ;./lcd.h: 18:  else
  2786                           
  2787                           
  2788                           ;./lcd.h: 19:   RD6 = 0;
  2789  0363  1308               	bcf	8,6	;volatile
  2790  0364                     l68:	
  2791                           
  2792                           ;./lcd.h: 21:  if(a & 8)
  2793  0364  1DF0               	btfss	Lcd_Port@a,3
  2794  0365  2B67               	goto	u651
  2795  0366  2B68               	goto	u650
  2796  0367                     u651:	
  2797  0367  2B6A               	goto	l69
  2798  0368                     u650:	
  2799  0368                     l1119:	
  2800                           
  2801                           ;./lcd.h: 22:   RD7 = 1;
  2802  0368  1788               	bsf	8,7	;volatile
  2803  0369  2B6B               	goto	l71
  2804  036A                     l69:	
  2805                           ;./lcd.h: 23:  else
  2806                           
  2807                           
  2808                           ;./lcd.h: 24:   RD7 = 0;
  2809  036A  1388               	bcf	8,7	;volatile
  2810  036B                     l71:	
  2811  036B  0008               	return
  2812  036C                     __end_of_Lcd_Port:	
  2813  007E                     btemp	set	126	;btemp
  2814  007E                     wtemp0	set	126


Data Sizes:
    Strings     32
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      2      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> STR_3(CODE[7]), STR_2(CODE[16]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2481
                                             11 COMMON     3     3      0
                                              0 BANK0      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                                _OFF
                            ___awdiv
                             ___wmul
                                _aON
                                _bON
                                _cON
 ---------------------------------------------------------------------------------
 (1) _cON                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bON                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _aON                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     700
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _OFF                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     367
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     608
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _OFF
   ___awdiv
   ___wmul
   _aON
   _bON
   _cON

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      20       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2      12       5       22.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      20      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Dec 17 10:20:59 2020

               __CFG_CP$ON 0000                          pc 0002                         l71 036B  
                       l63 0353                         l64 0356                         l65 035C  
                       l66 035D                         l74 0349                         l67 0363  
                       l83 0440                         l68 0364                         l69 036A  
                       l77 032F                         l86 049E                         l95 0390  
                       l89 03EE                __CFG_CPD$ON 0000               ___awdiv@sign 0076  
                       fsr 0004        ___wmul@multiplicand 0072                __CFG_LVP$ON 0000  
                      l200 031A                        l130 05AC                        l203 0308  
                      l123 0572                        l140 0612                        l133 05D8  
                      l142 060E                        l126 059E                        l135 05D4  
                      l152 0684                        l144 068B                        l128 059A  
                      l137 05E6                        l170 06EA                        l146 0647  
                      l147 0659                        l172 06EF                        l181 071F  
                      l165 06DE                        l157 06E5                        l182 0735  
                      l183 0781                        l159 06B2                        l176 06FC  
                      l185 0798                        l442 0505                        l194 030E  
                      l178 06FF                        l291 03B5                        l197 0314  
                      l289 039D                        _RB0 0030                        _RB1 0031  
                      _RB2 0032                        _RB3 0033                        _RB4 0034  
                      _RD1 0041                        _RB5 0035                        _RE0 0048  
                      _RB6 0036                        _RD3 0043                        _RB7 0037  
                      _RD4 0044                        _RD5 0045                        _RD6 0046  
                      _RD7 0047                        _OFF 0303                        u620 034F  
                      u621 034E                        u630 035A                        u710 0390  
                      u631 0359                        u711 038F                        u640 0361  
                      u800 04D2                        u720 0397                        u641 0360  
                      u705 0426                        u801 04D1                        u721 0396  
                      u650 0368                        u651 0367                        u820 04E3  
                      u900 05C5                        u821 04E2                        u901 05C4  
                      u670 03F5                        u750 03B1                        u910 05D4  
                      u671 03F4                        u815 04D3                        u751 03B0  
                      u735 039E                        u911 05D3                        u840 04F7  
                      u760 04A4                        u920 05EA                        u665 03C7  
                      u841 04F6                        u825 04DF                        u761 04A3  
                      u745 03A5                        u921 05E9                        u905 05C1  
                      u690 041E                        u850 04FC                        u770 04AF  
                      u930 05FF                        u691 041D                        u851 04FB  
                      u835 04EB                        u771 04AE                        u931 05FE  
                      u915 05D0                        u780 04C0                        u940 060E  
                      u860 0576                        u685 03FD                        u781 04BF  
                      u941 060D                        u861 0575                        u950 061F  
                      u870 058B                        u951 061E                        u935 05FB  
                      u871 058A                        u960 062D                        u880 059A  
                      u961 062C                        u945 060A                        u881 0599  
                      u970 0633                        u890 05B0                        u795 04C4  
                      u971 0632                        u891 05AF                        u875 0587  
                      u980 0641                        u981 0640                        u965 0629  
                      u885 0596                        u990 064D                        u991 064C  
                      u985 063D                        _aON 0309                        _bON 030F  
                      _cON 0315                        fsr0 0004                        indf 0000  
                     ?_OFF 0070                       ?_aON 0070                       ?_bON 0070  
                     ?_cON 0070                       l1111 034B                       l1113 034F  
                     l1121 0331                       l1201 0393                       l1115 035A  
                     l1123 0334                       l1131 03B7                       l1203 0397  
                     l1117 0361                       l1125 033A                       l1141 03DA  
                     l1133 03C1                       l1221 04AB                       l1213 049F  
                     l1205 03A4                       l1301 058B                       l1119 0368  
                     l1127 033D                       l1151 0323                       l1143 03DD  
                     l1135 03C4                       l1231 04C0                       l1223 04AF  
                     l1215 04A0                       l1207 03AB                       l1311 05B8  
                     l1303 05A1                       l1129 0346                       l1161 0411  
                     l1153 03F0                       l1145 03E3                       l1137 03D2  
                     l1241 04E3                       l1233 04C3                       l1225 04B4  
                     l1217 04A4                       l1209 03B1                       l1401 076A  
                     l1321 05EA                       l1313 05C5                       l1305 05A5  
                     l1171 043A                       l1155 03F5                       l1163 0418  
                     l1147 03E6                       l1139 03D5                       l1251 04FC  
                     l1243 04E9                       l1235 04CA                       l1227 04B8  
                     l1219 04A9                       l1411 07B1                       l1403 076E  
                     l1331 061F                       l1323 05F2                       l1315 05DB  
                     l1307 05AB                       l1181 0465                       l1173 0441  
                     l1165 041E                       l1157 0406                       l1149 03EB  
                     l1253 0501                       l1245 04EA                       l1237 04CE  
                     l1229 04BA                       l1421 07DA                       l1413 07C4  
                     l1405 0785                       l1341 0653                       l1333 062D  
                     l1325 05FF                       l1317 05DF                       l1309 05B0  
                     l1261 0506                       l1175 0447                       l1167 042F  
                     l1159 040B                       l1183 036D                       l1247 04F1  
                     l1239 04D2                       l1191 0309                       l1423 07E3  
                     l1415 07C9                       l1407 079C                       l1335 0633  
                     l1343 065A                       l1327 0615                       l1319 05E5  
                     l1271 0523                       l1263 0514                       l1177 0450  
                     l1169 0434                       l1185 0370                       l1249 04F7  
                     l1193 0315                       l1425 07E6                       l1417 07D1  
                     l1409 07AF                       l1353 068F                       l1345 066A  
                     l1337 0641                       l1329 0619                       l1281 053B  
                     l1273 0526                       l1265 0516                       l1179 045F  
                     l1187 037D                       l1195 0303                       l1419 07D7  
                     l1355 069D                       l1347 0670                       l1339 064D  
                     l1291 0569                       l1283 0541                       l1275 0529  
                     l1267 051D                       l1189 0383                       l1197 030F  
                     l1357 06A3                       l1365 06B9                       l1349 067E  
                     l1293 056D                       l1285 0549                       l1277 052C  
                     l1269 0520                       l1199 0391                       l1391 0703  
                     l1367 06C9                       l1383 06F4                       l1295 0571  
                     l1287 0556                       l1279 0531                       l1393 0719  
                     l1385 06FA                       l1369 06CF                       l1297 0576  
                     l1289 055C                       l1395 072F                       l1299 057E  
                     l1397 0744                       l1399 0751                       STR_1 0019  
                     STR_2 0009                       STR_3 0022                       u1000 066A  
                     u1001 0669                       u1010 0670                       u1011 066F  
                     u1100 06CF                       u1020 067E                       u1101 06CE  
                     u1021 067D                       u1005 0666                       u1110 06DD  
                     u1030 068A                       u1111 06DC                       u1031 0689  
                     u1200 076E                       u1120 06E4                       u1040 068F  
                     u1201 076D                       u1121 06E3                       u1041 068E  
                     u1025 067A                       u1210 0785                       u1130 06E9  
                     u1050 069D                       u1211 0784                       u1131 06E8  
                     u1115 06D9                       u1051 069C                       u1220 079C  
                     u1140 06EE                       u1060 06A3                       u1221 079B  
                     u1141 06ED                       u1061 06A2                       u1150 06F3  
                     u1070 06B1                       u1151 06F2                       u1071 06B0  
                     u1055 0699                       u1160 0703                       u1080 06B8  
                     u1161 0702                       u1081 06B7                       u1170 0719  
                     u1090 06C9                       u1307 07DE                       u1171 0718  
                     u1091 06C8                       u1075 06AD                       u1180 072F  
                     u1317 07EA                       u1181 072E                       u1237 054F  
                     u1190 0751                       u1327 03D7                       u1191 0750  
                     u1175 0715                       u1095 06C5                       u1247 0562  
                     u1337 03E8                       u1185 072B                       u1257 056B  
                     u1347 044B                       u1195 074D                       u1267 05A3  
                     u1357 045A                       u1277 05DD                       u1367 0469  
                     u1287 0617                       u1377 0341                       u1297 0737  
             __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0070                       _main 0506  
                     btemp 007E              __CFG_BOREN$ON 0000                       start 0000  
       ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 034A                      ??_OFF 0070  
                    ??_aON 0070                      ??_bON 0070                      ??_cON 0070  
                    ?_main 0070            __end_of___awdiv 0506              __CFG_WDTE$OFF 0000  
          ___awdiv@divisor 0070            ___awdiv@counter 0075                      _PORTB 0006  
                    _PORTD 0008    __size_of_Lcd_Set_Cursor 0052                      _TRISA 0085  
                    _TRISB 0086                      _TRISD 0088                      _power 0024  
                    main@i 0030                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 049F           __end_of_Lcd_Port 036C  
          __initialization 07F3               __end_of_main 07F3                     ??_main 007B  
       __size_of_Lcd_Clear 000D                     _ADRESH 001E                     _ADRESL 009E  
         ___awdiv@dividend 0072                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0039  
                   _TRISE0 0448             __CFG_PWRTE$OFF 0000                     ___wmul 0391  
                ??___awdiv 0074           ___awdiv@quotient 0077            Lcd_Set_Cursor@a 0077  
          Lcd_Set_Cursor@b 0074            Lcd_Set_Cursor@y 0079            Lcd_Set_Cursor@z 0078  
          __CFG_FOSC$EXTRC 0000    __end_of__initialization 07FC          __end_of_Lcd_Clear 0330  
           __pcstackCOMMON 0070             _Lcd_Set_Cursor 03EF                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                 __pbssBANK0 0020                 __pmaintext 0506  
                  ?___wmul 0070  __size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 0441  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                 __stringtab 0003  
           _Lcd_Write_Char 03B6                    _Lcd_Cmd 0330                    ___awdiv 049F  
          __size_of___wmul 0025            ?_Lcd_Set_Cursor 0074                    __ptext1 0315  
                  __ptext2 030F                    __ptext3 0309                    __ptext4 0391  
                  __ptext5 049F                    __ptext6 0303                    __ptext7 036C  
                  __ptext8 03B6                    __ptext9 03EF               __size_of_OFF 0006  
             __size_of_aON 0006               __size_of_bON 0006               __size_of_cON 0006  
                  _current 0026                    clrloop0 031C                    _voltage 0028  
   __end_of_Lcd_Write_Char 03EF       end_of_initialization 07FC                  Lcd_Port@a 0070  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077          Lcd_Write_String@i 0075  
                _Lcd_Clear 0323             __end_of___wmul 03B6           _Lcd_Write_String 036C  
      start_initialization 07F3                __end_of_OFF 0309                __end_of_aON 030F  
              __end_of_bON 0315                __end_of_cON 031B          __size_of_Lcd_Init 005E  
        __size_of_Lcd_Port 0022                 ?_Lcd_Clear 0070                   ??___wmul 0074  
          Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073                  ___latbits 0002  
            __pcstackBANK0 0030                   ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0075  
                 ?___awdiv 0070                  __pstrings 0003             ___wmul@product 0074  
                clear_ram0 031B                   Lcd_Cmd@a 0073                ??_Lcd_Clear 0074  
               _ADCON0bits 001F                __stringbase 0008                 _ADCON1bits 009F  
        ___wmul@multiplier 0070           ??_Lcd_Write_Char 0071                   _Lcd_Init 0441  
                 _Lcd_Port 034A                   _aVOLTAGE 002E   __end_of_Lcd_Write_String 0391  
                 _bVOLTAGE 002C                   _cVOLTAGE 002A           __size_of_Lcd_Cmd 001A  
         __size_of___awdiv 0067                _max_current 0022         __end_of__stringtab 0009  
                 __ptext10 0441                   __ptext11 0323                   __ptext12 0330  
                 __ptext13 034A                _min_current 0020              __size_of_main 02ED  
       Lcd_Write_Char@temp 0072                  stringcode 0003         Lcd_Set_Cursor@temp 007A  
                 stringdir 0003                   stringtab 0003  
